var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:flush-on-newline", cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0:readably", cljs.core._STAR_print_readably_STAR_, "\ufdd0:meta", cljs.core._STAR_print_meta_STAR_, "\ufdd0:dup", cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0:else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__32029__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__32029 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32029__delegate.call(this, array, i, idxs)
    };
    G__32029.cljs$lang$maxFixedArity = 2;
    G__32029.cljs$lang$applyTo = function(arglist__32030) {
      var array = cljs.core.first(arglist__32030);
      arglist__32030 = cljs.core.next(arglist__32030);
      var i = cljs.core.first(arglist__32030);
      var idxs = cljs.core.rest(arglist__32030);
      return G__32029__delegate(array, i, idxs)
    };
    G__32029.cljs$core$IFn$_invoke$arity$variadic = G__32029__delegate;
    return G__32029
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__32031__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__32031 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32031__delegate.call(this, array, idx, idx2, idxv)
    };
    G__32031.cljs$lang$maxFixedArity = 3;
    G__32031.cljs$lang$applyTo = function(arglist__32032) {
      var array = cljs.core.first(arglist__32032);
      arglist__32032 = cljs.core.next(arglist__32032);
      var idx = cljs.core.first(arglist__32032);
      arglist__32032 = cljs.core.next(arglist__32032);
      var idx2 = cljs.core.first(arglist__32032);
      var idxv = cljs.core.rest(arglist__32032);
      return G__32031__delegate(array, idx, idx2, idxv)
    };
    G__32031.cljs$core$IFn$_invoke$arity$variadic = G__32031__delegate;
    return G__32031
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3370__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3370__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3370__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3370__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3370__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3191__auto__ = self__._hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__32034 = null;
  var G__32034__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__32034__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__32034 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32034__2.call(this, self__, coll);
      case 3:
        return G__32034__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32034
}();
cljs.core.Symbol.prototype.apply = function(self__, args32033) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32033.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__32036 = coll;
      if(G__32036) {
        if(function() {
          var or__3943__auto__ = G__32036.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32036.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if("\ufdd0:else") {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__32038 = coll;
      if(G__32038) {
        if(function() {
          var or__3943__auto__ = G__32038.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32038.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__32040 = coll;
      if(G__32040) {
        if(function() {
          var or__3943__auto__ = G__32040.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32040.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__32042 = coll;
      if(G__32042) {
        if(function() {
          var or__3943__auto__ = G__32042.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32042.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__32043__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__32044 = y;
            var G__32045 = cljs.core.first.call(null, more);
            var G__32046 = cljs.core.next.call(null, more);
            x = G__32044;
            y = G__32045;
            more = G__32046;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__32043 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32043__delegate.call(this, x, y, more)
    };
    G__32043.cljs$lang$maxFixedArity = 2;
    G__32043.cljs$lang$applyTo = function(arglist__32047) {
      var x = cljs.core.first(arglist__32047);
      arglist__32047 = cljs.core.next(arglist__32047);
      var y = cljs.core.first(arglist__32047);
      var more = cljs.core.rest(arglist__32047);
      return G__32043__delegate(x, y, more)
    };
    G__32043.cljs$core$IFn$_invoke$arity$variadic = G__32043__delegate;
    return G__32043
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__32048 = nval;
            var G__32049 = n + 1;
            val = G__32048;
            n = G__32049;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__32050 = nval;
          var G__32051 = n + 1;
          val__$1 = G__32050;
          n = G__32051;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__32052 = nval;
          var G__32053 = n + 1;
          val__$1 = G__32052;
          n = G__32053;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__32054 = nval;
            var G__32055 = n + 1;
            val = G__32054;
            n = G__32055;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__32056 = nval;
          var G__32057 = n + 1;
          val__$1 = G__32056;
          n = G__32057;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__32058 = nval;
          var G__32059 = n + 1;
          val__$1 = G__32058;
          n = G__32059;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__32061 = x;
  if(G__32061) {
    if(function() {
      var or__3943__auto__ = G__32061.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32061.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__32061.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__32061)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__32061)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__32063 = x;
  if(G__32063) {
    if(function() {
      var or__3943__auto__ = G__32063.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32063.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__32063.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__32063)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__32063)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function(col, f) {
  return cljs.core.array_reduce.call(null, col, f)
};
cljs.core._reduce["array"] = function(col, f, start) {
  return cljs.core.array_reduce.call(null, col, f, start)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__32064 = sn;
      s = G__32064;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__32065__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__32066 = conj.call(null, coll, x);
          var G__32067 = cljs.core.first.call(null, xs);
          var G__32068 = cljs.core.next.call(null, xs);
          coll = G__32066;
          x = G__32067;
          xs = G__32068;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__32065 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32065__delegate.call(this, coll, x, xs)
    };
    G__32065.cljs$lang$maxFixedArity = 2;
    G__32065.cljs$lang$applyTo = function(arglist__32069) {
      var coll = cljs.core.first(arglist__32069);
      arglist__32069 = cljs.core.next(arglist__32069);
      var x = cljs.core.first(arglist__32069);
      var xs = cljs.core.rest(arglist__32069);
      return G__32065__delegate(coll, x, xs)
    };
    G__32065.cljs$core$IFn$_invoke$arity$variadic = G__32065__delegate;
    return G__32065
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__32070 = cljs.core.next.call(null, s);
      var G__32071 = acc + 1;
      s = G__32070;
      acc = G__32071;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__32073 = coll;
      if(G__32073) {
        if(function() {
          var or__3943__auto__ = G__32073.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32073.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if("\ufdd0:else") {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__32074 = cljs.core.next.call(null, coll);
              var G__32075 = n - 1;
              coll = G__32074;
              n = G__32075;
              continue
            }else {
              if("\ufdd0:else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__32076 = cljs.core.next.call(null, coll);
              var G__32077 = n - 1;
              var G__32078 = not_found;
              coll = G__32076;
              n = G__32077;
              not_found = G__32078;
              continue
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__32083 = coll;
        if(G__32083) {
          if(function() {
            var or__3943__auto__ = G__32083.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32083.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if("\ufdd0:else") {
                if(function() {
                  var G__32084 = coll;
                  if(G__32084) {
                    if(function() {
                      var or__3943__auto__ = G__32084.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__32084.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__32084.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__32084)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__32084)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__32085 = coll;
        if(G__32085) {
          if(function() {
            var or__3943__auto__ = G__32085.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32085.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if("\ufdd0:else") {
                if(function() {
                  var G__32086 = coll;
                  if(G__32086) {
                    if(function() {
                      var or__3943__auto__ = G__32086.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__32086.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__32086.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__32086)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__32086)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__32089 = o;
        if(G__32089) {
          if(function() {
            var or__3943__auto__ = G__32089.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32089.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if("\ufdd0:else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__32090 = o;
        if(G__32090) {
          if(function() {
            var or__3943__auto__ = G__32090.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32090.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__32091__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__32092 = ret;
          var G__32093 = cljs.core.first.call(null, kvs);
          var G__32094 = cljs.core.second.call(null, kvs);
          var G__32095 = cljs.core.nnext.call(null, kvs);
          coll = G__32092;
          k = G__32093;
          v = G__32094;
          kvs = G__32095;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__32091 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32091__delegate.call(this, coll, k, v, kvs)
    };
    G__32091.cljs$lang$maxFixedArity = 3;
    G__32091.cljs$lang$applyTo = function(arglist__32096) {
      var coll = cljs.core.first(arglist__32096);
      arglist__32096 = cljs.core.next(arglist__32096);
      var k = cljs.core.first(arglist__32096);
      arglist__32096 = cljs.core.next(arglist__32096);
      var v = cljs.core.first(arglist__32096);
      var kvs = cljs.core.rest(arglist__32096);
      return G__32091__delegate(coll, k, v, kvs)
    };
    G__32091.cljs$core$IFn$_invoke$arity$variadic = G__32091__delegate;
    return G__32091
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__32097__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__32098 = ret;
          var G__32099 = cljs.core.first.call(null, ks);
          var G__32100 = cljs.core.next.call(null, ks);
          coll = G__32098;
          k = G__32099;
          ks = G__32100;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__32097 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32097__delegate.call(this, coll, k, ks)
    };
    G__32097.cljs$lang$maxFixedArity = 2;
    G__32097.cljs$lang$applyTo = function(arglist__32101) {
      var coll = cljs.core.first(arglist__32101);
      arglist__32101 = cljs.core.next(arglist__32101);
      var k = cljs.core.first(arglist__32101);
      var ks = cljs.core.rest(arglist__32101);
      return G__32097__delegate(coll, k, ks)
    };
    G__32097.cljs$core$IFn$_invoke$arity$variadic = G__32097__delegate;
    return G__32097
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__32103 = f;
    if(G__32103) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__32103.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__32103.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__32103)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__32103)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__32109 = o;
        if(G__32109) {
          if(function() {
            var or__3943__auto__ = G__32109.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32109.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__32109.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__32109)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__32109)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t32110 !== "undefined") {
      }else {
        goog.provide("cljs.core.t32110");
        cljs.core.t32110 = function(meta, o, with_meta, meta32111) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta32111 = meta32111;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t32110.cljs$lang$type = true;
        cljs.core.t32110.cljs$lang$ctorStr = "cljs.core/t32110";
        cljs.core.t32110.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
          return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/t32110")
        };
        cljs.core.t32110.prototype.call = function() {
          var G__32114__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__32114 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__32114__delegate.call(this, self__, args)
          };
          G__32114.cljs$lang$maxFixedArity = 1;
          G__32114.cljs$lang$applyTo = function(arglist__32115) {
            var self__ = cljs.core.first(arglist__32115);
            var args = cljs.core.rest(arglist__32115);
            return G__32114__delegate(self__, args)
          };
          G__32114.cljs$core$IFn$_invoke$arity$variadic = G__32114__delegate;
          return G__32114
        }();
        cljs.core.t32110.prototype.apply = function(self__, args32113) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args32113.slice()))
        };
        cljs.core.t32110.prototype.cljs$core$Fn$ = true;
        cljs.core.t32110.prototype.cljs$core$IMeta$_meta$arity$1 = function(_32112) {
          var self__ = this;
          return self__.meta32111
        };
        cljs.core.t32110.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_32112, meta32111__$1) {
          var self__ = this;
          return new cljs.core.t32110(self__.meta, self__.o, self__.with_meta, meta32111__$1)
        };
        cljs.core.__GT_t32110 = function __GT_t32110(meta__$1, o__$1, with_meta__$1, meta32111) {
          return new cljs.core.t32110(meta__$1, o__$1, with_meta__$1, meta32111)
        }
      }
      return new cljs.core.t32110(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__32117 = o;
    if(G__32117) {
      if(function() {
        var or__3943__auto__ = G__32117.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32117.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__32117.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__32117)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__32117)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__32118__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__32119 = ret;
          var G__32120 = cljs.core.first.call(null, ks);
          var G__32121 = cljs.core.next.call(null, ks);
          coll = G__32119;
          k = G__32120;
          ks = G__32121;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__32118 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32118__delegate.call(this, coll, k, ks)
    };
    G__32118.cljs$lang$maxFixedArity = 2;
    G__32118.cljs$lang$applyTo = function(arglist__32122) {
      var coll = cljs.core.first(arglist__32122);
      arglist__32122 = cljs.core.next(arglist__32122);
      var k = cljs.core.first(arglist__32122);
      var ks = cljs.core.rest(arglist__32122);
      return G__32118__delegate(coll, k, ks)
    };
    G__32118.cljs$core$IFn$_invoke$arity$variadic = G__32118__delegate;
    return G__32118
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__32124 = x;
    if(G__32124) {
      if(function() {
        var or__3943__auto__ = G__32124.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32124.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__32124.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__32124)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__32124)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__32126 = x;
    if(G__32126) {
      if(function() {
        var or__3943__auto__ = G__32126.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32126.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__32126.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__32126)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__32126)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__32128 = x;
  if(G__32128) {
    if(function() {
      var or__3943__auto__ = G__32128.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32128.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__32128.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__32128)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__32128)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__32130 = x;
  if(G__32130) {
    if(function() {
      var or__3943__auto__ = G__32130.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32130.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__32130.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__32130)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__32130)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__32132 = x;
  if(G__32132) {
    if(function() {
      var or__3943__auto__ = G__32132.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32132.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__32132.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__32132)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__32132)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__32134 = x;
    if(G__32134) {
      if(function() {
        var or__3943__auto__ = G__32134.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32134.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__32134.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__32134)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__32134)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__32136 = x;
  if(G__32136) {
    if(function() {
      var or__3943__auto__ = G__32136.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32136.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__32136.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__32136)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__32136)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__32138 = x;
  if(G__32138) {
    if(function() {
      var or__3943__auto__ = G__32138.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32138.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__32139__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__32139 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__32139__delegate.call(this, keyvals)
    };
    G__32139.cljs$lang$maxFixedArity = 0;
    G__32139.cljs$lang$applyTo = function(arglist__32140) {
      var keyvals = cljs.core.seq(arglist__32140);
      return G__32139__delegate(keyvals)
    };
    G__32139.cljs$core$IFn$_invoke$arity$variadic = G__32139__delegate;
    return G__32139
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__32141 = i__$1 + 1;
      var G__32142 = j__$1 + 1;
      var G__32143 = len__$1 - 1;
      i__$1 = G__32141;
      j__$1 = G__32142;
      len__$1 = G__32143;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__32144 = i__$1 - 1;
      var G__32145 = j__$1 - 1;
      var G__32146 = len__$1 - 1;
      i__$1 = G__32144;
      j__$1 = G__32145;
      len__$1 = G__32146;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__32148 = s;
    if(G__32148) {
      if(function() {
        var or__3943__auto__ = G__32148.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32148.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__32148.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__32148)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__32148)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__32150 = s;
  if(G__32150) {
    if(function() {
      var or__3943__auto__ = G__32150.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32150.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__32150.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__32150)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__32150)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto__
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__32152 = f;
    if(G__32152) {
      if(function() {
        var or__3943__auto____$1 = G__32152.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__32152.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__32152.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__32152)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__32152)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__32153__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__32154 = cljs.core.conj.call(null, s, x__$1);
              var G__32155 = etc;
              s = G__32154;
              xs = G__32155;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__32153 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32153__delegate.call(this, x, y, more)
    };
    G__32153.cljs$lang$maxFixedArity = 2;
    G__32153.cljs$lang$applyTo = function(arglist__32156) {
      var x = cljs.core.first(arglist__32156);
      arglist__32156 = cljs.core.next(arglist__32156);
      var y = cljs.core.first(arglist__32156);
      var more = cljs.core.rest(arglist__32156);
      return G__32153__delegate(x, y, more)
    };
    G__32153.cljs$core$IFn$_invoke$arity$variadic = G__32153__delegate;
    return G__32153
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__32158 = x;
            if(G__32158) {
              if(function() {
                var or__3943__auto__ = G__32158.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__32158.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0:else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if("\ufdd0:else") {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__32159 = xs;
        var G__32160 = ys;
        var G__32161 = len;
        var G__32162 = n + 1;
        xs = G__32159;
        ys = G__32160;
        len = G__32161;
        n = G__32162;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__32163 = nval;
          var G__32164 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__32163;
          coll__$1 = G__32164;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__32167 = coll;
      if(G__32167) {
        if(function() {
          var or__3943__auto__ = G__32167.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32167.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__32168 = coll;
      if(G__32168) {
        if(function() {
          var or__3943__auto__ = G__32168.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32168.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__32169__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__32169 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32169__delegate.call(this, x, y, more)
    };
    G__32169.cljs$lang$maxFixedArity = 2;
    G__32169.cljs$lang$applyTo = function(arglist__32170) {
      var x = cljs.core.first(arglist__32170);
      arglist__32170 = cljs.core.next(arglist__32170);
      var y = cljs.core.first(arglist__32170);
      var more = cljs.core.rest(arglist__32170);
      return G__32169__delegate(x, y, more)
    };
    G__32169.cljs$core$IFn$_invoke$arity$variadic = G__32169__delegate;
    return G__32169
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__32171__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__32171 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32171__delegate.call(this, x, y, more)
    };
    G__32171.cljs$lang$maxFixedArity = 2;
    G__32171.cljs$lang$applyTo = function(arglist__32172) {
      var x = cljs.core.first(arglist__32172);
      arglist__32172 = cljs.core.next(arglist__32172);
      var y = cljs.core.first(arglist__32172);
      var more = cljs.core.rest(arglist__32172);
      return G__32171__delegate(x, y, more)
    };
    G__32171.cljs$core$IFn$_invoke$arity$variadic = G__32171__delegate;
    return G__32171
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__32173__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__32173 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32173__delegate.call(this, x, y, more)
    };
    G__32173.cljs$lang$maxFixedArity = 2;
    G__32173.cljs$lang$applyTo = function(arglist__32174) {
      var x = cljs.core.first(arglist__32174);
      arglist__32174 = cljs.core.next(arglist__32174);
      var y = cljs.core.first(arglist__32174);
      var more = cljs.core.rest(arglist__32174);
      return G__32173__delegate(x, y, more)
    };
    G__32173.cljs$core$IFn$_invoke$arity$variadic = G__32173__delegate;
    return G__32173
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__32175__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__32175 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32175__delegate.call(this, x, y, more)
    };
    G__32175.cljs$lang$maxFixedArity = 2;
    G__32175.cljs$lang$applyTo = function(arglist__32176) {
      var x = cljs.core.first(arglist__32176);
      arglist__32176 = cljs.core.next(arglist__32176);
      var y = cljs.core.first(arglist__32176);
      var more = cljs.core.rest(arglist__32176);
      return G__32175__delegate(x, y, more)
    };
    G__32175.cljs$core$IFn$_invoke$arity$variadic = G__32175__delegate;
    return G__32175
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__32177__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__32178 = y;
            var G__32179 = cljs.core.first.call(null, more);
            var G__32180 = cljs.core.next.call(null, more);
            x = G__32178;
            y = G__32179;
            more = G__32180;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__32177 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32177__delegate.call(this, x, y, more)
    };
    G__32177.cljs$lang$maxFixedArity = 2;
    G__32177.cljs$lang$applyTo = function(arglist__32181) {
      var x = cljs.core.first(arglist__32181);
      arglist__32181 = cljs.core.next(arglist__32181);
      var y = cljs.core.first(arglist__32181);
      var more = cljs.core.rest(arglist__32181);
      return G__32177__delegate(x, y, more)
    };
    G__32177.cljs$core$IFn$_invoke$arity$variadic = G__32177__delegate;
    return G__32177
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__32182__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__32183 = y;
            var G__32184 = cljs.core.first.call(null, more);
            var G__32185 = cljs.core.next.call(null, more);
            x = G__32183;
            y = G__32184;
            more = G__32185;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__32182 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32182__delegate.call(this, x, y, more)
    };
    G__32182.cljs$lang$maxFixedArity = 2;
    G__32182.cljs$lang$applyTo = function(arglist__32186) {
      var x = cljs.core.first(arglist__32186);
      arglist__32186 = cljs.core.next(arglist__32186);
      var y = cljs.core.first(arglist__32186);
      var more = cljs.core.rest(arglist__32186);
      return G__32182__delegate(x, y, more)
    };
    G__32182.cljs$core$IFn$_invoke$arity$variadic = G__32182__delegate;
    return G__32182
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__32187__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__32188 = y;
            var G__32189 = cljs.core.first.call(null, more);
            var G__32190 = cljs.core.next.call(null, more);
            x = G__32188;
            y = G__32189;
            more = G__32190;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__32187 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32187__delegate.call(this, x, y, more)
    };
    G__32187.cljs$lang$maxFixedArity = 2;
    G__32187.cljs$lang$applyTo = function(arglist__32191) {
      var x = cljs.core.first(arglist__32191);
      arglist__32191 = cljs.core.next(arglist__32191);
      var y = cljs.core.first(arglist__32191);
      var more = cljs.core.rest(arglist__32191);
      return G__32187__delegate(x, y, more)
    };
    G__32187.cljs$core$IFn$_invoke$arity$variadic = G__32187__delegate;
    return G__32187
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__32192__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__32193 = y;
            var G__32194 = cljs.core.first.call(null, more);
            var G__32195 = cljs.core.next.call(null, more);
            x = G__32193;
            y = G__32194;
            more = G__32195;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__32192 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32192__delegate.call(this, x, y, more)
    };
    G__32192.cljs$lang$maxFixedArity = 2;
    G__32192.cljs$lang$applyTo = function(arglist__32196) {
      var x = cljs.core.first(arglist__32196);
      arglist__32196 = cljs.core.next(arglist__32196);
      var y = cljs.core.first(arglist__32196);
      var more = cljs.core.rest(arglist__32196);
      return G__32192__delegate(x, y, more)
    };
    G__32192.cljs$core$IFn$_invoke$arity$variadic = G__32192__delegate;
    return G__32192
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3092__auto__ = x;
    var y__3093__auto__ = y;
    return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
  };
  var max__3 = function() {
    var G__32197__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3092__auto__ = x;
        var y__3093__auto__ = y;
        return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
      }(), more)
    };
    var G__32197 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32197__delegate.call(this, x, y, more)
    };
    G__32197.cljs$lang$maxFixedArity = 2;
    G__32197.cljs$lang$applyTo = function(arglist__32198) {
      var x = cljs.core.first(arglist__32198);
      arglist__32198 = cljs.core.next(arglist__32198);
      var y = cljs.core.first(arglist__32198);
      var more = cljs.core.rest(arglist__32198);
      return G__32197__delegate(x, y, more)
    };
    G__32197.cljs$core$IFn$_invoke$arity$variadic = G__32197__delegate;
    return G__32197
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3099__auto__ = x;
    var y__3100__auto__ = y;
    return x__3099__auto__ < y__3100__auto__ ? x__3099__auto__ : y__3100__auto__
  };
  var min__3 = function() {
    var G__32199__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3099__auto__ = x;
        var y__3100__auto__ = y;
        return x__3099__auto__ < y__3100__auto__ ? x__3099__auto__ : y__3100__auto__
      }(), more)
    };
    var G__32199 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32199__delegate.call(this, x, y, more)
    };
    G__32199.cljs$lang$maxFixedArity = 2;
    G__32199.cljs$lang$applyTo = function(arglist__32200) {
      var x = cljs.core.first(arglist__32200);
      arglist__32200 = cljs.core.next(arglist__32200);
      var y = cljs.core.first(arglist__32200);
      var more = cljs.core.rest(arglist__32200);
      return G__32199__delegate(x, y, more)
    };
    G__32199.cljs$core$IFn$_invoke$arity$variadic = G__32199__delegate;
    return G__32199
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if("\ufdd0:else") {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__32201__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__32201 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32201__delegate.call(this, x, y, more)
    };
    G__32201.cljs$lang$maxFixedArity = 2;
    G__32201.cljs$lang$applyTo = function(arglist__32202) {
      var x = cljs.core.first(arglist__32202);
      arglist__32202 = cljs.core.next(arglist__32202);
      var y = cljs.core.first(arglist__32202);
      var more = cljs.core.rest(arglist__32202);
      return G__32201__delegate(x, y, more)
    };
    G__32201.cljs$core$IFn$_invoke$arity$variadic = G__32201__delegate;
    return G__32201
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__32203__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__32203 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32203__delegate.call(this, x, y, more)
    };
    G__32203.cljs$lang$maxFixedArity = 2;
    G__32203.cljs$lang$applyTo = function(arglist__32204) {
      var x = cljs.core.first(arglist__32204);
      arglist__32204 = cljs.core.next(arglist__32204);
      var y = cljs.core.first(arglist__32204);
      var more = cljs.core.rest(arglist__32204);
      return G__32203__delegate(x, y, more)
    };
    G__32203.cljs$core$IFn$_invoke$arity$variadic = G__32203__delegate;
    return G__32203
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__32205__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__32205 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32205__delegate.call(this, x, y, more)
    };
    G__32205.cljs$lang$maxFixedArity = 2;
    G__32205.cljs$lang$applyTo = function(arglist__32206) {
      var x = cljs.core.first(arglist__32206);
      arglist__32206 = cljs.core.next(arglist__32206);
      var y = cljs.core.first(arglist__32206);
      var more = cljs.core.rest(arglist__32206);
      return G__32205__delegate(x, y, more)
    };
    G__32205.cljs$core$IFn$_invoke$arity$variadic = G__32205__delegate;
    return G__32205
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__32207__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__32207 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32207__delegate.call(this, x, y, more)
    };
    G__32207.cljs$lang$maxFixedArity = 2;
    G__32207.cljs$lang$applyTo = function(arglist__32208) {
      var x = cljs.core.first(arglist__32208);
      arglist__32208 = cljs.core.next(arglist__32208);
      var y = cljs.core.first(arglist__32208);
      var more = cljs.core.rest(arglist__32208);
      return G__32207__delegate(x, y, more)
    };
    G__32207.cljs$core$IFn$_invoke$arity$variadic = G__32207__delegate;
    return G__32207
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__32209__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__32209 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32209__delegate.call(this, x, y, more)
    };
    G__32209.cljs$lang$maxFixedArity = 2;
    G__32209.cljs$lang$applyTo = function(arglist__32210) {
      var x = cljs.core.first(arglist__32210);
      arglist__32210 = cljs.core.next(arglist__32210);
      var y = cljs.core.first(arglist__32210);
      var more = cljs.core.rest(arglist__32210);
      return G__32209__delegate(x, y, more)
    };
    G__32209.cljs$core$IFn$_invoke$arity$variadic = G__32209__delegate;
    return G__32209
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__32211__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__32211 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32211__delegate.call(this, x, y, more)
    };
    G__32211.cljs$lang$maxFixedArity = 2;
    G__32211.cljs$lang$applyTo = function(arglist__32212) {
      var x = cljs.core.first(arglist__32212);
      arglist__32212 = cljs.core.next(arglist__32212);
      var y = cljs.core.first(arglist__32212);
      var more = cljs.core.rest(arglist__32212);
      return G__32211__delegate(x, y, more)
    };
    G__32211.cljs$core$IFn$_invoke$arity$variadic = G__32211__delegate;
    return G__32211
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__32213__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__32213 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32213__delegate.call(this, x, y, more)
    };
    G__32213.cljs$lang$maxFixedArity = 2;
    G__32213.cljs$lang$applyTo = function(arglist__32214) {
      var x = cljs.core.first(arglist__32214);
      arglist__32214 = cljs.core.next(arglist__32214);
      var y = cljs.core.first(arglist__32214);
      var more = cljs.core.rest(arglist__32214);
      return G__32213__delegate(x, y, more)
    };
    G__32213.cljs$core$IFn$_invoke$arity$variadic = G__32213__delegate;
    return G__32213
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__32215__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__32216 = y;
            var G__32217 = cljs.core.first.call(null, more);
            var G__32218 = cljs.core.next.call(null, more);
            x = G__32216;
            y = G__32217;
            more = G__32218;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__32215 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32215__delegate.call(this, x, y, more)
    };
    G__32215.cljs$lang$maxFixedArity = 2;
    G__32215.cljs$lang$applyTo = function(arglist__32219) {
      var x = cljs.core.first(arglist__32219);
      arglist__32219 = cljs.core.next(arglist__32219);
      var y = cljs.core.first(arglist__32219);
      var more = cljs.core.rest(arglist__32219);
      return G__32215__delegate(x, y, more)
    };
    G__32215.cljs$core$IFn$_invoke$arity$variadic = G__32215__delegate;
    return G__32215
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__32220 = n__$1 - 1;
      var G__32221 = cljs.core.next.call(null, xs);
      n__$1 = G__32220;
      xs = G__32221;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0:else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__32222__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__32223 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__32224 = cljs.core.next.call(null, more);
            sb = G__32223;
            more = G__32224;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__32222 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__32222__delegate.call(this, x, ys)
    };
    G__32222.cljs$lang$maxFixedArity = 1;
    G__32222.cljs$lang$applyTo = function(arglist__32225) {
      var x = cljs.core.first(arglist__32225);
      var ys = cljs.core.rest(arglist__32225);
      return G__32222__delegate(x, ys)
    };
    G__32222.cljs$core$IFn$_invoke$arity$variadic = G__32222__delegate;
    return G__32222
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$core$IFn$_invoke$arity$0 = str_STAR___0;
  str_STAR_.cljs$core$IFn$_invoke$arity$1 = str_STAR___1;
  str_STAR_.cljs$core$IFn$_invoke$arity$variadic = str_STAR___2.cljs$core$IFn$_invoke$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
    }else {
      if(x == null) {
        return""
      }else {
        if("\ufdd0:else") {
          return x.toString()
        }else {
          return null
        }
      }
    }
  };
  var str__2 = function() {
    var G__32226__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__32227 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__32228 = cljs.core.next.call(null, more);
            sb = G__32227;
            more = G__32228;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__32226 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__32226__delegate.call(this, x, ys)
    };
    G__32226.cljs$lang$maxFixedArity = 1;
    G__32226.cljs$lang$applyTo = function(arglist__32229) {
      var x = cljs.core.first(arglist__32229);
      var ys = cljs.core.rest(arglist__32229);
      return G__32226__delegate(x, ys)
    };
    G__32226.cljs$core$IFn$_invoke$arity$variadic = G__32226__delegate;
    return G__32226
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3943__auto__ = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return x instanceof cljs.core.Symbol
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__32230) {
    var fmt = cljs.core.first(arglist__32230);
    var args = cljs.core.rest(arglist__32230);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", ":", cljs.core.name.call(null, name))
      }else {
        if("\ufdd0:else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", ":", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__32231 = cljs.core.next.call(null, xs);
            var G__32232 = cljs.core.next.call(null, ys);
            xs = G__32231;
            ys = G__32232;
            continue
          }else {
            if("\ufdd0:else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__32233_SHARP_, p2__32234_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__32233_SHARP_, cljs.core.hash.call(null, p2__32234_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__32235 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__32236 = cljs.core.next.call(null, s);
      h = G__32235;
      s = G__32236;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__32237 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__32238 = cljs.core.next.call(null, s__$1);
      h = G__32237;
      s__$1 = G__32238;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__32245_32251 = cljs.core.seq.call(null, fn_map);
  var chunk__32246_32252 = null;
  var count__32247_32253 = 0;
  var i__32248_32254 = 0;
  while(true) {
    if(i__32248_32254 < count__32247_32253) {
      var vec__32249_32255 = cljs.core._nth.call(null, chunk__32246_32252, i__32248_32254);
      var key_name_32256 = cljs.core.nth.call(null, vec__32249_32255, 0, null);
      var f_32257 = cljs.core.nth.call(null, vec__32249_32255, 1, null);
      var str_name_32258 = cljs.core.name.call(null, key_name_32256);
      obj[str_name_32258] = f_32257;
      var G__32259 = seq__32245_32251;
      var G__32260 = chunk__32246_32252;
      var G__32261 = count__32247_32253;
      var G__32262 = i__32248_32254 + 1;
      seq__32245_32251 = G__32259;
      chunk__32246_32252 = G__32260;
      count__32247_32253 = G__32261;
      i__32248_32254 = G__32262;
      continue
    }else {
      var temp__4092__auto___32263 = cljs.core.seq.call(null, seq__32245_32251);
      if(temp__4092__auto___32263) {
        var seq__32245_32264__$1 = temp__4092__auto___32263;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__32245_32264__$1)) {
          var c__3501__auto___32265 = cljs.core.chunk_first.call(null, seq__32245_32264__$1);
          var G__32266 = cljs.core.chunk_rest.call(null, seq__32245_32264__$1);
          var G__32267 = c__3501__auto___32265;
          var G__32268 = cljs.core.count.call(null, c__3501__auto___32265);
          var G__32269 = 0;
          seq__32245_32251 = G__32266;
          chunk__32246_32252 = G__32267;
          count__32247_32253 = G__32268;
          i__32248_32254 = G__32269;
          continue
        }else {
          var vec__32250_32270 = cljs.core.first.call(null, seq__32245_32264__$1);
          var key_name_32271 = cljs.core.nth.call(null, vec__32250_32270, 0, null);
          var f_32272 = cljs.core.nth.call(null, vec__32250_32270, 1, null);
          var str_name_32273 = cljs.core.name.call(null, key_name_32271);
          obj[str_name_32273] = f_32272;
          var G__32274 = cljs.core.next.call(null, seq__32245_32264__$1);
          var G__32275 = null;
          var G__32276 = 0;
          var G__32277 = 0;
          seq__32245_32251 = G__32274;
          chunk__32246_32252 = G__32275;
          count__32247_32253 = G__32276;
          i__32248_32254 = G__32277;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__32279 = coll;
  if(G__32279) {
    if(function() {
      var or__3943__auto__ = G__32279.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32279.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__32279.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__32279)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__32279)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__32280 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__32280;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__32281 = i - 1;
        var G__32282 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__32281;
        r = G__32282;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__32283) {
    var xs = cljs.core.seq(arglist__32283);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__32285 = coll;
      if(G__32285) {
        if(function() {
          var or__3943__auto____$1 = G__32285.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__32285.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__32287 = x;
  if(G__32287) {
    if(function() {
      var or__3943__auto__ = G__32287.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__32287.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__32287.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__32287)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__32287)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__32291 = null;
  var G__32291__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__32289 = coll;
        if(G__32289) {
          if(function() {
            var or__3943__auto__ = G__32289.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32289.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__32289.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__32289)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__32289)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, self__.k, null)
      }else {
        return null
      }
    }
  };
  var G__32291__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__32290 = coll;
        if(G__32290) {
          if(function() {
            var or__3943__auto__ = G__32290.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__32290.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__32290.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__32290)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__32290)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, self__.k, not_found)
      }else {
        return null
      }
    }
  };
  G__32291 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32291__2.call(this, self__, coll);
      case 3:
        return G__32291__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32291
}();
cljs.core.Keyword.prototype.apply = function(self__, args32288) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32288.slice()))
};
cljs.core.__GT_Keyword = function __GT_Keyword(k) {
  return new cljs.core.Keyword(k)
};
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__32293 = null;
  var G__32293__2 = function(self__, coll) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString())
  };
  var G__32293__3 = function(self__, coll, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString(), not_found)
  };
  G__32293 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32293__2.call(this, self__, coll);
      case 3:
        return G__32293__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32293
}();
String.prototype.apply = function(self__, args32292) {
  return self__.call.apply(self__, [self__].concat(args32292.slice()))
};
String.prototype.apply = function(s, args) {
  if(args.length < 2) {
    return cljs.core.get.call(null, args[0], s)
  }else {
    return cljs.core.get.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, realized, x, __hash) {
  return new cljs.core.LazySeq(meta, realized, x, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__32295 = s;
    if(G__32295) {
      if(function() {
        var or__3943__auto__ = G__32295.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32295.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__32296 = cljs.core.next.call(null, s__$1);
      s__$1 = G__32296;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_32297 = 0;
  var xs_32298 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_32298) {
      ret[i_32297] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_32298));
      var G__32299 = i_32297 + 1;
      var G__32300 = cljs.core.next.call(null, xs_32298);
      i_32297 = G__32299;
      xs_32298 = G__32300;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__32301 = i + 1;
          var G__32302 = cljs.core.next.call(null, s__$1);
          i = G__32301;
          s__$1 = G__32302;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___32303 = size;
      var i_32304 = 0;
      while(true) {
        if(i_32304 < n__3548__auto___32303) {
          a[i_32304] = init_val_or_seq;
          var G__32305 = i_32304 + 1;
          i_32304 = G__32305;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__32306 = i + 1;
          var G__32307 = cljs.core.next.call(null, s__$1);
          i = G__32306;
          s__$1 = G__32307;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___32308 = size;
      var i_32309 = 0;
      while(true) {
        if(i_32309 < n__3548__auto___32308) {
          a[i_32309] = init_val_or_seq;
          var G__32310 = i_32309 + 1;
          i_32309 = G__32310;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__32311 = i + 1;
          var G__32312 = cljs.core.next.call(null, s__$1);
          i = G__32311;
          s__$1 = G__32312;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___32313 = size;
      var i_32314 = 0;
      while(true) {
        if(i_32314 < n__3548__auto___32313) {
          a[i_32314] = init_val_or_seq;
          var G__32315 = i_32314 + 1;
          i_32314 = G__32315;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__32316 = i + 1;
          var G__32317 = cljs.core.next.call(null, s__$1);
          i = G__32316;
          s__$1 = G__32317;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___32318 = size;
      var i_32319 = 0;
      while(true) {
        if(i_32319 < n__3548__auto___32318) {
          a[i_32319] = init_val_or_seq;
          var G__32320 = i_32319 + 1;
          i_32319 = G__32320;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__32321 = cljs.core.next.call(null, s__$1);
        var G__32322 = i - 1;
        var G__32323 = sum + 1;
        s__$1 = G__32321;
        i = G__32322;
        sum = G__32323;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0:else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__32324__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__32324 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32324__delegate.call(this, x, y, zs)
    };
    G__32324.cljs$lang$maxFixedArity = 2;
    G__32324.cljs$lang$applyTo = function(arglist__32325) {
      var x = cljs.core.first(arglist__32325);
      arglist__32325 = cljs.core.next(arglist__32325);
      var y = cljs.core.first(arglist__32325);
      var zs = cljs.core.rest(arglist__32325);
      return G__32324__delegate(x, y, zs)
    };
    G__32324.cljs$core$IFn$_invoke$arity$variadic = G__32324__delegate;
    return G__32324
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__32326__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__32326 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__32326__delegate.call(this, a, b, c, d, more)
    };
    G__32326.cljs$lang$maxFixedArity = 4;
    G__32326.cljs$lang$applyTo = function(arglist__32327) {
      var a = cljs.core.first(arglist__32327);
      arglist__32327 = cljs.core.next(arglist__32327);
      var b = cljs.core.first(arglist__32327);
      arglist__32327 = cljs.core.next(arglist__32327);
      var c = cljs.core.first(arglist__32327);
      arglist__32327 = cljs.core.next(arglist__32327);
      var d = cljs.core.first(arglist__32327);
      var more = cljs.core.rest(arglist__32327);
      return G__32326__delegate(a, b, c, d, more)
    };
    G__32326.cljs$core$IFn$_invoke$arity$variadic = G__32326__delegate;
    return G__32326
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__32328__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__32328 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__32328__delegate.call(this, f, a, b, c, d, args)
    };
    G__32328.cljs$lang$maxFixedArity = 5;
    G__32328.cljs$lang$applyTo = function(arglist__32329) {
      var f = cljs.core.first(arglist__32329);
      arglist__32329 = cljs.core.next(arglist__32329);
      var a = cljs.core.first(arglist__32329);
      arglist__32329 = cljs.core.next(arglist__32329);
      var b = cljs.core.first(arglist__32329);
      arglist__32329 = cljs.core.next(arglist__32329);
      var c = cljs.core.first(arglist__32329);
      arglist__32329 = cljs.core.next(arglist__32329);
      var d = cljs.core.first(arglist__32329);
      var args = cljs.core.rest(arglist__32329);
      return G__32328__delegate(f, a, b, c, d, args)
    };
    G__32328.cljs$core$IFn$_invoke$arity$variadic = G__32328__delegate;
    return G__32328
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__32330) {
    var obj = cljs.core.first(arglist__32330);
    arglist__32330 = cljs.core.next(arglist__32330);
    var f = cljs.core.first(arglist__32330);
    var args = cljs.core.rest(arglist__32330);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__32331__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__32331 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32331__delegate.call(this, x, y, more)
    };
    G__32331.cljs$lang$maxFixedArity = 2;
    G__32331.cljs$lang$applyTo = function(arglist__32332) {
      var x = cljs.core.first(arglist__32332);
      arglist__32332 = cljs.core.next(arglist__32332);
      var y = cljs.core.first(arglist__32332);
      var more = cljs.core.rest(arglist__32332);
      return G__32331__delegate(x, y, more)
    };
    G__32331.cljs$core$IFn$_invoke$arity$variadic = G__32331__delegate;
    return G__32331
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__32333 = pred;
        var G__32334 = cljs.core.next.call(null, coll);
        pred = G__32333;
        coll = G__32334;
        continue
      }else {
        if("\ufdd0:else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__32335 = pred;
        var G__32336 = cljs.core.next.call(null, coll);
        pred = G__32335;
        coll = G__32336;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__32337 = null;
    var G__32337__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__32337__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__32337__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__32337__3 = function() {
      var G__32338__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__32338 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__32338__delegate.call(this, x, y, zs)
      };
      G__32338.cljs$lang$maxFixedArity = 2;
      G__32338.cljs$lang$applyTo = function(arglist__32339) {
        var x = cljs.core.first(arglist__32339);
        arglist__32339 = cljs.core.next(arglist__32339);
        var y = cljs.core.first(arglist__32339);
        var zs = cljs.core.rest(arglist__32339);
        return G__32338__delegate(x, y, zs)
      };
      G__32338.cljs$core$IFn$_invoke$arity$variadic = G__32338__delegate;
      return G__32338
    }();
    G__32337 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__32337__0.call(this);
        case 1:
          return G__32337__1.call(this, x);
        case 2:
          return G__32337__2.call(this, x, y);
        default:
          return G__32337__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__32337.cljs$lang$maxFixedArity = 2;
    G__32337.cljs$lang$applyTo = G__32337__3.cljs$lang$applyTo;
    return G__32337
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__32340__delegate = function(args) {
      return x
    };
    var G__32340 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__32340__delegate.call(this, args)
    };
    G__32340.cljs$lang$maxFixedArity = 0;
    G__32340.cljs$lang$applyTo = function(arglist__32341) {
      var args = cljs.core.seq(arglist__32341);
      return G__32340__delegate(args)
    };
    G__32340.cljs$core$IFn$_invoke$arity$variadic = G__32340__delegate;
    return G__32340
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__32342 = null;
      var G__32342__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__32342__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__32342__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__32342__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__32342__4 = function() {
        var G__32343__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__32343 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32343__delegate.call(this, x, y, z, args)
        };
        G__32343.cljs$lang$maxFixedArity = 3;
        G__32343.cljs$lang$applyTo = function(arglist__32344) {
          var x = cljs.core.first(arglist__32344);
          arglist__32344 = cljs.core.next(arglist__32344);
          var y = cljs.core.first(arglist__32344);
          arglist__32344 = cljs.core.next(arglist__32344);
          var z = cljs.core.first(arglist__32344);
          var args = cljs.core.rest(arglist__32344);
          return G__32343__delegate(x, y, z, args)
        };
        G__32343.cljs$core$IFn$_invoke$arity$variadic = G__32343__delegate;
        return G__32343
      }();
      G__32342 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__32342__0.call(this);
          case 1:
            return G__32342__1.call(this, x);
          case 2:
            return G__32342__2.call(this, x, y);
          case 3:
            return G__32342__3.call(this, x, y, z);
          default:
            return G__32342__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32342.cljs$lang$maxFixedArity = 3;
      G__32342.cljs$lang$applyTo = G__32342__4.cljs$lang$applyTo;
      return G__32342
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__32345 = null;
      var G__32345__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__32345__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__32345__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__32345__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__32345__4 = function() {
        var G__32346__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__32346 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32346__delegate.call(this, x, y, z, args)
        };
        G__32346.cljs$lang$maxFixedArity = 3;
        G__32346.cljs$lang$applyTo = function(arglist__32347) {
          var x = cljs.core.first(arglist__32347);
          arglist__32347 = cljs.core.next(arglist__32347);
          var y = cljs.core.first(arglist__32347);
          arglist__32347 = cljs.core.next(arglist__32347);
          var z = cljs.core.first(arglist__32347);
          var args = cljs.core.rest(arglist__32347);
          return G__32346__delegate(x, y, z, args)
        };
        G__32346.cljs$core$IFn$_invoke$arity$variadic = G__32346__delegate;
        return G__32346
      }();
      G__32345 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__32345__0.call(this);
          case 1:
            return G__32345__1.call(this, x);
          case 2:
            return G__32345__2.call(this, x, y);
          case 3:
            return G__32345__3.call(this, x, y, z);
          default:
            return G__32345__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32345.cljs$lang$maxFixedArity = 3;
      G__32345.cljs$lang$applyTo = G__32345__4.cljs$lang$applyTo;
      return G__32345
    }()
  };
  var comp__4 = function() {
    var G__32348__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__32349__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__32350 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__32351 = cljs.core.next.call(null, fs__$2);
              ret = G__32350;
              fs__$2 = G__32351;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__32349 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__32349__delegate.call(this, args)
        };
        G__32349.cljs$lang$maxFixedArity = 0;
        G__32349.cljs$lang$applyTo = function(arglist__32352) {
          var args = cljs.core.seq(arglist__32352);
          return G__32349__delegate(args)
        };
        G__32349.cljs$core$IFn$_invoke$arity$variadic = G__32349__delegate;
        return G__32349
      }()
    };
    var G__32348 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32348__delegate.call(this, f1, f2, f3, fs)
    };
    G__32348.cljs$lang$maxFixedArity = 3;
    G__32348.cljs$lang$applyTo = function(arglist__32353) {
      var f1 = cljs.core.first(arglist__32353);
      arglist__32353 = cljs.core.next(arglist__32353);
      var f2 = cljs.core.first(arglist__32353);
      arglist__32353 = cljs.core.next(arglist__32353);
      var f3 = cljs.core.first(arglist__32353);
      var fs = cljs.core.rest(arglist__32353);
      return G__32348__delegate(f1, f2, f3, fs)
    };
    G__32348.cljs$core$IFn$_invoke$arity$variadic = G__32348__delegate;
    return G__32348
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__32354__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__32354 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__32354__delegate.call(this, args)
      };
      G__32354.cljs$lang$maxFixedArity = 0;
      G__32354.cljs$lang$applyTo = function(arglist__32355) {
        var args = cljs.core.seq(arglist__32355);
        return G__32354__delegate(args)
      };
      G__32354.cljs$core$IFn$_invoke$arity$variadic = G__32354__delegate;
      return G__32354
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__32356__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__32356 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__32356__delegate.call(this, args)
      };
      G__32356.cljs$lang$maxFixedArity = 0;
      G__32356.cljs$lang$applyTo = function(arglist__32357) {
        var args = cljs.core.seq(arglist__32357);
        return G__32356__delegate(args)
      };
      G__32356.cljs$core$IFn$_invoke$arity$variadic = G__32356__delegate;
      return G__32356
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__32358__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__32358 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__32358__delegate.call(this, args)
      };
      G__32358.cljs$lang$maxFixedArity = 0;
      G__32358.cljs$lang$applyTo = function(arglist__32359) {
        var args = cljs.core.seq(arglist__32359);
        return G__32358__delegate(args)
      };
      G__32358.cljs$core$IFn$_invoke$arity$variadic = G__32358__delegate;
      return G__32358
    }()
  };
  var partial__5 = function() {
    var G__32360__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__32361__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__32361 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__32361__delegate.call(this, args)
        };
        G__32361.cljs$lang$maxFixedArity = 0;
        G__32361.cljs$lang$applyTo = function(arglist__32362) {
          var args = cljs.core.seq(arglist__32362);
          return G__32361__delegate(args)
        };
        G__32361.cljs$core$IFn$_invoke$arity$variadic = G__32361__delegate;
        return G__32361
      }()
    };
    var G__32360 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__32360__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__32360.cljs$lang$maxFixedArity = 4;
    G__32360.cljs$lang$applyTo = function(arglist__32363) {
      var f = cljs.core.first(arglist__32363);
      arglist__32363 = cljs.core.next(arglist__32363);
      var arg1 = cljs.core.first(arglist__32363);
      arglist__32363 = cljs.core.next(arglist__32363);
      var arg2 = cljs.core.first(arglist__32363);
      arglist__32363 = cljs.core.next(arglist__32363);
      var arg3 = cljs.core.first(arglist__32363);
      var more = cljs.core.rest(arglist__32363);
      return G__32360__delegate(f, arg1, arg2, arg3, more)
    };
    G__32360.cljs$core$IFn$_invoke$arity$variadic = G__32360__delegate;
    return G__32360
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__32364 = null;
      var G__32364__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__32364__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__32364__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__32364__4 = function() {
        var G__32365__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__32365 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32365__delegate.call(this, a, b, c, ds)
        };
        G__32365.cljs$lang$maxFixedArity = 3;
        G__32365.cljs$lang$applyTo = function(arglist__32366) {
          var a = cljs.core.first(arglist__32366);
          arglist__32366 = cljs.core.next(arglist__32366);
          var b = cljs.core.first(arglist__32366);
          arglist__32366 = cljs.core.next(arglist__32366);
          var c = cljs.core.first(arglist__32366);
          var ds = cljs.core.rest(arglist__32366);
          return G__32365__delegate(a, b, c, ds)
        };
        G__32365.cljs$core$IFn$_invoke$arity$variadic = G__32365__delegate;
        return G__32365
      }();
      G__32364 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__32364__1.call(this, a);
          case 2:
            return G__32364__2.call(this, a, b);
          case 3:
            return G__32364__3.call(this, a, b, c);
          default:
            return G__32364__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32364.cljs$lang$maxFixedArity = 3;
      G__32364.cljs$lang$applyTo = G__32364__4.cljs$lang$applyTo;
      return G__32364
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__32367 = null;
      var G__32367__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__32367__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__32367__4 = function() {
        var G__32368__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__32368 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32368__delegate.call(this, a, b, c, ds)
        };
        G__32368.cljs$lang$maxFixedArity = 3;
        G__32368.cljs$lang$applyTo = function(arglist__32369) {
          var a = cljs.core.first(arglist__32369);
          arglist__32369 = cljs.core.next(arglist__32369);
          var b = cljs.core.first(arglist__32369);
          arglist__32369 = cljs.core.next(arglist__32369);
          var c = cljs.core.first(arglist__32369);
          var ds = cljs.core.rest(arglist__32369);
          return G__32368__delegate(a, b, c, ds)
        };
        G__32368.cljs$core$IFn$_invoke$arity$variadic = G__32368__delegate;
        return G__32368
      }();
      G__32367 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__32367__2.call(this, a, b);
          case 3:
            return G__32367__3.call(this, a, b, c);
          default:
            return G__32367__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32367.cljs$lang$maxFixedArity = 3;
      G__32367.cljs$lang$applyTo = G__32367__4.cljs$lang$applyTo;
      return G__32367
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__32370 = null;
      var G__32370__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__32370__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__32370__4 = function() {
        var G__32371__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__32371 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32371__delegate.call(this, a, b, c, ds)
        };
        G__32371.cljs$lang$maxFixedArity = 3;
        G__32371.cljs$lang$applyTo = function(arglist__32372) {
          var a = cljs.core.first(arglist__32372);
          arglist__32372 = cljs.core.next(arglist__32372);
          var b = cljs.core.first(arglist__32372);
          arglist__32372 = cljs.core.next(arglist__32372);
          var c = cljs.core.first(arglist__32372);
          var ds = cljs.core.rest(arglist__32372);
          return G__32371__delegate(a, b, c, ds)
        };
        G__32371.cljs$core$IFn$_invoke$arity$variadic = G__32371__delegate;
        return G__32371
      }();
      G__32370 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__32370__2.call(this, a, b);
          case 3:
            return G__32370__3.call(this, a, b, c);
          default:
            return G__32370__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32370.cljs$lang$maxFixedArity = 3;
      G__32370.cljs$lang$applyTo = G__32370__4.cljs$lang$applyTo;
      return G__32370
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___32373 = size;
          var i_32374 = 0;
          while(true) {
            if(i_32374 < n__3548__auto___32373) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_32374, cljs.core._nth.call(null, c, i_32374)));
              var G__32375 = i_32374 + 1;
              i_32374 = G__32375;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3548__auto___32376 = size;
        var i_32377 = 0;
        while(true) {
          if(i_32377 < n__3548__auto___32376) {
            var x_32378 = f.call(null, cljs.core._nth.call(null, c, i_32377));
            if(x_32378 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_32378)
            }
            var G__32379 = i_32377 + 1;
            i_32377 = G__32379;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___32380 = size;
          var i_32381 = 0;
          while(true) {
            if(i_32381 < n__3548__auto___32380) {
              var x_32382 = f.call(null, idx + i_32381, cljs.core._nth.call(null, c, i_32381));
              if(x_32382 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_32382)
              }
              var G__32383 = i_32381 + 1;
              i_32381 = G__32383;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__32390__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__32390 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32390__delegate.call(this, x, y, z, args)
        };
        G__32390.cljs$lang$maxFixedArity = 3;
        G__32390.cljs$lang$applyTo = function(arglist__32391) {
          var x = cljs.core.first(arglist__32391);
          arglist__32391 = cljs.core.next(arglist__32391);
          var y = cljs.core.first(arglist__32391);
          arglist__32391 = cljs.core.next(arglist__32391);
          var z = cljs.core.first(arglist__32391);
          var args = cljs.core.rest(arglist__32391);
          return G__32390__delegate(x, y, z, args)
        };
        G__32390.cljs$core$IFn$_invoke$arity$variadic = G__32390__delegate;
        return G__32390
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__32392__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__32384_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__32384_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__32384_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__32392 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32392__delegate.call(this, x, y, z, args)
        };
        G__32392.cljs$lang$maxFixedArity = 3;
        G__32392.cljs$lang$applyTo = function(arglist__32393) {
          var x = cljs.core.first(arglist__32393);
          arglist__32393 = cljs.core.next(arglist__32393);
          var y = cljs.core.first(arglist__32393);
          arglist__32393 = cljs.core.next(arglist__32393);
          var z = cljs.core.first(arglist__32393);
          var args = cljs.core.rest(arglist__32393);
          return G__32392__delegate(x, y, z, args)
        };
        G__32392.cljs$core$IFn$_invoke$arity$variadic = G__32392__delegate;
        return G__32392
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__32394__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__32385_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__32385_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__32385_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__32385_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__32394 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32394__delegate.call(this, x, y, z, args)
        };
        G__32394.cljs$lang$maxFixedArity = 3;
        G__32394.cljs$lang$applyTo = function(arglist__32395) {
          var x = cljs.core.first(arglist__32395);
          arglist__32395 = cljs.core.next(arglist__32395);
          var y = cljs.core.first(arglist__32395);
          arglist__32395 = cljs.core.next(arglist__32395);
          var z = cljs.core.first(arglist__32395);
          var args = cljs.core.rest(arglist__32395);
          return G__32394__delegate(x, y, z, args)
        };
        G__32394.cljs$core$IFn$_invoke$arity$variadic = G__32394__delegate;
        return G__32394
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__32396__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__32386_SHARP_) {
            return p1__32386_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__32387_SHARP_) {
            var and__3941__auto__ = p1__32387_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__32387_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__32388_SHARP_) {
            var and__3941__auto__ = p1__32388_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__32388_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__32388_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__32397__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__32389_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__32389_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__32397 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__32397__delegate.call(this, x, y, z, args)
          };
          G__32397.cljs$lang$maxFixedArity = 3;
          G__32397.cljs$lang$applyTo = function(arglist__32398) {
            var x = cljs.core.first(arglist__32398);
            arglist__32398 = cljs.core.next(arglist__32398);
            var y = cljs.core.first(arglist__32398);
            arglist__32398 = cljs.core.next(arglist__32398);
            var z = cljs.core.first(arglist__32398);
            var args = cljs.core.rest(arglist__32398);
            return G__32397__delegate(x, y, z, args)
          };
          G__32397.cljs$core$IFn$_invoke$arity$variadic = G__32397__delegate;
          return G__32397
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__32396 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32396__delegate.call(this, p1, p2, p3, ps)
    };
    G__32396.cljs$lang$maxFixedArity = 3;
    G__32396.cljs$lang$applyTo = function(arglist__32399) {
      var p1 = cljs.core.first(arglist__32399);
      arglist__32399 = cljs.core.next(arglist__32399);
      var p2 = cljs.core.first(arglist__32399);
      arglist__32399 = cljs.core.next(arglist__32399);
      var p3 = cljs.core.first(arglist__32399);
      var ps = cljs.core.rest(arglist__32399);
      return G__32396__delegate(p1, p2, p3, ps)
    };
    G__32396.cljs$core$IFn$_invoke$arity$variadic = G__32396__delegate;
    return G__32396
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__32406__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__32406 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32406__delegate.call(this, x, y, z, args)
        };
        G__32406.cljs$lang$maxFixedArity = 3;
        G__32406.cljs$lang$applyTo = function(arglist__32407) {
          var x = cljs.core.first(arglist__32407);
          arglist__32407 = cljs.core.next(arglist__32407);
          var y = cljs.core.first(arglist__32407);
          arglist__32407 = cljs.core.next(arglist__32407);
          var z = cljs.core.first(arglist__32407);
          var args = cljs.core.rest(arglist__32407);
          return G__32406__delegate(x, y, z, args)
        };
        G__32406.cljs$core$IFn$_invoke$arity$variadic = G__32406__delegate;
        return G__32406
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__32408__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__32400_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__32400_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__32400_SHARP_)
              }
            }, args)
          }
        };
        var G__32408 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32408__delegate.call(this, x, y, z, args)
        };
        G__32408.cljs$lang$maxFixedArity = 3;
        G__32408.cljs$lang$applyTo = function(arglist__32409) {
          var x = cljs.core.first(arglist__32409);
          arglist__32409 = cljs.core.next(arglist__32409);
          var y = cljs.core.first(arglist__32409);
          arglist__32409 = cljs.core.next(arglist__32409);
          var z = cljs.core.first(arglist__32409);
          var args = cljs.core.rest(arglist__32409);
          return G__32408__delegate(x, y, z, args)
        };
        G__32408.cljs$core$IFn$_invoke$arity$variadic = G__32408__delegate;
        return G__32408
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__32410__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__32401_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__32401_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__32401_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__32401_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__32410 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32410__delegate.call(this, x, y, z, args)
        };
        G__32410.cljs$lang$maxFixedArity = 3;
        G__32410.cljs$lang$applyTo = function(arglist__32411) {
          var x = cljs.core.first(arglist__32411);
          arglist__32411 = cljs.core.next(arglist__32411);
          var y = cljs.core.first(arglist__32411);
          arglist__32411 = cljs.core.next(arglist__32411);
          var z = cljs.core.first(arglist__32411);
          var args = cljs.core.rest(arglist__32411);
          return G__32410__delegate(x, y, z, args)
        };
        G__32410.cljs$core$IFn$_invoke$arity$variadic = G__32410__delegate;
        return G__32410
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__32412__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__32402_SHARP_) {
            return p1__32402_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__32403_SHARP_) {
            var or__3943__auto__ = p1__32403_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__32403_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__32404_SHARP_) {
            var or__3943__auto__ = p1__32404_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__32404_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__32404_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__32413__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__32405_SHARP_) {
                return cljs.core.some.call(null, p1__32405_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__32413 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__32413__delegate.call(this, x, y, z, args)
          };
          G__32413.cljs$lang$maxFixedArity = 3;
          G__32413.cljs$lang$applyTo = function(arglist__32414) {
            var x = cljs.core.first(arglist__32414);
            arglist__32414 = cljs.core.next(arglist__32414);
            var y = cljs.core.first(arglist__32414);
            arglist__32414 = cljs.core.next(arglist__32414);
            var z = cljs.core.first(arglist__32414);
            var args = cljs.core.rest(arglist__32414);
            return G__32413__delegate(x, y, z, args)
          };
          G__32413.cljs$core$IFn$_invoke$arity$variadic = G__32413__delegate;
          return G__32413
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__32412 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32412__delegate.call(this, p1, p2, p3, ps)
    };
    G__32412.cljs$lang$maxFixedArity = 3;
    G__32412.cljs$lang$applyTo = function(arglist__32415) {
      var p1 = cljs.core.first(arglist__32415);
      arglist__32415 = cljs.core.next(arglist__32415);
      var p2 = cljs.core.first(arglist__32415);
      arglist__32415 = cljs.core.next(arglist__32415);
      var p3 = cljs.core.first(arglist__32415);
      var ps = cljs.core.rest(arglist__32415);
      return G__32412__delegate(p1, p2, p3, ps)
    };
    G__32412.cljs$core$IFn$_invoke$arity$variadic = G__32412__delegate;
    return G__32412
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___32417 = size;
          var i_32418 = 0;
          while(true) {
            if(i_32418 < n__3548__auto___32417) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_32418)));
              var G__32419 = i_32418 + 1;
              i_32418 = G__32419;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__32420__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__32416_SHARP_) {
        return cljs.core.apply.call(null, f, p1__32416_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__32420 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__32420__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__32420.cljs$lang$maxFixedArity = 4;
    G__32420.cljs$lang$applyTo = function(arglist__32421) {
      var f = cljs.core.first(arglist__32421);
      arglist__32421 = cljs.core.next(arglist__32421);
      var c1 = cljs.core.first(arglist__32421);
      arglist__32421 = cljs.core.next(arglist__32421);
      var c2 = cljs.core.first(arglist__32421);
      arglist__32421 = cljs.core.next(arglist__32421);
      var c3 = cljs.core.first(arglist__32421);
      var colls = cljs.core.rest(arglist__32421);
      return G__32420__delegate(f, c1, c2, c3, colls)
    };
    G__32420.cljs$core$IFn$_invoke$arity$variadic = G__32420__delegate;
    return G__32420
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__32422 = n__$1 - 1;
        var G__32423 = cljs.core.rest.call(null, s);
        n__$1 = G__32422;
        coll__$1 = G__32423;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__32424 = cljs.core.next.call(null, s);
      var G__32425 = cljs.core.next.call(null, lead);
      s = G__32424;
      lead = G__32425;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__32426 = pred__$1;
        var G__32427 = cljs.core.rest.call(null, s);
        pred__$1 = G__32426;
        coll__$1 = G__32427;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__32428__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__32428 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32428__delegate.call(this, c1, c2, colls)
    };
    G__32428.cljs$lang$maxFixedArity = 2;
    G__32428.cljs$lang$applyTo = function(arglist__32429) {
      var c1 = cljs.core.first(arglist__32429);
      arglist__32429 = cljs.core.next(arglist__32429);
      var c2 = cljs.core.first(arglist__32429);
      var colls = cljs.core.rest(arglist__32429);
      return G__32428__delegate(c1, c2, colls)
    };
    G__32428.cljs$core$IFn$_invoke$arity$variadic = G__32428__delegate;
    return G__32428
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__32430__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__32430 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__32430__delegate.call(this, f, coll, colls)
    };
    G__32430.cljs$lang$maxFixedArity = 2;
    G__32430.cljs$lang$applyTo = function(arglist__32431) {
      var f = cljs.core.first(arglist__32431);
      arglist__32431 = cljs.core.next(arglist__32431);
      var coll = cljs.core.first(arglist__32431);
      var colls = cljs.core.rest(arglist__32431);
      return G__32430__delegate(f, coll, colls)
    };
    G__32430.cljs$core$IFn$_invoke$arity$variadic = G__32430__delegate;
    return G__32430
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3548__auto___32432 = size;
        var i_32433 = 0;
        while(true) {
          if(i_32433 < n__3548__auto___32432) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_32433)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_32433))
            }else {
            }
            var G__32434 = i_32433 + 1;
            i_32433 = G__32434;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__32435_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__32435_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__32437 = to;
      if(G__32437) {
        if(function() {
          var or__3943__auto__ = G__32437.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32437.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__32438__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__32438 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__32438__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__32438.cljs$lang$maxFixedArity = 4;
    G__32438.cljs$lang$applyTo = function(arglist__32439) {
      var f = cljs.core.first(arglist__32439);
      arglist__32439 = cljs.core.next(arglist__32439);
      var c1 = cljs.core.first(arglist__32439);
      arglist__32439 = cljs.core.next(arglist__32439);
      var c2 = cljs.core.first(arglist__32439);
      arglist__32439 = cljs.core.next(arglist__32439);
      var c3 = cljs.core.first(arglist__32439);
      var colls = cljs.core.rest(arglist__32439);
      return G__32438__delegate(f, c1, c2, c3, colls)
    };
    G__32438.cljs$core$IFn$_invoke$arity$variadic = G__32438__delegate;
    return G__32438
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__32441 = m__$1;
          if(G__32441) {
            if(function() {
              var or__3943__auto__ = G__32441.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__32441.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__32441.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__32441)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__32441)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__32442 = sentinel;
            var G__32443 = m__$2;
            var G__32444 = cljs.core.next.call(null, ks__$1);
            sentinel = G__32442;
            m__$1 = G__32443;
            ks__$1 = G__32444;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__32445, v) {
  var vec__32447 = p__32445;
  var k = cljs.core.nth.call(null, vec__32447, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__32447, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__32448, f) {
    var vec__32458 = p__32448;
    var k = cljs.core.nth.call(null, vec__32458, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__32458, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__32449, f, a) {
    var vec__32459 = p__32449;
    var k = cljs.core.nth.call(null, vec__32459, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__32459, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__32450, f, a, b) {
    var vec__32460 = p__32450;
    var k = cljs.core.nth.call(null, vec__32460, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__32460, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__32451, f, a, b, c) {
    var vec__32461 = p__32451;
    var k = cljs.core.nth.call(null, vec__32461, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__32461, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__32463__delegate = function(m, p__32452, f, a, b, c, args) {
      var vec__32462 = p__32452;
      var k = cljs.core.nth.call(null, vec__32462, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__32462, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__32463 = function(m, p__32452, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__32463__delegate.call(this, m, p__32452, f, a, b, c, args)
    };
    G__32463.cljs$lang$maxFixedArity = 6;
    G__32463.cljs$lang$applyTo = function(arglist__32464) {
      var m = cljs.core.first(arglist__32464);
      arglist__32464 = cljs.core.next(arglist__32464);
      var p__32452 = cljs.core.first(arglist__32464);
      arglist__32464 = cljs.core.next(arglist__32464);
      var f = cljs.core.first(arglist__32464);
      arglist__32464 = cljs.core.next(arglist__32464);
      var a = cljs.core.first(arglist__32464);
      arglist__32464 = cljs.core.next(arglist__32464);
      var b = cljs.core.first(arglist__32464);
      arglist__32464 = cljs.core.next(arglist__32464);
      var c = cljs.core.first(arglist__32464);
      var args = cljs.core.rest(arglist__32464);
      return G__32463__delegate(m, p__32452, f, a, b, c, args)
    };
    G__32463.cljs$core$IFn$_invoke$arity$variadic = G__32463__delegate;
    return G__32463
  }();
  update_in = function(m, p__32452, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__32452, f);
      case 4:
        return update_in__4.call(this, m, p__32452, f, a);
      case 5:
        return update_in__5.call(this, m, p__32452, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__32452, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__32452, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__32465 = ll - 5;
      var G__32466 = r;
      ll = G__32465;
      ret = G__32466;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__32467 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__32468 = level - 5;
          node = G__32467;
          level = G__32468;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__32470 = null;
  var G__32470__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__32470__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__32470 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32470__2.call(this, self__, k);
      case 3:
        return G__32470__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32470
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args32469) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32469.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__32471 = j + 1;
              var G__32472 = init__$2;
              j = G__32471;
              init__$1 = G__32472;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__32473 = i + step_init[0];
        i = G__32473;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if("\ufdd0:else") {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if("\ufdd0:else") {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__32474 = i + 1;
        var G__32475 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__32474;
        out = G__32475;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__32476) {
    var args = cljs.core.seq(arglist__32476);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3092__auto__ = self__.end;
    var y__3093__auto__ = v_pos + 1;
    return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__32478 = null;
  var G__32478__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__32478__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__32478 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32478__2.call(this, self__, k);
      case 3:
        return G__32478__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32478
}();
cljs.core.Subvec.prototype.apply = function(self__, args32477) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32477.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__32479 = meta;
      var G__32480 = v.v;
      var G__32481 = v.start + start;
      var G__32482 = v.start + end;
      var G__32483 = __hash;
      meta = G__32479;
      v = G__32480;
      start = G__32481;
      end = G__32482;
      __hash = G__32483;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__32484 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__32485 = level - 5;
          node = G__32484;
          level = G__32485;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__32487 = null;
  var G__32487__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32487__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32487 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32487__2.call(this, self__, k);
      case 3:
        return G__32487__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32487
}();
cljs.core.TransientVector.prototype.apply = function(self__, args32486) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32486.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0:else") {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__32488 = i + incr;
        i = G__32488;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if("\ufdd0:else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__32489 = i + 1;
      var G__32490 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__32489;
      out = G__32490;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_32491 = 0;
  while(true) {
    if(i_32491 < l) {
      var k_32492 = ks[i_32491];
      new_obj[k_32492] = obj[k_32492];
      var G__32493 = i_32491 + 1;
      i_32491 = G__32493;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__32496 = null;
  var G__32496__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32496__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32496 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32496__2.call(this, self__, k);
      case 3:
        return G__32496__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32496
}();
cljs.core.ObjMap.prototype.apply = function(self__, args32495) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32495.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__32497 = cljs.core.rest.call(null, keys__$1);
        var G__32498 = init__$2;
        keys__$1 = G__32497;
        init__$1 = G__32498;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__32494_SHARP_) {
      return cljs.core.vector.call(null, p1__32494_SHARP_, self__.strobj[p1__32494_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__32499 = i + 2;
          i = G__32499;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__32500 = i + 2;
          i = G__32500;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__32501 = i + 2;
          i = G__32501;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__32502 = i + 2;
          i = G__32502;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(function() {
    var or__3943__auto__ = goog.isString(k);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return typeof k === "number"
    }
  }()) {
    return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
  }else {
    if(k instanceof cljs.core.Symbol) {
      return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
    }else {
      if(k == null) {
        return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
      }else {
        if("\ufdd0:else") {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_32503 = 0;
  while(true) {
    if(i_32503 < l) {
      narr[i_32503] = arr[i_32503];
      var G__32504 = i_32503 + 1;
      i_32503 = G__32504;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if("\ufdd0:else") {
        var arr__$1 = function() {
          var G__32506 = self__.arr.slice();
          G__32506[idx + 1] = v;
          return G__32506
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__32507 = null;
  var G__32507__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32507__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32507 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32507__2.call(this, self__, k);
      case 3:
        return G__32507__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32507
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args32505) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32505.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__32508 = i + 2;
        var G__32509 = init__$2;
        i = G__32508;
        init__$1 = G__32509;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__32510 = s + 2;
            var G__32511 = d;
            s = G__32510;
            d = G__32511;
            continue
          }else {
            if("\ufdd0:else") {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__32512 = s + 2;
              var G__32513 = d + 2;
              s = G__32512;
              d = G__32513;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__32514_32516 = self__.arr;
      G__32514_32516.pop();
      G__32514_32516.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__32515 = o;
      if(G__32515) {
        if(function() {
          var or__3943__auto__ = G__32515.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32515.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__32515.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__32515)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__32515)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__32517 = cljs.core.next.call(null, es);
          var G__32518 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__32517;
          tcoll__$1 = G__32518;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__32519 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__32520 = i + 2;
      out = G__32519;
      i = G__32520;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__32523 = arr.slice();
    G__32523[i] = a;
    return G__32523
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__32524 = arr.slice();
    G__32524[i] = a;
    G__32524[j] = b;
    return G__32524
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__32525 = i + 2;
        var G__32526 = init__$2;
        i = G__32525;
        init__$1 = G__32526;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_32527 = 0;
        var j_32528 = 0;
        while(true) {
          if(i_32527 < 32) {
            if((self__.bitmap >>> i_32527 & 1) === 0) {
              var G__32529 = i_32527 + 1;
              var G__32530 = j_32528;
              i_32527 = G__32529;
              j_32528 = G__32530;
              continue
            }else {
              nodes[i_32527] = !(self__.arr[j_32528] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_32528]), self__.arr[j_32528], self__.arr[j_32528 + 1], added_leaf_QMARK_) : self__.arr[j_32528 + 1];
              var G__32531 = i_32527 + 1;
              var G__32532 = j_32528 + 2;
              i_32527 = G__32531;
              j_32528 = G__32532;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if("\ufdd0:else") {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_32533 = 0;
      var j_32534 = 0;
      while(true) {
        if(i_32533 < 32) {
          if((self__.bitmap >>> i_32533 & 1) === 0) {
            var G__32535 = i_32533 + 1;
            var G__32536 = j_32534;
            i_32533 = G__32535;
            j_32534 = G__32536;
            continue
          }else {
            nodes[i_32533] = !(self__.arr[j_32534] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_32534]), self__.arr[j_32534], self__.arr[j_32534 + 1], added_leaf_QMARK_) : self__.arr[j_32534 + 1];
            var G__32537 = i_32533 + 1;
            var G__32538 = j_32534 + 2;
            i_32533 = G__32537;
            j_32534 = G__32538;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__32539 = i + 1;
        var G__32540 = j + 2;
        var G__32541 = bitmap | 1 << i;
        i = G__32539;
        j = G__32540;
        bitmap = G__32541;
        continue
      }else {
        var G__32542 = i + 1;
        var G__32543 = j;
        var G__32544 = bitmap;
        i = G__32542;
        j = G__32543;
        bitmap = G__32544;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if("\ufdd0:else") {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__32545 = i + 1;
          var G__32546 = init__$2;
          i = G__32545;
          init__$1 = G__32546;
          continue
        }
      }else {
        var G__32547 = i + 1;
        var G__32548 = init__$1;
        i = G__32547;
        init__$1 = G__32548;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if("\ufdd0:else") {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__32549 = i + 2;
        i = G__32549;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if("\ufdd0:else") {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__32550 = j + 2;
                j = G__32550;
                continue
              }
            }else {
              var G__32551 = j + 2;
              j = G__32551;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__32552 = j + 1;
              j = G__32552;
              continue
            }
          }else {
            var G__32553 = j + 1;
            j = G__32553;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if("\ufdd0:else") {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if("\ufdd0:else") {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__32555 = null;
  var G__32555__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32555__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32555 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32555__2.call(this, self__, k);
      case 3:
        return G__32555__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32555
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args32554) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32554.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if("\ufdd0:else") {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if("\ufdd0:else") {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__32556 = i + 1;
      var G__32557 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__32556;
      out = G__32557;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__32558 = o;
      if(G__32558) {
        if(function() {
          var or__3943__auto__ = G__32558.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__32558.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__32558.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__32558)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__32558)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__32559 = cljs.core.next.call(null, es);
          var G__32560 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__32559;
          tcoll__$1 = G__32560;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__32561 = ascending_QMARK_ ? t.left : t.right;
      var G__32562 = cljs.core.conj.call(null, stack__$1, t);
      t = G__32561;
      stack__$1 = G__32562;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__32564 = null;
  var G__32564__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__32564__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__32564 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32564__2.call(this, self__, k);
      case 3:
        return G__32564__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32564
}();
cljs.core.BlackNode.prototype.apply = function(self__, args32563) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32563.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__32566 = null;
  var G__32566__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__32566__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__32566 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32566__2.call(this, self__, k);
      case 3:
        return G__32566__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32566
}();
cljs.core.RedNode.prototype.apply = function(self__, args32565) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32565.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0:else") {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0:else") {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__32568 = null;
  var G__32568__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32568__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32568 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32568__2.call(this, self__, k);
      case 3:
        return G__32568__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32568
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args32567) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32567.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__32569 = t.left;
          t = G__32569;
          continue
        }else {
          if("\ufdd0:else") {
            var G__32570 = t.right;
            t = G__32570;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__32571 = cljs.core.conj.call(null, stack, t);
              var G__32572 = t.left;
              stack = G__32571;
              t = G__32572;
              continue
            }else {
              var G__32573 = stack;
              var G__32574 = t.right;
              stack = G__32573;
              t = G__32574;
              continue
            }
          }else {
            if("\ufdd0:else") {
              if(c > 0) {
                var G__32575 = cljs.core.conj.call(null, stack, t);
                var G__32576 = t.right;
                stack = G__32575;
                t = G__32576;
                continue
              }else {
                var G__32577 = stack;
                var G__32578 = t.left;
                stack = G__32577;
                t = G__32578;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__32579 = cljs.core.nnext.call(null, in$);
        var G__32580 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__32579;
        out = G__32580;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__32581) {
    var keyvals = cljs.core.seq(arglist__32581);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__32582) {
    var keyvals = cljs.core.seq(arglist__32582);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__32583 = cljs.core.nnext.call(null, kvs);
        kvs = G__32583;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__32584) {
    var keyvals = cljs.core.seq(arglist__32584);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__32585 = cljs.core.nnext.call(null, in$);
        var G__32586 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__32585;
        out = G__32586;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__32587) {
    var keyvals = cljs.core.seq(arglist__32587);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__32588 = cljs.core.nnext.call(null, in$);
        var G__32589 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__32588;
        out = G__32589;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__32590) {
    var comparator = cljs.core.first(arglist__32590);
    var keyvals = cljs.core.rest(arglist__32590);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__32591 = self__.mseq;
    if(G__32591) {
      if(function() {
        var or__3943__auto__ = G__32591.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32591.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__32591.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32591)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32591)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__32592 = self__.mseq;
    if(G__32592) {
      if(function() {
        var or__3943__auto__ = G__32592.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32592.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__32592.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32592)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32592)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__32593 = self__.mseq;
    if(G__32593) {
      if(function() {
        var or__3943__auto__ = G__32593.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32593.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__32593.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32593)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32593)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__32594 = self__.mseq;
    if(G__32594) {
      if(function() {
        var or__3943__auto__ = G__32594.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32594.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__32594.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32594)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__32594)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__32595_SHARP_, p2__32596_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__32595_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__32596_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__32597) {
    var maps = cljs.core.seq(arglist__32597);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__32598) {
    var f = cljs.core.first(arglist__32598);
    var maps = cljs.core.rest(arglist__32598);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, "\ufdd0:cljs.core/not-found");
      var G__32599 = cljs.core.not_EQ_.call(null, entry, "\ufdd0:cljs.core/not-found") ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__32600 = cljs.core.next.call(null, keys);
      ret = G__32599;
      keys = G__32600;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__32603 = null;
  var G__32603__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32603__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32603 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32603__2.call(this, self__, k);
      case 3:
        return G__32603__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32603
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args32602) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32602.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__32601_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__32601_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__32604 = i + 2;
        var G__32605 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__32604;
        out = G__32605;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__32607 = null;
  var G__32607__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__32607__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__32607 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32607__2.call(this, self__, k);
      case 3:
        return G__32607__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32607
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args32606) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32606.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__32610 = null;
  var G__32610__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__32610__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__32610 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32610__2.call(this, self__, k);
      case 3:
        return G__32610__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__32610
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args32609) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args32609.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__32608_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__32608_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__32611__delegate = function(keys) {
      if(function() {
        var and__3941__auto__ = keys instanceof cljs.core.IndexedSeq;
        if(and__3941__auto__) {
          return keys.arr.length < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD
        }else {
          return and__3941__auto__
        }
      }()) {
        var karr = keys.arr;
        var klen = karr.length;
        var alen = 2 * klen;
        var arr = new Array(alen);
        var ki = 0;
        while(true) {
          if(ki < klen) {
            var ai = 2 * ki;
            arr[ai] = karr[ki];
            arr[ai + 1] = null;
            var G__32612 = ki + 1;
            ki = G__32612;
            continue
          }else {
            return cljs.core.PersistentHashSet.fromArray.call(null, arr, true)
          }
          break
        }
      }else {
        var in$ = keys;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$ == null)) {
            var G__32613 = cljs.core._next.call(null, in$);
            var G__32614 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$));
            in$ = G__32613;
            out = G__32614;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }
    };
    var G__32611 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__32611__delegate.call(this, keys)
    };
    G__32611.cljs$lang$maxFixedArity = 0;
    G__32611.cljs$lang$applyTo = function(arglist__32615) {
      var keys = cljs.core.seq(arglist__32615);
      return G__32611__delegate(keys)
    };
    G__32611.cljs$core$IFn$_invoke$arity$variadic = G__32611__delegate;
    return G__32611
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__32616) {
    var keys = cljs.core.seq(arglist__32616);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__32617) {
    var comparator = cljs.core.first(arglist__32617);
    var keys = cljs.core.rest(arglist__32617);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__32618_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__32618_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__32618_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__32625, seen__$1) {
        while(true) {
          var vec__32626 = p__32625;
          var f = cljs.core.nth.call(null, vec__32626, 0, null);
          var xs__$1 = vec__32626;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__32627 = cljs.core.rest.call(null, s);
              var G__32628 = seen__$1;
              p__32625 = G__32627;
              seen__$1 = G__32628;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__32629 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__32630 = cljs.core.next.call(null, s__$1);
      ret = G__32629;
      s__$1 = G__32630;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__32632 = x;
    if(G__32632) {
      if(function() {
        var or__3943__auto__ = G__32632.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32632.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var i = x.lastIndexOf("/", x.length - 2);
        if(i < 0) {
          return cljs.core.subs.call(null, x, 2)
        }else {
          return cljs.core.subs.call(null, x, i + 1)
        }
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__32634 = x;
    if(G__32634) {
      if(function() {
        var or__3943__auto__ = G__32634.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__32634.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      var i = x.lastIndexOf("/", x.length - 2);
      if(i > -1) {
        return cljs.core.subs.call(null, x, 2, i)
      }else {
        return null
      }
    }else {
      throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__32635 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__32636 = cljs.core.next.call(null, ks);
      var G__32637 = cljs.core.next.call(null, vs);
      map = G__32635;
      ks = G__32636;
      vs = G__32637;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__32640__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__32638_SHARP_, p2__32639_SHARP_) {
        return max_key.call(null, k, p1__32638_SHARP_, p2__32639_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__32640 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32640__delegate.call(this, k, x, y, more)
    };
    G__32640.cljs$lang$maxFixedArity = 3;
    G__32640.cljs$lang$applyTo = function(arglist__32641) {
      var k = cljs.core.first(arglist__32641);
      arglist__32641 = cljs.core.next(arglist__32641);
      var x = cljs.core.first(arglist__32641);
      arglist__32641 = cljs.core.next(arglist__32641);
      var y = cljs.core.first(arglist__32641);
      var more = cljs.core.rest(arglist__32641);
      return G__32640__delegate(k, x, y, more)
    };
    G__32640.cljs$core$IFn$_invoke$arity$variadic = G__32640__delegate;
    return G__32640
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__32644__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__32642_SHARP_, p2__32643_SHARP_) {
        return min_key.call(null, k, p1__32642_SHARP_, p2__32643_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__32644 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32644__delegate.call(this, k, x, y, more)
    };
    G__32644.cljs$lang$maxFixedArity = 3;
    G__32644.cljs$lang$applyTo = function(arglist__32645) {
      var k = cljs.core.first(arglist__32645);
      arglist__32645 = cljs.core.next(arglist__32645);
      var x = cljs.core.first(arglist__32645);
      arglist__32645 = cljs.core.next(arglist__32645);
      var y = cljs.core.first(arglist__32645);
      var more = cljs.core.rest(arglist__32645);
      return G__32644__delegate(k, x, y, more)
    };
    G__32644.cljs$core$IFn$_invoke$arity$variadic = G__32644__delegate;
    return G__32644
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__32648 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__32648, 0, null);
        var s = vec__32648;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__32649 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__32649, 0, null);
      var s = vec__32649;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__32652 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__32652, 0, null);
        var s = vec__32652;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__32653 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__32653, 0, null);
      var s = vec__32653;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__32654_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__32654_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__32665 = null;
      var G__32665__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__32665__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__32665__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__32665__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__32665__4 = function() {
        var G__32666__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__32666 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32666__delegate.call(this, x, y, z, args)
        };
        G__32666.cljs$lang$maxFixedArity = 3;
        G__32666.cljs$lang$applyTo = function(arglist__32667) {
          var x = cljs.core.first(arglist__32667);
          arglist__32667 = cljs.core.next(arglist__32667);
          var y = cljs.core.first(arglist__32667);
          arglist__32667 = cljs.core.next(arglist__32667);
          var z = cljs.core.first(arglist__32667);
          var args = cljs.core.rest(arglist__32667);
          return G__32666__delegate(x, y, z, args)
        };
        G__32666.cljs$core$IFn$_invoke$arity$variadic = G__32666__delegate;
        return G__32666
      }();
      G__32665 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__32665__0.call(this);
          case 1:
            return G__32665__1.call(this, x);
          case 2:
            return G__32665__2.call(this, x, y);
          case 3:
            return G__32665__3.call(this, x, y, z);
          default:
            return G__32665__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32665.cljs$lang$maxFixedArity = 3;
      G__32665.cljs$lang$applyTo = G__32665__4.cljs$lang$applyTo;
      return G__32665
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__32668 = null;
      var G__32668__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__32668__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__32668__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__32668__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__32668__4 = function() {
        var G__32669__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__32669 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32669__delegate.call(this, x, y, z, args)
        };
        G__32669.cljs$lang$maxFixedArity = 3;
        G__32669.cljs$lang$applyTo = function(arglist__32670) {
          var x = cljs.core.first(arglist__32670);
          arglist__32670 = cljs.core.next(arglist__32670);
          var y = cljs.core.first(arglist__32670);
          arglist__32670 = cljs.core.next(arglist__32670);
          var z = cljs.core.first(arglist__32670);
          var args = cljs.core.rest(arglist__32670);
          return G__32669__delegate(x, y, z, args)
        };
        G__32669.cljs$core$IFn$_invoke$arity$variadic = G__32669__delegate;
        return G__32669
      }();
      G__32668 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__32668__0.call(this);
          case 1:
            return G__32668__1.call(this, x);
          case 2:
            return G__32668__2.call(this, x, y);
          case 3:
            return G__32668__3.call(this, x, y, z);
          default:
            return G__32668__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32668.cljs$lang$maxFixedArity = 3;
      G__32668.cljs$lang$applyTo = G__32668__4.cljs$lang$applyTo;
      return G__32668
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__32671 = null;
      var G__32671__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__32671__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__32671__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__32671__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__32671__4 = function() {
        var G__32672__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__32672 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__32672__delegate.call(this, x, y, z, args)
        };
        G__32672.cljs$lang$maxFixedArity = 3;
        G__32672.cljs$lang$applyTo = function(arglist__32673) {
          var x = cljs.core.first(arglist__32673);
          arglist__32673 = cljs.core.next(arglist__32673);
          var y = cljs.core.first(arglist__32673);
          arglist__32673 = cljs.core.next(arglist__32673);
          var z = cljs.core.first(arglist__32673);
          var args = cljs.core.rest(arglist__32673);
          return G__32672__delegate(x, y, z, args)
        };
        G__32672.cljs$core$IFn$_invoke$arity$variadic = G__32672__delegate;
        return G__32672
      }();
      G__32671 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__32671__0.call(this);
          case 1:
            return G__32671__1.call(this, x);
          case 2:
            return G__32671__2.call(this, x, y);
          case 3:
            return G__32671__3.call(this, x, y, z);
          default:
            return G__32671__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__32671.cljs$lang$maxFixedArity = 3;
      G__32671.cljs$lang$applyTo = G__32671__4.cljs$lang$applyTo;
      return G__32671
    }()
  };
  var juxt__4 = function() {
    var G__32674__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__32675 = null;
        var G__32675__0 = function() {
          return cljs.core.reduce.call(null, function(p1__32655_SHARP_, p2__32656_SHARP_) {
            return cljs.core.conj.call(null, p1__32655_SHARP_, p2__32656_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__32675__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__32657_SHARP_, p2__32658_SHARP_) {
            return cljs.core.conj.call(null, p1__32657_SHARP_, p2__32658_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__32675__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__32659_SHARP_, p2__32660_SHARP_) {
            return cljs.core.conj.call(null, p1__32659_SHARP_, p2__32660_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__32675__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__32661_SHARP_, p2__32662_SHARP_) {
            return cljs.core.conj.call(null, p1__32661_SHARP_, p2__32662_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__32675__4 = function() {
          var G__32676__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__32663_SHARP_, p2__32664_SHARP_) {
              return cljs.core.conj.call(null, p1__32663_SHARP_, cljs.core.apply.call(null, p2__32664_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__32676 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__32676__delegate.call(this, x, y, z, args)
          };
          G__32676.cljs$lang$maxFixedArity = 3;
          G__32676.cljs$lang$applyTo = function(arglist__32677) {
            var x = cljs.core.first(arglist__32677);
            arglist__32677 = cljs.core.next(arglist__32677);
            var y = cljs.core.first(arglist__32677);
            arglist__32677 = cljs.core.next(arglist__32677);
            var z = cljs.core.first(arglist__32677);
            var args = cljs.core.rest(arglist__32677);
            return G__32676__delegate(x, y, z, args)
          };
          G__32676.cljs$core$IFn$_invoke$arity$variadic = G__32676__delegate;
          return G__32676
        }();
        G__32675 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__32675__0.call(this);
            case 1:
              return G__32675__1.call(this, x);
            case 2:
              return G__32675__2.call(this, x, y);
            case 3:
              return G__32675__3.call(this, x, y, z);
            default:
              return G__32675__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__32675.cljs$lang$maxFixedArity = 3;
        G__32675.cljs$lang$applyTo = G__32675__4.cljs$lang$applyTo;
        return G__32675
      }()
    };
    var G__32674 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__32674__delegate.call(this, f, g, h, fs)
    };
    G__32674.cljs$lang$maxFixedArity = 3;
    G__32674.cljs$lang$applyTo = function(arglist__32678) {
      var f = cljs.core.first(arglist__32678);
      arglist__32678 = cljs.core.next(arglist__32678);
      var g = cljs.core.first(arglist__32678);
      arglist__32678 = cljs.core.next(arglist__32678);
      var h = cljs.core.first(arglist__32678);
      var fs = cljs.core.rest(arglist__32678);
      return G__32674__delegate(f, g, h, fs)
    };
    G__32674.cljs$core$IFn$_invoke$arity$variadic = G__32674__delegate;
    return G__32674
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__32679 = cljs.core.next.call(null, coll);
        coll = G__32679;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__32680 = n - 1;
        var G__32681 = cljs.core.next.call(null, coll);
        n = G__32680;
        coll = G__32681;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__32683 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__32683, 0, null);
  var flags = cljs.core.nth.call(null, vec__32683, 1, null);
  var pattern = cljs.core.nth.call(null, vec__32683, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__32688_32692 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__32689_32693 = null;
  var count__32690_32694 = 0;
  var i__32691_32695 = 0;
  while(true) {
    if(i__32691_32695 < count__32690_32694) {
      var o_32696 = cljs.core._nth.call(null, chunk__32689_32693, i__32691_32695);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_32696, writer, opts);
      var G__32697 = seq__32688_32692;
      var G__32698 = chunk__32689_32693;
      var G__32699 = count__32690_32694;
      var G__32700 = i__32691_32695 + 1;
      seq__32688_32692 = G__32697;
      chunk__32689_32693 = G__32698;
      count__32690_32694 = G__32699;
      i__32691_32695 = G__32700;
      continue
    }else {
      var temp__4092__auto___32701 = cljs.core.seq.call(null, seq__32688_32692);
      if(temp__4092__auto___32701) {
        var seq__32688_32702__$1 = temp__4092__auto___32701;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__32688_32702__$1)) {
          var c__3501__auto___32703 = cljs.core.chunk_first.call(null, seq__32688_32702__$1);
          var G__32704 = cljs.core.chunk_rest.call(null, seq__32688_32702__$1);
          var G__32705 = c__3501__auto___32703;
          var G__32706 = cljs.core.count.call(null, c__3501__auto___32703);
          var G__32707 = 0;
          seq__32688_32692 = G__32704;
          chunk__32689_32693 = G__32705;
          count__32690_32694 = G__32706;
          i__32691_32695 = G__32707;
          continue
        }else {
          var o_32708 = cljs.core.first.call(null, seq__32688_32702__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_32708, writer, opts);
          var G__32709 = cljs.core.next.call(null, seq__32688_32702__$1);
          var G__32710 = null;
          var G__32711 = 0;
          var G__32712 = 0;
          seq__32688_32692 = G__32709;
          chunk__32689_32693 = G__32710;
          count__32690_32694 = G__32711;
          i__32691_32695 = G__32712;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__32717 = cljs.core.seq.call(null, ss);
    var chunk__32718 = null;
    var count__32719 = 0;
    var i__32720 = 0;
    while(true) {
      if(i__32720 < count__32719) {
        var s = cljs.core._nth.call(null, chunk__32718, i__32720);
        cljs.core._write.call(null, writer, s);
        var G__32721 = seq__32717;
        var G__32722 = chunk__32718;
        var G__32723 = count__32719;
        var G__32724 = i__32720 + 1;
        seq__32717 = G__32721;
        chunk__32718 = G__32722;
        count__32719 = G__32723;
        i__32720 = G__32724;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__32717);
        if(temp__4092__auto__) {
          var seq__32717__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__32717__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__32717__$1);
            var G__32725 = cljs.core.chunk_rest.call(null, seq__32717__$1);
            var G__32726 = c__3501__auto__;
            var G__32727 = cljs.core.count.call(null, c__3501__auto__);
            var G__32728 = 0;
            seq__32717 = G__32725;
            chunk__32718 = G__32726;
            count__32719 = G__32727;
            i__32720 = G__32728;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__32717__$1);
            cljs.core._write.call(null, writer, s);
            var G__32729 = cljs.core.next.call(null, seq__32717__$1);
            var G__32730 = null;
            var G__32731 = 0;
            var G__32732 = 0;
            seq__32717 = G__32729;
            chunk__32718 = G__32730;
            count__32719 = G__32731;
            i__32720 = G__32732;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__32733) {
    var writer = cljs.core.first(arglist__32733);
    var ss = cljs.core.rest(arglist__32733);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if("\ufdd0:else") {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, "\ufdd0:meta");
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__32737 = obj;
              if(G__32737) {
                if(function() {
                  var or__3943__auto__ = G__32737.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__32737.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__32737.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__32737)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__32737)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__32738 = obj;
              if(G__32738) {
                if(function() {
                  var or__3943__auto__ = G__32738.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__32738.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.keyword_QMARK_.call(null, obj)) {
                      cljs.core._write.call(null, writer, ":");
                      var temp__4092__auto___32740 = cljs.core.namespace.call(null, obj);
                      if(cljs.core.truth_(temp__4092__auto___32740)) {
                        var nspc_32741 = temp__4092__auto___32740;
                        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_32741)].join(""), "/")
                      }else {
                      }
                      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                    }else {
                      if(obj instanceof cljs.core.Symbol) {
                        var temp__4092__auto___32742 = cljs.core.namespace.call(null, obj);
                        if(cljs.core.truth_(temp__4092__auto___32742)) {
                          var nspc_32743 = temp__4092__auto___32742;
                          cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_32743)].join(""), "/")
                        }else {
                        }
                        return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                      }else {
                        if("\ufdd0:else") {
                          if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:readably")).call(null, opts))) {
                            return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                          }else {
                            return cljs.core._write.call(null, writer, obj)
                          }
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__32744 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__32744;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__32739 = obj;
                            if(G__32739) {
                              if(function() {
                                var or__3943__auto__ = G__32739.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__32739.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__32739.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__32739)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__32739)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if("\ufdd0:else") {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__32749 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__32750 = null;
  var count__32751 = 0;
  var i__32752 = 0;
  while(true) {
    if(i__32752 < count__32751) {
      var obj = cljs.core._nth.call(null, chunk__32750, i__32752);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__32753 = seq__32749;
      var G__32754 = chunk__32750;
      var G__32755 = count__32751;
      var G__32756 = i__32752 + 1;
      seq__32749 = G__32753;
      chunk__32750 = G__32754;
      count__32751 = G__32755;
      i__32752 = G__32756;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__32749);
      if(temp__4092__auto__) {
        var seq__32749__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__32749__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__32749__$1);
          var G__32757 = cljs.core.chunk_rest.call(null, seq__32749__$1);
          var G__32758 = c__3501__auto__;
          var G__32759 = cljs.core.count.call(null, c__3501__auto__);
          var G__32760 = 0;
          seq__32749 = G__32757;
          chunk__32750 = G__32758;
          count__32751 = G__32759;
          i__32752 = G__32760;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__32749__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__32761 = cljs.core.next.call(null, seq__32749__$1);
          var G__32762 = null;
          var G__32763 = 0;
          var G__32764 = 0;
          seq__32749 = G__32761;
          chunk__32750 = G__32762;
          count__32751 = G__32763;
          i__32752 = G__32764;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, "\ufdd0:flush-on-newline"))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__32765) {
    var objs = cljs.core.seq(arglist__32765);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__32766) {
    var objs = cljs.core.seq(arglist__32766);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__32767) {
    var objs = cljs.core.seq(arglist__32767);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__32768) {
    var objs = cljs.core.seq(arglist__32768);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__32769) {
    var objs = cljs.core.seq(arglist__32769);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__32770) {
    var objs = cljs.core.seq(arglist__32770);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__32771) {
    var objs = cljs.core.seq(arglist__32771);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__32772) {
    var objs = cljs.core.seq(arglist__32772);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__32773) {
    var fmt = cljs.core.first(arglist__32773);
    var args = cljs.core.rest(arglist__32773);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__32774 = cljs.core.seq.call(null, self__.watches);
  var chunk__32775 = null;
  var count__32776 = 0;
  var i__32777 = 0;
  while(true) {
    if(i__32777 < count__32776) {
      var vec__32778 = cljs.core._nth.call(null, chunk__32775, i__32777);
      var key = cljs.core.nth.call(null, vec__32778, 0, null);
      var f = cljs.core.nth.call(null, vec__32778, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__32780 = seq__32774;
      var G__32781 = chunk__32775;
      var G__32782 = count__32776;
      var G__32783 = i__32777 + 1;
      seq__32774 = G__32780;
      chunk__32775 = G__32781;
      count__32776 = G__32782;
      i__32777 = G__32783;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__32774);
      if(temp__4092__auto__) {
        var seq__32774__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__32774__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__32774__$1);
          var G__32784 = cljs.core.chunk_rest.call(null, seq__32774__$1);
          var G__32785 = c__3501__auto__;
          var G__32786 = cljs.core.count.call(null, c__3501__auto__);
          var G__32787 = 0;
          seq__32774 = G__32784;
          chunk__32775 = G__32785;
          count__32776 = G__32786;
          i__32777 = G__32787;
          continue
        }else {
          var vec__32779 = cljs.core.first.call(null, seq__32774__$1);
          var key = cljs.core.nth.call(null, vec__32779, 0, null);
          var f = cljs.core.nth.call(null, vec__32779, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__32788 = cljs.core.next.call(null, seq__32774__$1);
          var G__32789 = null;
          var G__32790 = 0;
          var G__32791 = 0;
          seq__32774 = G__32788;
          chunk__32775 = G__32789;
          count__32776 = G__32790;
          i__32777 = G__32791;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__32795__delegate = function(x, p__32792) {
      var map__32794 = p__32792;
      var map__32794__$1 = cljs.core.seq_QMARK_.call(null, map__32794) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32794) : map__32794;
      var validator = cljs.core.get.call(null, map__32794__$1, "\ufdd0:validator");
      var meta = cljs.core.get.call(null, map__32794__$1, "\ufdd0:meta");
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__32795 = function(x, var_args) {
      var p__32792 = null;
      if(arguments.length > 1) {
        p__32792 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__32795__delegate.call(this, x, p__32792)
    };
    G__32795.cljs$lang$maxFixedArity = 1;
    G__32795.cljs$lang$applyTo = function(arglist__32796) {
      var x = cljs.core.first(arglist__32796);
      var p__32792 = cljs.core.rest(arglist__32796);
      return G__32795__delegate(x, p__32792)
    };
    G__32795.cljs$core$IFn$_invoke$arity$variadic = G__32795__delegate;
    return G__32795
  }();
  atom = function(x, var_args) {
    var p__32792 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___32797 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___32797)) {
    var validate_32798 = temp__4092__auto___32797;
    if(cljs.core.truth_(validate_32798.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_32799 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_32799, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__32800__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__32800 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__32800__delegate.call(this, a, f, x, y, z, more)
    };
    G__32800.cljs$lang$maxFixedArity = 5;
    G__32800.cljs$lang$applyTo = function(arglist__32801) {
      var a = cljs.core.first(arglist__32801);
      arglist__32801 = cljs.core.next(arglist__32801);
      var f = cljs.core.first(arglist__32801);
      arglist__32801 = cljs.core.next(arglist__32801);
      var x = cljs.core.first(arglist__32801);
      arglist__32801 = cljs.core.next(arglist__32801);
      var y = cljs.core.first(arglist__32801);
      arglist__32801 = cljs.core.next(arglist__32801);
      var z = cljs.core.first(arglist__32801);
      var more = cljs.core.rest(arglist__32801);
      return G__32800__delegate(a, f, x, y, z, more)
    };
    G__32800.cljs$core$IFn$_invoke$arity$variadic = G__32800__delegate;
    return G__32800
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__32802) {
    var iref = cljs.core.first(arglist__32802);
    arglist__32802 = cljs.core.next(arglist__32802);
    var f = cljs.core.first(arglist__32802);
    var args = cljs.core.rest(arglist__32802);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:done")).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:value")).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__32803) {
    var map__32804 = p__32803;
    var map__32804__$1 = cljs.core.seq_QMARK_.call(null, map__32804) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32804) : map__32804;
    var curr_state = map__32804__$1;
    var done = cljs.core.get.call(null, map__32804__$1, "\ufdd0:done");
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:done", true, "\ufdd0:value", self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__32806 = k;
    if(G__32806) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__32806.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__32806.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__32806)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__32806)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = cljs.core.keyword_QMARK_.call(null, k);
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__32814 = x;
      if(G__32814) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__32814.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__32814.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__32814)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__32814)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__32815_32821 = cljs.core.seq.call(null, x);
            var chunk__32816_32822 = null;
            var count__32817_32823 = 0;
            var i__32818_32824 = 0;
            while(true) {
              if(i__32818_32824 < count__32817_32823) {
                var vec__32819_32825 = cljs.core._nth.call(null, chunk__32816_32822, i__32818_32824);
                var k_32826 = cljs.core.nth.call(null, vec__32819_32825, 0, null);
                var v_32827 = cljs.core.nth.call(null, vec__32819_32825, 1, null);
                m[cljs.core.key__GT_js.call(null, k_32826)] = clj__GT_js.call(null, v_32827);
                var G__32828 = seq__32815_32821;
                var G__32829 = chunk__32816_32822;
                var G__32830 = count__32817_32823;
                var G__32831 = i__32818_32824 + 1;
                seq__32815_32821 = G__32828;
                chunk__32816_32822 = G__32829;
                count__32817_32823 = G__32830;
                i__32818_32824 = G__32831;
                continue
              }else {
                var temp__4092__auto___32832 = cljs.core.seq.call(null, seq__32815_32821);
                if(temp__4092__auto___32832) {
                  var seq__32815_32833__$1 = temp__4092__auto___32832;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__32815_32833__$1)) {
                    var c__3501__auto___32834 = cljs.core.chunk_first.call(null, seq__32815_32833__$1);
                    var G__32835 = cljs.core.chunk_rest.call(null, seq__32815_32833__$1);
                    var G__32836 = c__3501__auto___32834;
                    var G__32837 = cljs.core.count.call(null, c__3501__auto___32834);
                    var G__32838 = 0;
                    seq__32815_32821 = G__32835;
                    chunk__32816_32822 = G__32836;
                    count__32817_32823 = G__32837;
                    i__32818_32824 = G__32838;
                    continue
                  }else {
                    var vec__32820_32839 = cljs.core.first.call(null, seq__32815_32833__$1);
                    var k_32840 = cljs.core.nth.call(null, vec__32820_32839, 0, null);
                    var v_32841 = cljs.core.nth.call(null, vec__32820_32839, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_32840)] = clj__GT_js.call(null, v_32841);
                    var G__32842 = cljs.core.next.call(null, seq__32815_32833__$1);
                    var G__32843 = null;
                    var G__32844 = 0;
                    var G__32845 = 0;
                    seq__32815_32821 = G__32842;
                    chunk__32816_32822 = G__32843;
                    count__32817_32823 = G__32844;
                    i__32818_32824 = G__32845;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if("\ufdd0:else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:keywordize-keys", false], true))
  };
  var js__GT_clj__2 = function() {
    var G__32866__delegate = function(x, opts) {
      if(function() {
        var G__32856 = cljs.core.IEncodeClojure;
        if(G__32856) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__32856.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__32856.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__32856)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__32856)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__32857 = opts;
          var map__32857__$1 = cljs.core.seq_QMARK_.call(null, map__32857) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32857) : map__32857;
          var keywordize_keys = cljs.core.get.call(null, map__32857__$1, "\ufdd0:keywordize-keys");
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__32857, map__32857__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3470__auto__ = function(map__32857, map__32857__$1, keywordize_keys, keyfn) {
                          return function iter__32862(s__32863) {
                            return new cljs.core.LazySeq(null, false, function(map__32857, map__32857__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__32863__$1 = s__32863;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__32863__$1);
                                  if(temp__4092__auto__) {
                                    var s__32863__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__32863__$2)) {
                                      var c__3468__auto__ = cljs.core.chunk_first.call(null, s__32863__$2);
                                      var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
                                      var b__32865 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
                                      if(function() {
                                        var i__32864 = 0;
                                        while(true) {
                                          if(i__32864 < size__3469__auto__) {
                                            var k = cljs.core._nth.call(null, c__3468__auto__, i__32864);
                                            cljs.core.chunk_append.call(null, b__32865, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__32867 = i__32864 + 1;
                                            i__32864 = G__32867;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__32865), iter__32862.call(null, cljs.core.chunk_rest.call(null, s__32863__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__32865), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__32863__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__32862.call(null, cljs.core.rest.call(null, s__32863__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__32857, map__32857__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__32857, map__32857__$1, keywordize_keys, keyfn);
                        return iter__3470__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if("\ufdd0:else") {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__32857, map__32857__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__32866 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__32866__delegate.call(this, x, opts)
    };
    G__32866.cljs$lang$maxFixedArity = 1;
    G__32866.cljs$lang$applyTo = function(arglist__32868) {
      var x = cljs.core.first(arglist__32868);
      var opts = cljs.core.rest(arglist__32868);
      return G__32866__delegate(x, opts)
    };
    G__32866.cljs$core$IFn$_invoke$arity$variadic = G__32866__delegate;
    return G__32866
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__32869__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__32869 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__32869__delegate.call(this, args)
    };
    G__32869.cljs$lang$maxFixedArity = 0;
    G__32869.cljs$lang$applyTo = function(arglist__32870) {
      var args = cljs.core.seq(arglist__32870);
      return G__32869__delegate(args)
    };
    G__32869.cljs$core$IFn$_invoke$arity$variadic = G__32869__delegate;
    return G__32869
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__32871 = ret;
        f = G__32871;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__32872__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__32872 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__32872__delegate.call(this, f, args)
    };
    G__32872.cljs$lang$maxFixedArity = 1;
    G__32872.cljs$lang$applyTo = function(arglist__32873) {
      var f = cljs.core.first(arglist__32873);
      var args = cljs.core.rest(arglist__32873);
      return G__32872__delegate(f, args)
    };
    G__32872.cljs$core$IFn$_invoke$arity$variadic = G__32872__delegate;
    return G__32872
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:descendants", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:ancestors", cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__32874) {
    var f = cljs.core.first(arglist__32874);
    var args = cljs.core.rest(arglist__32874);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__32875 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__32876 = i + 1;
                  ret = G__32875;
                  i = G__32876;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var td = (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h);
    var ta = (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0:ancestors", tf.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag, td, parent, ta), "\ufdd0:descendants", tf.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), parent, ta, tag, td)], 
      true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__32877_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__32877_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__32877_SHARP_), cljs.core.second.call(null, p1__32877_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__32878_SHARP_, p2__32879_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__32878_SHARP_, p2__32879_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__32880 = cljs.core.rest.call(null, ps);
          ps = G__32880;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__32881 = cljs.core.rest.call(null, ps);
            ps = G__32881;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__32884) {
    var vec__32885 = p__32884;
    var k = cljs.core.nth.call(null, vec__32885, 0, null);
    var _ = cljs.core.nth.call(null, vec__32885, 1, null);
    var e = vec__32885;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__32886__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__32886 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__32886__delegate.call(this, _, args)
  };
  G__32886.cljs$lang$maxFixedArity = 1;
  G__32886.cljs$lang$applyTo = function(arglist__32887) {
    var _ = cljs.core.first(arglist__32887);
    var args = cljs.core.rest(arglist__32887);
    return G__32886__delegate(_, args)
  };
  G__32886.cljs$core$IFn$_invoke$arity$variadic = G__32886__delegate;
  return G__32886
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if("\ufdd0:else") {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, 
  new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, 
  "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("chatter_box.protocol");
goog.require("cljs.core");
chatter_box.protocol.build_user = function build_user(username, first, last, img_url) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:first", first, "\ufdd0:last", last, "\ufdd0:img-url", img_url], true)
};
chatter_box.protocol.create_message = function create_message(area, key, data) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", key, "\ufdd0:data", data], true)
};
chatter_box.protocol.login_message = function login_message(username, password) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:password", password], true))
};
chatter_box.protocol.login_failure_message = function login_failure_message(username, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login-failure", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:err", error], true))
};
chatter_box.protocol.login_success_message = function login_success_message(user, existing_users) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login-success", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", user, "\ufdd0:existing-users", existing_users], true))
};
chatter_box.protocol.logout_message = function logout_message(username) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:logout", username)
};
chatter_box.protocol.create_user_message = function create_user_message(username, password, first, last, img_url) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:create", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", chatter_box.protocol.build_user.call(null, username, first, last, img_url), "\ufdd0:password", password], true))
};
chatter_box.protocol.user_created_message = function user_created_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:created", user)
};
chatter_box.protocol.update_user_message = function update_user_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:update", user)
};
chatter_box.protocol.user_updated_message = function user_updated_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:updated", user)
};
chatter_box.protocol.user_error_message = function user_error_message(user, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:error", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", user, "\ufdd0:err", error], true))
};
chatter_box.protocol.user_joined_message = function user_joined_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:join", user)
};
chatter_box.protocol.user_left_message = function user_left_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:left", user)
};
chatter_box.protocol.send_chat_message = function send_chat_message(local_uname, remote_uname, msg) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:send-chat", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:local", local_uname, "\ufdd0:remote", remote_uname, "\ufdd0:text", msg], true))
};
chatter_box.protocol.receive_chat_message = function receive_chat_message(local_uname, remote_uname, msg) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:receive-chat", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:local", local_uname, "\ufdd0:remote", remote_uname, "\ufdd0:text", msg], true))
};
chatter_box.protocol.chat_error_message = function chat_error_message(username, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:error", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:err", error], true))
};
chatter_box.protocol.create_filter = function create_filter(msg_set) {
  return function(msg) {
    var area = (new cljs.core.Keyword("\ufdd0:area")).call(null, msg);
    var ky = (new cljs.core.Keyword("\ufdd0:key")).call(null, msg);
    var or__3943__auto__ = msg_set.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", ky], true));
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return msg_set.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", "\ufdd0:all"], true))
    }
  }
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if(obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed()
  }
  return false
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if(!doc || !goog.userAgent.IE) {
    return undefined
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5)
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || goog.userAgent.IE && goog.userAgent.isVersion("8") || goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_])
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    map[type] = {count_:0, remaining_:0}
  }
  map = map[type];
  if(!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if(!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++
  }else {
    listenerArray = map[srcUid];
    for(var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if(listenerObj.removed) {
          break
        }
        if(!callOnce) {
          listenerArray[i].callOnce = false
        }
        return listenerArray[i]
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if(!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = []
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if(src.addEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture)
    }
  }else {
    src.attachEvent(goog.events.getOnString_(type), proxy)
  }
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if(!listener) {
    return false
  }
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key]
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if(!noObj) {
    if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && opt_obj && goog.events.Listenable.isImplementedBy(opt_obj)) {
      return opt_obj.removeAllListeners(opt_type)
    }
    var srcUid = goog.getUid((opt_obj));
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if(noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }else {
    return goog.events.getListeners_(obj, type, capture) || []
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler)
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " \x3d " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject)
  }
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e)
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return true
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if(goog.isFunction(listener)) {
    return listener
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget)
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if(this.reallyDisposed_) {
      return true
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if(ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for(;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
  }else {
    return goog.events.dispatchEvent(this, e)
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true
  }else {
    goog.events.removeAll(this)
  }
  this.parentEventTarget_ = null
};
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      listenerObj = listenerArray[index];
      if(!callOnce) {
        listenerObj.callOnce = false
      }
      return listenerObj
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index)
    }
    return false
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if(removed) {
      goog.events.cleanUp(key);
      key.removed = true
    }
    return removed
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for(var type in this.eventTargetListeners_) {
      if(!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for(var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true
        }
        listenerArray.length = 0
      }
    }
    return count
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if(!(type in this.eventTargetListeners_)) {
      return true
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for(var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if(listener && !listener.removed && listener.capture == capture) {
        if(listener.callOnce) {
          this.unlistenByKey(listener)
        }
        rv = listener.handleEvent(eventObject) !== false && rv
      }
    }
    return rv && eventObject.returnValue_ != false
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if(listenerArray) {
      for(var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if(listenerObj.capture == capture) {
          rv.push(listenerObj)
        }
      }
    }
    return rv
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if(listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope)
    }
    return i > -1 ? listenerArray[i] : null
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for(var i = 0;i < listenersArray.length;++i) {
        if((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true
        }
      }
      return false
    })
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if(goog.isString(e)) {
      e = new goog.events.Event(e, target)
    }else {
      if(!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent)
      }else {
        e.target = e.target || target
      }
    }
    var rv = true, currentTarget;
    if(opt_ancestorsTree) {
      for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv
      }
    }
    if(!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if(!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    if(opt_ancestorsTree) {
      for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    return rv
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
        return i
      }
    }
    return-1
  }
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col))
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear((col))
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable))
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll((opt_map))
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat())
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid((val))
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal
  }
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " \x3d ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]))
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_)
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"))
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"))
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray((object), sb);
        break
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return""
  }
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_)
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if(opt_scheme) {
    out += opt_scheme + ":"
  }
  if(opt_domain) {
    out += "//";
    if(opt_userInfo) {
      out += opt_userInfo + "@"
    }
    out += opt_domain;
    if(opt_port) {
      out += ":" + opt_port
    }
  }
  if(opt_path) {
    out += opt_path
  }
  if(opt_queryData) {
    out += "?" + opt_queryData
  }
  if(opt_fragment) {
    out += "#" + opt_fragment
  }
  return out
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_))
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if(!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1)
  }
  return scheme ? scheme.toLowerCase() : ""
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for(var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs)
    }
  }else {
    if(value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value))
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  if(opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if(this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS)
          }else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_()
          }
        }finally {
          this.cleanUpXhr_()
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY)
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_()
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if(this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"]
    }
  }catch(e) {
    this.logger_.fine("Can not get responseBody: " + e.message)
  }
  return null
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.fx.TransitionBase");
goog.provide("goog.fx.TransitionBase.State");
goog.require("goog.events.EventTarget");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.fx.TransitionBase = function() {
  goog.base(this);
  this.state_ = goog.fx.TransitionBase.State.STOPPED;
  this.startTime = null;
  this.endTime = null
};
goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
goog.fx.TransitionBase.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.TransitionBase.prototype.play = goog.abstractMethod;
goog.fx.TransitionBase.prototype.stop = goog.abstractMethod;
goog.fx.TransitionBase.prototype.pause = goog.abstractMethod;
goog.fx.TransitionBase.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.TransitionBase.prototype.setStatePlaying = function() {
  this.state_ = goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.setStatePaused = function() {
  this.state_ = goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.setStateStopped = function() {
  this.state_ = goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.isPlaying = function() {
  return this.state_ == goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.isPaused = function() {
  return this.state_ == goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.isStopped = function() {
  return this.state_ == goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.onBegin = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)
};
goog.fx.TransitionBase.prototype.onEnd = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)
};
goog.fx.TransitionBase.prototype.onFinish = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)
};
goog.fx.TransitionBase.prototype.onPause = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)
};
goog.fx.TransitionBase.prototype.onPlay = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)
};
goog.fx.TransitionBase.prototype.onResume = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)
};
goog.fx.TransitionBase.prototype.onStop = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)
};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(type)
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs))
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.provide("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.functions");
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.base(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = false;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = false;
  var raf = this.getRaf_();
  var cancelRaf = this.getCancelRaf_();
  if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
    this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_);
    this.win_.mozRequestAnimationFrame(null);
    this.usingListeners_ = true
  }else {
    if(raf && cancelRaf) {
      this.id_ = raf.call(this.win_, this.callback_)
    }else {
      this.id_ = this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT)
    }
  }
};
goog.async.AnimationDelay.prototype.stop = function() {
  if(this.isActive()) {
    var raf = this.getRaf_();
    var cancelRaf = this.getCancelRaf_();
    if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
      goog.events.unlistenByKey(this.id_)
    }else {
      if(raf && cancelRaf) {
        cancelRaf.call(this.win_, (this.id_))
      }else {
        this.win_.clearTimeout((this.id_))
      }
    }
  }
  this.id_ = null
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.AnimationDelay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return this.id_ != null
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  if(this.usingListeners_ && this.id_) {
    goog.events.unlistenByKey(this.id_)
  }
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now())
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.base(this, "disposeInternal")
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || null
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || win.webkitCancelRequestAnimationFrame || win.mozCancelRequestAnimationFrame || win.oCancelRequestAnimationFrame || win.msCancelRequestAnimationFrame || null
};
goog.provide("goog.fx.anim");
goog.provide("goog.fx.anim.Animated");
goog.require("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.object");
goog.fx.anim.Animated = function() {
};
goog.fx.anim.Animated.prototype.onAnimationFrame;
goog.fx.anim.TIMEOUT = goog.async.AnimationDelay.TIMEOUT;
goog.fx.anim.activeAnimations_ = {};
goog.fx.anim.animationWindow_ = null;
goog.fx.anim.animationDelay_ = null;
goog.fx.anim.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.activeAnimations_[uid] = animation
  }
  goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.anim.activeAnimations_[uid];
  if(goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.cancelAnimationFrame_()
  }
};
goog.fx.anim.tearDown = function() {
  goog.fx.anim.animationWindow_ = null;
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.activeAnimations_ = {}
};
goog.fx.anim.setAnimationWindow = function(animationWindow) {
  var hasTimer = goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.isActive();
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.animationWindow_ = animationWindow;
  if(hasTimer) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.fx.anim.requestAnimationFrame_ = function() {
  if(!goog.fx.anim.animationDelay_) {
    if(goog.fx.anim.animationWindow_) {
      goog.fx.anim.animationDelay_ = new goog.async.AnimationDelay(function(now) {
        goog.fx.anim.cycleAnimations_(now)
      }, goog.fx.anim.animationWindow_)
    }else {
      goog.fx.anim.animationDelay_ = new goog.async.Delay(function() {
        goog.fx.anim.cycleAnimations_(goog.now())
      }, goog.fx.anim.TIMEOUT)
    }
  }
  var delay = goog.fx.anim.animationDelay_;
  if(!delay.isActive()) {
    delay.start()
  }
};
goog.fx.anim.cancelAnimationFrame_ = function() {
  if(goog.fx.anim.animationDelay_) {
    goog.fx.anim.animationDelay_.stop()
  }
};
goog.fx.anim.cycleAnimations_ = function(now) {
  goog.object.forEach(goog.fx.anim.activeAnimations_, function(anim) {
    anim.onAnimationFrame(now)
  });
  if(!goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.TransitionBase.State");
goog.require("goog.fx.anim");
goog.require("goog.fx.anim.Animated");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.base(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = [];
  this.useRightPositioningForRtl_ = false
};
goog.inherits(goog.fx.Animation, goog.fx.TransitionBase);
goog.fx.Animation.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Animation.prototype.isRightPositioningForRtlEnabled = function() {
  return this.useRightPositioningForRtl_
};
goog.fx.Animation.EventType = {PLAY:goog.fx.Transition.EventType.PLAY, BEGIN:goog.fx.Transition.EventType.BEGIN, RESUME:goog.fx.Transition.EventType.RESUME, END:goog.fx.Transition.EventType.END, STOP:goog.fx.Transition.EventType.STOP, FINISH:goog.fx.Transition.EventType.FINISH, PAUSE:goog.fx.Transition.EventType.PAUSE, ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.TIMEOUT = goog.fx.anim.TIMEOUT;
goog.fx.Animation.State = goog.fx.TransitionBase.State;
goog.fx.Animation.setAnimationWindow = function(animationWindow) {
  goog.fx.anim.setAnimationWindow(animationWindow)
};
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.isStopped()) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.isPlaying()) {
      return false
    }
  }
  goog.fx.anim.unregisterAnimation(this);
  var now = (goog.now());
  this.startTime = now;
  if(this.isPaused()) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.setStatePlaying();
  goog.fx.anim.registerAnimation(this);
  this.cycle(now);
  return true
};
goog.fx.Animation.prototype.stop = function(opt_gotoEnd) {
  goog.fx.anim.unregisterAnimation(this);
  this.setStateStopped();
  if(!!opt_gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.isPlaying()) {
    goog.fx.anim.unregisterAnimation(this);
    this.setStatePaused();
    this.onPause()
  }
};
goog.fx.Animation.prototype.getProgress = function() {
  return this.progress
};
goog.fx.Animation.prototype.setProgress = function(progress) {
  this.progress = progress;
  if(this.isPlaying()) {
    var now = goog.now();
    this.startTime = now - this.duration * this.progress;
    this.endTime = this.startTime + this.duration
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(!this.isStopped()) {
    this.stop(false)
  }
  this.onDestroy();
  goog.base(this, "disposeInternal")
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.onAnimationFrame = function(now) {
  this.cycle(now)
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  this.updateCoords_(this.progress);
  if(this.progress == 1) {
    this.setStateStopped();
    goog.fx.anim.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.isPlaying()) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  if(goog.isFunction(this.accel_)) {
    t = this.accel_(t)
  }
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.base(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.getProgress();
  this.fps = anim.fps_;
  this.state = anim.getStateInternal();
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.easing");
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "))
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0))
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y
  }else {
    this.x += tx;
    if(goog.isNumber(opt_ty)) {
      this.y += opt_ty
    }
  }
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if(attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e")
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild))
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild))
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return(element.removeNode(false))
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return(goog.dom.removeNode(element))
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return(node).firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return(node).lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return(node).nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return(node).previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return(node)
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document)
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true))
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if("\x3e" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return(query)
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.removeInstanceForWindow = function(opt_window) {
  var uid = goog.getUid(opt_window || window);
  goog.dispose(goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]);
  delete goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_str = function sel_to_str(input) {
  var item = cljs.core.first.call(null, input);
  var rest = cljs.core.rest.call(null, input);
  var end = cljs.core.empty_QMARK_.call(null, rest) ? cljs.core.list(cljs.core.List.EMPTY) : sel_to_str.call(null, rest);
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.map.call(null, function(p1__10580_SHARP_) {
      return cljs.core.conj.call(null, p1__10580_SHARP_, cljs.core.name.call(null, item))
    }, end)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return cljs.core.map.call(null, function(p1__10581_SHARP_) {
        return cljs.core.conj.call(null, p1__10581_SHARP_, item)
      }, end)
    }else {
      if(cljs.core.set_QMARK_.call(null, item)) {
        return cljs.core.reduce.call(null, function(r1, it) {
          return cljs.core.concat.call(null, r1, cljs.core.map.call(null, function(p1__10582_SHARP_) {
            return cljs.core.conj.call(null, p1__10582_SHARP_, it)
          }, end))
        }, cljs.core.PersistentVector.EMPTY, cljs.core.flatten.call(null, sel_to_str.call(null, item)))
      }else {
        if(cljs.core.coll_QMARK_.call(null, item)) {
          var x1 = sel_to_str.call(null, item);
          var sub = cljs.core.map.call(null, function(x1) {
            return function(p1__10583_SHARP_) {
              return cljs.core.apply.call(null, cljs.core.str, p1__10583_SHARP_)
            }
          }(x1), sel_to_str.call(null, item));
          var iter__3470__auto__ = function iter__33927(s__33928) {
            return new cljs.core.LazySeq(null, false, function() {
              var s__33928__$1 = s__33928;
              while(true) {
                var temp__4092__auto__ = cljs.core.seq.call(null, s__33928__$1);
                if(temp__4092__auto__) {
                  var xs__4579__auto__ = temp__4092__auto__;
                  var s = cljs.core.first.call(null, xs__4579__auto__);
                  var iterys__3466__auto__ = function(s__33928__$1, s, xs__4579__auto__, temp__4092__auto__) {
                    return function iter__33929(s__33930) {
                      return new cljs.core.LazySeq(null, false, function(s__33928__$1, s, xs__4579__auto__, temp__4092__auto__) {
                        return function() {
                          var s__33930__$1 = s__33930;
                          while(true) {
                            var temp__4092__auto____$1 = cljs.core.seq.call(null, s__33930__$1);
                            if(temp__4092__auto____$1) {
                              var s__33930__$2 = temp__4092__auto____$1;
                              if(cljs.core.chunked_seq_QMARK_.call(null, s__33930__$2)) {
                                var c__3468__auto__ = cljs.core.chunk_first.call(null, s__33930__$2);
                                var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
                                var b__33932 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
                                if(function() {
                                  var i__33931 = 0;
                                  while(true) {
                                    if(i__33931 < size__3469__auto__) {
                                      var e = cljs.core._nth.call(null, c__3468__auto__, i__33931);
                                      cljs.core.chunk_append.call(null, b__33932, function() {
                                        cljs.core.println.call(null, s, e);
                                        return cljs.core.conj.call(null, e, s)
                                      }());
                                      var G__33933 = i__33931 + 1;
                                      i__33931 = G__33933;
                                      continue
                                    }else {
                                      return true
                                    }
                                    break
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33932), iter__33929.call(null, cljs.core.chunk_rest.call(null, s__33930__$2)))
                                }else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__33932), null)
                                }
                              }else {
                                var e = cljs.core.first.call(null, s__33930__$2);
                                return cljs.core.cons.call(null, function() {
                                  cljs.core.println.call(null, s, e);
                                  return cljs.core.conj.call(null, e, s)
                                }(), iter__33929.call(null, cljs.core.rest.call(null, s__33930__$2)))
                              }
                            }else {
                              return null
                            }
                            break
                          }
                        }
                      }(s__33928__$1, s, xs__4579__auto__, temp__4092__auto__), null)
                    }
                  }(s__33928__$1, s, xs__4579__auto__, temp__4092__auto__);
                  var fs__3467__auto__ = cljs.core.seq.call(null, iterys__3466__auto__.call(null, end));
                  if(fs__3467__auto__) {
                    return cljs.core.concat.call(null, fs__3467__auto__, iter__33927.call(null, cljs.core.rest.call(null, s__33928__$1)))
                  }else {
                    var G__33934 = cljs.core.rest.call(null, s__33928__$1);
                    s__33928__$1 = G__33934;
                    continue
                  }
                }else {
                  return null
                }
                break
              }
            }, null)
          };
          return iter__3470__auto__.call(null, sub)
        }else {
          return null
        }
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    var ors = enfocus.enlive.syntax.sel_to_str.call(null, sel);
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.apply.call(null, cljs.core.concat, cljs.core.interpose.call(null, ",", ors))))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts = function(p__33937) {
    var vec__33938 = p__33937;
    var x = cljs.core.nth.call(null, vec__33938, 0, null);
    var y = cljs.core.nth.call(null, vec__33938, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str(op), cljs.core.str("\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__15758_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__15758_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__33939) {
    var elms = cljs.core.seq(arglist__33939);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$core$IFn$_invoke$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__33940) {
    var elms = cljs.core.seq(arglist__33940);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(arguments.length > 1) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__33941) {
    var x = cljs.core.first(arglist__33941);
    var vals = cljs.core.rest(arglist__33941);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$core$IFn$_invoke$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__33942) {
    var elms = cljs.core.seq(arglist__33942);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$core$IFn$_invoke$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__33943) {
    var elms = cljs.core.seq(arglist__33943);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$core$IFn$_invoke$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__33944) {
    var elms = cljs.core.seq(arglist__33944);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$core$IFn$_invoke$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__33945) {
    var elms = cljs.core.seq(arglist__33945);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_op.cljs$core$IFn$_invoke$arity$2 = nth_op__2;
  nth_op.cljs$core$IFn$_invoke$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_child.cljs$core$IFn$_invoke$arity$1 = nth_child__1;
  nth_child.cljs$core$IFn$_invoke$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_child.cljs$core$IFn$_invoke$arity$1 = nth_last_child__1;
  nth_last_child.cljs$core$IFn$_invoke$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_of_type.cljs$core$IFn$_invoke$arity$1 = nth_of_type__1;
  nth_of_type.cljs$core$IFn$_invoke$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_of_type.cljs$core$IFn$_invoke$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$core$IFn$_invoke$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(arguments.length > 0) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__33946) {
    var sel = cljs.core.seq(arglist__33946);
    return but__delegate(sel)
  };
  but.cljs$core$IFn$_invoke$arity$variadic = but__delegate;
  return but
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0:else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__33906 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__33907 = limit__$1 - 1;
            var G__33908 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__33906;
            limit__$1 = G__33907;
            parts = G__33908;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__33909 = index - 1;
        index = G__33909;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___33910 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___33910)) {
        var replacement_33911 = temp__4090__auto___33910;
        buffer.append([cljs.core.str(replacement_33911)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__33912 = index + 1;
      index = G__33912;
      continue
    }
    break
  }
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"Webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"Moz"
    }else {
      if(goog.userAgent.IE) {
        return"ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"O"
        }
      }
    }
  }
  return null
};
goog.dom.vendor.getVendorPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"-webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"-moz"
    }else {
      if(goog.userAgent.IE) {
        return"-ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"-o"
        }
      }
    }
  }
  return null
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y
  }else {
    this.left += tx;
    this.right += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty
    }
  }
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y
  }else {
    this.left += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty
    }
  }
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if(propertyName) {
    element.style[propertyName] = value
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if(typeof styleValue !== "undefined") {
    return styleValue
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return(rect)
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent)
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h))
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div_33904 = document.createElement("div");
var test_html_33905 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_33904.innerHTML = test_html_33905;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_33904.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_33904.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_33904.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_33479 = cljs.core.PersistentVector.fromArray([1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], true);
var table_section_wrapper_33480 = cljs.core.PersistentVector.fromArray([1, "\x3ctable\x3e", "\x3c/table\x3e"], true);
var cell_wrapper_33481 = cljs.core.PersistentVector.fromArray([3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], true);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["col", "\ufdd0:default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], [cljs.core.PersistentVector.fromArray([2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], true), cljs.core.PersistentVector.fromArray([0, "", ""], true), table_section_wrapper_33480, table_section_wrapper_33480, opt_wrapper_33479, cljs.core.PersistentVector.fromArray([1, 
"\x3cfieldset\x3e", "\x3c/fieldset\x3e"], true), cljs.core.PersistentVector.fromArray([1, "\x3cmap\x3e", "\x3c/map\x3e"], true), cell_wrapper_33481, table_section_wrapper_33480, cell_wrapper_33481, opt_wrapper_33479, table_section_wrapper_33480, cljs.core.PersistentVector.fromArray([2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], true), table_section_wrapper_33480]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = function() {
    var and__3941__auto__ = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3941__auto__) {
      return no_tbody_QMARK_
    }else {
      return and__3941__auto__
    }
  }() ? function() {
    var and__3941__auto__ = div.firstChild;
    if(cljs.core.truth_(and__3941__auto__)) {
      return div.firstChild.childNodes
    }else {
      return and__3941__auto__
    }
  }() : function() {
    var and__3941__auto__ = cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e");
    if(and__3941__auto__) {
      return no_tbody_QMARK_
    }else {
      return and__3941__auto__
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var seq__33486 = cljs.core.seq.call(null, tbody);
  var chunk__33487 = null;
  var count__33488 = 0;
  var i__33489 = 0;
  while(true) {
    if(i__33489 < count__33488) {
      var child = cljs.core._nth.call(null, chunk__33487, i__33489);
      if(function() {
        var and__3941__auto__ = cljs.core._EQ_.call(null, child.nodeName, "tbody");
        if(and__3941__auto__) {
          return cljs.core._EQ_.call(null, child.childNodes.length, 0)
        }else {
          return and__3941__auto__
        }
      }()) {
        child.parentNode.removeChild(child)
      }else {
      }
      var G__33490 = seq__33486;
      var G__33491 = chunk__33487;
      var G__33492 = count__33488;
      var G__33493 = i__33489 + 1;
      seq__33486 = G__33490;
      chunk__33487 = G__33491;
      count__33488 = G__33492;
      i__33489 = G__33493;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__33486);
      if(temp__4092__auto__) {
        var seq__33486__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33486__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33486__$1);
          var G__33494 = cljs.core.chunk_rest.call(null, seq__33486__$1);
          var G__33495 = c__3501__auto__;
          var G__33496 = cljs.core.count.call(null, c__3501__auto__);
          var G__33497 = 0;
          seq__33486 = G__33494;
          chunk__33487 = G__33495;
          count__33488 = G__33496;
          i__33489 = G__33497;
          continue
        }else {
          var child = cljs.core.first.call(null, seq__33486__$1);
          if(function() {
            var and__3941__auto__ = cljs.core._EQ_.call(null, child.nodeName, "tbody");
            if(and__3941__auto__) {
              return cljs.core._EQ_.call(null, child.childNodes.length, 0)
            }else {
              return and__3941__auto__
            }
          }()) {
            child.parentNode.removeChild(child)
          }else {
          }
          var G__33498 = cljs.core.next.call(null, seq__33486__$1);
          var G__33499 = null;
          var G__33500 = 0;
          var G__33501 = 0;
          seq__33486 = G__33498;
          chunk__33487 = G__33499;
          count__33488 = G__33500;
          i__33489 = G__33501;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__33503 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword("\ufdd0:default")).call(null, domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__33503, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__33503, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__33503, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str(start_wrap), cljs.core.str(html__$1), cljs.core.str(end_wrap)].join("");
      return div
    }();
    var level = depth;
    while(true) {
      if(level > 0) {
        var G__33504 = wrapper.lastChild;
        var G__33505 = level - 1;
        wrapper = G__33504;
        level = G__33505;
        continue
      }else {
        return wrapper
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3941__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1)
    }else {
      return and__3941__auto__
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1)
  }else {
  }
  return div.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3941__auto__ = content;
    if(and__3941__auto__) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__3370__auto__ = content == null ? null : content;
    return function() {
      var or__3943__auto__ = domina.nodes[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.nodes["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3941__auto__ = nodeseq;
    if(and__3941__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__3370__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3943__auto__ = domina.single_node[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.single_node["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3941__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3941__auto__
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__33506) {
    var mesg = cljs.core.seq(arglist__33506);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__33507) {
    var mesg = cljs.core.seq(arglist__33507);
    return log__delegate(mesg)
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(typeof domina.domina.t33511 !== "undefined") {
  }else {
    goog.provide("domina.t33511");
    domina.t33511 = function(class_name, by_class, meta33512) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta33512 = meta33512;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t33511.cljs$lang$type = true;
    domina.t33511.cljs$lang$ctorStr = "domina/t33511";
    domina.t33511.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "domina/t33511")
    };
    domina.t33511.prototype.domina$DomContent$ = true;
    domina.t33511.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var self__ = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, self__.class_name)))
    };
    domina.t33511.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var self__ = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, self__.class_name)))
    };
    domina.t33511.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33513) {
      var self__ = this;
      return self__.meta33512
    };
    domina.t33511.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33513, meta33512__$1) {
      var self__ = this;
      return new domina.t33511(self__.class_name, self__.by_class, meta33512__$1)
    };
    domina.__GT_t33511 = function __GT_t33511(class_name__$1, by_class__$1, meta33512) {
      return new domina.t33511(class_name__$1, by_class__$1, meta33512)
    }
  }
  return new domina.t33511(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__33514) {
    var contents = cljs.core.seq(arglist__33514);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__33515_SHARP_) {
    return p1__33515_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__33516_SHARP_, p2__33517_SHARP_) {
    return goog.dom.insertChildAt(p1__33516_SHARP_, p2__33517_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__33519_SHARP_, p2__33518_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__33518_SHARP_, p1__33519_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__33521_SHARP_, p2__33520_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__33520_SHARP_, p1__33521_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__33523_SHARP_, p2__33522_SHARP_) {
    return goog.dom.replaceNode(p2__33522_SHARP_, p1__33523_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null
  }else {
    return s
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__33528_33532 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__33529_33533 = null;
    var count__33530_33534 = 0;
    var i__33531_33535 = 0;
    while(true) {
      if(i__33531_33535 < count__33530_33534) {
        var n_33536 = cljs.core._nth.call(null, chunk__33529_33533, i__33531_33535);
        goog.style.setStyle(n_33536, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__33537 = seq__33528_33532;
        var G__33538 = chunk__33529_33533;
        var G__33539 = count__33530_33534;
        var G__33540 = i__33531_33535 + 1;
        seq__33528_33532 = G__33537;
        chunk__33529_33533 = G__33538;
        count__33530_33534 = G__33539;
        i__33531_33535 = G__33540;
        continue
      }else {
        var temp__4092__auto___33541 = cljs.core.seq.call(null, seq__33528_33532);
        if(temp__4092__auto___33541) {
          var seq__33528_33542__$1 = temp__4092__auto___33541;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__33528_33542__$1)) {
            var c__3501__auto___33543 = cljs.core.chunk_first.call(null, seq__33528_33542__$1);
            var G__33544 = cljs.core.chunk_rest.call(null, seq__33528_33542__$1);
            var G__33545 = c__3501__auto___33543;
            var G__33546 = cljs.core.count.call(null, c__3501__auto___33543);
            var G__33547 = 0;
            seq__33528_33532 = G__33544;
            chunk__33529_33533 = G__33545;
            count__33530_33534 = G__33546;
            i__33531_33535 = G__33547;
            continue
          }else {
            var n_33548 = cljs.core.first.call(null, seq__33528_33542__$1);
            goog.style.setStyle(n_33548, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__33549 = cljs.core.next.call(null, seq__33528_33542__$1);
            var G__33550 = null;
            var G__33551 = 0;
            var G__33552 = 0;
            seq__33528_33532 = G__33549;
            chunk__33529_33533 = G__33550;
            count__33530_33534 = G__33551;
            i__33531_33535 = G__33552;
            continue
          }
        }else {
        }
      }
      break
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__33553) {
    var content = cljs.core.first(arglist__33553);
    arglist__33553 = cljs.core.next(arglist__33553);
    var name = cljs.core.first(arglist__33553);
    var value = cljs.core.rest(arglist__33553);
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__33558_33562 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__33559_33563 = null;
    var count__33560_33564 = 0;
    var i__33561_33565 = 0;
    while(true) {
      if(i__33561_33565 < count__33560_33564) {
        var n_33566 = cljs.core._nth.call(null, chunk__33559_33563, i__33561_33565);
        n_33566.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__33567 = seq__33558_33562;
        var G__33568 = chunk__33559_33563;
        var G__33569 = count__33560_33564;
        var G__33570 = i__33561_33565 + 1;
        seq__33558_33562 = G__33567;
        chunk__33559_33563 = G__33568;
        count__33560_33564 = G__33569;
        i__33561_33565 = G__33570;
        continue
      }else {
        var temp__4092__auto___33571 = cljs.core.seq.call(null, seq__33558_33562);
        if(temp__4092__auto___33571) {
          var seq__33558_33572__$1 = temp__4092__auto___33571;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__33558_33572__$1)) {
            var c__3501__auto___33573 = cljs.core.chunk_first.call(null, seq__33558_33572__$1);
            var G__33574 = cljs.core.chunk_rest.call(null, seq__33558_33572__$1);
            var G__33575 = c__3501__auto___33573;
            var G__33576 = cljs.core.count.call(null, c__3501__auto___33573);
            var G__33577 = 0;
            seq__33558_33562 = G__33574;
            chunk__33559_33563 = G__33575;
            count__33560_33564 = G__33576;
            i__33561_33565 = G__33577;
            continue
          }else {
            var n_33578 = cljs.core.first.call(null, seq__33558_33572__$1);
            n_33578.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__33579 = cljs.core.next.call(null, seq__33558_33572__$1);
            var G__33580 = null;
            var G__33581 = 0;
            var G__33582 = 0;
            seq__33558_33562 = G__33579;
            chunk__33559_33563 = G__33580;
            count__33560_33564 = G__33581;
            i__33561_33565 = G__33582;
            continue
          }
        }else {
        }
      }
      break
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__33583) {
    var content = cljs.core.first(arglist__33583);
    arglist__33583 = cljs.core.next(arglist__33583);
    var name = cljs.core.first(arglist__33583);
    var value = cljs.core.rest(arglist__33583);
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__33588_33592 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__33589_33593 = null;
  var count__33590_33594 = 0;
  var i__33591_33595 = 0;
  while(true) {
    if(i__33591_33595 < count__33590_33594) {
      var n_33596 = cljs.core._nth.call(null, chunk__33589_33593, i__33591_33595);
      n_33596.removeAttribute(cljs.core.name.call(null, name));
      var G__33597 = seq__33588_33592;
      var G__33598 = chunk__33589_33593;
      var G__33599 = count__33590_33594;
      var G__33600 = i__33591_33595 + 1;
      seq__33588_33592 = G__33597;
      chunk__33589_33593 = G__33598;
      count__33590_33594 = G__33599;
      i__33591_33595 = G__33600;
      continue
    }else {
      var temp__4092__auto___33601 = cljs.core.seq.call(null, seq__33588_33592);
      if(temp__4092__auto___33601) {
        var seq__33588_33602__$1 = temp__4092__auto___33601;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33588_33602__$1)) {
          var c__3501__auto___33603 = cljs.core.chunk_first.call(null, seq__33588_33602__$1);
          var G__33604 = cljs.core.chunk_rest.call(null, seq__33588_33602__$1);
          var G__33605 = c__3501__auto___33603;
          var G__33606 = cljs.core.count.call(null, c__3501__auto___33603);
          var G__33607 = 0;
          seq__33588_33592 = G__33604;
          chunk__33589_33593 = G__33605;
          count__33590_33594 = G__33606;
          i__33591_33595 = G__33607;
          continue
        }else {
          var n_33608 = cljs.core.first.call(null, seq__33588_33602__$1);
          n_33608.removeAttribute(cljs.core.name.call(null, name));
          var G__33609 = cljs.core.next.call(null, seq__33588_33602__$1);
          var G__33610 = null;
          var G__33611 = 0;
          var G__33612 = 0;
          seq__33588_33592 = G__33609;
          chunk__33589_33593 = G__33610;
          count__33590_33594 = G__33611;
          i__33591_33595 = G__33612;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__33614 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__33614, 0, null);
    var v = cljs.core.nth.call(null, vec__33614, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = k;
      if(cljs.core.truth_(and__3941__auto__)) {
        return v
      }else {
        return and__3941__auto__
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v)
    }else {
      return acc
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style)) {
    return domina.parse_style_attributes.call(null, style)
  }else {
    if(cljs.core.truth_(style.cssText)) {
      return domina.parse_style_attributes.call(null, style.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__33615_SHARP_) {
    var attr = attrs__$1.item(p1__33615_SHARP_);
    var value = attr.nodeValue;
    if(function() {
      var and__3941__auto__ = cljs.core.not_EQ_.call(null, null, value);
      if(and__3941__auto__) {
        return cljs.core.not_EQ_.call(null, "", value)
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true)
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__$1.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__33622_33628 = cljs.core.seq.call(null, styles);
  var chunk__33623_33629 = null;
  var count__33624_33630 = 0;
  var i__33625_33631 = 0;
  while(true) {
    if(i__33625_33631 < count__33624_33630) {
      var vec__33626_33632 = cljs.core._nth.call(null, chunk__33623_33629, i__33625_33631);
      var name_33633 = cljs.core.nth.call(null, vec__33626_33632, 0, null);
      var value_33634 = cljs.core.nth.call(null, vec__33626_33632, 1, null);
      domina.set_style_BANG_.call(null, content, name_33633, value_33634);
      var G__33635 = seq__33622_33628;
      var G__33636 = chunk__33623_33629;
      var G__33637 = count__33624_33630;
      var G__33638 = i__33625_33631 + 1;
      seq__33622_33628 = G__33635;
      chunk__33623_33629 = G__33636;
      count__33624_33630 = G__33637;
      i__33625_33631 = G__33638;
      continue
    }else {
      var temp__4092__auto___33639 = cljs.core.seq.call(null, seq__33622_33628);
      if(temp__4092__auto___33639) {
        var seq__33622_33640__$1 = temp__4092__auto___33639;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33622_33640__$1)) {
          var c__3501__auto___33641 = cljs.core.chunk_first.call(null, seq__33622_33640__$1);
          var G__33642 = cljs.core.chunk_rest.call(null, seq__33622_33640__$1);
          var G__33643 = c__3501__auto___33641;
          var G__33644 = cljs.core.count.call(null, c__3501__auto___33641);
          var G__33645 = 0;
          seq__33622_33628 = G__33642;
          chunk__33623_33629 = G__33643;
          count__33624_33630 = G__33644;
          i__33625_33631 = G__33645;
          continue
        }else {
          var vec__33627_33646 = cljs.core.first.call(null, seq__33622_33640__$1);
          var name_33647 = cljs.core.nth.call(null, vec__33627_33646, 0, null);
          var value_33648 = cljs.core.nth.call(null, vec__33627_33646, 1, null);
          domina.set_style_BANG_.call(null, content, name_33647, value_33648);
          var G__33649 = cljs.core.next.call(null, seq__33622_33640__$1);
          var G__33650 = null;
          var G__33651 = 0;
          var G__33652 = 0;
          seq__33622_33628 = G__33649;
          chunk__33623_33629 = G__33650;
          count__33624_33630 = G__33651;
          i__33625_33631 = G__33652;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__33659_33665 = cljs.core.seq.call(null, attrs);
  var chunk__33660_33666 = null;
  var count__33661_33667 = 0;
  var i__33662_33668 = 0;
  while(true) {
    if(i__33662_33668 < count__33661_33667) {
      var vec__33663_33669 = cljs.core._nth.call(null, chunk__33660_33666, i__33662_33668);
      var name_33670 = cljs.core.nth.call(null, vec__33663_33669, 0, null);
      var value_33671 = cljs.core.nth.call(null, vec__33663_33669, 1, null);
      domina.set_attr_BANG_.call(null, content, name_33670, value_33671);
      var G__33672 = seq__33659_33665;
      var G__33673 = chunk__33660_33666;
      var G__33674 = count__33661_33667;
      var G__33675 = i__33662_33668 + 1;
      seq__33659_33665 = G__33672;
      chunk__33660_33666 = G__33673;
      count__33661_33667 = G__33674;
      i__33662_33668 = G__33675;
      continue
    }else {
      var temp__4092__auto___33676 = cljs.core.seq.call(null, seq__33659_33665);
      if(temp__4092__auto___33676) {
        var seq__33659_33677__$1 = temp__4092__auto___33676;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33659_33677__$1)) {
          var c__3501__auto___33678 = cljs.core.chunk_first.call(null, seq__33659_33677__$1);
          var G__33679 = cljs.core.chunk_rest.call(null, seq__33659_33677__$1);
          var G__33680 = c__3501__auto___33678;
          var G__33681 = cljs.core.count.call(null, c__3501__auto___33678);
          var G__33682 = 0;
          seq__33659_33665 = G__33679;
          chunk__33660_33666 = G__33680;
          count__33661_33667 = G__33681;
          i__33662_33668 = G__33682;
          continue
        }else {
          var vec__33664_33683 = cljs.core.first.call(null, seq__33659_33677__$1);
          var name_33684 = cljs.core.nth.call(null, vec__33664_33683, 0, null);
          var value_33685 = cljs.core.nth.call(null, vec__33664_33683, 1, null);
          domina.set_attr_BANG_.call(null, content, name_33684, value_33685);
          var G__33686 = cljs.core.next.call(null, seq__33659_33677__$1);
          var G__33687 = null;
          var G__33688 = 0;
          var G__33689 = 0;
          seq__33659_33665 = G__33686;
          chunk__33660_33666 = G__33687;
          count__33661_33667 = G__33688;
          i__33662_33668 = G__33689;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__33694_33698 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__33695_33699 = null;
  var count__33696_33700 = 0;
  var i__33697_33701 = 0;
  while(true) {
    if(i__33697_33701 < count__33696_33700) {
      var node_33702 = cljs.core._nth.call(null, chunk__33695_33699, i__33697_33701);
      goog.dom.classes.add(node_33702, class$);
      var G__33703 = seq__33694_33698;
      var G__33704 = chunk__33695_33699;
      var G__33705 = count__33696_33700;
      var G__33706 = i__33697_33701 + 1;
      seq__33694_33698 = G__33703;
      chunk__33695_33699 = G__33704;
      count__33696_33700 = G__33705;
      i__33697_33701 = G__33706;
      continue
    }else {
      var temp__4092__auto___33707 = cljs.core.seq.call(null, seq__33694_33698);
      if(temp__4092__auto___33707) {
        var seq__33694_33708__$1 = temp__4092__auto___33707;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33694_33708__$1)) {
          var c__3501__auto___33709 = cljs.core.chunk_first.call(null, seq__33694_33708__$1);
          var G__33710 = cljs.core.chunk_rest.call(null, seq__33694_33708__$1);
          var G__33711 = c__3501__auto___33709;
          var G__33712 = cljs.core.count.call(null, c__3501__auto___33709);
          var G__33713 = 0;
          seq__33694_33698 = G__33710;
          chunk__33695_33699 = G__33711;
          count__33696_33700 = G__33712;
          i__33697_33701 = G__33713;
          continue
        }else {
          var node_33714 = cljs.core.first.call(null, seq__33694_33708__$1);
          goog.dom.classes.add(node_33714, class$);
          var G__33715 = cljs.core.next.call(null, seq__33694_33708__$1);
          var G__33716 = null;
          var G__33717 = 0;
          var G__33718 = 0;
          seq__33694_33698 = G__33715;
          chunk__33695_33699 = G__33716;
          count__33696_33700 = G__33717;
          i__33697_33701 = G__33718;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__33723_33727 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__33724_33728 = null;
  var count__33725_33729 = 0;
  var i__33726_33730 = 0;
  while(true) {
    if(i__33726_33730 < count__33725_33729) {
      var node_33731 = cljs.core._nth.call(null, chunk__33724_33728, i__33726_33730);
      goog.dom.classes.remove(node_33731, class$);
      var G__33732 = seq__33723_33727;
      var G__33733 = chunk__33724_33728;
      var G__33734 = count__33725_33729;
      var G__33735 = i__33726_33730 + 1;
      seq__33723_33727 = G__33732;
      chunk__33724_33728 = G__33733;
      count__33725_33729 = G__33734;
      i__33726_33730 = G__33735;
      continue
    }else {
      var temp__4092__auto___33736 = cljs.core.seq.call(null, seq__33723_33727);
      if(temp__4092__auto___33736) {
        var seq__33723_33737__$1 = temp__4092__auto___33736;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33723_33737__$1)) {
          var c__3501__auto___33738 = cljs.core.chunk_first.call(null, seq__33723_33737__$1);
          var G__33739 = cljs.core.chunk_rest.call(null, seq__33723_33737__$1);
          var G__33740 = c__3501__auto___33738;
          var G__33741 = cljs.core.count.call(null, c__3501__auto___33738);
          var G__33742 = 0;
          seq__33723_33727 = G__33739;
          chunk__33724_33728 = G__33740;
          count__33725_33729 = G__33741;
          i__33726_33730 = G__33742;
          continue
        }else {
          var node_33743 = cljs.core.first.call(null, seq__33723_33737__$1);
          goog.dom.classes.remove(node_33743, class$);
          var G__33744 = cljs.core.next.call(null, seq__33723_33737__$1);
          var G__33745 = null;
          var G__33746 = 0;
          var G__33747 = 0;
          seq__33723_33727 = G__33744;
          chunk__33724_33728 = G__33745;
          count__33725_33729 = G__33746;
          i__33726_33730 = G__33747;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_33756__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__33752_33757 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__33753_33758 = null;
  var count__33754_33759 = 0;
  var i__33755_33760 = 0;
  while(true) {
    if(i__33755_33760 < count__33754_33759) {
      var node_33761 = cljs.core._nth.call(null, chunk__33753_33758, i__33755_33760);
      goog.dom.classes.set(node_33761, classes_33756__$1);
      var G__33762 = seq__33752_33757;
      var G__33763 = chunk__33753_33758;
      var G__33764 = count__33754_33759;
      var G__33765 = i__33755_33760 + 1;
      seq__33752_33757 = G__33762;
      chunk__33753_33758 = G__33763;
      count__33754_33759 = G__33764;
      i__33755_33760 = G__33765;
      continue
    }else {
      var temp__4092__auto___33766 = cljs.core.seq.call(null, seq__33752_33757);
      if(temp__4092__auto___33766) {
        var seq__33752_33767__$1 = temp__4092__auto___33766;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33752_33767__$1)) {
          var c__3501__auto___33768 = cljs.core.chunk_first.call(null, seq__33752_33767__$1);
          var G__33769 = cljs.core.chunk_rest.call(null, seq__33752_33767__$1);
          var G__33770 = c__3501__auto___33768;
          var G__33771 = cljs.core.count.call(null, c__3501__auto___33768);
          var G__33772 = 0;
          seq__33752_33757 = G__33769;
          chunk__33753_33758 = G__33770;
          count__33754_33759 = G__33771;
          i__33755_33760 = G__33772;
          continue
        }else {
          var node_33773 = cljs.core.first.call(null, seq__33752_33767__$1);
          goog.dom.classes.set(node_33773, classes_33756__$1);
          var G__33774 = cljs.core.next.call(null, seq__33752_33767__$1);
          var G__33775 = null;
          var G__33776 = 0;
          var G__33777 = 0;
          seq__33752_33757 = G__33774;
          chunk__33753_33758 = G__33775;
          count__33754_33759 = G__33776;
          i__33755_33760 = G__33777;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__33782_33786 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__33783_33787 = null;
  var count__33784_33788 = 0;
  var i__33785_33789 = 0;
  while(true) {
    if(i__33785_33789 < count__33784_33788) {
      var node_33790 = cljs.core._nth.call(null, chunk__33783_33787, i__33785_33789);
      goog.dom.setTextContent(node_33790, value);
      var G__33791 = seq__33782_33786;
      var G__33792 = chunk__33783_33787;
      var G__33793 = count__33784_33788;
      var G__33794 = i__33785_33789 + 1;
      seq__33782_33786 = G__33791;
      chunk__33783_33787 = G__33792;
      count__33784_33788 = G__33793;
      i__33785_33789 = G__33794;
      continue
    }else {
      var temp__4092__auto___33795 = cljs.core.seq.call(null, seq__33782_33786);
      if(temp__4092__auto___33795) {
        var seq__33782_33796__$1 = temp__4092__auto___33795;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33782_33796__$1)) {
          var c__3501__auto___33797 = cljs.core.chunk_first.call(null, seq__33782_33796__$1);
          var G__33798 = cljs.core.chunk_rest.call(null, seq__33782_33796__$1);
          var G__33799 = c__3501__auto___33797;
          var G__33800 = cljs.core.count.call(null, c__3501__auto___33797);
          var G__33801 = 0;
          seq__33782_33786 = G__33798;
          chunk__33783_33787 = G__33799;
          count__33784_33788 = G__33800;
          i__33785_33789 = G__33801;
          continue
        }else {
          var node_33802 = cljs.core.first.call(null, seq__33782_33796__$1);
          goog.dom.setTextContent(node_33802, value);
          var G__33803 = cljs.core.next.call(null, seq__33782_33796__$1);
          var G__33804 = null;
          var G__33805 = 0;
          var G__33806 = 0;
          seq__33782_33786 = G__33803;
          chunk__33783_33787 = G__33804;
          count__33784_33788 = G__33805;
          i__33785_33789 = G__33806;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__33811_33815 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__33812_33816 = null;
  var count__33813_33817 = 0;
  var i__33814_33818 = 0;
  while(true) {
    if(i__33814_33818 < count__33813_33817) {
      var node_33819 = cljs.core._nth.call(null, chunk__33812_33816, i__33814_33818);
      goog.dom.forms.setValue(node_33819, value);
      var G__33820 = seq__33811_33815;
      var G__33821 = chunk__33812_33816;
      var G__33822 = count__33813_33817;
      var G__33823 = i__33814_33818 + 1;
      seq__33811_33815 = G__33820;
      chunk__33812_33816 = G__33821;
      count__33813_33817 = G__33822;
      i__33814_33818 = G__33823;
      continue
    }else {
      var temp__4092__auto___33824 = cljs.core.seq.call(null, seq__33811_33815);
      if(temp__4092__auto___33824) {
        var seq__33811_33825__$1 = temp__4092__auto___33824;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33811_33825__$1)) {
          var c__3501__auto___33826 = cljs.core.chunk_first.call(null, seq__33811_33825__$1);
          var G__33827 = cljs.core.chunk_rest.call(null, seq__33811_33825__$1);
          var G__33828 = c__3501__auto___33826;
          var G__33829 = cljs.core.count.call(null, c__3501__auto___33826);
          var G__33830 = 0;
          seq__33811_33815 = G__33827;
          chunk__33812_33816 = G__33828;
          count__33813_33817 = G__33829;
          i__33814_33818 = G__33830;
          continue
        }else {
          var node_33831 = cljs.core.first.call(null, seq__33811_33825__$1);
          goog.dom.forms.setValue(node_33831, value);
          var G__33832 = cljs.core.next.call(null, seq__33811_33825__$1);
          var G__33833 = null;
          var G__33834 = 0;
          var G__33835 = 0;
          seq__33811_33815 = G__33832;
          chunk__33812_33816 = G__33833;
          count__33813_33817 = G__33834;
          i__33814_33818 = G__33835;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = allows_inner_html_QMARK_;
    if(and__3941__auto__) {
      var and__3941__auto____$1 = function() {
        var or__3943__auto__ = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_)
        }
      }();
      if(cljs.core.truth_(and__3941__auto____$1)) {
        return!special_tag_QMARK_
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    var value_33846 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__33842_33847 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__33843_33848 = null;
      var count__33844_33849 = 0;
      var i__33845_33850 = 0;
      while(true) {
        if(i__33845_33850 < count__33844_33849) {
          var node_33851 = cljs.core._nth.call(null, chunk__33843_33848, i__33845_33850);
          goog.events.removeAll(node_33851);
          node_33851.innerHTML = value_33846;
          var G__33852 = seq__33842_33847;
          var G__33853 = chunk__33843_33848;
          var G__33854 = count__33844_33849;
          var G__33855 = i__33845_33850 + 1;
          seq__33842_33847 = G__33852;
          chunk__33843_33848 = G__33853;
          count__33844_33849 = G__33854;
          i__33845_33850 = G__33855;
          continue
        }else {
          var temp__4092__auto___33856 = cljs.core.seq.call(null, seq__33842_33847);
          if(temp__4092__auto___33856) {
            var seq__33842_33857__$1 = temp__4092__auto___33856;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33842_33857__$1)) {
              var c__3501__auto___33858 = cljs.core.chunk_first.call(null, seq__33842_33857__$1);
              var G__33859 = cljs.core.chunk_rest.call(null, seq__33842_33857__$1);
              var G__33860 = c__3501__auto___33858;
              var G__33861 = cljs.core.count.call(null, c__3501__auto___33858);
              var G__33862 = 0;
              seq__33842_33847 = G__33859;
              chunk__33843_33848 = G__33860;
              count__33844_33849 = G__33861;
              i__33845_33850 = G__33862;
              continue
            }else {
              var node_33863 = cljs.core.first.call(null, seq__33842_33857__$1);
              goog.events.removeAll(node_33863);
              node_33863.innerHTML = value_33846;
              var G__33864 = cljs.core.next.call(null, seq__33842_33857__$1);
              var G__33865 = null;
              var G__33866 = 0;
              var G__33867 = 0;
              seq__33842_33847 = G__33864;
              chunk__33843_33848 = G__33865;
              count__33844_33849 = G__33866;
              i__33845_33850 = G__33867;
              continue
            }
          }else {
          }
        }
        break
      }
    }catch(e33841) {
      if(e33841 instanceof Error) {
        var e_33868 = e33841;
        domina.replace_children_BANG_.call(null, content, value_33846)
      }else {
        if("\ufdd0:else") {
          throw e33841;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = bubble;
      if(cljs.core.truth_(and__3941__auto__)) {
        return value == null
      }else {
        return and__3941__auto__
      }
    }())) {
      var temp__4092__auto__ = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__4092__auto__)) {
        var parent = temp__4092__auto__;
        return get_data.call(null, parent, key, true)
      }else {
        return null
      }
    }else {
      return value
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3943__auto__ = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.core.PersistentArrayMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__33875_33879 = cljs.core.seq.call(null, children);
    var chunk__33876_33880 = null;
    var count__33877_33881 = 0;
    var i__33878_33882 = 0;
    while(true) {
      if(i__33878_33882 < count__33877_33881) {
        var child_33883 = cljs.core._nth.call(null, chunk__33876_33880, i__33878_33882);
        frag.appendChild(child_33883);
        var G__33884 = seq__33875_33879;
        var G__33885 = chunk__33876_33880;
        var G__33886 = count__33877_33881;
        var G__33887 = i__33878_33882 + 1;
        seq__33875_33879 = G__33884;
        chunk__33876_33880 = G__33885;
        count__33877_33881 = G__33886;
        i__33878_33882 = G__33887;
        continue
      }else {
        var temp__4092__auto___33888 = cljs.core.seq.call(null, seq__33875_33879);
        if(temp__4092__auto___33888) {
          var seq__33875_33889__$1 = temp__4092__auto___33888;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__33875_33889__$1)) {
            var c__3501__auto___33890 = cljs.core.chunk_first.call(null, seq__33875_33889__$1);
            var G__33891 = cljs.core.chunk_rest.call(null, seq__33875_33889__$1);
            var G__33892 = c__3501__auto___33890;
            var G__33893 = cljs.core.count.call(null, c__3501__auto___33890);
            var G__33894 = 0;
            seq__33875_33879 = G__33891;
            chunk__33876_33880 = G__33892;
            count__33877_33881 = G__33893;
            i__33878_33882 = G__33894;
            continue
          }else {
            var child_33895 = cljs.core.first.call(null, seq__33875_33889__$1);
            frag.appendChild(child_33895);
            var G__33896 = cljs.core.next.call(null, seq__33875_33889__$1);
            var G__33897 = null;
            var G__33898 = 0;
            var G__33899 = 0;
            seq__33875_33879 = G__33896;
            chunk__33876_33880 = G__33897;
            count__33877_33881 = G__33898;
            i__33878_33882 = G__33899;
            continue
          }
        }else {
        }
      }
      break
    }
    return frag
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true)
    }
  }(parents, children, first_child)));
  if(cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__33869_SHARP_, p2__33870_SHARP_) {
      return f.call(null, p1__33869_SHARP_, p2__33870_SHARP_)
    }, cljs.core.rest.call(null, parents), other_children))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3941__auto__ = obj;
  if(cljs.core.truth_(and__3941__auto__)) {
    return obj.length
  }else {
    return and__3941__auto__
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__33901 = list_thing;
      if(G__33901) {
        if(function() {
          var or__3943__auto__ = G__33901.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__33901.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__33901.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__33901)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__33901)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0:default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__33902 = content;
      if(G__33902) {
        if(function() {
          var or__3943__auto__ = G__33902.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__33902.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__33902.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__33902)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__33902)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0:default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__33903 = content;
      if(G__33903) {
        if(function() {
          var or__3943__auto__ = G__33903.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__33903.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__33903.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__33903)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__33903)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0:default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = node.selectSingleNode;
    if(cljs.core.truth_(and__3941__auto__)) {
      return doc.setProperty
    }else {
      return and__3941__auto__
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path)
  }else {
    if(cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path)
    }else {
      if("\ufdd0:else") {
        throw new Error("Could not find XPath support in this browser.");
      }else {
        return null
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1)
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue
  })
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1)
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while(true) {
      if(i < num_results) {
        var G__33913 = i + 1;
        var G__33914 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__33913;
        acc = G__33914;
        continue
      }else {
        return acc
      }
      break
    }
  })
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr)
  };
  var xpath__2 = function(base, expr) {
    if(typeof domina.xpath.t33918 !== "undefined") {
    }else {
      goog.provide("domina.xpath.t33918");
      domina.xpath.t33918 = function(expr, base, xpath, meta33919) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta33919 = meta33919;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.xpath.t33918.cljs$lang$type = true;
      domina.xpath.t33918.cljs$lang$ctorStr = "domina.xpath/t33918";
      domina.xpath.t33918.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "domina.xpath/t33918")
      };
      domina.xpath.t33918.prototype.domina$DomContent$ = true;
      domina.xpath.t33918.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base))
      };
      domina.xpath.t33918.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))))
      };
      domina.xpath.t33918.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33920) {
        var self__ = this;
        return self__.meta33919
      };
      domina.xpath.t33918.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33920, meta33919__$1) {
        var self__ = this;
        return new domina.xpath.t33918(self__.expr, self__.base, self__.xpath, meta33919__$1)
      };
      domina.xpath.__GT_t33918 = function __GT_t33918(expr__$1, base__$1, xpath__$1, meta33919) {
        return new domina.xpath.t33918(expr__$1, base__$1, xpath__$1, meta33919)
      }
    }
    return new domina.xpath.t33918(expr, base, xpath, null)
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath
}();
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(typeof domina.css.t33476 !== "undefined") {
    }else {
      goog.provide("domina.css.t33476");
      domina.css.t33476 = function(expr, base, sel, meta33477) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta33477 = meta33477;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t33476.cljs$lang$type = true;
      domina.css.t33476.cljs$lang$ctorStr = "domina.css/t33476";
      domina.css.t33476.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "domina.css/t33476")
      };
      domina.css.t33476.prototype.domina$DomContent$ = true;
      domina.css.t33476.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.mapcat.call(null, function(p1__33471_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__33471_SHARP_))
        }, domina.nodes.call(null, self__.base))
      };
      domina.css.t33476.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__33472_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__33472_SHARP_))
        }, domina.nodes.call(null, self__.base))))
      };
      domina.css.t33476.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33478) {
        var self__ = this;
        return self__.meta33477
      };
      domina.css.t33476.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33478, meta33477__$1) {
        var self__ = this;
        return new domina.css.t33476(self__.expr, self__.base, self__.sel, meta33477__$1)
      };
      domina.css.__GT_t33476 = function __GT_t33476(expr__$1, base__$1, sel__$1, meta33477) {
        return new domina.css.t33476(expr__$1, base__$1, sel__$1, meta33477)
      }
    }
    return new domina.css.t33476(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel
}();
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.xpath");
goog.require("domina.css");
enfocus.core.ISelector = {};
enfocus.core.select = function() {
  var select = null;
  var select__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$1(this$)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var select__2 = function(this$, root) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$2(this$, root)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$, root)
    }
  };
  var select__3 = function(this$, root, id_mask) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$3(this$, root, id_mask)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$, root, id_mask)
    }
  };
  select = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, this$);
      case 2:
        return select__2.call(this, this$, root);
      case 3:
        return select__3.call(this, this$, root, id_mask)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select.cljs$core$IFn$_invoke$arity$1 = select__1;
  select.cljs$core$IFn$_invoke$arity$2 = select__2;
  select.cljs$core$IFn$_invoke$arity$3 = select__3;
  return select
}();
enfocus.core.ITransform = {};
enfocus.core.apply_transform = function() {
  var apply_transform = null;
  var apply_transform__2 = function(this$, nodes) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$2(this$, nodes)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.apply_transform[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.apply_transform["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes)
    }
  };
  var apply_transform__3 = function(this$, nodes, callback) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$3(this$, nodes, callback)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.apply_transform[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.apply_transform["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes, callback)
    }
  };
  apply_transform = function(this$, nodes, callback) {
    switch(arguments.length) {
      case 2:
        return apply_transform__2.call(this, this$, nodes);
      case 3:
        return apply_transform__3.call(this, this$, nodes, callback)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply_transform.cljs$core$IFn$_invoke$arity$2 = apply_transform__2;
  apply_transform.cljs$core$IFn$_invoke$arity$3 = apply_transform__3;
  return apply_transform
}();
enfocus.core.debug = true;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = enfocus.core.debug;
    if(cljs.core.truth_(and__3941__auto__)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3941__auto__
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return tst instanceof NodeList
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if(cljs.core._EQ_.call(null, nl, window)) {
    return cljs.core.PersistentVector.fromArray([nl], true)
  }else {
    return domina.nodes.call(null, nl)
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__32964_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__32964_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__32964_SHARP_)], true)
    }else {
      if("\ufdd0:else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__32964_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var seq__32971_32977 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  var chunk__32972_32978 = null;
  var count__32973_32979 = 0;
  var i__32974_32980 = 0;
  while(true) {
    if(i__32974_32980 < count__32973_32979) {
      var vec__32975_32981 = cljs.core._nth.call(null, chunk__32972_32978, i__32974_32980);
      var attr_32982 = cljs.core.nth.call(null, vec__32975_32981, 0, null);
      var value_32983 = cljs.core.nth.call(null, vec__32975_32981, 1, null);
      goog.style.setStyle(obj, cljs.core.name.call(null, attr_32982), value_32983);
      var G__32984 = seq__32971_32977;
      var G__32985 = chunk__32972_32978;
      var G__32986 = count__32973_32979;
      var G__32987 = i__32974_32980 + 1;
      seq__32971_32977 = G__32984;
      chunk__32972_32978 = G__32985;
      count__32973_32979 = G__32986;
      i__32974_32980 = G__32987;
      continue
    }else {
      var temp__4092__auto___32988 = cljs.core.seq.call(null, seq__32971_32977);
      if(temp__4092__auto___32988) {
        var seq__32971_32989__$1 = temp__4092__auto___32988;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__32971_32989__$1)) {
          var c__3501__auto___32990 = cljs.core.chunk_first.call(null, seq__32971_32989__$1);
          var G__32991 = cljs.core.chunk_rest.call(null, seq__32971_32989__$1);
          var G__32992 = c__3501__auto___32990;
          var G__32993 = cljs.core.count.call(null, c__3501__auto___32990);
          var G__32994 = 0;
          seq__32971_32977 = G__32991;
          chunk__32972_32978 = G__32992;
          count__32973_32979 = G__32993;
          i__32974_32980 = G__32994;
          continue
        }else {
          var vec__32976_32995 = cljs.core.first.call(null, seq__32971_32989__$1);
          var attr_32996 = cljs.core.nth.call(null, vec__32976_32995, 0, null);
          var value_32997 = cljs.core.nth.call(null, vec__32976_32995, 1, null);
          goog.style.setStyle(obj, cljs.core.name.call(null, attr_32996), value_32997);
          var G__32998 = cljs.core.next.call(null, seq__32971_32989__$1);
          var G__32999 = null;
          var G__33000 = 0;
          var G__33001 = 0;
          seq__32971_32977 = G__32998;
          chunk__32972_32978 = G__32999;
          count__32973_32979 = G__33000;
          i__32974_32980 = G__33001;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var seq__33006 = cljs.core.seq.call(null, values);
  var chunk__33007 = null;
  var count__33008 = 0;
  var i__33009 = 0;
  while(true) {
    if(i__33009 < count__33008) {
      var attr = cljs.core._nth.call(null, chunk__33007, i__33009);
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr))
      }
      var G__33010 = seq__33006;
      var G__33011 = chunk__33007;
      var G__33012 = count__33008;
      var G__33013 = i__33009 + 1;
      seq__33006 = G__33010;
      chunk__33007 = G__33011;
      count__33008 = G__33012;
      i__33009 = G__33013;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__33006);
      if(temp__4092__auto__) {
        var seq__33006__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33006__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33006__$1);
          var G__33014 = cljs.core.chunk_rest.call(null, seq__33006__$1);
          var G__33015 = c__3501__auto__;
          var G__33016 = cljs.core.count.call(null, c__3501__auto__);
          var G__33017 = 0;
          seq__33006 = G__33014;
          chunk__33007 = G__33015;
          count__33008 = G__33016;
          i__33009 = G__33017;
          continue
        }else {
          var attr = cljs.core.first.call(null, seq__33006__$1);
          if(cljs.core.truth_(goog.userAgent.IE)) {
            goog.style.setStyle(obj, cljs.core.name.call(null, attr), "")
          }else {
            obj.style.removeProperty(cljs.core.name.call(null, attr))
          }
          var G__33018 = cljs.core.next.call(null, seq__33006__$1);
          var G__33019 = null;
          var G__33020 = 0;
          var G__33021 = 0;
          seq__33006 = G__33018;
          chunk__33007 = G__33019;
          count__33008 = G__33020;
          i__33009 = G__33021;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var seq__33028_33034 = cljs.core.seq.call(null, ats);
        var chunk__33029_33035 = null;
        var count__33030_33036 = 0;
        var i__33031_33037 = 0;
        while(true) {
          if(i__33031_33037 < count__33030_33036) {
            var vec__33032_33038 = cljs.core._nth.call(null, chunk__33029_33035, i__33031_33037);
            var k_33039 = cljs.core.nth.call(null, vec__33032_33038, 0, null);
            var v_33040 = cljs.core.nth.call(null, vec__33032_33038, 1, null);
            add_map_attrs.call(null, elem, k_33039, v_33040);
            var G__33041 = seq__33028_33034;
            var G__33042 = chunk__33029_33035;
            var G__33043 = count__33030_33036;
            var G__33044 = i__33031_33037 + 1;
            seq__33028_33034 = G__33041;
            chunk__33029_33035 = G__33042;
            count__33030_33036 = G__33043;
            i__33031_33037 = G__33044;
            continue
          }else {
            var temp__4092__auto___33045 = cljs.core.seq.call(null, seq__33028_33034);
            if(temp__4092__auto___33045) {
              var seq__33028_33046__$1 = temp__4092__auto___33045;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__33028_33046__$1)) {
                var c__3501__auto___33047 = cljs.core.chunk_first.call(null, seq__33028_33046__$1);
                var G__33048 = cljs.core.chunk_rest.call(null, seq__33028_33046__$1);
                var G__33049 = c__3501__auto___33047;
                var G__33050 = cljs.core.count.call(null, c__3501__auto___33047);
                var G__33051 = 0;
                seq__33028_33034 = G__33048;
                chunk__33029_33035 = G__33049;
                count__33030_33036 = G__33050;
                i__33031_33037 = G__33051;
                continue
              }else {
                var vec__33033_33052 = cljs.core.first.call(null, seq__33028_33046__$1);
                var k_33053 = cljs.core.nth.call(null, vec__33033_33052, 0, null);
                var v_33054 = cljs.core.nth.call(null, vec__33033_33052, 1, null);
                add_map_attrs.call(null, elem, k_33053, v_33054);
                var G__33055 = cljs.core.next.call(null, seq__33028_33046__$1);
                var G__33056 = null;
                var G__33057 = 0;
                var G__33058 = 0;
                seq__33028_33034 = G__33055;
                chunk__33029_33035 = G__33056;
                count__33030_33036 = G__33057;
                i__33031_33037 = G__33058;
                continue
              }
            }else {
            }
          }
          break
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_map_attrs.cljs$core$IFn$_invoke$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$core$IFn$_invoke$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.hide_style = cljs.core.PersistentArrayMap.fromArray(["style", "display: none; width: 0px; height: 0px"], true).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core._EQ_.call(null, child.nodeType, 11)) {
    goog.dom.appendChild(div, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var seq__33063_33067 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    var chunk__33064_33068 = null;
    var count__33065_33069 = 0;
    var i__33066_33070 = 0;
    while(true) {
      if(i__33066_33070 < count__33065_33069) {
        var node_33071 = cljs.core._nth.call(null, chunk__33064_33068, i__33066_33070);
        goog.dom.appendChild(div, node_33071);
        var G__33072 = seq__33063_33067;
        var G__33073 = chunk__33064_33068;
        var G__33074 = count__33065_33069;
        var G__33075 = i__33066_33070 + 1;
        seq__33063_33067 = G__33072;
        chunk__33064_33068 = G__33073;
        count__33065_33069 = G__33074;
        i__33066_33070 = G__33075;
        continue
      }else {
        var temp__4092__auto___33076 = cljs.core.seq.call(null, seq__33063_33067);
        if(temp__4092__auto___33076) {
          var seq__33063_33077__$1 = temp__4092__auto___33076;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__33063_33077__$1)) {
            var c__3501__auto___33078 = cljs.core.chunk_first.call(null, seq__33063_33077__$1);
            var G__33079 = cljs.core.chunk_rest.call(null, seq__33063_33077__$1);
            var G__33080 = c__3501__auto___33078;
            var G__33081 = cljs.core.count.call(null, c__3501__auto___33078);
            var G__33082 = 0;
            seq__33063_33067 = G__33079;
            chunk__33064_33068 = G__33080;
            count__33065_33069 = G__33081;
            i__33066_33070 = G__33082;
            continue
          }else {
            var node_33083 = cljs.core.first.call(null, seq__33063_33077__$1);
            goog.dom.appendChild(div, node_33083);
            var G__33084 = cljs.core.next.call(null, seq__33063_33077__$1);
            var G__33085 = null;
            var G__33086 = 0;
            var G__33087 = 0;
            seq__33063_33067 = G__33084;
            chunk__33064_33068 = G__33085;
            count__33065_33069 = G__33086;
            i__33066_33070 = G__33087;
            continue
          }
        }else {
        }
      }
      break
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().documentElement, div);
  return div
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child = div.childNodes;
  var frag = document.createDocumentFragment();
  goog.dom.append(frag, child);
  goog.dom.removeNode(div);
  return frag
};
enfocus.core.replace_ids = function() {
  var replace_ids = null;
  var replace_ids__1 = function(text) {
    return replace_ids.call(null, [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join(""), text)
  };
  var replace_ids__2 = function(id_mask, text) {
    var re = new RegExp("(\x3c.*?\\sid\x3d['\"])(.*?)(['\"].*?\x3e)", "g");
    return cljs.core.PersistentVector.fromArray([id_mask, text.replace(re, function(a, b, c, d) {
      return[cljs.core.str(b), cljs.core.str(id_mask), cljs.core.str(c), cljs.core.str(d)].join("")
    })], true)
  };
  replace_ids = function(id_mask, text) {
    switch(arguments.length) {
      case 1:
        return replace_ids__1.call(this, id_mask);
      case 2:
        return replace_ids__2.call(this, id_mask, text)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace_ids.cljs$core$IFn$_invoke$arity$1 = replace_ids__1;
  replace_ids.cljs$core$IFn$_invoke$arity$2 = replace_ids__2;
  return replace_ids
}();
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col = enfocus.core.nodes__GT_coll.call(null, id_nodes);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__33088_SHARP_) {
    var id = p1__33088_SHARP_.getAttribute("id");
    var rid = id.replace(sym, "");
    return p1__33088_SHARP_.setAttribute("id", rid)
  }, nod_col))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key, id_mask) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, dom_key) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req = new goog.net.XhrIo;
    var callback = function(req) {
      return function(req__$1) {
        var text = req__$1.getResponseText();
        var vec__33090 = enfocus.core.replace_ids.call(null, id_mask, text);
        var sym = cljs.core.nth.call(null, vec__33090, 0, null);
        var txt = cljs.core.nth.call(null, vec__33090, 1, null);
        return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, cljs.core.PersistentVector.fromArray([sym, txt], true))
      }
    }(req);
    goog.events.listen(req, goog.net.EventType.COMPLETE, function() {
      callback.call(null, req);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.html_to_dom = function html_to_dom(html) {
  var dfa = enfocus.core.nodes__GT_coll.call(null, domina.html_to_dom.call(null, html));
  var frag = document.createDocumentFragment();
  enfocus.core.log_debug.call(null, cljs.core.count.call(null, dfa));
  var seq__33095_33099 = cljs.core.seq.call(null, dfa);
  var chunk__33096_33100 = null;
  var count__33097_33101 = 0;
  var i__33098_33102 = 0;
  while(true) {
    if(i__33098_33102 < count__33097_33101) {
      var df_33103 = cljs.core._nth.call(null, chunk__33096_33100, i__33098_33102);
      goog.dom.append(frag, df_33103);
      var G__33104 = seq__33095_33099;
      var G__33105 = chunk__33096_33100;
      var G__33106 = count__33097_33101;
      var G__33107 = i__33098_33102 + 1;
      seq__33095_33099 = G__33104;
      chunk__33096_33100 = G__33105;
      count__33097_33101 = G__33106;
      i__33098_33102 = G__33107;
      continue
    }else {
      var temp__4092__auto___33108 = cljs.core.seq.call(null, seq__33095_33099);
      if(temp__4092__auto___33108) {
        var seq__33095_33109__$1 = temp__4092__auto___33108;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__33095_33109__$1)) {
          var c__3501__auto___33110 = cljs.core.chunk_first.call(null, seq__33095_33109__$1);
          var G__33111 = cljs.core.chunk_rest.call(null, seq__33095_33109__$1);
          var G__33112 = c__3501__auto___33110;
          var G__33113 = cljs.core.count.call(null, c__3501__auto___33110);
          var G__33114 = 0;
          seq__33095_33099 = G__33111;
          chunk__33096_33100 = G__33112;
          count__33097_33101 = G__33113;
          i__33098_33102 = G__33114;
          continue
        }else {
          var df_33115 = cljs.core.first.call(null, seq__33095_33109__$1);
          goog.dom.append(frag, df_33115);
          var G__33116 = cljs.core.next.call(null, seq__33095_33109__$1);
          var G__33117 = null;
          var G__33118 = 0;
          var G__33119 = 0;
          seq__33095_33099 = G__33116;
          chunk__33096_33100 = G__33117;
          count__33097_33101 = G__33118;
          i__33098_33102 = G__33119;
          continue
        }
      }else {
      }
    }
    break
  }
  return frag
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, nod))], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str = enfocus.core.create_sel_str.call(null, sel);
  var cache = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""));
  if(cljs.core.truth_(cache)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, cache))], true)
  }else {
    var vec__33122 = enfocus.core.get_cached_dom.call(null, uri);
    var sym = cljs.core.nth.call(null, vec__33122, 0, null);
    var tdom = cljs.core.nth.call(null, vec__33122, 1, null);
    var dom = enfocus.core.create_hidden_dom.call(null, tdom);
    var tsnip = domina.nodes.call(null, enfocus.core.css_select.call(null, sym, dom, sel));
    var html_snip = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(vec__33122, sym, tdom, dom, tsnip) {
      return function(p1__33120_SHARP_) {
        return p1__33120_SHARP_.outerHTML
      }
    }(vec__33122, sym, tdom, dom, tsnip), tsnip));
    enfocus.core.remove_node_return_child.call(null, dom);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""), cljs.core.PersistentVector.fromArray([sym, html_snip], true));
    return cljs.core.PersistentVector.fromArray([sym, enfocus.core.html_to_dom.call(null, html_snip)], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  var trans = function trans(pnodes) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result = cljs.core.map.call(null, func, pnod_col);
    if(cljs.core.count.call(null, result) <= 1) {
      return cljs.core.first.call(null, result)
    }else {
      return result
    }
  };
  if(typeof enfocus.core.t33126 !== "undefined") {
  }else {
    goog.provide("enfocus.core.t33126");
    enfocus.core.t33126 = function(trans, func, extr_multi_node, meta33127) {
      this.trans = trans;
      this.func = func;
      this.extr_multi_node = extr_multi_node;
      this.meta33127 = meta33127;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    enfocus.core.t33126.cljs$lang$type = true;
    enfocus.core.t33126.cljs$lang$ctorStr = "enfocus.core/t33126";
    enfocus.core.t33126.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t33126")
    };
    enfocus.core.t33126.prototype.enfocus$core$ITransform$ = true;
    enfocus.core.t33126.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
      var self__ = this;
      return self__.trans.call(null, nodes, null)
    };
    enfocus.core.t33126.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
      var self__ = this;
      return self__.trans.call(null, nodes, chain)
    };
    enfocus.core.t33126.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33128) {
      var self__ = this;
      return self__.meta33127
    };
    enfocus.core.t33126.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33128, meta33127__$1) {
      var self__ = this;
      return new enfocus.core.t33126(self__.trans, self__.func, self__.extr_multi_node, meta33127__$1)
    };
    enfocus.core.__GT_t33126 = function __GT_t33126(trans__$1, func__$1, extr_multi_node__$1, meta33127) {
      return new enfocus.core.t33126(trans__$1, func__$1, extr_multi_node__$1, meta33127)
    }
  }
  return new enfocus.core.t33126(trans, func, extr_multi_node, null)
};
enfocus.core.multi_node_chain = function() {
  var multi_node_chain = null;
  var multi_node_chain__1 = function(func) {
    var trans = function(nodes, chain) {
      var val = func.call(null, nodes);
      if(cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.call(null, chain, nodes)
      }else {
        return val
      }
    };
    if(typeof enfocus.core.t33136 !== "undefined") {
    }else {
      goog.provide("enfocus.core.t33136");
      enfocus.core.t33136 = function(trans, func, multi_node_chain, meta33137) {
        this.trans = trans;
        this.func = func;
        this.multi_node_chain = multi_node_chain;
        this.meta33137 = meta33137;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      enfocus.core.t33136.cljs$lang$type = true;
      enfocus.core.t33136.cljs$lang$ctorStr = "enfocus.core/t33136";
      enfocus.core.t33136.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t33136")
      };
      enfocus.core.t33136.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t33136.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
        var self__ = this;
        return self__.trans.call(null, nodes, null)
      };
      enfocus.core.t33136.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
        var self__ = this;
        return self__.trans.call(null, nodes, chain)
      };
      enfocus.core.t33136.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33138) {
        var self__ = this;
        return self__.meta33137
      };
      enfocus.core.t33136.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33138, meta33137__$1) {
        var self__ = this;
        return new enfocus.core.t33136(self__.trans, self__.func, self__.multi_node_chain, meta33137__$1)
      };
      enfocus.core.__GT_t33136 = function __GT_t33136(trans__$1, func__$1, multi_node_chain__$1, meta33137) {
        return new enfocus.core.t33136(trans__$1, func__$1, multi_node_chain__$1, meta33137)
      }
    }
    return new enfocus.core.t33136(trans, func, multi_node_chain, null)
  };
  var multi_node_chain__2 = function(values, func) {
    var trans = function(nodes, chain) {
      var vnodes = cljs.core.mapcat.call(null, function(p1__33129_SHARP_) {
        return domina.nodes.call(null, p1__33129_SHARP_)
      }, values);
      var val = func.call(null, nodes, vnodes);
      if(cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.call(null, chain, nodes)
      }else {
        return val
      }
    };
    if(typeof enfocus.core.t33139 !== "undefined") {
    }else {
      goog.provide("enfocus.core.t33139");
      enfocus.core.t33139 = function(trans, func, values, multi_node_chain, meta33140) {
        this.trans = trans;
        this.func = func;
        this.values = values;
        this.multi_node_chain = multi_node_chain;
        this.meta33140 = meta33140;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      enfocus.core.t33139.cljs$lang$type = true;
      enfocus.core.t33139.cljs$lang$ctorStr = "enfocus.core/t33139";
      enfocus.core.t33139.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t33139")
      };
      enfocus.core.t33139.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t33139.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
        var self__ = this;
        return self__.trans.call(null, nodes, null)
      };
      enfocus.core.t33139.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
        var self__ = this;
        return self__.trans.call(null, nodes, chain)
      };
      enfocus.core.t33139.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33141) {
        var self__ = this;
        return self__.meta33140
      };
      enfocus.core.t33139.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33141, meta33140__$1) {
        var self__ = this;
        return new enfocus.core.t33139(self__.trans, self__.func, self__.values, self__.multi_node_chain, meta33140__$1)
      };
      enfocus.core.__GT_t33139 = function __GT_t33139(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta33140) {
        return new enfocus.core.t33139(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta33140)
      }
    }
    return new enfocus.core.t33139(trans, func, values, multi_node_chain, null)
  };
  multi_node_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return multi_node_chain__1.call(this, values);
      case 2:
        return multi_node_chain__2.call(this, values, func)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_node_chain.cljs$core$IFn$_invoke$arity$1 = multi_node_chain__1;
  multi_node_chain.cljs$core$IFn$_invoke$arity$2 = multi_node_chain__2;
  return multi_node_chain
}();
enfocus.core.content = function() {
  var content__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__33142_SHARP_, p2__33143_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__33142_SHARP_);
      return domina.append_BANG_.call(null, p1__33142_SHARP_, p2__33143_SHARP_)
    })
  };
  var content = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return content__delegate.call(this, values)
  };
  content.cljs$lang$maxFixedArity = 0;
  content.cljs$lang$applyTo = function(arglist__33144) {
    var values = cljs.core.seq(arglist__33144);
    return content__delegate(values)
  };
  content.cljs$core$IFn$_invoke$arity$variadic = content__delegate;
  return content
}();
enfocus.core.html_content = function html_content(txt) {
  return enfocus.core.multi_node_chain.call(null, function(p1__33145_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__33145_SHARP_, txt)
  })
};
enfocus.core.set_attr = function() {
  var set_attr__delegate = function(values) {
    var pairs = cljs.core.partition.call(null, 2, values);
    return enfocus.core.multi_node_chain.call(null, function(p1__33146_SHARP_) {
      var seq__33153 = cljs.core.seq.call(null, pairs);
      var chunk__33154 = null;
      var count__33155 = 0;
      var i__33156 = 0;
      while(true) {
        if(i__33156 < count__33155) {
          var vec__33157 = cljs.core._nth.call(null, chunk__33154, i__33156);
          var name = cljs.core.nth.call(null, vec__33157, 0, null);
          var value = cljs.core.nth.call(null, vec__33157, 1, null);
          domina.set_attr_BANG_.call(null, p1__33146_SHARP_, name, value);
          var G__33159 = seq__33153;
          var G__33160 = chunk__33154;
          var G__33161 = count__33155;
          var G__33162 = i__33156 + 1;
          seq__33153 = G__33159;
          chunk__33154 = G__33160;
          count__33155 = G__33161;
          i__33156 = G__33162;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33153);
          if(temp__4092__auto__) {
            var seq__33153__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33153__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33153__$1);
              var G__33163 = cljs.core.chunk_rest.call(null, seq__33153__$1);
              var G__33164 = c__3501__auto__;
              var G__33165 = cljs.core.count.call(null, c__3501__auto__);
              var G__33166 = 0;
              seq__33153 = G__33163;
              chunk__33154 = G__33164;
              count__33155 = G__33165;
              i__33156 = G__33166;
              continue
            }else {
              var vec__33158 = cljs.core.first.call(null, seq__33153__$1);
              var name = cljs.core.nth.call(null, vec__33158, 0, null);
              var value = cljs.core.nth.call(null, vec__33158, 1, null);
              domina.set_attr_BANG_.call(null, p1__33146_SHARP_, name, value);
              var G__33167 = cljs.core.next.call(null, seq__33153__$1);
              var G__33168 = null;
              var G__33169 = 0;
              var G__33170 = 0;
              seq__33153 = G__33167;
              chunk__33154 = G__33168;
              count__33155 = G__33169;
              i__33156 = G__33170;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var set_attr = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_attr__delegate.call(this, values)
  };
  set_attr.cljs$lang$maxFixedArity = 0;
  set_attr.cljs$lang$applyTo = function(arglist__33171) {
    var values = cljs.core.seq(arglist__33171);
    return set_attr__delegate(values)
  };
  set_attr.cljs$core$IFn$_invoke$arity$variadic = set_attr__delegate;
  return set_attr
}();
enfocus.core.remove_attr = function() {
  var remove_attr__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__33172_SHARP_) {
      var seq__33177 = cljs.core.seq.call(null, values);
      var chunk__33178 = null;
      var count__33179 = 0;
      var i__33180 = 0;
      while(true) {
        if(i__33180 < count__33179) {
          var name = cljs.core._nth.call(null, chunk__33178, i__33180);
          domina.remove_attr_BANG_.call(null, p1__33172_SHARP_, name);
          var G__33181 = seq__33177;
          var G__33182 = chunk__33178;
          var G__33183 = count__33179;
          var G__33184 = i__33180 + 1;
          seq__33177 = G__33181;
          chunk__33178 = G__33182;
          count__33179 = G__33183;
          i__33180 = G__33184;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33177);
          if(temp__4092__auto__) {
            var seq__33177__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33177__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33177__$1);
              var G__33185 = cljs.core.chunk_rest.call(null, seq__33177__$1);
              var G__33186 = c__3501__auto__;
              var G__33187 = cljs.core.count.call(null, c__3501__auto__);
              var G__33188 = 0;
              seq__33177 = G__33185;
              chunk__33178 = G__33186;
              count__33179 = G__33187;
              i__33180 = G__33188;
              continue
            }else {
              var name = cljs.core.first.call(null, seq__33177__$1);
              domina.remove_attr_BANG_.call(null, p1__33172_SHARP_, name);
              var G__33189 = cljs.core.next.call(null, seq__33177__$1);
              var G__33190 = null;
              var G__33191 = 0;
              var G__33192 = 0;
              seq__33177 = G__33189;
              chunk__33178 = G__33190;
              count__33179 = G__33191;
              i__33180 = G__33192;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var remove_attr = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_attr__delegate.call(this, values)
  };
  remove_attr.cljs$lang$maxFixedArity = 0;
  remove_attr.cljs$lang$applyTo = function(arglist__33193) {
    var values = cljs.core.seq(arglist__33193);
    return remove_attr__delegate(values)
  };
  remove_attr.cljs$core$IFn$_invoke$arity$variadic = remove_attr__delegate;
  return remove_attr
}();
enfocus.core.set_prop = function() {
  var set_prop__delegate = function(forms) {
    return function(node) {
      var h = cljs.core.mapcat.call(null, function(p__33196) {
        var vec__33197 = p__33196;
        var n = cljs.core.nth.call(null, vec__33197, 0, null);
        var v = cljs.core.nth.call(null, vec__33197, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n), v)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h))
    }
  };
  var set_prop = function(var_args) {
    var forms = null;
    if(arguments.length > 0) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_prop__delegate.call(this, forms)
  };
  set_prop.cljs$lang$maxFixedArity = 0;
  set_prop.cljs$lang$applyTo = function(arglist__33198) {
    var forms = cljs.core.seq(arglist__33198);
    return set_prop__delegate(forms)
  };
  set_prop.cljs$core$IFn$_invoke$arity$variadic = set_prop__delegate;
  return set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.add_class = function() {
  var add_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__33199_SHARP_) {
      var seq__33204 = cljs.core.seq.call(null, values);
      var chunk__33205 = null;
      var count__33206 = 0;
      var i__33207 = 0;
      while(true) {
        if(i__33207 < count__33206) {
          var val = cljs.core._nth.call(null, chunk__33205, i__33207);
          domina.add_class_BANG_.call(null, p1__33199_SHARP_, val);
          var G__33208 = seq__33204;
          var G__33209 = chunk__33205;
          var G__33210 = count__33206;
          var G__33211 = i__33207 + 1;
          seq__33204 = G__33208;
          chunk__33205 = G__33209;
          count__33206 = G__33210;
          i__33207 = G__33211;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33204);
          if(temp__4092__auto__) {
            var seq__33204__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33204__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33204__$1);
              var G__33212 = cljs.core.chunk_rest.call(null, seq__33204__$1);
              var G__33213 = c__3501__auto__;
              var G__33214 = cljs.core.count.call(null, c__3501__auto__);
              var G__33215 = 0;
              seq__33204 = G__33212;
              chunk__33205 = G__33213;
              count__33206 = G__33214;
              i__33207 = G__33215;
              continue
            }else {
              var val = cljs.core.first.call(null, seq__33204__$1);
              domina.add_class_BANG_.call(null, p1__33199_SHARP_, val);
              var G__33216 = cljs.core.next.call(null, seq__33204__$1);
              var G__33217 = null;
              var G__33218 = 0;
              var G__33219 = 0;
              seq__33204 = G__33216;
              chunk__33205 = G__33217;
              count__33206 = G__33218;
              i__33207 = G__33219;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var add_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add_class__delegate.call(this, values)
  };
  add_class.cljs$lang$maxFixedArity = 0;
  add_class.cljs$lang$applyTo = function(arglist__33220) {
    var values = cljs.core.seq(arglist__33220);
    return add_class__delegate(values)
  };
  add_class.cljs$core$IFn$_invoke$arity$variadic = add_class__delegate;
  return add_class
}();
enfocus.core.remove_class = function() {
  var remove_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__33221_SHARP_) {
      var seq__33226 = cljs.core.seq.call(null, values);
      var chunk__33227 = null;
      var count__33228 = 0;
      var i__33229 = 0;
      while(true) {
        if(i__33229 < count__33228) {
          var val = cljs.core._nth.call(null, chunk__33227, i__33229);
          domina.remove_class_BANG_.call(null, p1__33221_SHARP_, val);
          var G__33230 = seq__33226;
          var G__33231 = chunk__33227;
          var G__33232 = count__33228;
          var G__33233 = i__33229 + 1;
          seq__33226 = G__33230;
          chunk__33227 = G__33231;
          count__33228 = G__33232;
          i__33229 = G__33233;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33226);
          if(temp__4092__auto__) {
            var seq__33226__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33226__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33226__$1);
              var G__33234 = cljs.core.chunk_rest.call(null, seq__33226__$1);
              var G__33235 = c__3501__auto__;
              var G__33236 = cljs.core.count.call(null, c__3501__auto__);
              var G__33237 = 0;
              seq__33226 = G__33234;
              chunk__33227 = G__33235;
              count__33228 = G__33236;
              i__33229 = G__33237;
              continue
            }else {
              var val = cljs.core.first.call(null, seq__33226__$1);
              domina.remove_class_BANG_.call(null, p1__33221_SHARP_, val);
              var G__33238 = cljs.core.next.call(null, seq__33226__$1);
              var G__33239 = null;
              var G__33240 = 0;
              var G__33241 = 0;
              seq__33226 = G__33238;
              chunk__33227 = G__33239;
              count__33228 = G__33240;
              i__33229 = G__33241;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var remove_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_class__delegate.call(this, values)
  };
  remove_class.cljs$lang$maxFixedArity = 0;
  remove_class.cljs$lang$applyTo = function(arglist__33242) {
    var values = cljs.core.seq(arglist__33242);
    return remove_class__delegate(values)
  };
  remove_class.cljs$core$IFn$_invoke$arity$variadic = remove_class__delegate;
  return remove_class
}();
enfocus.core.set_class = function() {
  var set_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__33243_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__33243_SHARP_, values)
    })
  };
  var set_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_class__delegate.call(this, values)
  };
  set_class.cljs$lang$maxFixedArity = 0;
  set_class.cljs$lang$applyTo = function(arglist__33244) {
    var values = cljs.core.seq(arglist__33244);
    return set_class__delegate(values)
  };
  set_class.cljs$core$IFn$_invoke$arity$variadic = set_class__delegate;
  return set_class
}();
enfocus.core.do__GT_ = function() {
  var do__GT___delegate = function(forms) {
    return function(pnod) {
      var seq__33249 = cljs.core.seq.call(null, forms);
      var chunk__33250 = null;
      var count__33251 = 0;
      var i__33252 = 0;
      while(true) {
        if(i__33252 < count__33251) {
          var fun = cljs.core._nth.call(null, chunk__33250, i__33252);
          enfocus.core.apply_transform.call(null, fun, pnod);
          var G__33253 = seq__33249;
          var G__33254 = chunk__33250;
          var G__33255 = count__33251;
          var G__33256 = i__33252 + 1;
          seq__33249 = G__33253;
          chunk__33250 = G__33254;
          count__33251 = G__33255;
          i__33252 = G__33256;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33249);
          if(temp__4092__auto__) {
            var seq__33249__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33249__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33249__$1);
              var G__33257 = cljs.core.chunk_rest.call(null, seq__33249__$1);
              var G__33258 = c__3501__auto__;
              var G__33259 = cljs.core.count.call(null, c__3501__auto__);
              var G__33260 = 0;
              seq__33249 = G__33257;
              chunk__33250 = G__33258;
              count__33251 = G__33259;
              i__33252 = G__33260;
              continue
            }else {
              var fun = cljs.core.first.call(null, seq__33249__$1);
              enfocus.core.apply_transform.call(null, fun, pnod);
              var G__33261 = cljs.core.next.call(null, seq__33249__$1);
              var G__33262 = null;
              var G__33263 = 0;
              var G__33264 = 0;
              seq__33249 = G__33261;
              chunk__33250 = G__33262;
              count__33251 = G__33263;
              i__33252 = G__33264;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var do__GT_ = function(var_args) {
    var forms = null;
    if(arguments.length > 0) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return do__GT___delegate.call(this, forms)
  };
  do__GT_.cljs$lang$maxFixedArity = 0;
  do__GT_.cljs$lang$applyTo = function(arglist__33265) {
    var forms = cljs.core.seq(arglist__33265);
    return do__GT___delegate(forms)
  };
  do__GT_.cljs$core$IFn$_invoke$arity$variadic = do__GT___delegate;
  return do__GT_
}();
enfocus.core.append = function() {
  var append__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__33266_SHARP_, p2__33267_SHARP_) {
      return domina.append_BANG_.call(null, p1__33266_SHARP_, p2__33267_SHARP_)
    })
  };
  var append = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return append__delegate.call(this, values)
  };
  append.cljs$lang$maxFixedArity = 0;
  append.cljs$lang$applyTo = function(arglist__33268) {
    var values = cljs.core.seq(arglist__33268);
    return append__delegate(values)
  };
  append.cljs$core$IFn$_invoke$arity$variadic = append__delegate;
  return append
}();
enfocus.core.prepend = function() {
  var prepend__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__33269_SHARP_, p2__33270_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__33269_SHARP_, p2__33270_SHARP_)
    })
  };
  var prepend = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prepend__delegate.call(this, values)
  };
  prepend.cljs$lang$maxFixedArity = 0;
  prepend.cljs$lang$applyTo = function(arglist__33271) {
    var values = cljs.core.seq(arglist__33271);
    return prepend__delegate(values)
  };
  prepend.cljs$core$IFn$_invoke$arity$variadic = prepend__delegate;
  return prepend
}();
enfocus.core.before = function() {
  var before__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__33272_SHARP_, p2__33273_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__33272_SHARP_, p2__33273_SHARP_)
    })
  };
  var before = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return before__delegate.call(this, values)
  };
  before.cljs$lang$maxFixedArity = 0;
  before.cljs$lang$applyTo = function(arglist__33274) {
    var values = cljs.core.seq(arglist__33274);
    return before__delegate(values)
  };
  before.cljs$core$IFn$_invoke$arity$variadic = before__delegate;
  return before
}();
enfocus.core.after = function() {
  var after__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__33275_SHARP_, p2__33276_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__33275_SHARP_, p2__33276_SHARP_)
    })
  };
  var after = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return after__delegate.call(this, values)
  };
  after.cljs$lang$maxFixedArity = 0;
  after.cljs$lang$applyTo = function(arglist__33277) {
    var values = cljs.core.seq(arglist__33277);
    return after__delegate(values)
  };
  after.cljs$core$IFn$_invoke$arity$variadic = after__delegate;
  return after
}();
enfocus.core.substitute = function() {
  var substitute__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__33278_SHARP_, p2__33279_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__33278_SHARP_, p2__33279_SHARP_)
    })
  };
  var substitute = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return substitute__delegate.call(this, values)
  };
  substitute.cljs$lang$maxFixedArity = 0;
  substitute.cljs$lang$applyTo = function(arglist__33280) {
    var values = cljs.core.seq(arglist__33280);
    return substitute__delegate(values)
  };
  substitute.cljs$core$IFn$_invoke$arity$variadic = substitute__delegate;
  return substitute
}();
enfocus.core.remove_node = function remove_node() {
  return enfocus.core.multi_node_chain.call(null, function(p1__33281_SHARP_) {
    return domina.detach_BANG_.call(null, p1__33281_SHARP_)
  })
};
enfocus.core.wrap = function wrap(elm, mattr) {
  return function(pnod) {
    var elem = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem, mattr);
    enfocus.core.at.call(null, elem, enfocus.core.content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.do__GT_.call(null, enfocus.core.after.call(null, elem), enfocus.core.remove_node.call(null)))
  }
};
enfocus.core.unwrap = function unwrap() {
  return function(pnod) {
    var frag = document.createDocumentFragment();
    goog.dom.append(frag, pnod.childNodes);
    return goog.dom.replaceNode(frag, pnod)
  }
};
enfocus.core.set_style = function() {
  var set_style__delegate = function(values) {
    var pairs = cljs.core.partition.call(null, 2, values);
    return enfocus.core.multi_node_chain.call(null, function(p1__33282_SHARP_) {
      var seq__33289 = cljs.core.seq.call(null, pairs);
      var chunk__33290 = null;
      var count__33291 = 0;
      var i__33292 = 0;
      while(true) {
        if(i__33292 < count__33291) {
          var vec__33293 = cljs.core._nth.call(null, chunk__33290, i__33292);
          var name = cljs.core.nth.call(null, vec__33293, 0, null);
          var value = cljs.core.nth.call(null, vec__33293, 1, null);
          domina.set_style_BANG_.call(null, p1__33282_SHARP_, name, value);
          var G__33295 = seq__33289;
          var G__33296 = chunk__33290;
          var G__33297 = count__33291;
          var G__33298 = i__33292 + 1;
          seq__33289 = G__33295;
          chunk__33290 = G__33296;
          count__33291 = G__33297;
          i__33292 = G__33298;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33289);
          if(temp__4092__auto__) {
            var seq__33289__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33289__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33289__$1);
              var G__33299 = cljs.core.chunk_rest.call(null, seq__33289__$1);
              var G__33300 = c__3501__auto__;
              var G__33301 = cljs.core.count.call(null, c__3501__auto__);
              var G__33302 = 0;
              seq__33289 = G__33299;
              chunk__33290 = G__33300;
              count__33291 = G__33301;
              i__33292 = G__33302;
              continue
            }else {
              var vec__33294 = cljs.core.first.call(null, seq__33289__$1);
              var name = cljs.core.nth.call(null, vec__33294, 0, null);
              var value = cljs.core.nth.call(null, vec__33294, 1, null);
              domina.set_style_BANG_.call(null, p1__33282_SHARP_, name, value);
              var G__33303 = cljs.core.next.call(null, seq__33289__$1);
              var G__33304 = null;
              var G__33305 = 0;
              var G__33306 = 0;
              seq__33289 = G__33303;
              chunk__33290 = G__33304;
              count__33291 = G__33305;
              i__33292 = G__33306;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var set_style = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_style__delegate.call(this, values)
  };
  set_style.cljs$lang$maxFixedArity = 0;
  set_style.cljs$lang$applyTo = function(arglist__33307) {
    var values = cljs.core.seq(arglist__33307);
    return set_style__delegate(values)
  };
  set_style.cljs$core$IFn$_invoke$arity$variadic = set_style__delegate;
  return set_style
}();
enfocus.core.remove_style = function() {
  var remove_style__delegate = function(values) {
    return function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    }
  };
  var remove_style = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_style__delegate.call(this, values)
  };
  remove_style.cljs$lang$maxFixedArity = 0;
  remove_style.cljs$lang$applyTo = function(arglist__33308) {
    var values = cljs.core.seq(arglist__33308);
    return remove_style__delegate(values)
  };
  remove_style.cljs$core$IFn$_invoke$arity$variadic = remove_style__delegate;
  return remove_style
}();
enfocus.core.focus = function focus() {
  return function(node) {
    return node.focus()
  }
};
enfocus.core.blur = function blur() {
  return function(node) {
    return node.blur()
  }
};
enfocus.core.set_data = function set_data(ky, val) {
  return enfocus.core.multi_node_chain.call(null, function(p1__33309_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__33309_SHARP_, ky, val)
  })
};
enfocus.core.delay = function() {
  var delay__delegate = function(ttime, funcs) {
    return function(pnod) {
      return enfocus.core.setTimeout.call(null, function() {
        return cljs.core.apply.call(null, enfocus.core.at, pnod, funcs)
      }, ttime)
    }
  };
  var delay = function(ttime, var_args) {
    var funcs = null;
    if(arguments.length > 1) {
      funcs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return delay__delegate.call(this, ttime, funcs)
  };
  delay.cljs$lang$maxFixedArity = 1;
  delay.cljs$lang$applyTo = function(arglist__33310) {
    var ttime = cljs.core.first(arglist__33310);
    var funcs = cljs.core.rest(arglist__33310);
    return delay__delegate(ttime, funcs)
  };
  delay.cljs$core$IFn$_invoke$arity$variadic = delay__delegate;
  return delay
}();
enfocus.core.replace_vars = function replace_vars(vars) {
  var rep_str = function rep_str(text) {
    return clojure.string.replace.call(null, text, /\$\{\s*(\S+)\s*}/, function(p1__33312_SHARP_, p2__33311_SHARP_) {
      return vars.call(null, cljs.core.keyword.call(null, p2__33311_SHARP_))
    })
  };
  return function rep_node(pnod) {
    if(cljs.core.truth_(pnod.attributes)) {
      var seq__33337_33345 = cljs.core.seq.call(null, cljs.core.range.call(null, pnod.attributes.length));
      var chunk__33338_33346 = null;
      var count__33339_33347 = 0;
      var i__33340_33348 = 0;
      while(true) {
        if(i__33340_33348 < count__33339_33347) {
          var idx_33349 = cljs.core._nth.call(null, chunk__33338_33346, i__33340_33348);
          var attr_33350 = pnod.attributes.item(idx_33349);
          if(cljs.core.truth_(attr_33350.specified)) {
            attr_33350.value = rep_str.call(null, attr_33350.value)
          }else {
          }
          var G__33351 = seq__33337_33345;
          var G__33352 = chunk__33338_33346;
          var G__33353 = count__33339_33347;
          var G__33354 = i__33340_33348 + 1;
          seq__33337_33345 = G__33351;
          chunk__33338_33346 = G__33352;
          count__33339_33347 = G__33353;
          i__33340_33348 = G__33354;
          continue
        }else {
          var temp__4092__auto___33355 = cljs.core.seq.call(null, seq__33337_33345);
          if(temp__4092__auto___33355) {
            var seq__33337_33356__$1 = temp__4092__auto___33355;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33337_33356__$1)) {
              var c__3501__auto___33357 = cljs.core.chunk_first.call(null, seq__33337_33356__$1);
              var G__33358 = cljs.core.chunk_rest.call(null, seq__33337_33356__$1);
              var G__33359 = c__3501__auto___33357;
              var G__33360 = cljs.core.count.call(null, c__3501__auto___33357);
              var G__33361 = 0;
              seq__33337_33345 = G__33358;
              chunk__33338_33346 = G__33359;
              count__33339_33347 = G__33360;
              i__33340_33348 = G__33361;
              continue
            }else {
              var idx_33362 = cljs.core.first.call(null, seq__33337_33356__$1);
              var attr_33363 = pnod.attributes.item(idx_33362);
              if(cljs.core.truth_(attr_33363.specified)) {
                attr_33363.value = rep_str.call(null, attr_33363.value)
              }else {
              }
              var G__33364 = cljs.core.next.call(null, seq__33337_33356__$1);
              var G__33365 = null;
              var G__33366 = 0;
              var G__33367 = 0;
              seq__33337_33345 = G__33364;
              chunk__33338_33346 = G__33365;
              count__33339_33347 = G__33366;
              i__33340_33348 = G__33367;
              continue
            }
          }else {
          }
        }
        break
      }
    }else {
    }
    if(cljs.core._EQ_.call(null, pnod.nodeType, 3)) {
      return pnod.nodeValue = rep_str.call(null, pnod.nodeValue)
    }else {
      var seq__33341 = cljs.core.seq.call(null, enfocus.core.nodes__GT_coll.call(null, pnod.childNodes));
      var chunk__33342 = null;
      var count__33343 = 0;
      var i__33344 = 0;
      while(true) {
        if(i__33344 < count__33343) {
          var cnode = cljs.core._nth.call(null, chunk__33342, i__33344);
          rep_node.call(null, cnode);
          var G__33368 = seq__33341;
          var G__33369 = chunk__33342;
          var G__33370 = count__33343;
          var G__33371 = i__33344 + 1;
          seq__33341 = G__33368;
          chunk__33342 = G__33369;
          count__33343 = G__33370;
          i__33344 = G__33371;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33341);
          if(temp__4092__auto__) {
            var seq__33341__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33341__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33341__$1);
              var G__33372 = cljs.core.chunk_rest.call(null, seq__33341__$1);
              var G__33373 = c__3501__auto__;
              var G__33374 = cljs.core.count.call(null, c__3501__auto__);
              var G__33375 = 0;
              seq__33341 = G__33372;
              chunk__33342 = G__33373;
              count__33343 = G__33374;
              i__33344 = G__33375;
              continue
            }else {
              var cnode = cljs.core.first.call(null, seq__33341__$1);
              rep_node.call(null, cnode);
              var G__33376 = cljs.core.next.call(null, seq__33341__$1);
              var G__33377 = null;
              var G__33378 = 0;
              var G__33379 = 0;
              seq__33341 = G__33376;
              chunk__33342 = G__33377;
              count__33343 = G__33378;
              i__33344 = G__33379;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  }
};
enfocus.core.html = function html(node_spec) {
  if(cljs.core.string_QMARK_.call(null, node_spec)) {
    return document.createTextNode(node_spec)
  }else {
    if(cljs.core.vector_QMARK_.call(null, node_spec)) {
      var vec__33389 = node_spec;
      var tag = cljs.core.nth.call(null, vec__33389, 0, null);
      var vec__33390 = cljs.core.nthnext.call(null, vec__33389, 1);
      var m = cljs.core.nth.call(null, vec__33390, 0, null);
      var ms = cljs.core.nthnext.call(null, vec__33390, 1);
      var more = vec__33390;
      var _ = enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, tag, m, ms));
      var vec__33391 = cljs.core.name.call(null, tag).split(/(?=[#.])/);
      var tag_name = cljs.core.nth.call(null, vec__33391, 0, null);
      var segments = cljs.core.nthnext.call(null, vec__33391, 1);
      var id = cljs.core.some.call(null, function(vec__33389, tag, vec__33390, m, ms, more, _, vec__33391, tag_name, segments) {
        return function(seg) {
          if(cljs.core._EQ_.call(null, "#", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1)
          }else {
            return null
          }
        }
      }(vec__33389, tag, vec__33390, m, ms, more, _, vec__33391, tag_name, segments), segments);
      var classes = cljs.core.keep.call(null, function(vec__33389, tag, vec__33390, m, ms, more, _, vec__33391, tag_name, segments, id) {
        return function(seg) {
          if(cljs.core._EQ_.call(null, ".", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1)
          }else {
            return null
          }
        }
      }(vec__33389, tag, vec__33390, m, ms, more, _, vec__33391, tag_name, segments, id), segments);
      var attrs = cljs.core.map_QMARK_.call(null, m) ? m : cljs.core.PersistentArrayMap.EMPTY;
      var attrs__$1 = cljs.core.truth_(id) ? cljs.core.assoc.call(null, attrs, "\ufdd0:id", id) : attrs;
      var attrs__$2 = !cljs.core.empty_QMARK_.call(null, classes) ? cljs.core.assoc.call(null, attrs__$1, "\ufdd0:class", cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", classes))) : attrs__$1;
      var content = cljs.core.flatten.call(null, cljs.core.map.call(null, html, cljs.core.map_QMARK_.call(null, m) ? ms : more));
      var node = document.createElement(tag_name);
      var seq__33392_33398 = cljs.core.seq.call(null, attrs__$2);
      var chunk__33393_33399 = null;
      var count__33394_33400 = 0;
      var i__33395_33401 = 0;
      while(true) {
        if(i__33395_33401 < count__33394_33400) {
          var vec__33396_33402 = cljs.core._nth.call(null, chunk__33393_33399, i__33395_33401);
          var key_33403 = cljs.core.nth.call(null, vec__33396_33402, 0, null);
          var val_33404 = cljs.core.nth.call(null, vec__33396_33402, 1, null);
          node.setAttribute(cljs.core.name.call(null, key_33403), val_33404);
          var G__33405 = seq__33392_33398;
          var G__33406 = chunk__33393_33399;
          var G__33407 = count__33394_33400;
          var G__33408 = i__33395_33401 + 1;
          seq__33392_33398 = G__33405;
          chunk__33393_33399 = G__33406;
          count__33394_33400 = G__33407;
          i__33395_33401 = G__33408;
          continue
        }else {
          var temp__4092__auto___33409 = cljs.core.seq.call(null, seq__33392_33398);
          if(temp__4092__auto___33409) {
            var seq__33392_33410__$1 = temp__4092__auto___33409;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33392_33410__$1)) {
              var c__3501__auto___33411 = cljs.core.chunk_first.call(null, seq__33392_33410__$1);
              var G__33412 = cljs.core.chunk_rest.call(null, seq__33392_33410__$1);
              var G__33413 = c__3501__auto___33411;
              var G__33414 = cljs.core.count.call(null, c__3501__auto___33411);
              var G__33415 = 0;
              seq__33392_33398 = G__33412;
              chunk__33393_33399 = G__33413;
              count__33394_33400 = G__33414;
              i__33395_33401 = G__33415;
              continue
            }else {
              var vec__33397_33416 = cljs.core.first.call(null, seq__33392_33410__$1);
              var key_33417 = cljs.core.nth.call(null, vec__33397_33416, 0, null);
              var val_33418 = cljs.core.nth.call(null, vec__33397_33416, 1, null);
              node.setAttribute(cljs.core.name.call(null, key_33417), val_33418);
              var G__33419 = cljs.core.next.call(null, seq__33392_33410__$1);
              var G__33420 = null;
              var G__33421 = 0;
              var G__33422 = 0;
              seq__33392_33398 = G__33419;
              chunk__33393_33399 = G__33420;
              count__33394_33400 = G__33421;
              i__33395_33401 = G__33422;
              continue
            }
          }else {
          }
        }
        break
      }
      if(cljs.core.truth_(content)) {
        return domina.append_BANG_.call(null, node, content)
      }else {
        return null
      }
    }else {
      if(cljs.core.sequential_QMARK_.call(null, node_spec)) {
        return cljs.core.flatten.call(null, cljs.core.map.call(null, html, node_spec))
      }else {
        if("\ufdd0:else") {
          return document.createTextNode([cljs.core.str(node_spec)].join(""))
        }else {
          return null
        }
      }
    }
  }
};
enfocus.core.get_attr = function get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.get_text = function get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.get_data = function() {
  var get_data = null;
  var get_data__1 = function(ky) {
    return get_data.call(null, ky, false)
  };
  var get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, node, ky, bubble)
    })
  };
  get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return get_data__1.call(this, ky);
      case 2:
        return get_data__2.call(this, ky, bubble)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$1 = get_data__1;
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  return get_data
}();
enfocus.core.get_prop = function get_prop(prop) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod[cljs.core.name.call(null, prop)]
  })
};
enfocus.core.merge_form_val = function merge_form_val(form_map, ky, val) {
  var mval = form_map.call(null, ky);
  if(cljs.core.coll_QMARK_.call(null, mval)) {
    return cljs.core.assoc.call(null, form_map, ky, cljs.core.conj.call(null, mval, val))
  }else {
    if(cljs.core.truth_(mval)) {
      return cljs.core.assoc.call(null, form_map, ky, cljs.core.list.call(null, val, mval))
    }else {
      if("\ufdd0:else") {
        return cljs.core.assoc.call(null, form_map, ky, val)
      }else {
        return null
      }
    }
  }
};
enfocus.core.read_simple_input = function read_simple_input(el, col) {
  return enfocus.core.merge_form_val.call(null, col, cljs.core.keyword.call(null, el.name), el.value)
};
enfocus.core.read_checked_input = function read_checked_input(el, col) {
  if(cljs.core.truth_(el.checked)) {
    return enfocus.core.merge_form_val.call(null, col, cljs.core.keyword.call(null, el.name), el.value)
  }else {
    return col
  }
};
enfocus.core.read_select_input = function read_select_input(el, col) {
  var nm = cljs.core.keyword.call(null, el.name);
  var onodes = domina.nodes.call(null, el.options);
  var opts = cljs.core.filter.call(null, function(nm, onodes) {
    return function(p1__33423_SHARP_) {
      return p1__33423_SHARP_.selected
    }
  }(nm, onodes), onodes);
  return enfocus.core.merge_form_val.call(null, col, nm, cljs.core.map.call(null, function(p1__33424_SHARP_) {
    return p1__33424_SHARP_.value
  }, opts))
};
enfocus.core.read_form = function read_form() {
  return enfocus.core.extr_multi_node.call(null, function(node) {
    var inputs = node.elements;
    return cljs.core.reduce.call(null, function(p1__33426_SHARP_, p2__33425_SHARP_) {
      var G__33429 = p2__33425_SHARP_.nodeName;
      if(cljs.core._EQ_.call(null, "BUTTON", G__33429)) {
        return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
      }else {
        if(cljs.core._EQ_.call(null, "SELECT", G__33429)) {
          return enfocus.core.read_select_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
        }else {
          if(cljs.core._EQ_.call(null, "TEXTAREA", G__33429)) {
            return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
          }else {
            if(cljs.core._EQ_.call(null, "INPUT", G__33429)) {
              var G__33430 = p2__33425_SHARP_.type;
              if(cljs.core._EQ_.call(null, "radio", G__33430)) {
                return enfocus.core.read_checked_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
              }else {
                if(cljs.core._EQ_.call(null, "checkbox", G__33430)) {
                  return enfocus.core.read_checked_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                }else {
                  if(cljs.core._EQ_.call(null, "submit", G__33430)) {
                    return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                  }else {
                    if(cljs.core._EQ_.call(null, "reset", G__33430)) {
                      return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                    }else {
                      if(cljs.core._EQ_.call(null, "button", G__33430)) {
                        return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                      }else {
                        if(cljs.core._EQ_.call(null, "password", G__33430)) {
                          return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                        }else {
                          if(cljs.core._EQ_.call(null, "hidden", G__33430)) {
                            return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                          }else {
                            if(cljs.core._EQ_.call(null, "text", G__33430)) {
                              return enfocus.core.read_simple_input.call(null, p2__33425_SHARP_, p1__33426_SHARP_)
                            }else {
                              if("\ufdd0:else") {
                                return p1__33426_SHARP_
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }else {
              if("\ufdd0:else") {
                return p1__33426_SHARP_
              }else {
                return null
              }
            }
          }
        }
      }
    }, cljs.core.PersistentArrayMap.EMPTY, inputs)
  })
};
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.filter = function filter(tst, trans) {
  return enfocus.core.multi_node_chain.call(null, function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res = cljs.core.filter.call(null, ttest, pnod_col);
      if(chain == null) {
        return enfocus.core.apply_transform.call(null, trans, res)
      }else {
        return enfocus.core.apply_transform.call(null, trans, res, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    filt.cljs$core$IFn$_invoke$arity$1 = filt__1;
    filt.cljs$core$IFn$_invoke$arity$2 = filt__2;
    return filt
  }())
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0:selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0:checked", enfocus.core.checked_radio_checkbox);
enfocus.core.match_QMARK_ = function match_QMARK_(selector) {
  return function(node) {
    if(cljs.core.truth_(node["matches"])) {
      return node.matches(selector)
    }else {
      if(cljs.core.truth_(node["matchesSelector"])) {
        return node.matchesSelector(selector)
      }else {
        if(cljs.core.truth_(node["msMatchesSelector"])) {
          return node.msMatchesSelector(selector)
        }else {
          if(cljs.core.truth_(node["mozMatchesSelector"])) {
            return node.mozMatchesSelector(selector)
          }else {
            if(cljs.core.truth_(node["webkitMatchesSelector"])) {
              return node.webkitMatchesSelector(selector)
            }else {
              if("\ufdd0:else") {
                return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([node, null], true), enfocus.core.nodes__GT_coll.call(null, enfocus.core.select.call(null, node)))
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__33431_SHARP_) {
      if(p1__33431_SHARP_ instanceof cljs.core.Symbol) {
        return enfocus.core.css_syms.call(null, p1__33431_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__33431_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__33431_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__33431_SHARP_)) {
            return create_sel_str.call(null, p1__33431_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__33431_SHARP_)) {
              return p1__33431_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_sel_str.cljs$core$IFn$_invoke$arity$1 = create_sel_str__1;
  create_sel_str.cljs$core$IFn$_invoke$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    var sel = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret = domina.css.sel.call(null, dom_node, sel);
    return ret
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css_select.cljs$core$IFn$_invoke$arity$1 = css_select__1;
  css_select.cljs$core$IFn$_invoke$arity$2 = css_select__2;
  css_select.cljs$core$IFn$_invoke$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3943__auto__ = func;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return enfocus.core.remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    var cnt = cljs.core.count.call(null, trans);
    var sel_QMARK_ = function() {
      var G__33440 = node;
      if(G__33440) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__33440.enfocus$core$ISelector$
          }
        }())) {
          return true
        }else {
          if(!G__33440.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__33440)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__33440)
      }
    }();
    if(function() {
      var and__3941__auto__ = cljs.core.not.call(null, sel_QMARK_);
      if(and__3941__auto__) {
        return cljs.core._EQ_.call(null, 1, cnt)
      }else {
        return and__3941__auto__
      }
    }()) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node)
    }else {
      var vec__33441 = cljs.core.truth_(sel_QMARK_) ? cljs.core.list.call(null, document, cljs.core.conj.call(null, trans, node)) : cljs.core.list.call(null, node, trans);
      var node__$1 = cljs.core.nth.call(null, vec__33441, 0, null);
      var trans__$1 = cljs.core.nth.call(null, vec__33441, 1, null);
      var seq__33442 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans__$1));
      var chunk__33443 = null;
      var count__33444 = 0;
      var i__33445 = 0;
      while(true) {
        if(i__33445 < count__33444) {
          var vec__33446 = cljs.core._nth.call(null, chunk__33443, i__33445);
          var sel = cljs.core.nth.call(null, vec__33446, 0, null);
          var t = cljs.core.nth.call(null, vec__33446, 1, null);
          enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
          var G__33448 = seq__33442;
          var G__33449 = chunk__33443;
          var G__33450 = count__33444;
          var G__33451 = i__33445 + 1;
          seq__33442 = G__33448;
          chunk__33443 = G__33449;
          count__33444 = G__33450;
          i__33445 = G__33451;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__33442);
          if(temp__4092__auto__) {
            var seq__33442__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__33442__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33442__$1);
              var G__33452 = cljs.core.chunk_rest.call(null, seq__33442__$1);
              var G__33453 = c__3501__auto__;
              var G__33454 = cljs.core.count.call(null, c__3501__auto__);
              var G__33455 = 0;
              seq__33442 = G__33452;
              chunk__33443 = G__33453;
              count__33444 = G__33454;
              i__33445 = G__33455;
              continue
            }else {
              var vec__33447 = cljs.core.first.call(null, seq__33442__$1);
              var sel = cljs.core.nth.call(null, vec__33447, 0, null);
              var t = cljs.core.nth.call(null, vec__33447, 1, null);
              enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
              var G__33456 = cljs.core.next.call(null, seq__33442__$1);
              var G__33457 = null;
              var G__33458 = 0;
              var G__33459 = 0;
              seq__33442 = G__33456;
              chunk__33443 = G__33457;
              count__33444 = G__33458;
              i__33445 = G__33459;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(arguments.length > 2) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__33460) {
    var id_mask = cljs.core.first(arglist__33460);
    arglist__33460 = cljs.core.next(arglist__33460);
    var node = cljs.core.first(arglist__33460);
    var trans = cljs.core.rest(arglist__33460);
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$core$IFn$_invoke$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(arguments.length > 1) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__33461) {
    var node = cljs.core.first(arglist__33461);
    var trans = cljs.core.rest(arglist__33461);
    return at__delegate(node, trans)
  };
  at.cljs$core$IFn$_invoke$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    var cnt = cljs.core.count.call(null, trans);
    var sel_QMARK_ = function() {
      var G__33466 = node;
      if(G__33466) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__33466.enfocus$core$ISelector$
          }
        }())) {
          return true
        }else {
          if(!G__33466.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__33466)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__33466)
      }
    }();
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = sel_QMARK_;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core._EQ_.call(null, 1, cnt)
      }else {
        return and__3941__auto__
      }
    }())) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), enfocus.core.select.call(null, node))
    }else {
      if(cljs.core._EQ_.call(null, 1, cnt)) {
        return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node)
      }else {
        if("\ufdd0:else") {
          var vec__33467 = cljs.core.truth_(sel_QMARK_) ? cljs.core.list.call(null, document, cljs.core.conj.call(null, trans, node)) : cljs.core.list.call(null, node, trans);
          var node__$1 = cljs.core.nth.call(null, vec__33467, 0, null);
          var trans__$1 = cljs.core.nth.call(null, vec__33467, 1, null);
          return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__33468) {
            var vec__33469 = p__33468;
            var ky = cljs.core.nth.call(null, vec__33469, 0, null);
            var sel = cljs.core.nth.call(null, vec__33469, 1, null);
            var ext = cljs.core.nth.call(null, vec__33469, 2, null);
            return cljs.core.PersistentVector.fromArray([ky, enfocus.core.apply_transform.call(null, ext, enfocus.core.select.call(null, sel, node__$1, ""))], true)
          }, cljs.core.partition.call(null, 3, trans__$1)))
        }else {
          return null
        }
      }
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(arguments.length > 1) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__33470) {
    var node = cljs.core.first(arglist__33470);
    var trans = cljs.core.rest(arglist__33470);
    return from__delegate(node, trans)
  };
  from.cljs$core$IFn$_invoke$arity$variadic = from__delegate;
  return from
}();
enfocus.core.xpath = function xpath(path) {
  return function(root, id_mask) {
    if(cljs.core.empty_QMARK_.call(null, id_mask)) {
      return domina.xpath.xpath.call(null, root, path)
    }else {
      var tmp = path.replace("@ID\x3d'", [cljs.core.str("@ID\x3d'"), cljs.core.str(id_mask)].join(""));
      var mpath = path.replace("@id\x3d'", [cljs.core.str("@id\x3d'"), cljs.core.str(id_mask)].join(""));
      return domina.xpath.xpath.call(null, root, mpath)
    }
  }
};
enfocus.core.this_node = function this_node(root, id_mask) {
  return root
};
if(cljs.core.truth_(typeof Text != "undefined")) {
  Text.prototype.domina$DomContent$ = true;
  Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
    return cljs.core.PersistentVector.fromArray([content], true)
  };
  Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
    return content
  }
}else {
}
String.prototype.enfocus$core$ISelector$ = true;
String.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
String.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
String.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  return enfocus.core.css_select.call(null, id_mask, root, cljs.core.PersistentVector.fromArray([this$], true))
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$ = true;
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  return enfocus.core.css_select.call(null, id_mask, root, this$)
};
enfocus.core.ISelector["function"] = true;
enfocus.core.select["function"] = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
enfocus.core.select["function"] = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
enfocus.core.select["function"] = function(this$, root, id_mask) {
  return this$.call(null, root, id_mask)
};
enfocus.core.ITransform["function"] = true;
enfocus.core.apply_transform["function"] = function(trans, nodes) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, trans, enfocus.core.nodes__GT_coll.call(null, nodes)))
};
enfocus.core.apply_transform["function"] = function(trans, nodes, chain) {
  var pnod_col = enfocus.core.nodes__GT_coll.call(null, nodes);
  var val = cljs.core.doall.call(null, cljs.core.map.call(null, trans, pnod_col));
  if(cljs.core.truth_(chain)) {
    return enfocus.core.apply_transform.call(null, chain, nodes)
  }else {
    return val
  }
};
goog.provide("enfocus.events");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("goog.dom");
goog.require("goog.events");
enfocus.events.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.events.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.events.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.events.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.events.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.events.view_port_monitor)
  }
};
enfocus.events.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj = new Object;
  obj.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback = enfocus.events.mouse_enter_leave.call(null, func);
    callback.listen = func;
    callback.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback)
    }
  };
  obj.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var seq__32892_32896 = cljs.core.seq.call(null, listeners);
    var chunk__32893_32897 = null;
    var count__32894_32898 = 0;
    var i__32895_32899 = 0;
    while(true) {
      if(i__32895_32899 < count__32894_32898) {
        var obj_32900__$1 = cljs.core._nth.call(null, chunk__32893_32897, i__32895_32899);
        var listener_32901 = obj_32900__$1.listener;
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = function() {
            var or__3943__auto__ = cljs.core.not.call(null, func);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return cljs.core._EQ_.call(null, listener_32901.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3941__auto__)) {
            var or__3943__auto__ = cljs.core.not.call(null, opt_scope);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return cljs.core._EQ_.call(null, listener_32901.scope, opt_scope)
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener_32901)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener_32901)
          }
        }else {
        }
        var G__32902 = seq__32892_32896;
        var G__32903 = chunk__32893_32897;
        var G__32904 = count__32894_32898;
        var G__32905 = i__32895_32899 + 1;
        seq__32892_32896 = G__32902;
        chunk__32893_32897 = G__32903;
        count__32894_32898 = G__32904;
        i__32895_32899 = G__32905;
        continue
      }else {
        var temp__4092__auto___32906 = cljs.core.seq.call(null, seq__32892_32896);
        if(temp__4092__auto___32906) {
          var seq__32892_32907__$1 = temp__4092__auto___32906;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__32892_32907__$1)) {
            var c__3501__auto___32908 = cljs.core.chunk_first.call(null, seq__32892_32907__$1);
            var G__32909 = cljs.core.chunk_rest.call(null, seq__32892_32907__$1);
            var G__32910 = c__3501__auto___32908;
            var G__32911 = cljs.core.count.call(null, c__3501__auto___32908);
            var G__32912 = 0;
            seq__32892_32896 = G__32909;
            chunk__32893_32897 = G__32910;
            count__32894_32898 = G__32911;
            i__32895_32899 = G__32912;
            continue
          }else {
            var obj_32913__$1 = cljs.core.first.call(null, seq__32892_32907__$1);
            var listener_32914 = obj_32913__$1.listener;
            if(cljs.core.truth_(function() {
              var and__3941__auto__ = function() {
                var or__3943__auto__ = cljs.core.not.call(null, func);
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return cljs.core._EQ_.call(null, listener_32914.listen, func)
                }
              }();
              if(cljs.core.truth_(and__3941__auto__)) {
                var or__3943__auto__ = cljs.core.not.call(null, opt_scope);
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return cljs.core._EQ_.call(null, listener_32914.scope, opt_scope)
                }
              }else {
                return and__3941__auto__
              }
            }())) {
              if(cljs.core.truth_(opt_handler)) {
                opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener_32914)
              }else {
                goog.events.unlisten(elm, cljs.core.name.call(null, event), listener_32914)
              }
            }else {
            }
            var G__32915 = cljs.core.next.call(null, seq__32892_32907__$1);
            var G__32916 = null;
            var G__32917 = 0;
            var G__32918 = 0;
            seq__32892_32896 = G__32915;
            chunk__32893_32897 = G__32916;
            count__32894_32898 = G__32917;
            i__32895_32899 = G__32918;
            continue
          }
        }else {
        }
      }
      break
    }
    return listeners
  };
  return obj
};
enfocus.events.wrapper_register = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:mouseenter", enfocus.events.gen_enter_leave_wrapper.call(null, "\ufdd0:mouseover"), "\ufdd0:mouseleave", enfocus.events.gen_enter_leave_wrapper.call(null, "\ufdd0:mouseout")], true);
enfocus.events.listen = function listen(event, func) {
  var wrapper = enfocus.events.wrapper_register.call(null, event);
  return function(pnod) {
    if(function() {
      var and__3941__auto__ = cljs.core._EQ_.call(null, "\ufdd0:resize", event);
      if(and__3941__auto__) {
        return window === pnod
      }else {
        return and__3941__auto__
      }
    }()) {
      return goog.events.listen(enfocus.events.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper, func)
      }
    }
  }
};
enfocus.events.remove_listeners = function() {
  var remove_listeners__delegate = function(event_list) {
    var get_name = function(p1__32919_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__32919_SHARP_, "\ufdd0:mouseenter") ? "\ufdd0:mouseover" : cljs.core._EQ_.call(null, p1__32919_SHARP_, "\ufdd0:mouseleave") ? "\ufdd0:mouseout" : "\ufdd0:else" ? p1__32919_SHARP_ : null)
    };
    return function(pnod) {
      var seq__32924 = cljs.core.seq.call(null, event_list);
      var chunk__32925 = null;
      var count__32926 = 0;
      var i__32927 = 0;
      while(true) {
        if(i__32927 < count__32926) {
          var ev = cljs.core._nth.call(null, chunk__32925, i__32927);
          goog.events.removeAll(pnod, get_name.call(null, ev));
          var G__32928 = seq__32924;
          var G__32929 = chunk__32925;
          var G__32930 = count__32926;
          var G__32931 = i__32927 + 1;
          seq__32924 = G__32928;
          chunk__32925 = G__32929;
          count__32926 = G__32930;
          i__32927 = G__32931;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__32924);
          if(temp__4092__auto__) {
            var seq__32924__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__32924__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__32924__$1);
              var G__32932 = cljs.core.chunk_rest.call(null, seq__32924__$1);
              var G__32933 = c__3501__auto__;
              var G__32934 = cljs.core.count.call(null, c__3501__auto__);
              var G__32935 = 0;
              seq__32924 = G__32932;
              chunk__32925 = G__32933;
              count__32926 = G__32934;
              i__32927 = G__32935;
              continue
            }else {
              var ev = cljs.core.first.call(null, seq__32924__$1);
              goog.events.removeAll(pnod, get_name.call(null, ev));
              var G__32936 = cljs.core.next.call(null, seq__32924__$1);
              var G__32937 = null;
              var G__32938 = 0;
              var G__32939 = 0;
              seq__32924 = G__32936;
              chunk__32925 = G__32937;
              count__32926 = G__32938;
              i__32927 = G__32939;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var remove_listeners = function(var_args) {
    var event_list = null;
    if(arguments.length > 0) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_listeners__delegate.call(this, event_list)
  };
  remove_listeners.cljs$lang$maxFixedArity = 0;
  remove_listeners.cljs$lang$applyTo = function(arglist__32940) {
    var event_list = cljs.core.seq(arglist__32940);
    return remove_listeners__delegate(event_list)
  };
  remove_listeners.cljs$core$IFn$_invoke$arity$variadic = remove_listeners__delegate;
  return remove_listeners
}();
enfocus.events.unlisten = function() {
  var unlisten = null;
  var unlisten__1 = function(event) {
    return enfocus.events.remove_listeners.call(null, event)
  };
  var unlisten__2 = function(event, func) {
    var wrapper = enfocus.events.wrapper_register.call(null, event);
    return function(pnod) {
      if(wrapper == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper, func)
      }
    }
  };
  unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return unlisten__1.call(this, event);
      case 2:
        return unlisten__2.call(this, event, func)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$1 = unlisten__1;
  unlisten.cljs$core$IFn$_invoke$arity$2 = unlisten__2;
  return unlisten
}();
enfocus.events.get_node_chain = function get_node_chain(top, node) {
  if(function() {
    var or__3943__auto__ = node == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._EQ_.call(null, node, top)
    }
  }()) {
    return cljs.core.List.EMPTY
  }else {
    return cljs.core.conj.call(null, get_node_chain.call(null, top, node.parentNode), node)
  }
};
enfocus.events.create_event = function create_event(type, cur, tar) {
  var event = new goog.events.Event(type);
  event.currentTarget = cur;
  event.target = tar;
  return event
};
enfocus.events.listen_live = function listen_live(event, selector, func) {
  return function(node) {
    return enfocus.core.at.call(null, node, enfocus.events.listen.call(null, event, function(p1__32941_SHARP_) {
      var seq__32946 = cljs.core.seq.call(null, enfocus.events.get_node_chain.call(null, node, p1__32941_SHARP_.target));
      var chunk__32947 = null;
      var count__32948 = 0;
      var i__32949 = 0;
      while(true) {
        if(i__32949 < count__32948) {
          var el = cljs.core._nth.call(null, chunk__32947, i__32949);
          enfocus.core.at.call(null, el, enfocus.core.filter.call(null, enfocus.core.match_QMARK_.call(null, selector), function(seq__32946, chunk__32947, count__32948, i__32949, el) {
            return function(node__$1) {
              return func.call(null, enfocus.events.create_event.call(null, event, el, p1__32941_SHARP_.target))
            }
          }(seq__32946, chunk__32947, count__32948, i__32949, el)));
          var G__32950 = seq__32946;
          var G__32951 = chunk__32947;
          var G__32952 = count__32948;
          var G__32953 = i__32949 + 1;
          seq__32946 = G__32950;
          chunk__32947 = G__32951;
          count__32948 = G__32952;
          i__32949 = G__32953;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__32946);
          if(temp__4092__auto__) {
            var seq__32946__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__32946__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__32946__$1);
              var G__32954 = cljs.core.chunk_rest.call(null, seq__32946__$1);
              var G__32955 = c__3501__auto__;
              var G__32956 = cljs.core.count.call(null, c__3501__auto__);
              var G__32957 = 0;
              seq__32946 = G__32954;
              chunk__32947 = G__32955;
              count__32948 = G__32956;
              i__32949 = G__32957;
              continue
            }else {
              var el = cljs.core.first.call(null, seq__32946__$1);
              enfocus.core.at.call(null, el, enfocus.core.filter.call(null, enfocus.core.match_QMARK_.call(null, selector), function(seq__32946, chunk__32947, count__32948, i__32949, el, seq__32946__$1, temp__4092__auto__) {
                return function(node__$1) {
                  return func.call(null, enfocus.events.create_event.call(null, event, el, p1__32941_SHARP_.target))
                }
              }(seq__32946, chunk__32947, count__32948, i__32949, el, seq__32946__$1, temp__4092__auto__)));
              var G__32958 = cljs.core.next.call(null, seq__32946__$1);
              var G__32959 = null;
              var G__32960 = 0;
              var G__32961 = 0;
              seq__32946 = G__32958;
              chunk__32947 = G__32959;
              count__32948 = G__32960;
              i__32949 = G__32961;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }))
  }
};
enfocus.events.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0:else") {
            var G__32962 = parent;
            var G__32963 = child.parentNode;
            parent = G__32962;
            child = G__32963;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.events.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re = e.relatedTarget;
    var this$ = e.currentTarget;
    if(function() {
      var and__3941__auto__ = !(re === this$);
      if(and__3941__auto__) {
        return cljs.core.not.call(null, enfocus.events.child_of_QMARK_.call(null, this$, re))
      }else {
        return and__3941__auto__
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370db", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#db7093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.Rgb;
goog.color.Hsv;
goog.color.Hsl;
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }else {
    if(isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if(overflowX == "visible") {
        return element.scrollLeft
      }else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft
      }
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if(!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement
  }
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left
  }else {
    if(goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left
    }
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if(!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart
  }else {
    if(goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart
    }else {
      if(!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth
      }else {
        element.scrollLeft = offsetStart
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if(!goog.isNull(top)) {
    elem.style.top = top + "px"
  }
  if(isRtl) {
    elem.style.right = left + "px";
    elem.style.left = ""
  }else {
    elem.style.left = left + "px";
    elem.style.right = ""
  }
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element;
  this.rightToLeft_
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.rightToLeft_;
goog.fx.dom.PredefinedEffect.prototype.isRightToLeft = function() {
  if(!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.element)
  }
  return this.rightToLeft_
};
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  var pos = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "right" : "left";
  this.element.style[pos] = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft;
  var start = [offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(this.element) : this.element.offsetLeft;
  this.startPoint = [offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  var marginX = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "marginRight" : "marginLeft";
  this.element.style[marginX] = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  if(this.isRightPositioningForRtlEnabled()) {
    goog.style.bidi.setScrollOffset(this.element, Math.round(this.coords[0]))
  }else {
    this.element.scrollLeft = Math.round(this.coords[0])
  }
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor && computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("enfocus.effects");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.events");
goog.require("goog.dom.query");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("enfocus.core");
enfocus.effects.chainable_effect = function chainable_effect(func, callback) {
  var trans = function(pnodes, chain) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var cnt = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col));
    var partial_cback = function(pnod_col, cnt) {
      return function() {
        cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt))) {
          if(cljs.core.truth_(callback)) {
            enfocus.core.apply_transform.call(null, callback, pnodes)
          }else {
          }
          if(cljs.core.truth_(chain)) {
            return enfocus.core.apply_transform.call(null, chain, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }(pnod_col, cnt);
    var seq__33954 = cljs.core.seq.call(null, pnod_col);
    var chunk__33955 = null;
    var count__33956 = 0;
    var i__33957 = 0;
    while(true) {
      if(i__33957 < count__33956) {
        var pnod = cljs.core._nth.call(null, chunk__33955, i__33957);
        func.call(null, pnod, partial_cback);
        var G__33961 = seq__33954;
        var G__33962 = chunk__33955;
        var G__33963 = count__33956;
        var G__33964 = i__33957 + 1;
        seq__33954 = G__33961;
        chunk__33955 = G__33962;
        count__33956 = G__33963;
        i__33957 = G__33964;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__33954);
        if(temp__4092__auto__) {
          var seq__33954__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__33954__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__33954__$1);
            var G__33965 = cljs.core.chunk_rest.call(null, seq__33954__$1);
            var G__33966 = c__3501__auto__;
            var G__33967 = cljs.core.count.call(null, c__3501__auto__);
            var G__33968 = 0;
            seq__33954 = G__33965;
            chunk__33955 = G__33966;
            count__33956 = G__33967;
            i__33957 = G__33968;
            continue
          }else {
            var pnod = cljs.core.first.call(null, seq__33954__$1);
            func.call(null, pnod, partial_cback);
            var G__33969 = cljs.core.next.call(null, seq__33954__$1);
            var G__33970 = null;
            var G__33971 = 0;
            var G__33972 = 0;
            seq__33954 = G__33969;
            chunk__33955 = G__33970;
            count__33956 = G__33971;
            i__33957 = G__33972;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  if(typeof enfocus.effects.t33958 !== "undefined") {
  }else {
    goog.provide("enfocus.effects.t33958");
    enfocus.effects.t33958 = function(trans, callback, func, chainable_effect, meta33959) {
      this.trans = trans;
      this.callback = callback;
      this.func = func;
      this.chainable_effect = chainable_effect;
      this.meta33959 = meta33959;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    enfocus.effects.t33958.cljs$lang$type = true;
    enfocus.effects.t33958.cljs$lang$ctorStr = "enfocus.effects/t33958";
    enfocus.effects.t33958.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "enfocus.effects/t33958")
    };
    enfocus.effects.t33958.prototype.enfocus$core$ITransform$ = true;
    enfocus.effects.t33958.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
      var self__ = this;
      return self__.trans.call(null, nodes, null)
    };
    enfocus.effects.t33958.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
      var self__ = this;
      return self__.trans.call(null, nodes, chain)
    };
    enfocus.effects.t33958.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33960) {
      var self__ = this;
      return self__.meta33959
    };
    enfocus.effects.t33958.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33960, meta33959__$1) {
      var self__ = this;
      return new enfocus.effects.t33958(self__.trans, self__.callback, self__.func, self__.chainable_effect, meta33959__$1)
    };
    enfocus.effects.__GT_t33958 = function __GT_t33958(trans__$1, callback__$1, func__$1, chainable_effect__$1, meta33959) {
      return new enfocus.effects.t33958(trans__$1, callback__$1, func__$1, chainable_effect__$1, meta33959)
    }
  }
  return new enfocus.effects.t33958(trans, callback, func, chainable_effect, null)
};
enfocus.effects.chain = function() {
  var chain__delegate = function(func, chains) {
    if(cljs.core.empty_QMARK_.call(null, chains)) {
      return function(pnod) {
        return enfocus.core.apply_transform.call(null, func, pnod)
      }
    }else {
      return function(pnod) {
        return enfocus.core.apply_transform.call(null, func, pnod, cljs.core.apply.call(null, chain, chains))
      }
    }
  };
  var chain = function(func, var_args) {
    var chains = null;
    if(arguments.length > 1) {
      chains = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return chain__delegate.call(this, func, chains)
  };
  chain.cljs$lang$maxFixedArity = 1;
  chain.cljs$lang$applyTo = function(arglist__33973) {
    var func = cljs.core.first(arglist__33973);
    var chains = cljs.core.rest(arglist__33973);
    return chain__delegate(func, chains)
  };
  chain.cljs$core$IFn$_invoke$arity$variadic = chain__delegate;
  return chain
}();
enfocus.effects.fade_out = function() {
  var fade_out = null;
  var fade_out__1 = function(ttime) {
    return fade_out.call(null, ttime, null, null)
  };
  var fade_out__2 = function(ttime, callback) {
    return fade_out.call(null, ttime, callback, null)
  };
  var fade_out__3 = function(ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var anim = new goog.fx.dom.FadeOut(pnod, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  fade_out = function(ttime, callback, accel) {
    switch(arguments.length) {
      case 1:
        return fade_out__1.call(this, ttime);
      case 2:
        return fade_out__2.call(this, ttime, callback);
      case 3:
        return fade_out__3.call(this, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fade_out.cljs$core$IFn$_invoke$arity$1 = fade_out__1;
  fade_out.cljs$core$IFn$_invoke$arity$2 = fade_out__2;
  fade_out.cljs$core$IFn$_invoke$arity$3 = fade_out__3;
  return fade_out
}();
enfocus.effects.fade_in = function() {
  var fade_in = null;
  var fade_in__1 = function(ttime) {
    return fade_in.call(null, ttime, null, null)
  };
  var fade_in__2 = function(ttime, callback) {
    return fade_in.call(null, ttime, callback, null)
  };
  var fade_in__3 = function(ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var anim = new goog.fx.dom.FadeIn(pnod, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  fade_in = function(ttime, callback, accel) {
    switch(arguments.length) {
      case 1:
        return fade_in__1.call(this, ttime);
      case 2:
        return fade_in__2.call(this, ttime, callback);
      case 3:
        return fade_in__3.call(this, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fade_in.cljs$core$IFn$_invoke$arity$1 = fade_in__1;
  fade_in.cljs$core$IFn$_invoke$arity$2 = fade_in__2;
  fade_in.cljs$core$IFn$_invoke$arity$3 = fade_in__3;
  return fade_in
}();
enfocus.effects.resize = function() {
  var resize = null;
  var resize__2 = function(wth, hgt) {
    return resize.call(null, wth, hgt, 0, null, null)
  };
  var resize__3 = function(wth, hgt, ttime) {
    return resize.call(null, wth, hgt, ttime, null, null)
  };
  var resize__4 = function(wth, hgt, ttime, callback) {
    return resize.call(null, wth, hgt, ttime, callback, null)
  };
  var resize__5 = function(wth, hgt, ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var csize = goog.style.getContentBoxSize(pnod);
      var start = [csize.width, csize.height];
      var wth__$1 = cljs.core._EQ_.call(null, "\ufdd0:curwidth", wth) ? csize.width : wth;
      var hgt__$1 = cljs.core._EQ_.call(null, "\ufdd0:curheight", hgt) ? csize.height : hgt;
      var end = [wth__$1, hgt__$1];
      var anim = new goog.fx.dom.Resize(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  resize = function(wth, hgt, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return resize__2.call(this, wth, hgt);
      case 3:
        return resize__3.call(this, wth, hgt, ttime);
      case 4:
        return resize__4.call(this, wth, hgt, ttime, callback);
      case 5:
        return resize__5.call(this, wth, hgt, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  resize.cljs$core$IFn$_invoke$arity$2 = resize__2;
  resize.cljs$core$IFn$_invoke$arity$3 = resize__3;
  resize.cljs$core$IFn$_invoke$arity$4 = resize__4;
  resize.cljs$core$IFn$_invoke$arity$5 = resize__5;
  return resize
}();
enfocus.effects.move = function() {
  var move = null;
  var move__2 = function(xpos, ypos) {
    return move.call(null, xpos, ypos, 0, null, null)
  };
  var move__3 = function(xpos, ypos, ttime) {
    return move.call(null, xpos, ypos, ttime, null, null)
  };
  var move__4 = function(xpos, ypos, ttime, callback) {
    return move.call(null, xpos, ypos, ttime, callback, null)
  };
  var move__5 = function(xpos, ypos, ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var cpos = goog.style.getPosition(pnod);
      var start = [cpos.x, cpos.y];
      var xpos__$1 = cljs.core._EQ_.call(null, "\ufdd0:curx", xpos) ? cpos.x : xpos;
      var ypos__$1 = cljs.core._EQ_.call(null, "\ufdd0:cury", ypos) ? cpos.y : ypos;
      var end = [xpos__$1, ypos__$1];
      var anim = new goog.fx.dom.Slide(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  move = function(xpos, ypos, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return move__2.call(this, xpos, ypos);
      case 3:
        return move__3.call(this, xpos, ypos, ttime);
      case 4:
        return move__4.call(this, xpos, ypos, ttime, callback);
      case 5:
        return move__5.call(this, xpos, ypos, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  move.cljs$core$IFn$_invoke$arity$2 = move__2;
  move.cljs$core$IFn$_invoke$arity$3 = move__3;
  move.cljs$core$IFn$_invoke$arity$4 = move__4;
  move.cljs$core$IFn$_invoke$arity$5 = move__5;
  return move
}();
enfocus.effects.scroll = function() {
  var scroll = null;
  var scroll__2 = function(xpos, ypos) {
    return scroll.call(null, xpos, ypos, 0, null, null)
  };
  var scroll__3 = function(xpos, ypos, ttime) {
    return scroll.call(null, xpos, ypos, ttime, null, null)
  };
  var scroll__4 = function(xpos, ypos, ttime, callback) {
    return scroll.call(null, xpos, ypos, ttime, callback, null)
  };
  var scroll__5 = function(xpos, ypos, ttime, callback, accel) {
    return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
      var start = [pnod.scrollLeft, pnod.scrollTop];
      var xpos__$1 = cljs.core._EQ_.call(null, "\ufdd0:curx", xpos) ? pnod.scrollLeft : xpos;
      var ypos__$1 = cljs.core._EQ_.call(null, "\ufdd0:cury", ypos) ? pnod.scrollTop : ypos;
      var end = [xpos__$1, ypos__$1];
      var anim = new goog.fx.dom.Scroll(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  scroll = function(xpos, ypos, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return scroll__2.call(this, xpos, ypos);
      case 3:
        return scroll__3.call(this, xpos, ypos, ttime);
      case 4:
        return scroll__4.call(this, xpos, ypos, ttime, callback);
      case 5:
        return scroll__5.call(this, xpos, ypos, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll.cljs$core$IFn$_invoke$arity$2 = scroll__2;
  scroll.cljs$core$IFn$_invoke$arity$3 = scroll__3;
  scroll.cljs$core$IFn$_invoke$arity$4 = scroll__4;
  scroll.cljs$core$IFn$_invoke$arity$5 = scroll__5;
  return scroll
}();
enfocus.effects.liner = function liner(t) {
  return t
};
enfocus.effects.ease_in_quad = function ease_in_quad(t) {
  return t * t
};
enfocus.effects.ease_out_quad = function ease_out_quad(t) {
  return-1 * t * (t - 2)
};
enfocus.effects.ease_in_out_quad = function ease_in_out_quad(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt
  }else {
    return-0.5 * ((nt - 1) * (nt - 2) - 1)
  }
};
enfocus.effects.ease_in_cubic = function ease_in_cubic(t) {
  return t * t * t
};
enfocus.effects.ease_out_cubic = function ease_out_cubic(t) {
  var nt = t - 1;
  return nt * nt * nt + 1
};
enfocus.effects.ease_in_out_cubic = function ease_in_out_cubic(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt)
  }
};
enfocus.effects.ease_in_quart = function ease_in_quart(t) {
  return t * t * t * t
};
enfocus.effects.ease_out_quart = function ease_out_quart(t) {
  var nt = t - 1;
  return-1 * (nt * nt * nt * nt - 1)
};
enfocus.effects.ease_in_out_quart = function ease_in_out_quart(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt * mt)
  }
};
enfocus.effects.ease_in_quint = function ease_in_quint(t) {
  return t * t * t * t
};
enfocus.effects.ease_out_quint = function ease_out_quint(t) {
  var nt = t - 1;
  return nt * nt * nt * nt + 1
};
enfocus.effects.ease_in_out_quint = function ease_in_out_quint(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt * mt * mt)
  }
};
enfocus.effects.sign_in = function sign_in(t) {
  return-1 * Math.cos(0.5 * Math.PI * t) + 1
};
enfocus.effects.sign_out = function sign_out(t) {
  return Math.sin(t * Math.PI * 0.5)
};
enfocus.effects.sign_in_out = function sign_in_out(t) {
  return-0.5 * (Math.cos(Math.PI * t) - 1)
};
enfocus.effects.expo_in = function expo_in(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 0
  }else {
    return Math.pow(2, 10 * (t - 1))
  }
};
enfocus.effects.expo_out = function expo_out(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 1
  }else {
    return-1 * Math.pow(2, -10 * t) + 1
  }
};
enfocus.effects.expo_in_out = function expo_in_out(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 0
  }else {
    if(cljs.core._EQ_.call(null, t, 1)) {
      return 1
    }else {
      if(t < 1) {
        return 0.5 * Math.pow(2, 10 * (t - 1))
      }else {
        if("\ufdd0:else") {
          return 0.5 * (-1 * Math.pow(2, -10 * (t - 1)) + 2)
        }else {
          return null
        }
      }
    }
  }
};
enfocus.effects.circular_in = function circular_in(t) {
  return-1 * (Math.sqrt(1 - Math.pow(t, 2)) - 1)
};
enfocus.effects.circular_out = function circular_out(t) {
  var nt = t - 1;
  return Math.sqrt(1 - Math.pow(nt, 2))
};
enfocus.effects.circular_in_out = function circular_in_out(t) {
  var nt = t * 2;
  if(t < 1) {
    return-0.5 * (Math.sqrt(1 - Math.pow(nt, 2)) - 1)
  }else {
    var mt = nt - 2;
    return-0.5 * (Math.sqrt(1 - Math.pow(nt, 2)) + 1)
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3370__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3370__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3370__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3370__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3370__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX] === "\ufdd0:finished"
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t34044 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.ioc_helpers.t34044");
    cljs.core.async.impl.ioc_helpers.t34044 = function(f, fn_handler, meta34045) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta34045 = meta34045;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t34044.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t34044.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t34044";
    cljs.core.async.impl.ioc_helpers.t34044.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.ioc-helpers/t34044")
    };
    cljs.core.async.impl.ioc_helpers.t34044.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t34044.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t34044.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t34044.prototype.cljs$core$IMeta$_meta$arity$1 = function(_34046) {
      var self__ = this;
      return self__.meta34045
    };
    cljs.core.async.impl.ioc_helpers.t34044.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_34046, meta34045__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t34044(self__.f, self__.fn_handler, meta34045__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t34044 = function __GT_t34044(f__$1, fn_handler__$1, meta34045) {
      return new cljs.core.async.impl.ioc_helpers.t34044(f__$1, fn_handler__$1, meta34045)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t34044(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e34048) {
    if(e34048 instanceof Object) {
      var ex = e34048;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if("\ufdd0:else") {
        throw e34048;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_34051_34053 = state;
    statearr_34051_34053[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_34051_34053[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_34052_34054 = state;
    statearr_34052_34054[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_34052_34054[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_34057_34059 = state;
    statearr_34057_34059[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_34057_34059[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_34058_34060 = state;
    statearr_34058_34060[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_34058_34060[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__34061) {
    var map__34066 = p__34061;
    var map__34066__$1 = cljs.core.seq_QMARK_.call(null, map__34066) ? cljs.core.apply.call(null, cljs.core.hash_map, map__34066) : map__34066;
    var opts = map__34066__$1;
    var statearr_34067_34070 = state;
    statearr_34067_34070[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_34068_34071 = state;
      statearr_34068_34071[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_34069_34072 = state;
      statearr_34069_34072[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return"\ufdd0:recur"
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__34061 = null;
    if(arguments.length > 3) {
      p__34061 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__34061)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__34073) {
    var state = cljs.core.first(arglist__34073);
    arglist__34073 = cljs.core.next(arglist__34073);
    var cont_block = cljs.core.first(arglist__34073);
    arglist__34073 = cljs.core.next(arglist__34073);
    var ports = cljs.core.first(arglist__34073);
    var p__34061 = cljs.core.rest(arglist__34073);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__34061)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__34038 = cnt + 1;
      cnt = G__34038;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3548__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3548__auto__) {
      var v_34039 = this$.pop();
      if(keep_QMARK_.call(null, v_34039)) {
        this$.unshift(v_34039)
      }else {
      }
      var G__34040 = x + 1;
      x = G__34040;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_34027 = 0;
  while(true) {
    var m_34028 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_34028 == null) {
    }else {
      m_34028.call(null);
      if(count_34027 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__34029 = count_34027 + 1;
        count_34027 = G__34029;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if("\ufdd0:else") {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t34033 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.channels.t34033");
    cljs.core.async.impl.channels.t34033 = function(val, box, meta34034) {
      this.val = val;
      this.box = box;
      this.meta34034 = meta34034;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t34033.cljs$lang$type = true;
    cljs.core.async.impl.channels.t34033.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t34033";
    cljs.core.async.impl.channels.t34033.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.channels/t34033")
    };
    cljs.core.async.impl.channels.t34033.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t34033.prototype.cljs$core$IMeta$_meta$arity$1 = function(_34035) {
      var self__ = this;
      return self__.meta34034
    };
    cljs.core.async.impl.channels.t34033.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_34035, meta34034__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t34033(self__.val, self__.box, meta34034__$1)
    };
    cljs.core.async.impl.channels.__GT_t34033 = function __GT_t34033(val__$1, box__$1, meta34034) {
      return new cljs.core.async.impl.channels.t34033(val__$1, box__$1, meta34034)
    }
  }
  return new cljs.core.async.impl.channels.t34033(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_34036 = self__.takes.pop();
      if(taker_34036 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_34036)) {
          var take_cb_34037 = cljs.core.async.impl.protocols.commit.call(null, taker_34036);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_34037, taker_34036) {
            return function() {
              return take_cb_34037.call(null, null)
            }
          }(take_cb_34037, taker_34036))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__34003 = level + 1;
        level = G__34003;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_34004 = 0;
    while(true) {
      if(i_34004 < arr.length) {
        arr[i_34004] = null;
        var G__34005 = i_34004 + 1;
        i_34004 = G__34005;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__34006 = x_SINGLEQUOTE_;
                x__$1 = G__34006;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__34007 = x__$1;
        var G__34008 = k;
        var G__34009 = level - 1;
        var G__34010 = update;
        x = G__34007;
        k = G__34008;
        level = G__34009;
        update = G__34010;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_34011 = self__.level + 1;
      while(true) {
        if(i_34011 <= new_level + 1) {
          update[i_34011] = self__.header;
          var G__34012 = i_34011 + 1;
          i_34011 = G__34012;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_34013 = 0;
    while(true) {
      if(i_34013 <= self__.level) {
        var links_34014 = update[i_34013].forward;
        if(links_34014[i_34013] === x__$1) {
          links_34014[i_34013] = x__$1.forward[i_34013];
          var G__34015 = i_34013 + 1;
          i_34013 = G__34015;
          continue
        }else {
          var G__34016 = i_34013 + 1;
          i_34013 = G__34016;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__34017 = x_SINGLEQUOTE_;
              x__$1 = G__34017;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__34018 = nx;
        var G__34019 = level__$1 - 1;
        x = G__34018;
        level__$1 = G__34019;
        continue
      }else {
        var G__34020 = x;
        var G__34021 = level__$1 - 1;
        x = G__34020;
        level__$1 = G__34021;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__34022 = x_SINGLEQUOTE_;
              x__$1 = G__34022;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__34023 = nx;
        var G__34024 = level__$1 - 1;
        x = G__34023;
        level__$1 = G__34024;
        continue
      }else {
        var G__34025 = x;
        var G__34026 = level__$1 - 1;
        x = G__34025;
        level__$1 = G__34026;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t33977 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t33977");
    cljs.core.async.t33977 = function(f, fn_handler, meta33978) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta33978 = meta33978;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t33977.cljs$lang$type = true;
    cljs.core.async.t33977.cljs$lang$ctorStr = "cljs.core.async/t33977";
    cljs.core.async.t33977.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t33977")
    };
    cljs.core.async.t33977.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t33977.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t33977.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t33977.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33979) {
      var self__ = this;
      return self__.meta33978
    };
    cljs.core.async.t33977.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33979, meta33978__$1) {
      var self__ = this;
      return new cljs.core.async.t33977(self__.f, self__.fn_handler, meta33978__$1)
    };
    cljs.core.async.__GT_t33977 = function __GT_t33977(f__$1, fn_handler__$1, meta33978) {
      return new cljs.core.async.t33977(f__$1, fn_handler__$1, meta33978)
    }
  }
  return new cljs.core.async.t33977(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n === "number" ? cljs.core.async.buffer.call(null, buf_or_n) : buf_or_n)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_33980 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_33980)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_33980)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3548__auto___33981 = n;
  var x_33982 = 0;
  while(true) {
    if(x_33982 < n__3548__auto___33981) {
      a[x_33982] = 0;
      var G__33983 = x_33982 + 1;
      x_33982 = G__33983;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__33984 = i + 1;
      i = G__33984;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t33988 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t33988");
    cljs.core.async.t33988 = function(flag, alt_flag, meta33989) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta33989 = meta33989;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t33988.cljs$lang$type = true;
    cljs.core.async.t33988.cljs$lang$ctorStr = "cljs.core.async/t33988";
    cljs.core.async.t33988.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t33988")
    };
    cljs.core.async.t33988.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t33988.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t33988.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t33988.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33990) {
      var self__ = this;
      return self__.meta33989
    };
    cljs.core.async.t33988.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33990, meta33989__$1) {
      var self__ = this;
      return new cljs.core.async.t33988(self__.flag, self__.alt_flag, meta33989__$1)
    };
    cljs.core.async.__GT_t33988 = function __GT_t33988(flag__$1, alt_flag__$1, meta33989) {
      return new cljs.core.async.t33988(flag__$1, alt_flag__$1, meta33989)
    }
  }
  return new cljs.core.async.t33988(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t33994 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t33994");
    cljs.core.async.t33994 = function(cb, flag, alt_handler, meta33995) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta33995 = meta33995;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t33994.cljs$lang$type = true;
    cljs.core.async.t33994.cljs$lang$ctorStr = "cljs.core.async/t33994";
    cljs.core.async.t33994.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t33994")
    };
    cljs.core.async.t33994.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t33994.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t33994.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t33994.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33996) {
      var self__ = this;
      return self__.meta33995
    };
    cljs.core.async.t33994.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33996, meta33995__$1) {
      var self__ = this;
      return new cljs.core.async.t33994(self__.cb, self__.flag, self__.alt_handler, meta33995__$1)
    };
    cljs.core.async.__GT_t33994 = function __GT_t33994(cb__$1, flag__$1, alt_handler__$1, meta33995) {
      return new cljs.core.async.t33994(cb__$1, flag__$1, alt_handler__$1, meta33995)
    }
  }
  return new cljs.core.async.t33994(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword("\ufdd0:priority")).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__33997_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__33997_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__33998 = i + 1;
          i = G__33998;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, "\ufdd0:default")) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:default")).call(null, opts), "\ufdd0:default"], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__33999) {
    var map__34001 = p__33999;
    var map__34001__$1 = cljs.core.seq_QMARK_.call(null, map__34001) ? cljs.core.apply.call(null, cljs.core.hash_map, map__34001) : map__34001;
    var opts = map__34001__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__33999 = null;
    if(arguments.length > 1) {
      p__33999 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__33999)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__34002) {
    var ports = cljs.core.first(arglist__34002);
    var p__33999 = cljs.core.rest(arglist__34002);
    return alts_BANG___delegate(ports, p__33999)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
goog.provide("chatter_box.event_bus");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
chatter_box.event_bus.Component = {};
chatter_box.event_bus.init = function init(this$, out_channel) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$init$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$init$arity$2(this$, out_channel)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.init[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.init["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.init", this$);
        }
      }
    }().call(null, this$, out_channel)
  }
};
chatter_box.event_bus.accept_message_QMARK_ = function accept_message_QMARK_(this$, message) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2(this$, message)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.accept_message_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.accept_message_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.accept-message?", this$);
        }
      }
    }().call(null, this$, message)
  }
};
chatter_box.event_bus.get_channel = function get_channel(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$get_channel$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$get_channel$arity$1(this$)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.get_channel[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.get_channel["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.get-channel", this$);
        }
      }
    }().call(null, this$)
  }
};
chatter_box.event_bus.create_bus = function() {
  var create_bus__delegate = function(components) {
    var ch = cljs.core.async.chan.call(null);
    var seq__31860_31978 = cljs.core.seq.call(null, components);
    var chunk__31861_31979 = null;
    var count__31862_31980 = 0;
    var i__31863_31981 = 0;
    while(true) {
      if(i__31863_31981 < count__31862_31980) {
        var co_31982 = cljs.core._nth.call(null, chunk__31861_31979, i__31863_31981);
        chatter_box.event_bus.init.call(null, co_31982, ch);
        var G__31983 = seq__31860_31978;
        var G__31984 = chunk__31861_31979;
        var G__31985 = count__31862_31980;
        var G__31986 = i__31863_31981 + 1;
        seq__31860_31978 = G__31983;
        chunk__31861_31979 = G__31984;
        count__31862_31980 = G__31985;
        i__31863_31981 = G__31986;
        continue
      }else {
        var temp__4092__auto___31987 = cljs.core.seq.call(null, seq__31860_31978);
        if(temp__4092__auto___31987) {
          var seq__31860_31988__$1 = temp__4092__auto___31987;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__31860_31988__$1)) {
            var c__3501__auto___31989 = cljs.core.chunk_first.call(null, seq__31860_31988__$1);
            var G__31990 = cljs.core.chunk_rest.call(null, seq__31860_31988__$1);
            var G__31991 = c__3501__auto___31989;
            var G__31992 = cljs.core.count.call(null, c__3501__auto___31989);
            var G__31993 = 0;
            seq__31860_31978 = G__31990;
            chunk__31861_31979 = G__31991;
            count__31862_31980 = G__31992;
            i__31863_31981 = G__31993;
            continue
          }else {
            var co_31994 = cljs.core.first.call(null, seq__31860_31988__$1);
            chatter_box.event_bus.init.call(null, co_31994, ch);
            var G__31995 = cljs.core.next.call(null, seq__31860_31988__$1);
            var G__31996 = null;
            var G__31997 = 0;
            var G__31998 = 0;
            seq__31860_31978 = G__31995;
            chunk__31861_31979 = G__31996;
            count__31862_31980 = G__31997;
            i__31863_31981 = G__31998;
            continue
          }
        }else {
        }
      }
      break
    }
    var c__5653__auto___31999 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5654__auto__ = function() {
        var switch__5581__auto__ = function(state_31932) {
          var state_val_31933 = state_31932[1];
          if(state_val_31933 === 1) {
            var state_31932__$1 = state_31932;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31932__$1, 2, ch)
          }else {
            if(state_val_31933 === 2) {
              var inst_31865 = state_31932[2];
              var inst_31866 = inst_31865;
              var state_31932__$1 = function() {
                var statearr_31934 = state_31932;
                statearr_31934[5] = inst_31866;
                return statearr_31934
              }();
              var statearr_31935_32000 = state_31932__$1;
              statearr_31935_32000[2] = null;
              statearr_31935_32000[1] = 3;
              return"\ufdd0:recur"
            }else {
              if(state_val_31933 === 3) {
                var inst_31866 = state_31932[5];
                var state_31932__$1 = state_31932;
                if(cljs.core.truth_(inst_31866)) {
                  var statearr_31936_32001 = state_31932__$1;
                  statearr_31936_32001[1] = 5
                }else {
                  var statearr_31937_32002 = state_31932__$1;
                  statearr_31937_32002[1] = 6
                }
                return"\ufdd0:recur"
              }else {
                if(state_val_31933 === 4) {
                  var inst_31930 = state_31932[2];
                  var state_31932__$1 = state_31932;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31932__$1, inst_31930)
                }else {
                  if(state_val_31933 === 5) {
                    var inst_31873 = cljs.core.seq.call(null, components);
                    var inst_31874 = inst_31873;
                    var inst_31875 = null;
                    var inst_31876 = 0;
                    var inst_31877 = 0;
                    var state_31932__$1 = function() {
                      var statearr_31938 = state_31932;
                      statearr_31938[6] = inst_31877;
                      statearr_31938[7] = inst_31876;
                      statearr_31938[8] = inst_31874;
                      statearr_31938[9] = inst_31875;
                      return statearr_31938
                    }();
                    var statearr_31939_32003 = state_31932__$1;
                    statearr_31939_32003[2] = null;
                    statearr_31939_32003[1] = 8;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_31933 === 6) {
                      var state_31932__$1 = state_31932;
                      var statearr_31940_32004 = state_31932__$1;
                      statearr_31940_32004[2] = null;
                      statearr_31940_32004[1] = 7;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_31933 === 7) {
                        var inst_31928 = state_31932[2];
                        var state_31932__$1 = state_31932;
                        var statearr_31941_32005 = state_31932__$1;
                        statearr_31941_32005[2] = inst_31928;
                        statearr_31941_32005[1] = 4;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_31933 === 8) {
                          var inst_31877 = state_31932[6];
                          var inst_31876 = state_31932[7];
                          var inst_31879 = inst_31877 < inst_31876;
                          var inst_31880 = inst_31879;
                          var state_31932__$1 = state_31932;
                          if(cljs.core.truth_(inst_31880)) {
                            var statearr_31942_32006 = state_31932__$1;
                            statearr_31942_32006[1] = 10
                          }else {
                            var statearr_31943_32007 = state_31932__$1;
                            statearr_31943_32007[1] = 11
                          }
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_31933 === 9) {
                            var inst_31922 = state_31932[2];
                            var state_31932__$1 = function() {
                              var statearr_31944 = state_31932;
                              statearr_31944[10] = inst_31922;
                              return statearr_31944
                            }();
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31932__$1, 27, ch)
                          }else {
                            if(state_val_31933 === 10) {
                              var inst_31866 = state_31932[5];
                              var inst_31877 = state_31932[6];
                              var inst_31882 = state_31932[11];
                              var inst_31875 = state_31932[9];
                              var inst_31882__$1 = cljs.core._nth.call(null, inst_31875, inst_31877);
                              var inst_31883 = chatter_box.event_bus.accept_message_QMARK_.call(null, inst_31882__$1, inst_31866);
                              var state_31932__$1 = function() {
                                var statearr_31945 = state_31932;
                                statearr_31945[11] = inst_31882__$1;
                                return statearr_31945
                              }();
                              if(cljs.core.truth_(inst_31883)) {
                                var statearr_31946_32008 = state_31932__$1;
                                statearr_31946_32008[1] = 13
                              }else {
                                var statearr_31947_32009 = state_31932__$1;
                                statearr_31947_32009[1] = 14
                              }
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_31933 === 11) {
                                var inst_31894 = state_31932[12];
                                var inst_31874 = state_31932[8];
                                var inst_31894__$1 = cljs.core.seq.call(null, inst_31874);
                                var state_31932__$1 = function() {
                                  var statearr_31948 = state_31932;
                                  statearr_31948[12] = inst_31894__$1;
                                  return statearr_31948
                                }();
                                if(inst_31894__$1) {
                                  var statearr_31949_32010 = state_31932__$1;
                                  statearr_31949_32010[1] = 17
                                }else {
                                  var statearr_31950_32011 = state_31932__$1;
                                  statearr_31950_32011[1] = 18
                                }
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_31933 === 12) {
                                  var inst_31920 = state_31932[2];
                                  var state_31932__$1 = state_31932;
                                  var statearr_31951_32012 = state_31932__$1;
                                  statearr_31951_32012[2] = inst_31920;
                                  statearr_31951_32012[1] = 9;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_31933 === 13) {
                                    var inst_31866 = state_31932[5];
                                    var inst_31882 = state_31932[11];
                                    var inst_31885 = chatter_box.event_bus.get_channel.call(null, inst_31882);
                                    var state_31932__$1 = state_31932;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31932__$1, 16, inst_31885, inst_31866)
                                  }else {
                                    if(state_val_31933 === 14) {
                                      var state_31932__$1 = state_31932;
                                      var statearr_31955_32013 = state_31932__$1;
                                      statearr_31955_32013[2] = null;
                                      statearr_31955_32013[1] = 15;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_31933 === 15) {
                                        var inst_31877 = state_31932[6];
                                        var inst_31876 = state_31932[7];
                                        var inst_31874 = state_31932[8];
                                        var inst_31875 = state_31932[9];
                                        var inst_31890 = state_31932[2];
                                        var inst_31891 = inst_31877 + 1;
                                        var tmp31952 = inst_31876;
                                        var tmp31953 = inst_31874;
                                        var tmp31954 = inst_31875;
                                        var inst_31874__$1 = tmp31953;
                                        var inst_31875__$1 = tmp31954;
                                        var inst_31876__$1 = tmp31952;
                                        var inst_31877__$1 = inst_31891;
                                        var state_31932__$1 = function() {
                                          var statearr_31956 = state_31932;
                                          statearr_31956[6] = inst_31877__$1;
                                          statearr_31956[7] = inst_31876__$1;
                                          statearr_31956[13] = inst_31890;
                                          statearr_31956[8] = inst_31874__$1;
                                          statearr_31956[9] = inst_31875__$1;
                                          return statearr_31956
                                        }();
                                        var statearr_31957_32014 = state_31932__$1;
                                        statearr_31957_32014[2] = null;
                                        statearr_31957_32014[1] = 8;
                                        return"\ufdd0:recur"
                                      }else {
                                        if(state_val_31933 === 16) {
                                          var inst_31887 = state_31932[2];
                                          var state_31932__$1 = state_31932;
                                          var statearr_31958_32015 = state_31932__$1;
                                          statearr_31958_32015[2] = inst_31887;
                                          statearr_31958_32015[1] = 15;
                                          return"\ufdd0:recur"
                                        }else {
                                          if(state_val_31933 === 17) {
                                            var inst_31894 = state_31932[12];
                                            var inst_31896 = cljs.core.chunked_seq_QMARK_.call(null, inst_31894);
                                            var state_31932__$1 = state_31932;
                                            if(inst_31896) {
                                              var statearr_31959_32016 = state_31932__$1;
                                              statearr_31959_32016[1] = 20
                                            }else {
                                              var statearr_31960_32017 = state_31932__$1;
                                              statearr_31960_32017[1] = 21
                                            }
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_31933 === 18) {
                                              var state_31932__$1 = state_31932;
                                              var statearr_31961_32018 = state_31932__$1;
                                              statearr_31961_32018[2] = null;
                                              statearr_31961_32018[1] = 19;
                                              return"\ufdd0:recur"
                                            }else {
                                              if(state_val_31933 === 19) {
                                                var inst_31918 = state_31932[2];
                                                var state_31932__$1 = state_31932;
                                                var statearr_31962_32019 = state_31932__$1;
                                                statearr_31962_32019[2] = inst_31918;
                                                statearr_31962_32019[1] = 12;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_31933 === 20) {
                                                  var inst_31894 = state_31932[12];
                                                  var inst_31898 = cljs.core.chunk_first.call(null, inst_31894);
                                                  var inst_31899 = cljs.core.chunk_rest.call(null, inst_31894);
                                                  var inst_31900 = cljs.core.count.call(null, inst_31898);
                                                  var inst_31874 = inst_31899;
                                                  var inst_31875 = inst_31898;
                                                  var inst_31876 = inst_31900;
                                                  var inst_31877 = 0;
                                                  var state_31932__$1 = function() {
                                                    var statearr_31963 = state_31932;
                                                    statearr_31963[6] = inst_31877;
                                                    statearr_31963[7] = inst_31876;
                                                    statearr_31963[8] = inst_31874;
                                                    statearr_31963[9] = inst_31875;
                                                    return statearr_31963
                                                  }();
                                                  var statearr_31964_32020 = state_31932__$1;
                                                  statearr_31964_32020[2] = null;
                                                  statearr_31964_32020[1] = 8;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_31933 === 21) {
                                                    var inst_31866 = state_31932[5];
                                                    var inst_31894 = state_31932[12];
                                                    var inst_31903 = state_31932[14];
                                                    var inst_31903__$1 = cljs.core.first.call(null, inst_31894);
                                                    var inst_31904 = chatter_box.event_bus.accept_message_QMARK_.call(null, inst_31903__$1, inst_31866);
                                                    var state_31932__$1 = function() {
                                                      var statearr_31965 = state_31932;
                                                      statearr_31965[14] = inst_31903__$1;
                                                      return statearr_31965
                                                    }();
                                                    if(cljs.core.truth_(inst_31904)) {
                                                      var statearr_31966_32021 = state_31932__$1;
                                                      statearr_31966_32021[1] = 23
                                                    }else {
                                                      var statearr_31967_32022 = state_31932__$1;
                                                      statearr_31967_32022[1] = 24
                                                    }
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if(state_val_31933 === 22) {
                                                      var inst_31915 = state_31932[2];
                                                      var state_31932__$1 = state_31932;
                                                      var statearr_31968_32023 = state_31932__$1;
                                                      statearr_31968_32023[2] = inst_31915;
                                                      statearr_31968_32023[1] = 19;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if(state_val_31933 === 23) {
                                                        var inst_31866 = state_31932[5];
                                                        var inst_31903 = state_31932[14];
                                                        var inst_31906 = chatter_box.event_bus.get_channel.call(null, inst_31903);
                                                        var state_31932__$1 = state_31932;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31932__$1, 26, inst_31906, inst_31866)
                                                      }else {
                                                        if(state_val_31933 === 24) {
                                                          var state_31932__$1 = state_31932;
                                                          var statearr_31969_32024 = state_31932__$1;
                                                          statearr_31969_32024[2] = null;
                                                          statearr_31969_32024[1] = 25;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if(state_val_31933 === 25) {
                                                            var inst_31894 = state_31932[12];
                                                            var inst_31911 = state_31932[2];
                                                            var inst_31912 = cljs.core.next.call(null, inst_31894);
                                                            var inst_31874 = inst_31912;
                                                            var inst_31875 = null;
                                                            var inst_31876 = 0;
                                                            var inst_31877 = 0;
                                                            var state_31932__$1 = function() {
                                                              var statearr_31970 = state_31932;
                                                              statearr_31970[6] = inst_31877;
                                                              statearr_31970[7] = inst_31876;
                                                              statearr_31970[15] = inst_31911;
                                                              statearr_31970[8] = inst_31874;
                                                              statearr_31970[9] = inst_31875;
                                                              return statearr_31970
                                                            }();
                                                            var statearr_31971_32025 = state_31932__$1;
                                                            statearr_31971_32025[2] = null;
                                                            statearr_31971_32025[1] = 8;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if(state_val_31933 === 26) {
                                                              var inst_31908 = state_31932[2];
                                                              var state_31932__$1 = state_31932;
                                                              var statearr_31972_32026 = state_31932__$1;
                                                              statearr_31972_32026[2] = inst_31908;
                                                              statearr_31972_32026[1] = 25;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_31933 === 27) {
                                                                var inst_31924 = state_31932[2];
                                                                var inst_31866 = inst_31924;
                                                                var state_31932__$1 = function() {
                                                                  var statearr_31973 = state_31932;
                                                                  statearr_31973[5] = inst_31866;
                                                                  return statearr_31973
                                                                }();
                                                                var statearr_31974_32027 = state_31932__$1;
                                                                statearr_31974_32027[2] = null;
                                                                statearr_31974_32027[1] = 3;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5581__auto__) {
          return function() {
            var state_machine__5582__auto__ = null;
            var state_machine__5582__auto____0 = function() {
              var statearr_31976 = new Array(16);
              statearr_31976[0] = state_machine__5582__auto__;
              statearr_31976[1] = 1;
              return statearr_31976
            };
            var state_machine__5582__auto____1 = function(state_31932) {
              while(true) {
                var result__5583__auto__ = switch__5581__auto__.call(null, state_31932);
                if(result__5583__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__5583__auto__
                }
                break
              }
            };
            state_machine__5582__auto__ = function(state_31932) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5582__auto____0.call(this);
                case 1:
                  return state_machine__5582__auto____1.call(this, state_31932)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
            return state_machine__5582__auto__
          }()
        }(switch__5581__auto__)
      }();
      var state__5655__auto__ = function() {
        var statearr_31977 = f__5654__auto__.call(null);
        statearr_31977[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto___31999;
        return statearr_31977
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
    });
    return ch
  };
  var create_bus = function(var_args) {
    var components = null;
    if(arguments.length > 0) {
      components = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return create_bus__delegate.call(this, components)
  };
  create_bus.cljs$lang$maxFixedArity = 0;
  create_bus.cljs$lang$applyTo = function(arglist__32028) {
    var components = cljs.core.seq(arglist__32028);
    return create_bus__delegate(components)
  };
  create_bus.cljs$core$IFn$_invoke$arity$variadic = create_bus__delegate;
  return create_bus
}();
goog.provide("cljs.core.match");
goog.require("cljs.core");
cljs.core.match.backtrack = new Error;
goog.provide("chatter_box.login_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.login_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-success"], true), null], true);
chatter_box.login_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.login_view_component.user = cljs.core.atom.call(null, null);
chatter_box.login_view_component.create_login_view_component = function create_login_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.login_view_component.t62946 !== "undefined") {
  }else {
    goog.provide("chatter_box.login_view_component.t62946");
    chatter_box.login_view_component.t62946 = function(in_ch, create_login_view_component, meta62947) {
      this.in_ch = in_ch;
      this.create_login_view_component = create_login_view_component;
      this.meta62947 = meta62947;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.login_view_component.t62946.cljs$lang$type = true;
    chatter_box.login_view_component.t62946.cljs$lang$ctorStr = "chatter-box.login-view-component/t62946";
    chatter_box.login_view_component.t62946.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.login-view-component/t62946")
    };
    chatter_box.login_view_component.t62946.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.login_view_component.t62946.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.out_chan, out_ch);
      return chatter_box.login_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.login_view_component.t62946.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.login_view_component.valid_types).call(null, msg)
    };
    chatter_box.login_view_component.t62946.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.login_view_component.t62946.prototype.cljs$core$IMeta$_meta$arity$1 = function(_62948) {
      var self__ = this;
      return self__.meta62947
    };
    chatter_box.login_view_component.t62946.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_62948, meta62947__$1) {
      var self__ = this;
      return new chatter_box.login_view_component.t62946(self__.in_ch, self__.create_login_view_component, meta62947__$1)
    };
    chatter_box.login_view_component.__GT_t62946 = function __GT_t62946(in_ch__$1, create_login_view_component__$1, meta62947) {
      return new chatter_box.login_view_component.t62946(in_ch__$1, create_login_view_component__$1, meta62947)
    }
  }
  return new chatter_box.login_view_component.t62946(in_ch, create_login_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/login.html[".container"]') == null) {
  var vec__62949_62954 = enfocus.core.replace_ids.call(null, "en58888_", '\x3cdiv id\x3d"login-container" class\x3d"container"\x3e \n \x3cform id\x3d"login-form" name\x3d"login-form" class\x3d"form-signin"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3ePlease sign in\x3c/h2\x3e \n  \x3cinput id\x3d"login-username" name\x3d"username" type\x3d"text" class\x3d"form-control" placeholder\x3d"Email address" autofocus\x3d"" /\x3e \n  \x3cinput id\x3d"login-password" name\x3d"password" type\x3d"password" class\x3d"form-control" placeholder\x3d"Password" /\x3e \n  \x3ca id\x3d"login-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"chat_window.html" type\x3d"submit"\x3eSign in \x3c/a\x3e\n  \x3ca id\x3d"user-nav-btn" class\x3d"btn btn-block" href\x3d"create_user.html" type\x3d"submit"\x3eNew User  \x3c/a\x3e\n \x3c/form\x3e\n\x3c/div\x3e');
  var sym__4174__auto___62955 = cljs.core.nth.call(null, vec__62949_62954, 0, null);
  var txt__4175__auto___62956 = cljs.core.nth.call(null, vec__62949_62954, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/login.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___62955, txt__4175__auto___62956], true))
}else {
}
chatter_box.login_view_component.login_page = function login_page() {
  var vec__62953 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/login.html[".container"]')
  }.call(null);
  var id_sym62950 = cljs.core.nth.call(null, vec__62953, 0, null);
  var pnod62951 = cljs.core.nth.call(null, vec__62953, 1, null);
  var pnod62951__$1 = enfocus.core.create_hidden_dom.call(null, pnod62951);
  enfocus.core.i_at.call(null, id_sym62950, pnod62951__$1);
  enfocus.core.reset_ids.call(null, id_sym62950, pnod62951__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod62951__$1)
};
chatter_box.login_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, "body", enfocus.core.append.call(null, chatter_box.login_view_component.login_page.call(null)), "#login-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.login_view_component.login)), "#user-nav-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.login_view_component.nav_create_user)))
};
chatter_box.login_view_component.navigate = function navigate(p__62957) {
  var map__62959 = p__62957;
  var map__62959__$1 = cljs.core.seq_QMARK_.call(null, map__62959) ? cljs.core.apply.call(null, cljs.core.hash_map, map__62959) : map__62959;
  var page = cljs.core.get.call(null, map__62959__$1, "\ufdd0:key");
  if(cljs.core._EQ_.call(null, page, "\ufdd0:login")) {
    return enfocus.core.at.call(null, "#login-container", enfocus.core.set_style.call(null, "\ufdd0:display", ""))
  }else {
    return enfocus.core.at.call(null, "#login-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"))
  }
};
chatter_box.login_view_component.login = function login() {
  var form = enfocus.core.from.call(null, "#login-form", enfocus.core.read_form.call(null));
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.login_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form), (new cljs.core.Keyword("\ufdd0:password")).call(null, form)))
};
chatter_box.login_view_component.logout = function logout() {
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:login", null));
  return cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.user, null)
};
chatter_box.login_view_component.login_successfull = function login_successfull(usr) {
  cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.user, usr);
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", null))
};
chatter_box.login_view_component.nav_create_user = function nav_create_user() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:create-user", null))
};
chatter_box.login_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_63516) {
        var state_val_63517 = state_63516[1];
        if(state_val_63517 === 32) {
          try {
            try {
              var state_63516__$1 = state_63516;
              if("\ufdd0:else") {
                var statearr_63522_63776 = state_63516__$1;
                statearr_63522_63776[1] = 34
              }else {
                var statearr_63523_63777 = state_63516__$1;
                statearr_63523_63777[1] = 35
              }
              return"\ufdd0:recur"
            }catch(e63520) {
              if(e63520 instanceof Error) {
                var ex__5575__auto__ = e63520;
                var statearr_63521_63778 = state_63516;
                statearr_63521_63778[1] = 17;
                statearr_63521_63778[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e63520;
                }else {
                  return null
                }
              }
            }
          }catch(e63518) {
            if(e63518 instanceof Error) {
              var ex__5575__auto__ = e63518;
              var statearr_63519_63779 = state_63516;
              statearr_63519_63779[1] = 26;
              statearr_63519_63779[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e63518;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_63517 === 64) {
            try {
              var inst_63477 = function() {
                throw cljs.core.match.backtrack;
              }();
              var state_63516__$1 = state_63516;
              var statearr_63526_63780 = state_63516__$1;
              statearr_63526_63780[2] = inst_63477;
              statearr_63526_63780[1] = 66;
              return"\ufdd0:recur"
            }catch(e63524) {
              if(e63524 instanceof Error) {
                var ex__5575__auto__ = e63524;
                var statearr_63525_63781 = state_63516;
                statearr_63525_63781[1] = 12;
                statearr_63525_63781[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e63524;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_63517 === 1) {
              var state_63516__$1 = state_63516;
              var statearr_63527_63782 = state_63516__$1;
              statearr_63527_63782[2] = null;
              statearr_63527_63782[1] = 2;
              return"\ufdd0:recur"
            }else {
              if(state_val_63517 === 33) {
                try {
                  try {
                    var inst_63421 = state_63516[2];
                    var state_63516__$1 = state_63516;
                    var statearr_63532_63783 = state_63516__$1;
                    statearr_63532_63783[2] = inst_63421;
                    statearr_63532_63783[1] = 25;
                    return"\ufdd0:recur"
                  }catch(e63530) {
                    if(e63530 instanceof Error) {
                      var ex__5575__auto__ = e63530;
                      var statearr_63531_63784 = state_63516;
                      statearr_63531_63784[1] = 17;
                      statearr_63531_63784[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e63530;
                      }else {
                        return null
                      }
                    }
                  }
                }catch(e63528) {
                  if(e63528 instanceof Error) {
                    var ex__5575__auto__ = e63528;
                    var statearr_63529_63785 = state_63516;
                    statearr_63529_63785[1] = 26;
                    statearr_63529_63785[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e63528;
                    }else {
                      return null
                    }
                  }
                }
              }else {
                if(state_val_63517 === 65) {
                  try {
                    var inst_63474 = state_63516[5];
                    var inst_63479 = function() {
                      throw inst_63474;
                    }();
                    var state_63516__$1 = state_63516;
                    var statearr_63535_63786 = state_63516__$1;
                    statearr_63535_63786[2] = inst_63479;
                    statearr_63535_63786[1] = 66;
                    return"\ufdd0:recur"
                  }catch(e63533) {
                    if(e63533 instanceof Error) {
                      var ex__5575__auto__ = e63533;
                      var statearr_63534_63787 = state_63516;
                      statearr_63534_63787[1] = 12;
                      statearr_63534_63787[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e63533;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_63517 === 2) {
                    var state_63516__$1 = state_63516;
                    if(true) {
                      var statearr_63536_63788 = state_63516__$1;
                      statearr_63536_63788[1] = 4
                    }else {
                      var statearr_63537_63789 = state_63516__$1;
                      statearr_63537_63789[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_63517 === 34) {
                      try {
                        try {
                          var inst_63416 = function() {
                            throw cljs.core.match.backtrack;
                          }();
                          var state_63516__$1 = state_63516;
                          var statearr_63542_63790 = state_63516__$1;
                          statearr_63542_63790[2] = inst_63416;
                          statearr_63542_63790[1] = 36;
                          return"\ufdd0:recur"
                        }catch(e63540) {
                          if(e63540 instanceof Error) {
                            var ex__5575__auto__ = e63540;
                            var statearr_63541_63791 = state_63516;
                            statearr_63541_63791[1] = 17;
                            statearr_63541_63791[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e63540;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e63538) {
                        if(e63538 instanceof Error) {
                          var ex__5575__auto__ = e63538;
                          var statearr_63539_63792 = state_63516;
                          statearr_63539_63792[1] = 26;
                          statearr_63539_63792[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e63538;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_63517 === 66) {
                        try {
                          var inst_63481 = state_63516[2];
                          var state_63516__$1 = state_63516;
                          var statearr_63545_63793 = state_63516__$1;
                          statearr_63545_63793[2] = inst_63481;
                          statearr_63545_63793[1] = 62;
                          return"\ufdd0:recur"
                        }catch(e63543) {
                          if(e63543 instanceof Error) {
                            var ex__5575__auto__ = e63543;
                            var statearr_63544_63794 = state_63516;
                            statearr_63544_63794[1] = 12;
                            statearr_63544_63794[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e63543;
                            }else {
                              return null
                            }
                          }
                        }
                      }else {
                        if(state_val_63517 === 3) {
                          var inst_63514 = state_63516[2];
                          var state_63516__$1 = state_63516;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_63516__$1, inst_63514)
                        }else {
                          if(state_val_63517 === 35) {
                            try {
                              try {
                                var state_63516__$1 = state_63516;
                                var statearr_63550_63795 = state_63516__$1;
                                statearr_63550_63795[2] = null;
                                statearr_63550_63795[1] = 36;
                                return"\ufdd0:recur"
                              }catch(e63548) {
                                if(e63548 instanceof Error) {
                                  var ex__5575__auto__ = e63548;
                                  var statearr_63549_63796 = state_63516;
                                  statearr_63549_63796[1] = 17;
                                  statearr_63549_63796[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e63548;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }catch(e63546) {
                              if(e63546 instanceof Error) {
                                var ex__5575__auto__ = e63546;
                                var statearr_63547_63797 = state_63516;
                                statearr_63547_63797[1] = 26;
                                statearr_63547_63797[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e63546;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_63517 === 67) {
                              try {
                                try {
                                  var inst_63380 = state_63516[6];
                                  var inst_63484 = cljs.core._EQ_.call(null, inst_63380, "\ufdd0:init");
                                  var state_63516__$1 = state_63516;
                                  if(inst_63484) {
                                    var statearr_63555_63798 = state_63516__$1;
                                    statearr_63555_63798[1] = 68
                                  }else {
                                    var statearr_63556_63799 = state_63516__$1;
                                    statearr_63556_63799[1] = 69
                                  }
                                  return"\ufdd0:recur"
                                }catch(e63553) {
                                  if(e63553 instanceof Error) {
                                    var ex__5575__auto__ = e63553;
                                    var statearr_63554_63800 = state_63516;
                                    statearr_63554_63800[1] = 12;
                                    statearr_63554_63800[2] = ex__5575__auto__;
                                    return"\ufdd0:recur"
                                  }else {
                                    if("\ufdd0:else") {
                                      throw e63553;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }catch(e63551) {
                                if(e63551 instanceof Error) {
                                  var ex__5575__auto__ = e63551;
                                  var statearr_63552_63801 = state_63516;
                                  statearr_63552_63801[1] = 63;
                                  statearr_63552_63801[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e63551;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_63517 === 4) {
                                var state_63516__$1 = state_63516;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_63516__$1, 7, in_ch)
                              }else {
                                if(state_val_63517 === 36) {
                                  try {
                                    try {
                                      var inst_63419 = state_63516[2];
                                      var state_63516__$1 = state_63516;
                                      var statearr_63561_63802 = state_63516__$1;
                                      statearr_63561_63802[2] = inst_63419;
                                      statearr_63561_63802[1] = 33;
                                      return"\ufdd0:recur"
                                    }catch(e63559) {
                                      if(e63559 instanceof Error) {
                                        var ex__5575__auto__ = e63559;
                                        var statearr_63560_63803 = state_63516;
                                        statearr_63560_63803[1] = 17;
                                        statearr_63560_63803[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e63559;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e63557) {
                                    if(e63557 instanceof Error) {
                                      var ex__5575__auto__ = e63557;
                                      var statearr_63558_63804 = state_63516;
                                      statearr_63558_63804[1] = 26;
                                      statearr_63558_63804[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e63557;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_63517 === 68) {
                                    try {
                                      try {
                                        var inst_63486 = chatter_box.login_view_component.initialize.call(null);
                                        var state_63516__$1 = state_63516;
                                        var statearr_63566_63805 = state_63516__$1;
                                        statearr_63566_63805[2] = inst_63486;
                                        statearr_63566_63805[1] = 70;
                                        return"\ufdd0:recur"
                                      }catch(e63564) {
                                        if(e63564 instanceof Error) {
                                          var ex__5575__auto__ = e63564;
                                          var statearr_63565_63806 = state_63516;
                                          statearr_63565_63806[1] = 12;
                                          statearr_63565_63806[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e63564;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }catch(e63562) {
                                      if(e63562 instanceof Error) {
                                        var ex__5575__auto__ = e63562;
                                        var statearr_63563_63807 = state_63516;
                                        statearr_63563_63807[1] = 63;
                                        statearr_63563_63807[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e63562;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_63517 === 5) {
                                      var state_63516__$1 = state_63516;
                                      var statearr_63567_63808 = state_63516__$1;
                                      statearr_63567_63808[2] = null;
                                      statearr_63567_63808[1] = 6;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_63517 === 37) {
                                        try {
                                          var inst_63378 = state_63516[7];
                                          var inst_63427 = chatter_box.login_view_component.navigate.call(null, inst_63378);
                                          var state_63516__$1 = state_63516;
                                          var statearr_63570_63809 = state_63516__$1;
                                          statearr_63570_63809[2] = inst_63427;
                                          statearr_63570_63809[1] = 39;
                                          return"\ufdd0:recur"
                                        }catch(e63568) {
                                          if(e63568 instanceof Error) {
                                            var ex__5575__auto__ = e63568;
                                            var statearr_63569_63810 = state_63516;
                                            statearr_63569_63810[1] = 17;
                                            statearr_63569_63810[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e63568;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_63517 === 69) {
                                          try {
                                            try {
                                              var state_63516__$1 = state_63516;
                                              if("\ufdd0:else") {
                                                var statearr_63575_63811 = state_63516__$1;
                                                statearr_63575_63811[1] = 71
                                              }else {
                                                var statearr_63576_63812 = state_63516__$1;
                                                statearr_63576_63812[1] = 72
                                              }
                                              return"\ufdd0:recur"
                                            }catch(e63573) {
                                              if(e63573 instanceof Error) {
                                                var ex__5575__auto__ = e63573;
                                                var statearr_63574_63813 = state_63516;
                                                statearr_63574_63813[1] = 12;
                                                statearr_63574_63813[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e63573;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e63571) {
                                            if(e63571 instanceof Error) {
                                              var ex__5575__auto__ = e63571;
                                              var statearr_63572_63814 = state_63516;
                                              statearr_63572_63814[1] = 63;
                                              statearr_63572_63814[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e63571;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_63517 === 6) {
                                            var inst_63512 = state_63516[2];
                                            var state_63516__$1 = state_63516;
                                            var statearr_63577_63815 = state_63516__$1;
                                            statearr_63577_63815[2] = inst_63512;
                                            statearr_63577_63815[1] = 3;
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_63517 === 38) {
                                              try {
                                                var state_63516__$1 = state_63516;
                                                if("\ufdd0:else") {
                                                  var statearr_63580_63816 = state_63516__$1;
                                                  statearr_63580_63816[1] = 40
                                                }else {
                                                  var statearr_63581_63817 = state_63516__$1;
                                                  statearr_63581_63817[1] = 41
                                                }
                                                return"\ufdd0:recur"
                                              }catch(e63578) {
                                                if(e63578 instanceof Error) {
                                                  var ex__5575__auto__ = e63578;
                                                  var statearr_63579_63818 = state_63516;
                                                  statearr_63579_63818[1] = 17;
                                                  statearr_63579_63818[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e63578;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_63517 === 70) {
                                                try {
                                                  try {
                                                    var inst_63494 = state_63516[2];
                                                    var state_63516__$1 = state_63516;
                                                    var statearr_63586_63819 = state_63516__$1;
                                                    statearr_63586_63819[2] = inst_63494;
                                                    statearr_63586_63819[1] = 62;
                                                    return"\ufdd0:recur"
                                                  }catch(e63584) {
                                                    if(e63584 instanceof Error) {
                                                      var ex__5575__auto__ = e63584;
                                                      var statearr_63585_63820 = state_63516;
                                                      statearr_63585_63820[1] = 12;
                                                      statearr_63585_63820[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e63584;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }catch(e63582) {
                                                  if(e63582 instanceof Error) {
                                                    var ex__5575__auto__ = e63582;
                                                    var statearr_63583_63821 = state_63516;
                                                    statearr_63583_63821[1] = 63;
                                                    statearr_63583_63821[2] = ex__5575__auto__;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if("\ufdd0:else") {
                                                      throw e63582;
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }else {
                                                if(state_val_63517 === 7) {
                                                  var inst_63372 = state_63516[8];
                                                  var inst_63372__$1 = state_63516[2];
                                                  var inst_63373 = cljs.core.seq_QMARK_.call(null, inst_63372__$1);
                                                  var state_63516__$1 = function() {
                                                    var statearr_63587 = state_63516;
                                                    statearr_63587[8] = inst_63372__$1;
                                                    return statearr_63587
                                                  }();
                                                  if(inst_63373) {
                                                    var statearr_63588_63822 = state_63516__$1;
                                                    statearr_63588_63822[1] = 8
                                                  }else {
                                                    var statearr_63589_63823 = state_63516__$1;
                                                    statearr_63589_63823[1] = 9
                                                  }
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_63517 === 39) {
                                                    try {
                                                      var inst_63435 = state_63516[2];
                                                      var state_63516__$1 = state_63516;
                                                      var statearr_63592_63824 = state_63516__$1;
                                                      statearr_63592_63824[2] = inst_63435;
                                                      statearr_63592_63824[1] = 24;
                                                      return"\ufdd0:recur"
                                                    }catch(e63590) {
                                                      if(e63590 instanceof Error) {
                                                        var ex__5575__auto__ = e63590;
                                                        var statearr_63591_63825 = state_63516;
                                                        statearr_63591_63825[1] = 17;
                                                        statearr_63591_63825[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e63590;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_63517 === 71) {
                                                      try {
                                                        try {
                                                          var inst_63489 = function() {
                                                            throw cljs.core.match.backtrack;
                                                          }();
                                                          var state_63516__$1 = state_63516;
                                                          var statearr_63597_63826 = state_63516__$1;
                                                          statearr_63597_63826[2] = inst_63489;
                                                          statearr_63597_63826[1] = 73;
                                                          return"\ufdd0:recur"
                                                        }catch(e63595) {
                                                          if(e63595 instanceof Error) {
                                                            var ex__5575__auto__ = e63595;
                                                            var statearr_63596_63827 = state_63516;
                                                            statearr_63596_63827[1] = 12;
                                                            statearr_63596_63827[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e63595;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }catch(e63593) {
                                                        if(e63593 instanceof Error) {
                                                          var ex__5575__auto__ = e63593;
                                                          var statearr_63594_63828 = state_63516;
                                                          statearr_63594_63828[1] = 63;
                                                          statearr_63594_63828[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e63593;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_63517 === 8) {
                                                        var inst_63372 = state_63516[8];
                                                        var inst_63375 = cljs.core.apply.call(null, cljs.core.hash_map, inst_63372);
                                                        var state_63516__$1 = state_63516;
                                                        var statearr_63598_63829 = state_63516__$1;
                                                        statearr_63598_63829[2] = inst_63375;
                                                        statearr_63598_63829[1] = 10;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_63517 === 40) {
                                                          try {
                                                            var inst_63430 = function() {
                                                              throw cljs.core.match.backtrack;
                                                            }();
                                                            var state_63516__$1 = state_63516;
                                                            var statearr_63601_63830 = state_63516__$1;
                                                            statearr_63601_63830[2] = inst_63430;
                                                            statearr_63601_63830[1] = 42;
                                                            return"\ufdd0:recur"
                                                          }catch(e63599) {
                                                            if(e63599 instanceof Error) {
                                                              var ex__5575__auto__ = e63599;
                                                              var statearr_63600_63831 = state_63516;
                                                              statearr_63600_63831[1] = 17;
                                                              statearr_63600_63831[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e63599;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_63517 === 72) {
                                                            try {
                                                              try {
                                                                var state_63516__$1 = state_63516;
                                                                var statearr_63606_63832 = state_63516__$1;
                                                                statearr_63606_63832[2] = null;
                                                                statearr_63606_63832[1] = 73;
                                                                return"\ufdd0:recur"
                                                              }catch(e63604) {
                                                                if(e63604 instanceof Error) {
                                                                  var ex__5575__auto__ = e63604;
                                                                  var statearr_63605_63833 = state_63516;
                                                                  statearr_63605_63833[1] = 12;
                                                                  statearr_63605_63833[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e63604;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }catch(e63602) {
                                                              if(e63602 instanceof Error) {
                                                                var ex__5575__auto__ = e63602;
                                                                var statearr_63603_63834 = state_63516;
                                                                statearr_63603_63834[1] = 63;
                                                                statearr_63603_63834[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e63602;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_63517 === 9) {
                                                              var inst_63372 = state_63516[8];
                                                              var state_63516__$1 = state_63516;
                                                              var statearr_63607_63835 = state_63516__$1;
                                                              statearr_63607_63835[2] = inst_63372;
                                                              statearr_63607_63835[1] = 10;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_63517 === 41) {
                                                                try {
                                                                  var state_63516__$1 = state_63516;
                                                                  var statearr_63610_63836 = state_63516__$1;
                                                                  statearr_63610_63836[2] = null;
                                                                  statearr_63610_63836[1] = 42;
                                                                  return"\ufdd0:recur"
                                                                }catch(e63608) {
                                                                  if(e63608 instanceof Error) {
                                                                    var ex__5575__auto__ = e63608;
                                                                    var statearr_63609_63837 = state_63516;
                                                                    statearr_63609_63837[1] = 17;
                                                                    statearr_63609_63837[2] = ex__5575__auto__;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if("\ufdd0:else") {
                                                                      throw e63608;
                                                                    }else {
                                                                      return null
                                                                    }
                                                                  }
                                                                }
                                                              }else {
                                                                if(state_val_63517 === 73) {
                                                                  try {
                                                                    try {
                                                                      var inst_63492 = state_63516[2];
                                                                      var state_63516__$1 = state_63516;
                                                                      var statearr_63615_63838 = state_63516__$1;
                                                                      statearr_63615_63838[2] = inst_63492;
                                                                      statearr_63615_63838[1] = 70;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e63613) {
                                                                      if(e63613 instanceof Error) {
                                                                        var ex__5575__auto__ = e63613;
                                                                        var statearr_63614_63839 = state_63516;
                                                                        statearr_63614_63839[1] = 12;
                                                                        statearr_63614_63839[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e63613;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e63611) {
                                                                    if(e63611 instanceof Error) {
                                                                      var ex__5575__auto__ = e63611;
                                                                      var statearr_63612_63840 = state_63516;
                                                                      statearr_63612_63840[1] = 63;
                                                                      statearr_63612_63840[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e63611;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_63517 === 10) {
                                                                    var inst_63378 = state_63516[7];
                                                                    var inst_63378__$1 = state_63516[2];
                                                                    var inst_63379 = cljs.core.get.call(null, inst_63378__$1, "\ufdd0:area");
                                                                    var inst_63380 = cljs.core.get.call(null, inst_63378__$1, "\ufdd0:key");
                                                                    var inst_63381 = cljs.core.get.call(null, inst_63378__$1, "\ufdd0:data");
                                                                    var state_63516__$1 = function() {
                                                                      var statearr_63616 = state_63516;
                                                                      statearr_63616[7] = inst_63378__$1;
                                                                      statearr_63616[9] = inst_63379;
                                                                      statearr_63616[10] = inst_63381;
                                                                      statearr_63616[6] = inst_63380;
                                                                      return statearr_63616
                                                                    }();
                                                                    var statearr_63617_63841 = state_63516__$1;
                                                                    statearr_63617_63841[2] = null;
                                                                    statearr_63617_63841[1] = 43;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if(state_val_63517 === 42) {
                                                                      try {
                                                                        var inst_63433 = state_63516[2];
                                                                        var state_63516__$1 = state_63516;
                                                                        var statearr_63620_63842 = state_63516__$1;
                                                                        statearr_63620_63842[2] = inst_63433;
                                                                        statearr_63620_63842[1] = 39;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e63618) {
                                                                        if(e63618 instanceof Error) {
                                                                          var ex__5575__auto__ = e63618;
                                                                          var statearr_63619_63843 = state_63516;
                                                                          statearr_63619_63843[1] = 17;
                                                                          statearr_63619_63843[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e63618;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_63517 === 74) {
                                                                        try {
                                                                          var inst_63499 = function() {
                                                                            throw cljs.core.match.backtrack;
                                                                          }();
                                                                          var state_63516__$1 = state_63516;
                                                                          var statearr_63623_63844 = state_63516__$1;
                                                                          statearr_63623_63844[2] = inst_63499;
                                                                          statearr_63623_63844[1] = 76;
                                                                          return"\ufdd0:recur"
                                                                        }catch(e63621) {
                                                                          if(e63621 instanceof Error) {
                                                                            var ex__5575__auto__ = e63621;
                                                                            var statearr_63622_63845 = state_63516;
                                                                            statearr_63622_63845[1] = 12;
                                                                            statearr_63622_63845[2] = ex__5575__auto__;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if("\ufdd0:else") {
                                                                              throw e63621;
                                                                            }else {
                                                                              return null
                                                                            }
                                                                          }
                                                                        }
                                                                      }else {
                                                                        if(state_val_63517 === 11) {
                                                                          var inst_63508 = state_63516[2];
                                                                          var state_63516__$1 = function() {
                                                                            var statearr_63624 = state_63516;
                                                                            statearr_63624[11] = inst_63508;
                                                                            return statearr_63624
                                                                          }();
                                                                          var statearr_63625_63846 = state_63516__$1;
                                                                          statearr_63625_63846[2] = null;
                                                                          statearr_63625_63846[1] = 2;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if(state_val_63517 === 43) {
                                                                            try {
                                                                              var inst_63379 = state_63516[9];
                                                                              var inst_63446 = cljs.core._EQ_.call(null, inst_63379, "\ufdd0:security");
                                                                              var state_63516__$1 = state_63516;
                                                                              if(inst_63446) {
                                                                                var statearr_63628_63847 = state_63516__$1;
                                                                                statearr_63628_63847[1] = 44
                                                                              }else {
                                                                                var statearr_63629_63848 = state_63516__$1;
                                                                                statearr_63629_63848[1] = 45
                                                                              }
                                                                              return"\ufdd0:recur"
                                                                            }catch(e63626) {
                                                                              if(e63626 instanceof Error) {
                                                                                var ex__5575__auto__ = e63626;
                                                                                var statearr_63627_63849 = state_63516;
                                                                                statearr_63627_63849[1] = 12;
                                                                                statearr_63627_63849[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e63626;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_63517 === 75) {
                                                                              try {
                                                                                var state_63516__$1 = state_63516;
                                                                                var statearr_63632_63850 = state_63516__$1;
                                                                                statearr_63632_63850[2] = null;
                                                                                statearr_63632_63850[1] = 76;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e63630) {
                                                                                if(e63630 instanceof Error) {
                                                                                  var ex__5575__auto__ = e63630;
                                                                                  var statearr_63631_63851 = state_63516;
                                                                                  statearr_63631_63851[1] = 12;
                                                                                  statearr_63631_63851[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e63630;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_63517 === 12) {
                                                                                var inst_63385 = state_63516[12];
                                                                                var inst_63385__$1 = state_63516[2];
                                                                                var inst_63386 = inst_63385__$1 === cljs.core.match.backtrack;
                                                                                var state_63516__$1 = function() {
                                                                                  var statearr_63633 = state_63516;
                                                                                  statearr_63633[12] = inst_63385__$1;
                                                                                  return statearr_63633
                                                                                }();
                                                                                if(cljs.core.truth_(inst_63386)) {
                                                                                  var statearr_63634_63852 = state_63516__$1;
                                                                                  statearr_63634_63852[1] = 13
                                                                                }else {
                                                                                  var statearr_63635_63853 = state_63516__$1;
                                                                                  statearr_63635_63853[1] = 14
                                                                                }
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_63517 === 44) {
                                                                                  try {
                                                                                    var state_63516__$1 = state_63516;
                                                                                    var statearr_63638_63854 = state_63516__$1;
                                                                                    statearr_63638_63854[2] = null;
                                                                                    statearr_63638_63854[1] = 52;
                                                                                    return"\ufdd0:recur"
                                                                                  }catch(e63636) {
                                                                                    if(e63636 instanceof Error) {
                                                                                      var ex__5575__auto__ = e63636;
                                                                                      var statearr_63637_63855 = state_63516;
                                                                                      statearr_63637_63855[1] = 12;
                                                                                      statearr_63637_63855[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e63636;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_63517 === 76) {
                                                                                    try {
                                                                                      var inst_63502 = state_63516[2];
                                                                                      var state_63516__$1 = state_63516;
                                                                                      var statearr_63641_63856 = state_63516__$1;
                                                                                      statearr_63641_63856[2] = inst_63502;
                                                                                      statearr_63641_63856[1] = 61;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e63639) {
                                                                                      if(e63639 instanceof Error) {
                                                                                        var ex__5575__auto__ = e63639;
                                                                                        var statearr_63640_63857 = state_63516;
                                                                                        statearr_63640_63857[1] = 12;
                                                                                        statearr_63640_63857[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e63639;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_63517 === 13) {
                                                                                      var state_63516__$1 = state_63516;
                                                                                      var statearr_63642_63858 = state_63516__$1;
                                                                                      statearr_63642_63858[2] = null;
                                                                                      statearr_63642_63858[1] = 21;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if(state_val_63517 === 45) {
                                                                                        try {
                                                                                          var inst_63379 = state_63516[9];
                                                                                          var inst_63472 = cljs.core._EQ_.call(null, inst_63379, "\ufdd0:view");
                                                                                          var state_63516__$1 = state_63516;
                                                                                          if(inst_63472) {
                                                                                            var statearr_63645_63859 = state_63516__$1;
                                                                                            statearr_63645_63859[1] = 59
                                                                                          }else {
                                                                                            var statearr_63646_63860 = state_63516__$1;
                                                                                            statearr_63646_63860[1] = 60
                                                                                          }
                                                                                          return"\ufdd0:recur"
                                                                                        }catch(e63643) {
                                                                                          if(e63643 instanceof Error) {
                                                                                            var ex__5575__auto__ = e63643;
                                                                                            var statearr_63644_63861 = state_63516;
                                                                                            statearr_63644_63861[1] = 12;
                                                                                            statearr_63644_63861[2] = ex__5575__auto__;
                                                                                            return"\ufdd0:recur"
                                                                                          }else {
                                                                                            if("\ufdd0:else") {
                                                                                              throw e63643;
                                                                                            }else {
                                                                                              return null
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }else {
                                                                                        if(state_val_63517 === 14) {
                                                                                          var inst_63385 = state_63516[12];
                                                                                          var inst_63441 = function() {
                                                                                            throw inst_63385;
                                                                                          }();
                                                                                          var state_63516__$1 = state_63516;
                                                                                          var statearr_63647_63862 = state_63516__$1;
                                                                                          statearr_63647_63862[2] = inst_63441;
                                                                                          statearr_63647_63862[1] = 15;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if(state_val_63517 === 46) {
                                                                                            try {
                                                                                              var inst_63506 = state_63516[2];
                                                                                              var state_63516__$1 = state_63516;
                                                                                              var statearr_63650_63863 = state_63516__$1;
                                                                                              statearr_63650_63863[2] = inst_63506;
                                                                                              statearr_63650_63863[1] = 11;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e63648) {
                                                                                              if(e63648 instanceof Error) {
                                                                                                var ex__5575__auto__ = e63648;
                                                                                                var statearr_63649_63864 = state_63516;
                                                                                                statearr_63649_63864[1] = 12;
                                                                                                statearr_63649_63864[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e63648;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_63517 === 15) {
                                                                                              var inst_63443 = state_63516[2];
                                                                                              var state_63516__$1 = state_63516;
                                                                                              var statearr_63651_63865 = state_63516__$1;
                                                                                              statearr_63651_63865[2] = inst_63443;
                                                                                              statearr_63651_63865[1] = 11;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if(state_val_63517 === 47) {
                                                                                                try {
                                                                                                  var inst_63470 = state_63516[2];
                                                                                                  var state_63516__$1 = state_63516;
                                                                                                  var statearr_63654_63866 = state_63516__$1;
                                                                                                  statearr_63654_63866[2] = inst_63470;
                                                                                                  statearr_63654_63866[1] = 46;
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e63652) {
                                                                                                  if(e63652 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e63652;
                                                                                                    var statearr_63653_63867 = state_63516;
                                                                                                    statearr_63653_63867[1] = 12;
                                                                                                    statearr_63653_63867[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e63652;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }else {
                                                                                                if(state_val_63517 === 16) {
                                                                                                  var inst_63439 = state_63516[2];
                                                                                                  var state_63516__$1 = state_63516;
                                                                                                  var statearr_63655_63868 = state_63516__$1;
                                                                                                  statearr_63655_63868[2] = inst_63439;
                                                                                                  statearr_63655_63868[1] = 15;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if(state_val_63517 === 48) {
                                                                                                    try {
                                                                                                      var inst_63448 = state_63516[13];
                                                                                                      var inst_63448__$1 = state_63516[2];
                                                                                                      var inst_63449 = inst_63448__$1 === cljs.core.match.backtrack;
                                                                                                      var state_63516__$1 = function() {
                                                                                                        var statearr_63658 = state_63516;
                                                                                                        statearr_63658[13] = inst_63448__$1;
                                                                                                        return statearr_63658
                                                                                                      }();
                                                                                                      if(cljs.core.truth_(inst_63449)) {
                                                                                                        var statearr_63659_63869 = state_63516__$1;
                                                                                                        statearr_63659_63869[1] = 49
                                                                                                      }else {
                                                                                                        var statearr_63660_63870 = state_63516__$1;
                                                                                                        statearr_63660_63870[1] = 50
                                                                                                      }
                                                                                                      return"\ufdd0:recur"
                                                                                                    }catch(e63656) {
                                                                                                      if(e63656 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e63656;
                                                                                                        var statearr_63657_63871 = state_63516;
                                                                                                        statearr_63657_63871[1] = 12;
                                                                                                        statearr_63657_63871[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e63656;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_63517 === 17) {
                                                                                                      var inst_63388 = state_63516[14];
                                                                                                      var inst_63388__$1 = state_63516[2];
                                                                                                      var inst_63389 = inst_63388__$1 === cljs.core.match.backtrack;
                                                                                                      var state_63516__$1 = function() {
                                                                                                        var statearr_63661 = state_63516;
                                                                                                        statearr_63661[14] = inst_63388__$1;
                                                                                                        return statearr_63661
                                                                                                      }();
                                                                                                      if(cljs.core.truth_(inst_63389)) {
                                                                                                        var statearr_63662_63872 = state_63516__$1;
                                                                                                        statearr_63662_63872[1] = 18
                                                                                                      }else {
                                                                                                        var statearr_63663_63873 = state_63516__$1;
                                                                                                        statearr_63663_63873[1] = 19
                                                                                                      }
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if(state_val_63517 === 49) {
                                                                                                        try {
                                                                                                          var inst_63451 = function() {
                                                                                                            throw cljs.core.match.backtrack;
                                                                                                          }();
                                                                                                          var state_63516__$1 = state_63516;
                                                                                                          var statearr_63666_63874 = state_63516__$1;
                                                                                                          statearr_63666_63874[2] = inst_63451;
                                                                                                          statearr_63666_63874[1] = 51;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e63664) {
                                                                                                          if(e63664 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e63664;
                                                                                                            var statearr_63665_63875 = state_63516;
                                                                                                            statearr_63665_63875[1] = 12;
                                                                                                            statearr_63665_63875[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e63664;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }else {
                                                                                                        if(state_val_63517 === 18) {
                                                                                                          var inst_63378 = state_63516[7];
                                                                                                          var inst_63391 = cljs.core.pr_str.call(null, "NO MATCH FOR:", inst_63378);
                                                                                                          var inst_63392 = chatter_box.login_view_component.log_debug.call(null, inst_63391);
                                                                                                          var state_63516__$1 = state_63516;
                                                                                                          var statearr_63667_63876 = state_63516__$1;
                                                                                                          statearr_63667_63876[2] = inst_63392;
                                                                                                          statearr_63667_63876[1] = 20;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if(state_val_63517 === 50) {
                                                                                                            try {
                                                                                                              var inst_63448 = state_63516[13];
                                                                                                              var inst_63453 = function() {
                                                                                                                throw inst_63448;
                                                                                                              }();
                                                                                                              var state_63516__$1 = state_63516;
                                                                                                              var statearr_63670_63877 = state_63516__$1;
                                                                                                              statearr_63670_63877[2] = inst_63453;
                                                                                                              statearr_63670_63877[1] = 51;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e63668) {
                                                                                                              if(e63668 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e63668;
                                                                                                                var statearr_63669_63878 = state_63516;
                                                                                                                statearr_63669_63878[1] = 12;
                                                                                                                statearr_63669_63878[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e63668;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_63517 === 19) {
                                                                                                              var inst_63388 = state_63516[14];
                                                                                                              var inst_63394 = function() {
                                                                                                                throw inst_63388;
                                                                                                              }();
                                                                                                              var state_63516__$1 = state_63516;
                                                                                                              var statearr_63671_63879 = state_63516__$1;
                                                                                                              statearr_63671_63879[2] = inst_63394;
                                                                                                              statearr_63671_63879[1] = 20;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if(state_val_63517 === 51) {
                                                                                                                try {
                                                                                                                  var inst_63455 = state_63516[2];
                                                                                                                  var state_63516__$1 = state_63516;
                                                                                                                  var statearr_63674_63880 = state_63516__$1;
                                                                                                                  statearr_63674_63880[2] = inst_63455;
                                                                                                                  statearr_63674_63880[1] = 47;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e63672) {
                                                                                                                  if(e63672 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e63672;
                                                                                                                    var statearr_63673_63881 = state_63516;
                                                                                                                    statearr_63673_63881[1] = 12;
                                                                                                                    statearr_63673_63881[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e63672;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }else {
                                                                                                                if(state_val_63517 === 20) {
                                                                                                                  var inst_63396 = state_63516[2];
                                                                                                                  var state_63516__$1 = state_63516;
                                                                                                                  var statearr_63675_63882 = state_63516__$1;
                                                                                                                  statearr_63675_63882[2] = inst_63396;
                                                                                                                  statearr_63675_63882[1] = 16;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if(state_val_63517 === 52) {
                                                                                                                    try {
                                                                                                                      try {
                                                                                                                        var inst_63380 = state_63516[6];
                                                                                                                        var inst_63458 = cljs.core._EQ_.call(null, inst_63380, "\ufdd0:logout");
                                                                                                                        var state_63516__$1 = state_63516;
                                                                                                                        if(inst_63458) {
                                                                                                                          var statearr_63680_63883 = state_63516__$1;
                                                                                                                          statearr_63680_63883[1] = 53
                                                                                                                        }else {
                                                                                                                          var statearr_63681_63884 = state_63516__$1;
                                                                                                                          statearr_63681_63884[1] = 54
                                                                                                                        }
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e63678) {
                                                                                                                        if(e63678 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e63678;
                                                                                                                          var statearr_63679_63885 = state_63516;
                                                                                                                          statearr_63679_63885[1] = 12;
                                                                                                                          statearr_63679_63885[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e63678;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }catch(e63676) {
                                                                                                                      if(e63676 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e63676;
                                                                                                                        var statearr_63677_63886 = state_63516;
                                                                                                                        statearr_63677_63886[1] = 48;
                                                                                                                        statearr_63677_63886[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e63676;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_63517 === 21) {
                                                                                                                      try {
                                                                                                                        var inst_63379 = state_63516[9];
                                                                                                                        var inst_63399 = cljs.core._EQ_.call(null, inst_63379, "\ufdd0:security");
                                                                                                                        var state_63516__$1 = state_63516;
                                                                                                                        if(inst_63399) {
                                                                                                                          var statearr_63684_63887 = state_63516__$1;
                                                                                                                          statearr_63684_63887[1] = 22
                                                                                                                        }else {
                                                                                                                          var statearr_63685_63888 = state_63516__$1;
                                                                                                                          statearr_63685_63888[1] = 23
                                                                                                                        }
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e63682) {
                                                                                                                        if(e63682 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e63682;
                                                                                                                          var statearr_63683_63889 = state_63516;
                                                                                                                          statearr_63683_63889[1] = 17;
                                                                                                                          statearr_63683_63889[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e63682;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_63517 === 53) {
                                                                                                                        try {
                                                                                                                          try {
                                                                                                                            var inst_63460 = chatter_box.login_view_component.logout.call(null);
                                                                                                                            var state_63516__$1 = state_63516;
                                                                                                                            var statearr_63690_63890 = state_63516__$1;
                                                                                                                            statearr_63690_63890[2] = inst_63460;
                                                                                                                            statearr_63690_63890[1] = 55;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e63688) {
                                                                                                                            if(e63688 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e63688;
                                                                                                                              var statearr_63689_63891 = state_63516;
                                                                                                                              statearr_63689_63891[1] = 12;
                                                                                                                              statearr_63689_63891[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e63688;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }catch(e63686) {
                                                                                                                          if(e63686 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e63686;
                                                                                                                            var statearr_63687_63892 = state_63516;
                                                                                                                            statearr_63687_63892[1] = 48;
                                                                                                                            statearr_63687_63892[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e63686;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }else {
                                                                                                                        if(state_val_63517 === 22) {
                                                                                                                          try {
                                                                                                                            var state_63516__$1 = state_63516;
                                                                                                                            var statearr_63693_63893 = state_63516__$1;
                                                                                                                            statearr_63693_63893[2] = null;
                                                                                                                            statearr_63693_63893[1] = 30;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e63691) {
                                                                                                                            if(e63691 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e63691;
                                                                                                                              var statearr_63692_63894 = state_63516;
                                                                                                                              statearr_63692_63894[1] = 17;
                                                                                                                              statearr_63692_63894[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e63691;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_63517 === 54) {
                                                                                                                            try {
                                                                                                                              try {
                                                                                                                                var state_63516__$1 = state_63516;
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  var statearr_63698_63895 = state_63516__$1;
                                                                                                                                  statearr_63698_63895[1] = 56
                                                                                                                                }else {
                                                                                                                                  var statearr_63699_63896 = state_63516__$1;
                                                                                                                                  statearr_63699_63896[1] = 57
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e63696) {
                                                                                                                                if(e63696 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e63696;
                                                                                                                                  var statearr_63697_63897 = state_63516;
                                                                                                                                  statearr_63697_63897[1] = 12;
                                                                                                                                  statearr_63697_63897[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e63696;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }catch(e63694) {
                                                                                                                              if(e63694 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e63694;
                                                                                                                                var statearr_63695_63898 = state_63516;
                                                                                                                                statearr_63695_63898[1] = 48;
                                                                                                                                statearr_63695_63898[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e63694;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_63517 === 23) {
                                                                                                                              try {
                                                                                                                                var inst_63379 = state_63516[9];
                                                                                                                                var inst_63425 = cljs.core._EQ_.call(null, inst_63379, "\ufdd0:nav");
                                                                                                                                var state_63516__$1 = state_63516;
                                                                                                                                if(inst_63425) {
                                                                                                                                  var statearr_63702_63899 = state_63516__$1;
                                                                                                                                  statearr_63702_63899[1] = 37
                                                                                                                                }else {
                                                                                                                                  var statearr_63703_63900 = state_63516__$1;
                                                                                                                                  statearr_63703_63900[1] = 38
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e63700) {
                                                                                                                                if(e63700 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e63700;
                                                                                                                                  var statearr_63701_63901 = state_63516;
                                                                                                                                  statearr_63701_63901[1] = 17;
                                                                                                                                  statearr_63701_63901[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e63700;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_63517 === 55) {
                                                                                                                                try {
                                                                                                                                  try {
                                                                                                                                    var inst_63468 = state_63516[2];
                                                                                                                                    var state_63516__$1 = state_63516;
                                                                                                                                    var statearr_63708_63902 = state_63516__$1;
                                                                                                                                    statearr_63708_63902[2] = inst_63468;
                                                                                                                                    statearr_63708_63902[1] = 47;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e63706) {
                                                                                                                                    if(e63706 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e63706;
                                                                                                                                      var statearr_63707_63903 = state_63516;
                                                                                                                                      statearr_63707_63903[1] = 12;
                                                                                                                                      statearr_63707_63903[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e63706;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }catch(e63704) {
                                                                                                                                  if(e63704 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e63704;
                                                                                                                                    var statearr_63705_63904 = state_63516;
                                                                                                                                    statearr_63705_63904[1] = 48;
                                                                                                                                    statearr_63705_63904[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e63704;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }else {
                                                                                                                                if(state_val_63517 === 24) {
                                                                                                                                  try {
                                                                                                                                    var inst_63437 = state_63516[2];
                                                                                                                                    var state_63516__$1 = state_63516;
                                                                                                                                    var statearr_63711_63905 = state_63516__$1;
                                                                                                                                    statearr_63711_63905[2] = inst_63437;
                                                                                                                                    statearr_63711_63905[1] = 16;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e63709) {
                                                                                                                                    if(e63709 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e63709;
                                                                                                                                      var statearr_63710_63906 = state_63516;
                                                                                                                                      statearr_63710_63906[1] = 17;
                                                                                                                                      statearr_63710_63906[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e63709;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_63517 === 56) {
                                                                                                                                    try {
                                                                                                                                      try {
                                                                                                                                        var inst_63463 = function() {
                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                        }();
                                                                                                                                        var state_63516__$1 = state_63516;
                                                                                                                                        var statearr_63716_63907 = state_63516__$1;
                                                                                                                                        statearr_63716_63907[2] = inst_63463;
                                                                                                                                        statearr_63716_63907[1] = 58;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e63714) {
                                                                                                                                        if(e63714 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e63714;
                                                                                                                                          var statearr_63715_63908 = state_63516;
                                                                                                                                          statearr_63715_63908[1] = 12;
                                                                                                                                          statearr_63715_63908[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e63714;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }catch(e63712) {
                                                                                                                                      if(e63712 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e63712;
                                                                                                                                        var statearr_63713_63909 = state_63516;
                                                                                                                                        statearr_63713_63909[1] = 48;
                                                                                                                                        statearr_63713_63909[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e63712;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_63517 === 25) {
                                                                                                                                      try {
                                                                                                                                        var inst_63423 = state_63516[2];
                                                                                                                                        var state_63516__$1 = state_63516;
                                                                                                                                        var statearr_63719_63910 = state_63516__$1;
                                                                                                                                        statearr_63719_63910[2] = inst_63423;
                                                                                                                                        statearr_63719_63910[1] = 24;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e63717) {
                                                                                                                                        if(e63717 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e63717;
                                                                                                                                          var statearr_63718_63911 = state_63516;
                                                                                                                                          statearr_63718_63911[1] = 17;
                                                                                                                                          statearr_63718_63911[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e63717;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_63517 === 57) {
                                                                                                                                        try {
                                                                                                                                          try {
                                                                                                                                            var state_63516__$1 = state_63516;
                                                                                                                                            var statearr_63724_63912 = state_63516__$1;
                                                                                                                                            statearr_63724_63912[2] = null;
                                                                                                                                            statearr_63724_63912[1] = 58;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e63722) {
                                                                                                                                            if(e63722 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e63722;
                                                                                                                                              var statearr_63723_63913 = state_63516;
                                                                                                                                              statearr_63723_63913[1] = 12;
                                                                                                                                              statearr_63723_63913[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e63722;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }catch(e63720) {
                                                                                                                                          if(e63720 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e63720;
                                                                                                                                            var statearr_63721_63914 = state_63516;
                                                                                                                                            statearr_63721_63914[1] = 48;
                                                                                                                                            statearr_63721_63914[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e63720;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }else {
                                                                                                                                        if(state_val_63517 === 26) {
                                                                                                                                          try {
                                                                                                                                            var inst_63401 = state_63516[15];
                                                                                                                                            var inst_63401__$1 = state_63516[2];
                                                                                                                                            var inst_63402 = inst_63401__$1 === cljs.core.match.backtrack;
                                                                                                                                            var state_63516__$1 = function() {
                                                                                                                                              var statearr_63727 = state_63516;
                                                                                                                                              statearr_63727[15] = inst_63401__$1;
                                                                                                                                              return statearr_63727
                                                                                                                                            }();
                                                                                                                                            if(cljs.core.truth_(inst_63402)) {
                                                                                                                                              var statearr_63728_63915 = state_63516__$1;
                                                                                                                                              statearr_63728_63915[1] = 27
                                                                                                                                            }else {
                                                                                                                                              var statearr_63729_63916 = state_63516__$1;
                                                                                                                                              statearr_63729_63916[1] = 28
                                                                                                                                            }
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e63725) {
                                                                                                                                            if(e63725 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e63725;
                                                                                                                                              var statearr_63726_63917 = state_63516;
                                                                                                                                              statearr_63726_63917[1] = 17;
                                                                                                                                              statearr_63726_63917[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e63725;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_63517 === 58) {
                                                                                                                                            try {
                                                                                                                                              try {
                                                                                                                                                var inst_63466 = state_63516[2];
                                                                                                                                                var state_63516__$1 = state_63516;
                                                                                                                                                var statearr_63734_63918 = state_63516__$1;
                                                                                                                                                statearr_63734_63918[2] = inst_63466;
                                                                                                                                                statearr_63734_63918[1] = 55;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e63732) {
                                                                                                                                                if(e63732 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e63732;
                                                                                                                                                  var statearr_63733_63919 = state_63516;
                                                                                                                                                  statearr_63733_63919[1] = 12;
                                                                                                                                                  statearr_63733_63919[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e63732;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }catch(e63730) {
                                                                                                                                              if(e63730 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e63730;
                                                                                                                                                var statearr_63731_63920 = state_63516;
                                                                                                                                                statearr_63731_63920[1] = 48;
                                                                                                                                                statearr_63731_63920[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e63730;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_63517 === 27) {
                                                                                                                                              try {
                                                                                                                                                var inst_63404 = function() {
                                                                                                                                                  throw cljs.core.match.backtrack;
                                                                                                                                                }();
                                                                                                                                                var state_63516__$1 = state_63516;
                                                                                                                                                var statearr_63737_63921 = state_63516__$1;
                                                                                                                                                statearr_63737_63921[2] = inst_63404;
                                                                                                                                                statearr_63737_63921[1] = 29;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e63735) {
                                                                                                                                                if(e63735 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e63735;
                                                                                                                                                  var statearr_63736_63922 = state_63516;
                                                                                                                                                  statearr_63736_63922[1] = 17;
                                                                                                                                                  statearr_63736_63922[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e63735;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_63517 === 59) {
                                                                                                                                                try {
                                                                                                                                                  var state_63516__$1 = state_63516;
                                                                                                                                                  var statearr_63740_63923 = state_63516__$1;
                                                                                                                                                  statearr_63740_63923[2] = null;
                                                                                                                                                  statearr_63740_63923[1] = 67;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e63738) {
                                                                                                                                                  if(e63738 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e63738;
                                                                                                                                                    var statearr_63739_63924 = state_63516;
                                                                                                                                                    statearr_63739_63924[1] = 12;
                                                                                                                                                    statearr_63739_63924[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e63738;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }else {
                                                                                                                                                if(state_val_63517 === 28) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_63401 = state_63516[15];
                                                                                                                                                    var inst_63406 = function() {
                                                                                                                                                      throw inst_63401;
                                                                                                                                                    }();
                                                                                                                                                    var state_63516__$1 = state_63516;
                                                                                                                                                    var statearr_63743_63925 = state_63516__$1;
                                                                                                                                                    statearr_63743_63925[2] = inst_63406;
                                                                                                                                                    statearr_63743_63925[1] = 29;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e63741) {
                                                                                                                                                    if(e63741 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e63741;
                                                                                                                                                      var statearr_63742_63926 = state_63516;
                                                                                                                                                      statearr_63742_63926[1] = 17;
                                                                                                                                                      statearr_63742_63926[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e63741;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_63517 === 60) {
                                                                                                                                                    try {
                                                                                                                                                      var state_63516__$1 = state_63516;
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        var statearr_63746_63927 = state_63516__$1;
                                                                                                                                                        statearr_63746_63927[1] = 74
                                                                                                                                                      }else {
                                                                                                                                                        var statearr_63747_63928 = state_63516__$1;
                                                                                                                                                        statearr_63747_63928[1] = 75
                                                                                                                                                      }
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e63744) {
                                                                                                                                                      if(e63744 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e63744;
                                                                                                                                                        var statearr_63745_63929 = state_63516;
                                                                                                                                                        statearr_63745_63929[1] = 12;
                                                                                                                                                        statearr_63745_63929[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e63744;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_63517 === 29) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_63408 = state_63516[2];
                                                                                                                                                        var state_63516__$1 = state_63516;
                                                                                                                                                        var statearr_63750_63930 = state_63516__$1;
                                                                                                                                                        statearr_63750_63930[2] = inst_63408;
                                                                                                                                                        statearr_63750_63930[1] = 25;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e63748) {
                                                                                                                                                        if(e63748 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e63748;
                                                                                                                                                          var statearr_63749_63931 = state_63516;
                                                                                                                                                          statearr_63749_63931[1] = 17;
                                                                                                                                                          statearr_63749_63931[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e63748;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_63517 === 61) {
                                                                                                                                                        try {
                                                                                                                                                          var inst_63504 = state_63516[2];
                                                                                                                                                          var state_63516__$1 = state_63516;
                                                                                                                                                          var statearr_63753_63932 = state_63516__$1;
                                                                                                                                                          statearr_63753_63932[2] = inst_63504;
                                                                                                                                                          statearr_63753_63932[1] = 46;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }catch(e63751) {
                                                                                                                                                          if(e63751 instanceof Error) {
                                                                                                                                                            var ex__5575__auto__ = e63751;
                                                                                                                                                            var statearr_63752_63933 = state_63516;
                                                                                                                                                            statearr_63752_63933[1] = 12;
                                                                                                                                                            statearr_63752_63933[2] = ex__5575__auto__;
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }else {
                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                              throw e63751;
                                                                                                                                                            }else {
                                                                                                                                                              return null
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_63517 === 30) {
                                                                                                                                                          try {
                                                                                                                                                            try {
                                                                                                                                                              var inst_63380 = state_63516[6];
                                                                                                                                                              var inst_63411 = cljs.core._EQ_.call(null, inst_63380, "\ufdd0:login-success");
                                                                                                                                                              var state_63516__$1 = state_63516;
                                                                                                                                                              if(inst_63411) {
                                                                                                                                                                var statearr_63758_63934 = state_63516__$1;
                                                                                                                                                                statearr_63758_63934[1] = 31
                                                                                                                                                              }else {
                                                                                                                                                                var statearr_63759_63935 = state_63516__$1;
                                                                                                                                                                statearr_63759_63935[1] = 32
                                                                                                                                                              }
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e63756) {
                                                                                                                                                              if(e63756 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e63756;
                                                                                                                                                                var statearr_63757_63936 = state_63516;
                                                                                                                                                                statearr_63757_63936[1] = 17;
                                                                                                                                                                statearr_63757_63936[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e63756;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }catch(e63754) {
                                                                                                                                                            if(e63754 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e63754;
                                                                                                                                                              var statearr_63755_63937 = state_63516;
                                                                                                                                                              statearr_63755_63937[1] = 26;
                                                                                                                                                              statearr_63755_63937[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e63754;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_63517 === 62) {
                                                                                                                                                            try {
                                                                                                                                                              var inst_63496 = state_63516[2];
                                                                                                                                                              var state_63516__$1 = state_63516;
                                                                                                                                                              var statearr_63762_63938 = state_63516__$1;
                                                                                                                                                              statearr_63762_63938[2] = inst_63496;
                                                                                                                                                              statearr_63762_63938[1] = 61;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e63760) {
                                                                                                                                                              if(e63760 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e63760;
                                                                                                                                                                var statearr_63761_63939 = state_63516;
                                                                                                                                                                statearr_63761_63939[1] = 12;
                                                                                                                                                                statearr_63761_63939[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e63760;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_63517 === 31) {
                                                                                                                                                              try {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_63381 = state_63516[10];
                                                                                                                                                                  var inst_63413 = chatter_box.login_view_component.login_successfull.call(null, inst_63381);
                                                                                                                                                                  var state_63516__$1 = state_63516;
                                                                                                                                                                  var statearr_63767_63940 = state_63516__$1;
                                                                                                                                                                  statearr_63767_63940[2] = inst_63413;
                                                                                                                                                                  statearr_63767_63940[1] = 33;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e63765) {
                                                                                                                                                                  if(e63765 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e63765;
                                                                                                                                                                    var statearr_63766_63941 = state_63516;
                                                                                                                                                                    statearr_63766_63941[1] = 17;
                                                                                                                                                                    statearr_63766_63941[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e63765;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }catch(e63763) {
                                                                                                                                                                if(e63763 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e63763;
                                                                                                                                                                  var statearr_63764_63942 = state_63516;
                                                                                                                                                                  statearr_63764_63942[1] = 26;
                                                                                                                                                                  statearr_63764_63942[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e63763;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_63517 === 63) {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_63474 = state_63516[5];
                                                                                                                                                                  var inst_63474__$1 = state_63516[2];
                                                                                                                                                                  var inst_63475 = inst_63474__$1 === cljs.core.match.backtrack;
                                                                                                                                                                  var state_63516__$1 = function() {
                                                                                                                                                                    var statearr_63770 = state_63516;
                                                                                                                                                                    statearr_63770[5] = inst_63474__$1;
                                                                                                                                                                    return statearr_63770
                                                                                                                                                                  }();
                                                                                                                                                                  if(cljs.core.truth_(inst_63475)) {
                                                                                                                                                                    var statearr_63771_63943 = state_63516__$1;
                                                                                                                                                                    statearr_63771_63943[1] = 64
                                                                                                                                                                  }else {
                                                                                                                                                                    var statearr_63772_63944 = state_63516__$1;
                                                                                                                                                                    statearr_63772_63944[1] = 65
                                                                                                                                                                  }
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e63768) {
                                                                                                                                                                  if(e63768 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e63768;
                                                                                                                                                                    var statearr_63769_63945 = state_63516;
                                                                                                                                                                    statearr_63769_63945[1] = 12;
                                                                                                                                                                    statearr_63769_63945[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e63768;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_63774 = new Array(16);
            statearr_63774[0] = state_machine__5582__auto__;
            statearr_63774[1] = 1;
            return statearr_63774
          };
          var state_machine__5582__auto____1 = function(state_63516) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_63516);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_63516) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_63516)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_63775 = f__5654__auto__.call(null);
      statearr_63775[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_63775
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.user_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.user_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:created"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", 
"\ufdd0:key", "\ufdd0:updated"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null], true);
chatter_box.user_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.user_view_component.user = cljs.core.atom.call(null, null);
chatter_box.user_view_component.create_user_view_component = function create_user_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.user_view_component.t12989 !== "undefined") {
  }else {
    goog.provide("chatter_box.user_view_component.t12989");
    chatter_box.user_view_component.t12989 = function(in_ch, create_user_view_component, meta12990) {
      this.in_ch = in_ch;
      this.create_user_view_component = create_user_view_component;
      this.meta12990 = meta12990;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.user_view_component.t12989.cljs$lang$type = true;
    chatter_box.user_view_component.t12989.cljs$lang$ctorStr = "chatter-box.user-view-component/t12989";
    chatter_box.user_view_component.t12989.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.user-view-component/t12989")
    };
    chatter_box.user_view_component.t12989.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.user_view_component.t12989.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.out_chan, out_ch);
      return chatter_box.user_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.user_view_component.t12989.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.user_view_component.valid_types).call(null, msg)
    };
    chatter_box.user_view_component.t12989.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.user_view_component.t12989.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12991) {
      var self__ = this;
      return self__.meta12990
    };
    chatter_box.user_view_component.t12989.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12991, meta12990__$1) {
      var self__ = this;
      return new chatter_box.user_view_component.t12989(self__.in_ch, self__.create_user_view_component, meta12990__$1)
    };
    chatter_box.user_view_component.__GT_t12989 = function __GT_t12989(in_ch__$1, create_user_view_component__$1, meta12990) {
      return new chatter_box.user_view_component.t12989(in_ch__$1, create_user_view_component__$1, meta12990)
    }
  }
  return new chatter_box.user_view_component.t12989(in_ch, create_user_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/update_user.html[".container"]') == null) {
  var vec__12993_12998 = enfocus.core.replace_ids.call(null, "en12992_", '\x3cdiv id\x3d"update-user-container" class\x3d"container"\x3e \n \x3cform id\x3d"update-user-form" name\x3d"create-user-form" class\x3d"form-create-user"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3eUpdate Profile\x3c/h2\x3e \n  \x3cinput id\x3d"up-first" name\x3d"first" type\x3d"text" class\x3d"form-control" placeholder\x3d"First Name" /\x3e \n  \x3cinput id\x3d"up-last" name\x3d"last" type\x3d"text" class\x3d"form-control" placeholder\x3d"Last Name" /\x3e \n  \x3cinput id\x3d"up-img-url" name\x3d"img-url" type\x3d"text" class\x3d"form-control" placeholder\x3d"Photo Url" /\x3e \n  \x3cbr /\x3e \n  \x3ca id\x3d"update-user-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"login.html" type\x3d"submit"\x3eSave\x3c/a\x3e \n \x3c/form\x3e \n\x3c/div\x3e');
  var sym__4174__auto___12999 = cljs.core.nth.call(null, vec__12993_12998, 0, null);
  var txt__4175__auto___13000 = cljs.core.nth.call(null, vec__12993_12998, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/update_user.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___12999, txt__4175__auto___13000], true))
}else {
}
chatter_box.user_view_component.update_user_page = function update_user_page() {
  var vec__12997 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/update_user.html[".container"]')
  }.call(null);
  var id_sym12994 = cljs.core.nth.call(null, vec__12997, 0, null);
  var pnod12995 = cljs.core.nth.call(null, vec__12997, 1, null);
  var pnod12995__$1 = enfocus.core.create_hidden_dom.call(null, pnod12995);
  enfocus.core.i_at.call(null, id_sym12994, pnod12995__$1, "#update-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym12994, pnod12995__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod12995__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/create_user.html[".container"]') == null) {
  var vec__13002_13007 = enfocus.core.replace_ids.call(null, "en13001_", '\x3cdiv id\x3d"create-user-container" class\x3d"container"\x3e \n \x3cform id\x3d"create-user-form" name\x3d"create-user-form" class\x3d"form-create-user"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3eCreate a User\x3c/h2\x3e \n  \x3cinput id\x3d"cr-username" name\x3d"username" type\x3d"text" class\x3d"form-control" placeholder\x3d"Username" autofocus\x3d"" /\x3e \n  \x3cinput id\x3d"cr-password" name\x3d"password" type\x3d"text" class\x3d"form-control" placeholder\x3d"Password" /\x3e \n  \x3cinput id\x3d"cr-password2" name\x3d"password2" type\x3d"text" class\x3d"form-control" placeholder\x3d"Repeat Password" /\x3e \n  \x3cbr /\x3e \n  \x3cinput id\x3d"cr-first" name\x3d"first" type\x3d"text" class\x3d"form-control" placeholder\x3d"First Name" /\x3e \n  \x3cinput id\x3d"cr-last" name\x3d"last" type\x3d"text" class\x3d"form-control" placeholder\x3d"Last Name" /\x3e \n  \x3cinput id\x3d"cr-img-url" name\x3d"img-url" type\x3d"text" class\x3d"form-control" placeholder\x3d"Photo Url" /\x3e \n  \x3cbr /\x3e \n  \x3ca id\x3d"create-user-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"login.html" type\x3d"submit"\x3eCreate User\x3c/a\x3e \n \x3c/form\x3e \n\x3c/div\x3e');
  var sym__4174__auto___13008 = cljs.core.nth.call(null, vec__13002_13007, 0, null);
  var txt__4175__auto___13009 = cljs.core.nth.call(null, vec__13002_13007, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/create_user.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___13008, txt__4175__auto___13009], true))
}else {
}
chatter_box.user_view_component.create_user_page = function create_user_page() {
  var vec__13006 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/create_user.html[".container"]')
  }.call(null);
  var id_sym13003 = cljs.core.nth.call(null, vec__13006, 0, null);
  var pnod13004 = cljs.core.nth.call(null, vec__13006, 1, null);
  var pnod13004__$1 = enfocus.core.create_hidden_dom.call(null, pnod13004);
  enfocus.core.i_at.call(null, id_sym13003, pnod13004__$1, "#create-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym13003, pnod13004__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod13004__$1)
};
chatter_box.user_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, document, "body", enfocus.core.append.call(null, chatter_box.user_view_component.create_user_page.call(null), chatter_box.user_view_component.update_user_page.call(null)), "#create-user-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.user_view_component.create_user)), "#update-user-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), 
  enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.user_view_component.update_user)))
};
chatter_box.user_view_component.navigate = function navigate(p__13010) {
  var map__13013 = p__13010;
  var map__13013__$1 = cljs.core.seq_QMARK_.call(null, map__13013) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13013) : map__13013;
  var page = cljs.core.get.call(null, map__13013__$1, "\ufdd0:key");
  var vec__13014 = cljs.core._EQ_.call(null, page, "\ufdd0:create-user") ? cljs.core.PersistentVector.fromArray(["", "none"], true) : cljs.core._EQ_.call(null, page, "\ufdd0:update-user") ? cljs.core.PersistentVector.fromArray(["none", ""], true) : "\ufdd0:else" ? cljs.core.PersistentVector.fromArray(["none", "none"], true) : null;
  var create_dis = cljs.core.nth.call(null, vec__13014, 0, null);
  var update_dis = cljs.core.nth.call(null, vec__13014, 1, null);
  enfocus.core.at.call(null, "#create-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", create_dis), "#update-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", update_dis));
  if(cljs.core.empty_QMARK_.call(null, update_dis)) {
    return enfocus.core.at.call(null, "#up-first", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:first")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user))), "#up-last", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:last")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user))), "#up-img-url", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, 
    cljs.core.deref.call(null, chatter_box.user_view_component.user))))
  }else {
    return null
  }
};
chatter_box.user_view_component.user_error = function user_error(msg) {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.user_error_message.call(null, null, msg))
};
chatter_box.user_view_component.validate_create_user_form = function validate_create_user_form(form) {
  if(cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("\ufdd0:password")).call(null, form), (new cljs.core.Keyword("\ufdd0:password2")).call(null, form))) {
    return"passwords need to match"
  }else {
    if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form))) {
      return"username required"
    }else {
      if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:password")).call(null, form))) {
        return"password required"
      }else {
        if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:first")).call(null, form))) {
          return"first name required"
        }else {
          if("\ufdd0:else") {
            return"\ufdd0:valid"
          }else {
            return null
          }
        }
      }
    }
  }
};
chatter_box.user_view_component.validate_update_user_form = function validate_update_user_form(form) {
  if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:first")).call(null, form))) {
  }else {
  }
  return"\ufdd0:valid"
};
chatter_box.user_view_component.create_user = function create_user() {
  var form = enfocus.core.from.call(null, "#create-user-form", enfocus.core.read_form.call(null));
  var val = chatter_box.user_view_component.validate_create_user_form.call(null, form);
  if(cljs.core._EQ_.call(null, val, "\ufdd0:valid")) {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_user_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form), (new cljs.core.Keyword("\ufdd0:password")).call(null, form), (new cljs.core.Keyword("\ufdd0:first")).call(null, form), (new cljs.core.Keyword("\ufdd0:last")).call(null, form), (new cljs.core.Keyword("\ufdd0:img-url")).call(null, form)))
  }else {
    return chatter_box.user_view_component.user_error.call(null, val)
  }
};
chatter_box.user_view_component.update_user = function update_user() {
  var form = enfocus.core.from.call(null, "#update-user-form", enfocus.core.read_form.call(null));
  var val = chatter_box.user_view_component.validate_update_user_form.call(null, form);
  if(cljs.core._EQ_.call(null, val, "\ufdd0:valid")) {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.update_user_message.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user), "\ufdd0:first", (new cljs.core.Keyword("\ufdd0:first")).call(null, form), "\ufdd0:last", (new cljs.core.Keyword("\ufdd0:last")).call(null, form), "\ufdd0:img-url", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, form))))
  }else {
    return chatter_box.user_view_component.user_error.call(null, val)
  }
};
chatter_box.user_view_component.user_created = function user_created() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:login", "user created"))
};
chatter_box.user_view_component.user_updated = function user_updated(usr) {
  if(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, usr), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user)))) {
    cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, usr);
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", "user updated"))
  }else {
    return null
  }
};
chatter_box.user_view_component.login_success = function login_success(msg) {
  return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, (new cljs.core.Keyword("\ufdd0:user")).call(null, msg))
};
chatter_box.user_view_component.logout = function logout() {
  return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, null)
};
chatter_box.user_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_13865) {
        var state_val_13866 = state_13865[1];
        if(state_val_13866 === 32) {
          try {
            var inst_13684 = function() {
              throw cljs.core.match.backtrack;
            }();
            var state_13865__$1 = state_13865;
            var statearr_13869_14273 = state_13865__$1;
            statearr_13869_14273[2] = inst_13684;
            statearr_13869_14273[1] = 34;
            return"\ufdd0:recur"
          }catch(e13867) {
            if(e13867 instanceof Error) {
              var ex__5575__auto__ = e13867;
              var statearr_13868_14274 = state_13865;
              statearr_13868_14274[1] = 22;
              statearr_13868_14274[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e13867;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_13866 === 64) {
            try {
              var inst_13770 = state_13865[2];
              var state_13865__$1 = state_13865;
              var statearr_13872_14275 = state_13865__$1;
              statearr_13872_14275[2] = inst_13770;
              statearr_13872_14275[1] = 63;
              return"\ufdd0:recur"
            }catch(e13870) {
              if(e13870 instanceof Error) {
                var ex__5575__auto__ = e13870;
                var statearr_13871_14276 = state_13865;
                statearr_13871_14276[1] = 17;
                statearr_13871_14276[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e13870;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_13866 === 96) {
              try {
                try {
                  var state_13865__$1 = state_13865;
                  var statearr_13877_14277 = state_13865__$1;
                  statearr_13877_14277[2] = null;
                  statearr_13877_14277[1] = 97;
                  return"\ufdd0:recur"
                }catch(e13875) {
                  if(e13875 instanceof Error) {
                    var ex__5575__auto__ = e13875;
                    var statearr_13876_14278 = state_13865;
                    statearr_13876_14278[1] = 12;
                    statearr_13876_14278[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e13875;
                    }else {
                      return null
                    }
                  }
                }
              }catch(e13873) {
                if(e13873 instanceof Error) {
                  var ex__5575__auto__ = e13873;
                  var statearr_13874_14279 = state_13865;
                  statearr_13874_14279[1] = 87;
                  statearr_13874_14279[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e13873;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_13866 === 1) {
                var state_13865__$1 = state_13865;
                var statearr_13878_14280 = state_13865__$1;
                statearr_13878_14280[2] = null;
                statearr_13878_14280[1] = 2;
                return"\ufdd0:recur"
              }else {
                if(state_val_13866 === 33) {
                  try {
                    var inst_13681 = state_13865[5];
                    var inst_13686 = function() {
                      throw inst_13681;
                    }();
                    var state_13865__$1 = state_13865;
                    var statearr_13881_14281 = state_13865__$1;
                    statearr_13881_14281[2] = inst_13686;
                    statearr_13881_14281[1] = 34;
                    return"\ufdd0:recur"
                  }catch(e13879) {
                    if(e13879 instanceof Error) {
                      var ex__5575__auto__ = e13879;
                      var statearr_13880_14282 = state_13865;
                      statearr_13880_14282[1] = 22;
                      statearr_13880_14282[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e13879;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_13866 === 65) {
                    try {
                      var inst_13748 = state_13865[6];
                      var inst_13748__$1 = state_13865[2];
                      var inst_13749 = inst_13748__$1 === cljs.core.match.backtrack;
                      var state_13865__$1 = function() {
                        var statearr_13884 = state_13865;
                        statearr_13884[6] = inst_13748__$1;
                        return statearr_13884
                      }();
                      if(cljs.core.truth_(inst_13749)) {
                        var statearr_13885_14283 = state_13865__$1;
                        statearr_13885_14283[1] = 66
                      }else {
                        var statearr_13886_14284 = state_13865__$1;
                        statearr_13886_14284[1] = 67
                      }
                      return"\ufdd0:recur"
                    }catch(e13882) {
                      if(e13882 instanceof Error) {
                        var ex__5575__auto__ = e13882;
                        var statearr_13883_14285 = state_13865;
                        statearr_13883_14285[1] = 17;
                        statearr_13883_14285[2] = ex__5575__auto__;
                        return"\ufdd0:recur"
                      }else {
                        if("\ufdd0:else") {
                          throw e13882;
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(state_val_13866 === 97) {
                      try {
                        try {
                          var inst_13813 = state_13865[2];
                          var state_13865__$1 = state_13865;
                          var statearr_13891_14286 = state_13865__$1;
                          statearr_13891_14286[2] = inst_13813;
                          statearr_13891_14286[1] = 94;
                          return"\ufdd0:recur"
                        }catch(e13889) {
                          if(e13889 instanceof Error) {
                            var ex__5575__auto__ = e13889;
                            var statearr_13890_14287 = state_13865;
                            statearr_13890_14287[1] = 12;
                            statearr_13890_14287[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e13889;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e13887) {
                        if(e13887 instanceof Error) {
                          var ex__5575__auto__ = e13887;
                          var statearr_13888_14288 = state_13865;
                          statearr_13888_14288[1] = 87;
                          statearr_13888_14288[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e13887;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_13866 === 2) {
                        var state_13865__$1 = state_13865;
                        if(true) {
                          var statearr_13892_14289 = state_13865__$1;
                          statearr_13892_14289[1] = 4
                        }else {
                          var statearr_13893_14290 = state_13865__$1;
                          statearr_13893_14290[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_13866 === 34) {
                          try {
                            var inst_13688 = state_13865[2];
                            var state_13865__$1 = state_13865;
                            var statearr_13896_14291 = state_13865__$1;
                            statearr_13896_14291[2] = inst_13688;
                            statearr_13896_14291[1] = 30;
                            return"\ufdd0:recur"
                          }catch(e13894) {
                            if(e13894 instanceof Error) {
                              var ex__5575__auto__ = e13894;
                              var statearr_13895_14292 = state_13865;
                              statearr_13895_14292[1] = 22;
                              statearr_13895_14292[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e13894;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_13866 === 66) {
                            try {
                              var inst_13751 = function() {
                                throw cljs.core.match.backtrack;
                              }();
                              var state_13865__$1 = state_13865;
                              var statearr_13899_14293 = state_13865__$1;
                              statearr_13899_14293[2] = inst_13751;
                              statearr_13899_14293[1] = 68;
                              return"\ufdd0:recur"
                            }catch(e13897) {
                              if(e13897 instanceof Error) {
                                var ex__5575__auto__ = e13897;
                                var statearr_13898_14294 = state_13865;
                                statearr_13898_14294[1] = 17;
                                statearr_13898_14294[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e13897;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_13866 === 98) {
                              try {
                                var state_13865__$1 = state_13865;
                                var statearr_13902_14295 = state_13865__$1;
                                statearr_13902_14295[2] = null;
                                statearr_13902_14295[1] = 106;
                                return"\ufdd0:recur"
                              }catch(e13900) {
                                if(e13900 instanceof Error) {
                                  var ex__5575__auto__ = e13900;
                                  var statearr_13901_14296 = state_13865;
                                  statearr_13901_14296[1] = 12;
                                  statearr_13901_14296[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e13900;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_13866 === 3) {
                                var inst_13863 = state_13865[2];
                                var state_13865__$1 = state_13865;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13865__$1, inst_13863)
                              }else {
                                if(state_val_13866 === 35) {
                                  try {
                                    try {
                                      var inst_13656 = state_13865[7];
                                      var inst_13691 = cljs.core._EQ_.call(null, inst_13656, "\ufdd0:updated");
                                      var state_13865__$1 = state_13865;
                                      if(inst_13691) {
                                        var statearr_13907_14297 = state_13865__$1;
                                        statearr_13907_14297[1] = 36
                                      }else {
                                        var statearr_13908_14298 = state_13865__$1;
                                        statearr_13908_14298[1] = 37
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e13905) {
                                      if(e13905 instanceof Error) {
                                        var ex__5575__auto__ = e13905;
                                        var statearr_13906_14299 = state_13865;
                                        statearr_13906_14299[1] = 22;
                                        statearr_13906_14299[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e13905;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e13903) {
                                    if(e13903 instanceof Error) {
                                      var ex__5575__auto__ = e13903;
                                      var statearr_13904_14300 = state_13865;
                                      statearr_13904_14300[1] = 31;
                                      statearr_13904_14300[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e13903;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_13866 === 67) {
                                    try {
                                      var inst_13748 = state_13865[6];
                                      var inst_13753 = function() {
                                        throw inst_13748;
                                      }();
                                      var state_13865__$1 = state_13865;
                                      var statearr_13911_14301 = state_13865__$1;
                                      statearr_13911_14301[2] = inst_13753;
                                      statearr_13911_14301[1] = 68;
                                      return"\ufdd0:recur"
                                    }catch(e13909) {
                                      if(e13909 instanceof Error) {
                                        var ex__5575__auto__ = e13909;
                                        var statearr_13910_14302 = state_13865;
                                        statearr_13910_14302[1] = 17;
                                        statearr_13910_14302[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e13909;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_13866 === 99) {
                                      try {
                                        var state_13865__$1 = state_13865;
                                        if("\ufdd0:else") {
                                          var statearr_13914_14303 = state_13865__$1;
                                          statearr_13914_14303[1] = 113
                                        }else {
                                          var statearr_13915_14304 = state_13865__$1;
                                          statearr_13915_14304[1] = 114
                                        }
                                        return"\ufdd0:recur"
                                      }catch(e13912) {
                                        if(e13912 instanceof Error) {
                                          var ex__5575__auto__ = e13912;
                                          var statearr_13913_14305 = state_13865;
                                          statearr_13913_14305[1] = 12;
                                          statearr_13913_14305[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e13912;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_13866 === 4) {
                                        var state_13865__$1 = state_13865;
                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13865__$1, 7, in_ch)
                                      }else {
                                        if(state_val_13866 === 36) {
                                          try {
                                            try {
                                              var inst_13657 = state_13865[8];
                                              var inst_13693 = chatter_box.user_view_component.user_updated.call(null, inst_13657);
                                              var state_13865__$1 = state_13865;
                                              var statearr_13920_14306 = state_13865__$1;
                                              statearr_13920_14306[2] = inst_13693;
                                              statearr_13920_14306[1] = 38;
                                              return"\ufdd0:recur"
                                            }catch(e13918) {
                                              if(e13918 instanceof Error) {
                                                var ex__5575__auto__ = e13918;
                                                var statearr_13919_14307 = state_13865;
                                                statearr_13919_14307[1] = 22;
                                                statearr_13919_14307[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e13918;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e13916) {
                                            if(e13916 instanceof Error) {
                                              var ex__5575__auto__ = e13916;
                                              var statearr_13917_14308 = state_13865;
                                              statearr_13917_14308[1] = 31;
                                              statearr_13917_14308[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e13916;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_13866 === 68) {
                                            try {
                                              var inst_13755 = state_13865[2];
                                              var state_13865__$1 = state_13865;
                                              var statearr_13923_14309 = state_13865__$1;
                                              statearr_13923_14309[2] = inst_13755;
                                              statearr_13923_14309[1] = 64;
                                              return"\ufdd0:recur"
                                            }catch(e13921) {
                                              if(e13921 instanceof Error) {
                                                var ex__5575__auto__ = e13921;
                                                var statearr_13922_14310 = state_13865;
                                                statearr_13922_14310[1] = 17;
                                                statearr_13922_14310[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e13921;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_13866 === 100) {
                                              try {
                                                var inst_13851 = state_13865[2];
                                                var state_13865__$1 = state_13865;
                                                var statearr_13926_14311 = state_13865__$1;
                                                statearr_13926_14311[2] = inst_13851;
                                                statearr_13926_14311[1] = 85;
                                                return"\ufdd0:recur"
                                              }catch(e13924) {
                                                if(e13924 instanceof Error) {
                                                  var ex__5575__auto__ = e13924;
                                                  var statearr_13925_14312 = state_13865;
                                                  statearr_13925_14312[1] = 12;
                                                  statearr_13925_14312[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e13924;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_13866 === 5) {
                                                var state_13865__$1 = state_13865;
                                                var statearr_13927_14313 = state_13865__$1;
                                                statearr_13927_14313[2] = null;
                                                statearr_13927_14313[1] = 6;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_13866 === 37) {
                                                  try {
                                                    try {
                                                      var state_13865__$1 = state_13865;
                                                      if("\ufdd0:else") {
                                                        var statearr_13932_14314 = state_13865__$1;
                                                        statearr_13932_14314[1] = 39
                                                      }else {
                                                        var statearr_13933_14315 = state_13865__$1;
                                                        statearr_13933_14315[1] = 40
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e13930) {
                                                      if(e13930 instanceof Error) {
                                                        var ex__5575__auto__ = e13930;
                                                        var statearr_13931_14316 = state_13865;
                                                        statearr_13931_14316[1] = 22;
                                                        statearr_13931_14316[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e13930;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }catch(e13928) {
                                                    if(e13928 instanceof Error) {
                                                      var ex__5575__auto__ = e13928;
                                                      var statearr_13929_14317 = state_13865;
                                                      statearr_13929_14317[1] = 31;
                                                      statearr_13929_14317[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e13928;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_13866 === 69) {
                                                    try {
                                                      try {
                                                        var inst_13656 = state_13865[7];
                                                        var inst_13758 = cljs.core._EQ_.call(null, inst_13656, "\ufdd0:created");
                                                        var state_13865__$1 = state_13865;
                                                        if(inst_13758) {
                                                          var statearr_13938_14318 = state_13865__$1;
                                                          statearr_13938_14318[1] = 70
                                                        }else {
                                                          var statearr_13939_14319 = state_13865__$1;
                                                          statearr_13939_14319[1] = 71
                                                        }
                                                        return"\ufdd0:recur"
                                                      }catch(e13936) {
                                                        if(e13936 instanceof Error) {
                                                          var ex__5575__auto__ = e13936;
                                                          var statearr_13937_14320 = state_13865;
                                                          statearr_13937_14320[1] = 17;
                                                          statearr_13937_14320[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e13936;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }catch(e13934) {
                                                      if(e13934 instanceof Error) {
                                                        var ex__5575__auto__ = e13934;
                                                        var statearr_13935_14321 = state_13865;
                                                        statearr_13935_14321[1] = 65;
                                                        statearr_13935_14321[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e13934;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_13866 === 101) {
                                                      try {
                                                        var inst_13843 = state_13865[2];
                                                        var state_13865__$1 = state_13865;
                                                        var statearr_13942_14322 = state_13865__$1;
                                                        statearr_13942_14322[2] = inst_13843;
                                                        statearr_13942_14322[1] = 100;
                                                        return"\ufdd0:recur"
                                                      }catch(e13940) {
                                                        if(e13940 instanceof Error) {
                                                          var ex__5575__auto__ = e13940;
                                                          var statearr_13941_14323 = state_13865;
                                                          statearr_13941_14323[1] = 12;
                                                          statearr_13941_14323[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e13940;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_13866 === 6) {
                                                        var inst_13861 = state_13865[2];
                                                        var state_13865__$1 = state_13865;
                                                        var statearr_13943_14324 = state_13865__$1;
                                                        statearr_13943_14324[2] = inst_13861;
                                                        statearr_13943_14324[1] = 3;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_13866 === 38) {
                                                          try {
                                                            try {
                                                              var inst_13701 = state_13865[2];
                                                              var state_13865__$1 = state_13865;
                                                              var statearr_13948_14325 = state_13865__$1;
                                                              statearr_13948_14325[2] = inst_13701;
                                                              statearr_13948_14325[1] = 30;
                                                              return"\ufdd0:recur"
                                                            }catch(e13946) {
                                                              if(e13946 instanceof Error) {
                                                                var ex__5575__auto__ = e13946;
                                                                var statearr_13947_14326 = state_13865;
                                                                statearr_13947_14326[1] = 22;
                                                                statearr_13947_14326[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e13946;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }catch(e13944) {
                                                            if(e13944 instanceof Error) {
                                                              var ex__5575__auto__ = e13944;
                                                              var statearr_13945_14327 = state_13865;
                                                              statearr_13945_14327[1] = 31;
                                                              statearr_13945_14327[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e13944;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_13866 === 70) {
                                                            try {
                                                              try {
                                                                var inst_13760 = chatter_box.user_view_component.user_created.call(null);
                                                                var state_13865__$1 = state_13865;
                                                                var statearr_13953_14328 = state_13865__$1;
                                                                statearr_13953_14328[2] = inst_13760;
                                                                statearr_13953_14328[1] = 72;
                                                                return"\ufdd0:recur"
                                                              }catch(e13951) {
                                                                if(e13951 instanceof Error) {
                                                                  var ex__5575__auto__ = e13951;
                                                                  var statearr_13952_14329 = state_13865;
                                                                  statearr_13952_14329[1] = 17;
                                                                  statearr_13952_14329[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e13951;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }catch(e13949) {
                                                              if(e13949 instanceof Error) {
                                                                var ex__5575__auto__ = e13949;
                                                                var statearr_13950_14330 = state_13865;
                                                                statearr_13950_14330[1] = 65;
                                                                statearr_13950_14330[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e13949;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_13866 === 102) {
                                                              try {
                                                                var inst_13821 = state_13865[9];
                                                                var inst_13821__$1 = state_13865[2];
                                                                var inst_13822 = inst_13821__$1 === cljs.core.match.backtrack;
                                                                var state_13865__$1 = function() {
                                                                  var statearr_13956 = state_13865;
                                                                  statearr_13956[9] = inst_13821__$1;
                                                                  return statearr_13956
                                                                }();
                                                                if(cljs.core.truth_(inst_13822)) {
                                                                  var statearr_13957_14331 = state_13865__$1;
                                                                  statearr_13957_14331[1] = 103
                                                                }else {
                                                                  var statearr_13958_14332 = state_13865__$1;
                                                                  statearr_13958_14332[1] = 104
                                                                }
                                                                return"\ufdd0:recur"
                                                              }catch(e13954) {
                                                                if(e13954 instanceof Error) {
                                                                  var ex__5575__auto__ = e13954;
                                                                  var statearr_13955_14333 = state_13865;
                                                                  statearr_13955_14333[1] = 12;
                                                                  statearr_13955_14333[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e13954;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_13866 === 7) {
                                                                var inst_13648 = state_13865[10];
                                                                var inst_13648__$1 = state_13865[2];
                                                                var inst_13649 = cljs.core.seq_QMARK_.call(null, inst_13648__$1);
                                                                var state_13865__$1 = function() {
                                                                  var statearr_13959 = state_13865;
                                                                  statearr_13959[10] = inst_13648__$1;
                                                                  return statearr_13959
                                                                }();
                                                                if(inst_13649) {
                                                                  var statearr_13960_14334 = state_13865__$1;
                                                                  statearr_13960_14334[1] = 8
                                                                }else {
                                                                  var statearr_13961_14335 = state_13865__$1;
                                                                  statearr_13961_14335[1] = 9
                                                                }
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if(state_val_13866 === 39) {
                                                                  try {
                                                                    try {
                                                                      var inst_13696 = function() {
                                                                        throw cljs.core.match.backtrack;
                                                                      }();
                                                                      var state_13865__$1 = state_13865;
                                                                      var statearr_13966_14336 = state_13865__$1;
                                                                      statearr_13966_14336[2] = inst_13696;
                                                                      statearr_13966_14336[1] = 41;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e13964) {
                                                                      if(e13964 instanceof Error) {
                                                                        var ex__5575__auto__ = e13964;
                                                                        var statearr_13965_14337 = state_13865;
                                                                        statearr_13965_14337[1] = 22;
                                                                        statearr_13965_14337[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e13964;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e13962) {
                                                                    if(e13962 instanceof Error) {
                                                                      var ex__5575__auto__ = e13962;
                                                                      var statearr_13963_14338 = state_13865;
                                                                      statearr_13963_14338[1] = 31;
                                                                      statearr_13963_14338[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e13962;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_13866 === 71) {
                                                                    try {
                                                                      try {
                                                                        var state_13865__$1 = state_13865;
                                                                        if("\ufdd0:else") {
                                                                          var statearr_13971_14339 = state_13865__$1;
                                                                          statearr_13971_14339[1] = 73
                                                                        }else {
                                                                          var statearr_13972_14340 = state_13865__$1;
                                                                          statearr_13972_14340[1] = 74
                                                                        }
                                                                        return"\ufdd0:recur"
                                                                      }catch(e13969) {
                                                                        if(e13969 instanceof Error) {
                                                                          var ex__5575__auto__ = e13969;
                                                                          var statearr_13970_14341 = state_13865;
                                                                          statearr_13970_14341[1] = 17;
                                                                          statearr_13970_14341[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e13969;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }catch(e13967) {
                                                                      if(e13967 instanceof Error) {
                                                                        var ex__5575__auto__ = e13967;
                                                                        var statearr_13968_14342 = state_13865;
                                                                        statearr_13968_14342[1] = 65;
                                                                        statearr_13968_14342[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e13967;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_13866 === 103) {
                                                                      try {
                                                                        var inst_13824 = function() {
                                                                          throw cljs.core.match.backtrack;
                                                                        }();
                                                                        var state_13865__$1 = state_13865;
                                                                        var statearr_13975_14343 = state_13865__$1;
                                                                        statearr_13975_14343[2] = inst_13824;
                                                                        statearr_13975_14343[1] = 105;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e13973) {
                                                                        if(e13973 instanceof Error) {
                                                                          var ex__5575__auto__ = e13973;
                                                                          var statearr_13974_14344 = state_13865;
                                                                          statearr_13974_14344[1] = 12;
                                                                          statearr_13974_14344[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e13973;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_13866 === 8) {
                                                                        var inst_13648 = state_13865[10];
                                                                        var inst_13651 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13648);
                                                                        var state_13865__$1 = state_13865;
                                                                        var statearr_13976_14345 = state_13865__$1;
                                                                        statearr_13976_14345[2] = inst_13651;
                                                                        statearr_13976_14345[1] = 10;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if(state_val_13866 === 40) {
                                                                          try {
                                                                            try {
                                                                              var state_13865__$1 = state_13865;
                                                                              var statearr_13981_14346 = state_13865__$1;
                                                                              statearr_13981_14346[2] = null;
                                                                              statearr_13981_14346[1] = 41;
                                                                              return"\ufdd0:recur"
                                                                            }catch(e13979) {
                                                                              if(e13979 instanceof Error) {
                                                                                var ex__5575__auto__ = e13979;
                                                                                var statearr_13980_14347 = state_13865;
                                                                                statearr_13980_14347[1] = 22;
                                                                                statearr_13980_14347[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e13979;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }catch(e13977) {
                                                                            if(e13977 instanceof Error) {
                                                                              var ex__5575__auto__ = e13977;
                                                                              var statearr_13978_14348 = state_13865;
                                                                              statearr_13978_14348[1] = 31;
                                                                              statearr_13978_14348[2] = ex__5575__auto__;
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if("\ufdd0:else") {
                                                                                throw e13977;
                                                                              }else {
                                                                                return null
                                                                              }
                                                                            }
                                                                          }
                                                                        }else {
                                                                          if(state_val_13866 === 72) {
                                                                            try {
                                                                              try {
                                                                                var inst_13768 = state_13865[2];
                                                                                var state_13865__$1 = state_13865;
                                                                                var statearr_13986_14349 = state_13865__$1;
                                                                                statearr_13986_14349[2] = inst_13768;
                                                                                statearr_13986_14349[1] = 64;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e13984) {
                                                                                if(e13984 instanceof Error) {
                                                                                  var ex__5575__auto__ = e13984;
                                                                                  var statearr_13985_14350 = state_13865;
                                                                                  statearr_13985_14350[1] = 17;
                                                                                  statearr_13985_14350[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e13984;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }catch(e13982) {
                                                                              if(e13982 instanceof Error) {
                                                                                var ex__5575__auto__ = e13982;
                                                                                var statearr_13983_14351 = state_13865;
                                                                                statearr_13983_14351[1] = 65;
                                                                                statearr_13983_14351[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e13982;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_13866 === 104) {
                                                                              try {
                                                                                var inst_13821 = state_13865[9];
                                                                                var inst_13826 = function() {
                                                                                  throw inst_13821;
                                                                                }();
                                                                                var state_13865__$1 = state_13865;
                                                                                var statearr_13989_14352 = state_13865__$1;
                                                                                statearr_13989_14352[2] = inst_13826;
                                                                                statearr_13989_14352[1] = 105;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e13987) {
                                                                                if(e13987 instanceof Error) {
                                                                                  var ex__5575__auto__ = e13987;
                                                                                  var statearr_13988_14353 = state_13865;
                                                                                  statearr_13988_14353[1] = 12;
                                                                                  statearr_13988_14353[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e13987;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_13866 === 9) {
                                                                                var inst_13648 = state_13865[10];
                                                                                var state_13865__$1 = state_13865;
                                                                                var statearr_13990_14354 = state_13865__$1;
                                                                                statearr_13990_14354[2] = inst_13648;
                                                                                statearr_13990_14354[1] = 10;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_13866 === 41) {
                                                                                  try {
                                                                                    try {
                                                                                      var inst_13699 = state_13865[2];
                                                                                      var state_13865__$1 = state_13865;
                                                                                      var statearr_13995_14355 = state_13865__$1;
                                                                                      statearr_13995_14355[2] = inst_13699;
                                                                                      statearr_13995_14355[1] = 38;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e13993) {
                                                                                      if(e13993 instanceof Error) {
                                                                                        var ex__5575__auto__ = e13993;
                                                                                        var statearr_13994_14356 = state_13865;
                                                                                        statearr_13994_14356[1] = 22;
                                                                                        statearr_13994_14356[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e13993;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }catch(e13991) {
                                                                                    if(e13991 instanceof Error) {
                                                                                      var ex__5575__auto__ = e13991;
                                                                                      var statearr_13992_14357 = state_13865;
                                                                                      statearr_13992_14357[1] = 31;
                                                                                      statearr_13992_14357[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e13991;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_13866 === 73) {
                                                                                    try {
                                                                                      try {
                                                                                        var inst_13763 = function() {
                                                                                          throw cljs.core.match.backtrack;
                                                                                        }();
                                                                                        var state_13865__$1 = state_13865;
                                                                                        var statearr_14000_14358 = state_13865__$1;
                                                                                        statearr_14000_14358[2] = inst_13763;
                                                                                        statearr_14000_14358[1] = 75;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e13998) {
                                                                                        if(e13998 instanceof Error) {
                                                                                          var ex__5575__auto__ = e13998;
                                                                                          var statearr_13999_14359 = state_13865;
                                                                                          statearr_13999_14359[1] = 17;
                                                                                          statearr_13999_14359[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e13998;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }catch(e13996) {
                                                                                      if(e13996 instanceof Error) {
                                                                                        var ex__5575__auto__ = e13996;
                                                                                        var statearr_13997_14360 = state_13865;
                                                                                        statearr_13997_14360[1] = 65;
                                                                                        statearr_13997_14360[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e13996;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_13866 === 105) {
                                                                                      try {
                                                                                        var inst_13828 = state_13865[2];
                                                                                        var state_13865__$1 = state_13865;
                                                                                        var statearr_14003_14361 = state_13865__$1;
                                                                                        statearr_14003_14361[2] = inst_13828;
                                                                                        statearr_14003_14361[1] = 101;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e14001) {
                                                                                        if(e14001 instanceof Error) {
                                                                                          var ex__5575__auto__ = e14001;
                                                                                          var statearr_14002_14362 = state_13865;
                                                                                          statearr_14002_14362[1] = 12;
                                                                                          statearr_14002_14362[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e14001;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_13866 === 10) {
                                                                                        var inst_13654 = state_13865[11];
                                                                                        var inst_13654__$1 = state_13865[2];
                                                                                        var inst_13655 = cljs.core.get.call(null, inst_13654__$1, "\ufdd0:area");
                                                                                        var inst_13656 = cljs.core.get.call(null, inst_13654__$1, "\ufdd0:key");
                                                                                        var inst_13657 = cljs.core.get.call(null, inst_13654__$1, "\ufdd0:data");
                                                                                        var state_13865__$1 = function() {
                                                                                          var statearr_14004 = state_13865;
                                                                                          statearr_14004[7] = inst_13656;
                                                                                          statearr_14004[8] = inst_13657;
                                                                                          statearr_14004[12] = inst_13655;
                                                                                          statearr_14004[11] = inst_13654__$1;
                                                                                          return statearr_14004
                                                                                        }();
                                                                                        var statearr_14005_14363 = state_13865__$1;
                                                                                        statearr_14005_14363[2] = null;
                                                                                        statearr_14005_14363[1] = 79;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_13866 === 42) {
                                                                                          try {
                                                                                            var inst_13706 = function() {
                                                                                              throw cljs.core.match.backtrack;
                                                                                            }();
                                                                                            var state_13865__$1 = state_13865;
                                                                                            var statearr_14008_14364 = state_13865__$1;
                                                                                            statearr_14008_14364[2] = inst_13706;
                                                                                            statearr_14008_14364[1] = 44;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e14006) {
                                                                                            if(e14006 instanceof Error) {
                                                                                              var ex__5575__auto__ = e14006;
                                                                                              var statearr_14007_14365 = state_13865;
                                                                                              statearr_14007_14365[1] = 22;
                                                                                              statearr_14007_14365[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e14006;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_13866 === 74) {
                                                                                            try {
                                                                                              try {
                                                                                                var state_13865__$1 = state_13865;
                                                                                                var statearr_14013_14366 = state_13865__$1;
                                                                                                statearr_14013_14366[2] = null;
                                                                                                statearr_14013_14366[1] = 75;
                                                                                                return"\ufdd0:recur"
                                                                                              }catch(e14011) {
                                                                                                if(e14011 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e14011;
                                                                                                  var statearr_14012_14367 = state_13865;
                                                                                                  statearr_14012_14367[1] = 17;
                                                                                                  statearr_14012_14367[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e14011;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }catch(e14009) {
                                                                                              if(e14009 instanceof Error) {
                                                                                                var ex__5575__auto__ = e14009;
                                                                                                var statearr_14010_14368 = state_13865;
                                                                                                statearr_14010_14368[1] = 65;
                                                                                                statearr_14010_14368[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e14009;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_13866 === 106) {
                                                                                              try {
                                                                                                try {
                                                                                                  var inst_13656 = state_13865[7];
                                                                                                  var inst_13831 = cljs.core._EQ_.call(null, inst_13656, "\ufdd0:logout");
                                                                                                  var state_13865__$1 = state_13865;
                                                                                                  if(inst_13831) {
                                                                                                    var statearr_14018_14369 = state_13865__$1;
                                                                                                    statearr_14018_14369[1] = 107
                                                                                                  }else {
                                                                                                    var statearr_14019_14370 = state_13865__$1;
                                                                                                    statearr_14019_14370[1] = 108
                                                                                                  }
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e14016) {
                                                                                                  if(e14016 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e14016;
                                                                                                    var statearr_14017_14371 = state_13865;
                                                                                                    statearr_14017_14371[1] = 12;
                                                                                                    statearr_14017_14371[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e14016;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }catch(e14014) {
                                                                                                if(e14014 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e14014;
                                                                                                  var statearr_14015_14372 = state_13865;
                                                                                                  statearr_14015_14372[1] = 102;
                                                                                                  statearr_14015_14372[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e14014;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_13866 === 11) {
                                                                                                var inst_13857 = state_13865[2];
                                                                                                var state_13865__$1 = function() {
                                                                                                  var statearr_14020 = state_13865;
                                                                                                  statearr_14020[13] = inst_13857;
                                                                                                  return statearr_14020
                                                                                                }();
                                                                                                var statearr_14021_14373 = state_13865__$1;
                                                                                                statearr_14021_14373[2] = null;
                                                                                                statearr_14021_14373[1] = 2;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if(state_val_13866 === 43) {
                                                                                                  try {
                                                                                                    var state_13865__$1 = state_13865;
                                                                                                    var statearr_14024_14374 = state_13865__$1;
                                                                                                    statearr_14024_14374[2] = null;
                                                                                                    statearr_14024_14374[1] = 44;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e14022) {
                                                                                                    if(e14022 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e14022;
                                                                                                      var statearr_14023_14375 = state_13865;
                                                                                                      statearr_14023_14375[1] = 22;
                                                                                                      statearr_14023_14375[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e14022;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }else {
                                                                                                  if(state_val_13866 === 75) {
                                                                                                    try {
                                                                                                      try {
                                                                                                        var inst_13766 = state_13865[2];
                                                                                                        var state_13865__$1 = state_13865;
                                                                                                        var statearr_14029_14376 = state_13865__$1;
                                                                                                        statearr_14029_14376[2] = inst_13766;
                                                                                                        statearr_14029_14376[1] = 72;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }catch(e14027) {
                                                                                                        if(e14027 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e14027;
                                                                                                          var statearr_14028_14377 = state_13865;
                                                                                                          statearr_14028_14377[1] = 17;
                                                                                                          statearr_14028_14377[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e14027;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }catch(e14025) {
                                                                                                      if(e14025 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e14025;
                                                                                                        var statearr_14026_14378 = state_13865;
                                                                                                        statearr_14026_14378[1] = 65;
                                                                                                        statearr_14026_14378[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e14025;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_13866 === 107) {
                                                                                                      try {
                                                                                                        try {
                                                                                                          var inst_13833 = chatter_box.user_view_component.logout.call(null);
                                                                                                          var state_13865__$1 = state_13865;
                                                                                                          var statearr_14034_14379 = state_13865__$1;
                                                                                                          statearr_14034_14379[2] = inst_13833;
                                                                                                          statearr_14034_14379[1] = 109;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e14032) {
                                                                                                          if(e14032 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e14032;
                                                                                                            var statearr_14033_14380 = state_13865;
                                                                                                            statearr_14033_14380[1] = 12;
                                                                                                            statearr_14033_14380[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e14032;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }catch(e14030) {
                                                                                                        if(e14030 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e14030;
                                                                                                          var statearr_14031_14381 = state_13865;
                                                                                                          statearr_14031_14381[1] = 102;
                                                                                                          statearr_14031_14381[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e14030;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }else {
                                                                                                      if(state_val_13866 === 12) {
                                                                                                        var inst_13661 = state_13865[14];
                                                                                                        var inst_13661__$1 = state_13865[2];
                                                                                                        var inst_13662 = inst_13661__$1 === cljs.core.match.backtrack;
                                                                                                        var state_13865__$1 = function() {
                                                                                                          var statearr_14035 = state_13865;
                                                                                                          statearr_14035[14] = inst_13661__$1;
                                                                                                          return statearr_14035
                                                                                                        }();
                                                                                                        if(cljs.core.truth_(inst_13662)) {
                                                                                                          var statearr_14036_14382 = state_13865__$1;
                                                                                                          statearr_14036_14382[1] = 13
                                                                                                        }else {
                                                                                                          var statearr_14037_14383 = state_13865__$1;
                                                                                                          statearr_14037_14383[1] = 14
                                                                                                        }
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if(state_val_13866 === 44) {
                                                                                                          try {
                                                                                                            var inst_13709 = state_13865[2];
                                                                                                            var state_13865__$1 = state_13865;
                                                                                                            var statearr_14040_14384 = state_13865__$1;
                                                                                                            statearr_14040_14384[2] = inst_13709;
                                                                                                            statearr_14040_14384[1] = 29;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e14038) {
                                                                                                            if(e14038 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e14038;
                                                                                                              var statearr_14039_14385 = state_13865;
                                                                                                              statearr_14039_14385[1] = 22;
                                                                                                              statearr_14039_14385[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e14038;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_13866 === 76) {
                                                                                                            try {
                                                                                                              var inst_13773 = function() {
                                                                                                                throw cljs.core.match.backtrack;
                                                                                                              }();
                                                                                                              var state_13865__$1 = state_13865;
                                                                                                              var statearr_14043_14386 = state_13865__$1;
                                                                                                              statearr_14043_14386[2] = inst_13773;
                                                                                                              statearr_14043_14386[1] = 78;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e14041) {
                                                                                                              if(e14041 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e14041;
                                                                                                                var statearr_14042_14387 = state_13865;
                                                                                                                statearr_14042_14387[1] = 17;
                                                                                                                statearr_14042_14387[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e14041;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_13866 === 108) {
                                                                                                              try {
                                                                                                                try {
                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    var statearr_14048_14388 = state_13865__$1;
                                                                                                                    statearr_14048_14388[1] = 110
                                                                                                                  }else {
                                                                                                                    var statearr_14049_14389 = state_13865__$1;
                                                                                                                    statearr_14049_14389[1] = 111
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e14046) {
                                                                                                                  if(e14046 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e14046;
                                                                                                                    var statearr_14047_14390 = state_13865;
                                                                                                                    statearr_14047_14390[1] = 12;
                                                                                                                    statearr_14047_14390[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e14046;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }catch(e14044) {
                                                                                                                if(e14044 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e14044;
                                                                                                                  var statearr_14045_14391 = state_13865;
                                                                                                                  statearr_14045_14391[1] = 102;
                                                                                                                  statearr_14045_14391[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e14044;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_13866 === 13) {
                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                var statearr_14050_14392 = state_13865__$1;
                                                                                                                statearr_14050_14392[2] = null;
                                                                                                                statearr_14050_14392[1] = 45;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if(state_val_13866 === 45) {
                                                                                                                  try {
                                                                                                                    var inst_13655 = state_13865[12];
                                                                                                                    var inst_13720 = cljs.core._EQ_.call(null, inst_13655, "\ufdd0:security");
                                                                                                                    var state_13865__$1 = state_13865;
                                                                                                                    if(inst_13720) {
                                                                                                                      var statearr_14053_14393 = state_13865__$1;
                                                                                                                      statearr_14053_14393[1] = 46
                                                                                                                    }else {
                                                                                                                      var statearr_14054_14394 = state_13865__$1;
                                                                                                                      statearr_14054_14394[1] = 47
                                                                                                                    }
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e14051) {
                                                                                                                    if(e14051 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e14051;
                                                                                                                      var statearr_14052_14395 = state_13865;
                                                                                                                      statearr_14052_14395[1] = 17;
                                                                                                                      statearr_14052_14395[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e14051;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_13866 === 77) {
                                                                                                                    try {
                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                      var statearr_14057_14396 = state_13865__$1;
                                                                                                                      statearr_14057_14396[2] = null;
                                                                                                                      statearr_14057_14396[1] = 78;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }catch(e14055) {
                                                                                                                      if(e14055 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e14055;
                                                                                                                        var statearr_14056_14397 = state_13865;
                                                                                                                        statearr_14056_14397[1] = 17;
                                                                                                                        statearr_14056_14397[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e14055;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_13866 === 109) {
                                                                                                                      try {
                                                                                                                        try {
                                                                                                                          var inst_13841 = state_13865[2];
                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                          var statearr_14062_14398 = state_13865__$1;
                                                                                                                          statearr_14062_14398[2] = inst_13841;
                                                                                                                          statearr_14062_14398[1] = 101;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e14060) {
                                                                                                                          if(e14060 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e14060;
                                                                                                                            var statearr_14061_14399 = state_13865;
                                                                                                                            statearr_14061_14399[1] = 12;
                                                                                                                            statearr_14061_14399[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e14060;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }catch(e14058) {
                                                                                                                        if(e14058 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e14058;
                                                                                                                          var statearr_14059_14400 = state_13865;
                                                                                                                          statearr_14059_14400[1] = 102;
                                                                                                                          statearr_14059_14400[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e14058;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_13866 === 14) {
                                                                                                                        var inst_13661 = state_13865[14];
                                                                                                                        var inst_13784 = function() {
                                                                                                                          throw inst_13661;
                                                                                                                        }();
                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                        var statearr_14063_14401 = state_13865__$1;
                                                                                                                        statearr_14063_14401[2] = inst_13784;
                                                                                                                        statearr_14063_14401[1] = 15;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if(state_val_13866 === 46) {
                                                                                                                          try {
                                                                                                                            var state_13865__$1 = state_13865;
                                                                                                                            var statearr_14066_14402 = state_13865__$1;
                                                                                                                            statearr_14066_14402[2] = null;
                                                                                                                            statearr_14066_14402[1] = 54;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e14064) {
                                                                                                                            if(e14064 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e14064;
                                                                                                                              var statearr_14065_14403 = state_13865;
                                                                                                                              statearr_14065_14403[1] = 17;
                                                                                                                              statearr_14065_14403[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e14064;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_13866 === 78) {
                                                                                                                            try {
                                                                                                                              var inst_13776 = state_13865[2];
                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                              var statearr_14069_14404 = state_13865__$1;
                                                                                                                              statearr_14069_14404[2] = inst_13776;
                                                                                                                              statearr_14069_14404[1] = 63;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }catch(e14067) {
                                                                                                                              if(e14067 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e14067;
                                                                                                                                var statearr_14068_14405 = state_13865;
                                                                                                                                statearr_14068_14405[1] = 17;
                                                                                                                                statearr_14068_14405[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e14067;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_13866 === 110) {
                                                                                                                              try {
                                                                                                                                try {
                                                                                                                                  var inst_13836 = function() {
                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                  }();
                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                  var statearr_14074_14406 = state_13865__$1;
                                                                                                                                  statearr_14074_14406[2] = inst_13836;
                                                                                                                                  statearr_14074_14406[1] = 112;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e14072) {
                                                                                                                                  if(e14072 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e14072;
                                                                                                                                    var statearr_14073_14407 = state_13865;
                                                                                                                                    statearr_14073_14407[1] = 12;
                                                                                                                                    statearr_14073_14407[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e14072;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }catch(e14070) {
                                                                                                                                if(e14070 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e14070;
                                                                                                                                  var statearr_14071_14408 = state_13865;
                                                                                                                                  statearr_14071_14408[1] = 102;
                                                                                                                                  statearr_14071_14408[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e14070;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_13866 === 15) {
                                                                                                                                var inst_13786 = state_13865[2];
                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                var statearr_14075_14409 = state_13865__$1;
                                                                                                                                statearr_14075_14409[2] = inst_13786;
                                                                                                                                statearr_14075_14409[1] = 11;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if(state_val_13866 === 47) {
                                                                                                                                  try {
                                                                                                                                    var inst_13655 = state_13865[12];
                                                                                                                                    var inst_13746 = cljs.core._EQ_.call(null, inst_13655, "\ufdd0:user");
                                                                                                                                    var state_13865__$1 = state_13865;
                                                                                                                                    if(inst_13746) {
                                                                                                                                      var statearr_14078_14410 = state_13865__$1;
                                                                                                                                      statearr_14078_14410[1] = 61
                                                                                                                                    }else {
                                                                                                                                      var statearr_14079_14411 = state_13865__$1;
                                                                                                                                      statearr_14079_14411[1] = 62
                                                                                                                                    }
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e14076) {
                                                                                                                                    if(e14076 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e14076;
                                                                                                                                      var statearr_14077_14412 = state_13865;
                                                                                                                                      statearr_14077_14412[1] = 17;
                                                                                                                                      statearr_14077_14412[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e14076;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_13866 === 79) {
                                                                                                                                    try {
                                                                                                                                      var inst_13655 = state_13865[12];
                                                                                                                                      var inst_13789 = cljs.core._EQ_.call(null, inst_13655, "\ufdd0:nav");
                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                      if(inst_13789) {
                                                                                                                                        var statearr_14082_14413 = state_13865__$1;
                                                                                                                                        statearr_14082_14413[1] = 80
                                                                                                                                      }else {
                                                                                                                                        var statearr_14083_14414 = state_13865__$1;
                                                                                                                                        statearr_14083_14414[1] = 81
                                                                                                                                      }
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }catch(e14080) {
                                                                                                                                      if(e14080 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e14080;
                                                                                                                                        var statearr_14081_14415 = state_13865;
                                                                                                                                        statearr_14081_14415[1] = 12;
                                                                                                                                        statearr_14081_14415[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e14080;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_13866 === 111) {
                                                                                                                                      try {
                                                                                                                                        try {
                                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                                          var statearr_14088_14416 = state_13865__$1;
                                                                                                                                          statearr_14088_14416[2] = null;
                                                                                                                                          statearr_14088_14416[1] = 112;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }catch(e14086) {
                                                                                                                                          if(e14086 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e14086;
                                                                                                                                            var statearr_14087_14417 = state_13865;
                                                                                                                                            statearr_14087_14417[1] = 12;
                                                                                                                                            statearr_14087_14417[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e14086;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }catch(e14084) {
                                                                                                                                        if(e14084 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e14084;
                                                                                                                                          var statearr_14085_14418 = state_13865;
                                                                                                                                          statearr_14085_14418[1] = 102;
                                                                                                                                          statearr_14085_14418[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e14084;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_13866 === 16) {
                                                                                                                                        var inst_13782 = state_13865[2];
                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                        var statearr_14089_14419 = state_13865__$1;
                                                                                                                                        statearr_14089_14419[2] = inst_13782;
                                                                                                                                        statearr_14089_14419[1] = 15;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if(state_val_13866 === 48) {
                                                                                                                                          try {
                                                                                                                                            var inst_13780 = state_13865[2];
                                                                                                                                            var state_13865__$1 = state_13865;
                                                                                                                                            var statearr_14092_14420 = state_13865__$1;
                                                                                                                                            statearr_14092_14420[2] = inst_13780;
                                                                                                                                            statearr_14092_14420[1] = 16;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e14090) {
                                                                                                                                            if(e14090 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e14090;
                                                                                                                                              var statearr_14091_14421 = state_13865;
                                                                                                                                              statearr_14091_14421[1] = 17;
                                                                                                                                              statearr_14091_14421[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e14090;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_13866 === 80) {
                                                                                                                                            try {
                                                                                                                                              var inst_13654 = state_13865[11];
                                                                                                                                              var inst_13791 = chatter_box.user_view_component.navigate.call(null, inst_13654);
                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                              var statearr_14095_14422 = state_13865__$1;
                                                                                                                                              statearr_14095_14422[2] = inst_13791;
                                                                                                                                              statearr_14095_14422[1] = 82;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }catch(e14093) {
                                                                                                                                              if(e14093 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e14093;
                                                                                                                                                var statearr_14094_14423 = state_13865;
                                                                                                                                                statearr_14094_14423[1] = 12;
                                                                                                                                                statearr_14094_14423[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e14093;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_13866 === 112) {
                                                                                                                                              try {
                                                                                                                                                try {
                                                                                                                                                  var inst_13839 = state_13865[2];
                                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                                  var statearr_14100_14424 = state_13865__$1;
                                                                                                                                                  statearr_14100_14424[2] = inst_13839;
                                                                                                                                                  statearr_14100_14424[1] = 109;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e14098) {
                                                                                                                                                  if(e14098 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e14098;
                                                                                                                                                    var statearr_14099_14425 = state_13865;
                                                                                                                                                    statearr_14099_14425[1] = 12;
                                                                                                                                                    statearr_14099_14425[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e14098;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }catch(e14096) {
                                                                                                                                                if(e14096 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e14096;
                                                                                                                                                  var statearr_14097_14426 = state_13865;
                                                                                                                                                  statearr_14097_14426[1] = 102;
                                                                                                                                                  statearr_14097_14426[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e14096;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_13866 === 17) {
                                                                                                                                                var inst_13664 = state_13865[15];
                                                                                                                                                var inst_13664__$1 = state_13865[2];
                                                                                                                                                var inst_13665 = inst_13664__$1 === cljs.core.match.backtrack;
                                                                                                                                                var state_13865__$1 = function() {
                                                                                                                                                  var statearr_14101 = state_13865;
                                                                                                                                                  statearr_14101[15] = inst_13664__$1;
                                                                                                                                                  return statearr_14101
                                                                                                                                                }();
                                                                                                                                                if(cljs.core.truth_(inst_13665)) {
                                                                                                                                                  var statearr_14102_14427 = state_13865__$1;
                                                                                                                                                  statearr_14102_14427[1] = 18
                                                                                                                                                }else {
                                                                                                                                                  var statearr_14103_14428 = state_13865__$1;
                                                                                                                                                  statearr_14103_14428[1] = 19
                                                                                                                                                }
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if(state_val_13866 === 49) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_13744 = state_13865[2];
                                                                                                                                                    var state_13865__$1 = state_13865;
                                                                                                                                                    var statearr_14106_14429 = state_13865__$1;
                                                                                                                                                    statearr_14106_14429[2] = inst_13744;
                                                                                                                                                    statearr_14106_14429[1] = 48;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e14104) {
                                                                                                                                                    if(e14104 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e14104;
                                                                                                                                                      var statearr_14105_14430 = state_13865;
                                                                                                                                                      statearr_14105_14430[1] = 17;
                                                                                                                                                      statearr_14105_14430[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e14104;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_13866 === 81) {
                                                                                                                                                    try {
                                                                                                                                                      var inst_13655 = state_13865[12];
                                                                                                                                                      var inst_13793 = cljs.core._EQ_.call(null, inst_13655, "\ufdd0:view");
                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                      if(inst_13793) {
                                                                                                                                                        var statearr_14109_14431 = state_13865__$1;
                                                                                                                                                        statearr_14109_14431[1] = 83
                                                                                                                                                      }else {
                                                                                                                                                        var statearr_14110_14432 = state_13865__$1;
                                                                                                                                                        statearr_14110_14432[1] = 84
                                                                                                                                                      }
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e14107) {
                                                                                                                                                      if(e14107 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e14107;
                                                                                                                                                        var statearr_14108_14433 = state_13865;
                                                                                                                                                        statearr_14108_14433[1] = 12;
                                                                                                                                                        statearr_14108_14433[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e14107;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_13866 === 113) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_13846 = function() {
                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                        }();
                                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                                        var statearr_14113_14434 = state_13865__$1;
                                                                                                                                                        statearr_14113_14434[2] = inst_13846;
                                                                                                                                                        statearr_14113_14434[1] = 115;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e14111) {
                                                                                                                                                        if(e14111 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e14111;
                                                                                                                                                          var statearr_14112_14435 = state_13865;
                                                                                                                                                          statearr_14112_14435[1] = 12;
                                                                                                                                                          statearr_14112_14435[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e14111;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_13866 === 18) {
                                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                                        var statearr_14114_14436 = state_13865__$1;
                                                                                                                                                        statearr_14114_14436[2] = null;
                                                                                                                                                        statearr_14114_14436[1] = 26;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_13866 === 50) {
                                                                                                                                                          try {
                                                                                                                                                            var inst_13722 = state_13865[16];
                                                                                                                                                            var inst_13722__$1 = state_13865[2];
                                                                                                                                                            var inst_13723 = inst_13722__$1 === cljs.core.match.backtrack;
                                                                                                                                                            var state_13865__$1 = function() {
                                                                                                                                                              var statearr_14117 = state_13865;
                                                                                                                                                              statearr_14117[16] = inst_13722__$1;
                                                                                                                                                              return statearr_14117
                                                                                                                                                            }();
                                                                                                                                                            if(cljs.core.truth_(inst_13723)) {
                                                                                                                                                              var statearr_14118_14437 = state_13865__$1;
                                                                                                                                                              statearr_14118_14437[1] = 51
                                                                                                                                                            }else {
                                                                                                                                                              var statearr_14119_14438 = state_13865__$1;
                                                                                                                                                              statearr_14119_14438[1] = 52
                                                                                                                                                            }
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }catch(e14115) {
                                                                                                                                                            if(e14115 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e14115;
                                                                                                                                                              var statearr_14116_14439 = state_13865;
                                                                                                                                                              statearr_14116_14439[1] = 17;
                                                                                                                                                              statearr_14116_14439[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e14115;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_13866 === 82) {
                                                                                                                                                            try {
                                                                                                                                                              var inst_13855 = state_13865[2];
                                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                                              var statearr_14122_14440 = state_13865__$1;
                                                                                                                                                              statearr_14122_14440[2] = inst_13855;
                                                                                                                                                              statearr_14122_14440[1] = 11;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e14120) {
                                                                                                                                                              if(e14120 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e14120;
                                                                                                                                                                var statearr_14121_14441 = state_13865;
                                                                                                                                                                statearr_14121_14441[1] = 12;
                                                                                                                                                                statearr_14121_14441[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e14120;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_13866 === 114) {
                                                                                                                                                              try {
                                                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                                                var statearr_14125_14442 = state_13865__$1;
                                                                                                                                                                statearr_14125_14442[2] = null;
                                                                                                                                                                statearr_14125_14442[1] = 115;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e14123) {
                                                                                                                                                                if(e14123 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e14123;
                                                                                                                                                                  var statearr_14124_14443 = state_13865;
                                                                                                                                                                  statearr_14124_14443[1] = 12;
                                                                                                                                                                  statearr_14124_14443[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e14123;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_13866 === 19) {
                                                                                                                                                                var inst_13664 = state_13865[15];
                                                                                                                                                                var inst_13715 = function() {
                                                                                                                                                                  throw inst_13664;
                                                                                                                                                                }();
                                                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                                                var statearr_14126_14444 = state_13865__$1;
                                                                                                                                                                statearr_14126_14444[2] = inst_13715;
                                                                                                                                                                statearr_14126_14444[1] = 20;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_13866 === 51) {
                                                                                                                                                                  try {
                                                                                                                                                                    var inst_13725 = function() {
                                                                                                                                                                      throw cljs.core.match.backtrack;
                                                                                                                                                                    }();
                                                                                                                                                                    var state_13865__$1 = state_13865;
                                                                                                                                                                    var statearr_14129_14445 = state_13865__$1;
                                                                                                                                                                    statearr_14129_14445[2] = inst_13725;
                                                                                                                                                                    statearr_14129_14445[1] = 53;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e14127) {
                                                                                                                                                                    if(e14127 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e14127;
                                                                                                                                                                      var statearr_14128_14446 = state_13865;
                                                                                                                                                                      statearr_14128_14446[1] = 17;
                                                                                                                                                                      statearr_14128_14446[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e14127;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_13866 === 83) {
                                                                                                                                                                    try {
                                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                                      var statearr_14132_14447 = state_13865__$1;
                                                                                                                                                                      statearr_14132_14447[2] = null;
                                                                                                                                                                      statearr_14132_14447[1] = 91;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }catch(e14130) {
                                                                                                                                                                      if(e14130 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e14130;
                                                                                                                                                                        var statearr_14131_14448 = state_13865;
                                                                                                                                                                        statearr_14131_14448[1] = 12;
                                                                                                                                                                        statearr_14131_14448[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e14130;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_13866 === 115) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_13849 = state_13865[2];
                                                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                                                        var statearr_14135_14449 = state_13865__$1;
                                                                                                                                                                        statearr_14135_14449[2] = inst_13849;
                                                                                                                                                                        statearr_14135_14449[1] = 100;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e14133) {
                                                                                                                                                                        if(e14133 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e14133;
                                                                                                                                                                          var statearr_14134_14450 = state_13865;
                                                                                                                                                                          statearr_14134_14450[1] = 12;
                                                                                                                                                                          statearr_14134_14450[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e14133;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_13866 === 20) {
                                                                                                                                                                        var inst_13717 = state_13865[2];
                                                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                                                        var statearr_14136_14451 = state_13865__$1;
                                                                                                                                                                        statearr_14136_14451[2] = inst_13717;
                                                                                                                                                                        statearr_14136_14451[1] = 16;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_13866 === 52) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_13722 = state_13865[16];
                                                                                                                                                                            var inst_13727 = function() {
                                                                                                                                                                              throw inst_13722;
                                                                                                                                                                            }();
                                                                                                                                                                            var state_13865__$1 = state_13865;
                                                                                                                                                                            var statearr_14139_14452 = state_13865__$1;
                                                                                                                                                                            statearr_14139_14452[2] = inst_13727;
                                                                                                                                                                            statearr_14139_14452[1] = 53;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e14137) {
                                                                                                                                                                            if(e14137 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e14137;
                                                                                                                                                                              var statearr_14138_14453 = state_13865;
                                                                                                                                                                              statearr_14138_14453[1] = 17;
                                                                                                                                                                              statearr_14138_14453[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e14137;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_13866 === 84) {
                                                                                                                                                                            try {
                                                                                                                                                                              var inst_13655 = state_13865[12];
                                                                                                                                                                              var inst_13819 = cljs.core._EQ_.call(null, inst_13655, "\ufdd0:security");
                                                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                                                              if(inst_13819) {
                                                                                                                                                                                var statearr_14142_14454 = state_13865__$1;
                                                                                                                                                                                statearr_14142_14454[1] = 98
                                                                                                                                                                              }else {
                                                                                                                                                                                var statearr_14143_14455 = state_13865__$1;
                                                                                                                                                                                statearr_14143_14455[1] = 99
                                                                                                                                                                              }
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }catch(e14140) {
                                                                                                                                                                              if(e14140 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e14140;
                                                                                                                                                                                var statearr_14141_14456 = state_13865;
                                                                                                                                                                                statearr_14141_14456[1] = 12;
                                                                                                                                                                                statearr_14141_14456[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e14140;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_13866 === 21) {
                                                                                                                                                                              var inst_13713 = state_13865[2];
                                                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                                                              var statearr_14144_14457 = state_13865__$1;
                                                                                                                                                                              statearr_14144_14457[2] = inst_13713;
                                                                                                                                                                              statearr_14144_14457[1] = 20;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if(state_val_13866 === 53) {
                                                                                                                                                                                try {
                                                                                                                                                                                  var inst_13729 = state_13865[2];
                                                                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                                                                  var statearr_14147_14458 = state_13865__$1;
                                                                                                                                                                                  statearr_14147_14458[2] = inst_13729;
                                                                                                                                                                                  statearr_14147_14458[1] = 49;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }catch(e14145) {
                                                                                                                                                                                  if(e14145 instanceof Error) {
                                                                                                                                                                                    var ex__5575__auto__ = e14145;
                                                                                                                                                                                    var statearr_14146_14459 = state_13865;
                                                                                                                                                                                    statearr_14146_14459[1] = 17;
                                                                                                                                                                                    statearr_14146_14459[2] = ex__5575__auto__;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                      throw e14145;
                                                                                                                                                                                    }else {
                                                                                                                                                                                      return null
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }else {
                                                                                                                                                                                if(state_val_13866 === 85) {
                                                                                                                                                                                  try {
                                                                                                                                                                                    var inst_13853 = state_13865[2];
                                                                                                                                                                                    var state_13865__$1 = state_13865;
                                                                                                                                                                                    var statearr_14150_14460 = state_13865__$1;
                                                                                                                                                                                    statearr_14150_14460[2] = inst_13853;
                                                                                                                                                                                    statearr_14150_14460[1] = 82;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }catch(e14148) {
                                                                                                                                                                                    if(e14148 instanceof Error) {
                                                                                                                                                                                      var ex__5575__auto__ = e14148;
                                                                                                                                                                                      var statearr_14149_14461 = state_13865;
                                                                                                                                                                                      statearr_14149_14461[1] = 12;
                                                                                                                                                                                      statearr_14149_14461[2] = ex__5575__auto__;
                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                        throw e14148;
                                                                                                                                                                                      }else {
                                                                                                                                                                                        return null
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }else {
                                                                                                                                                                                  if(state_val_13866 === 22) {
                                                                                                                                                                                    var inst_13667 = state_13865[17];
                                                                                                                                                                                    var inst_13667__$1 = state_13865[2];
                                                                                                                                                                                    var inst_13668 = inst_13667__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                    var state_13865__$1 = function() {
                                                                                                                                                                                      var statearr_14151 = state_13865;
                                                                                                                                                                                      statearr_14151[17] = inst_13667__$1;
                                                                                                                                                                                      return statearr_14151
                                                                                                                                                                                    }();
                                                                                                                                                                                    if(cljs.core.truth_(inst_13668)) {
                                                                                                                                                                                      var statearr_14152_14462 = state_13865__$1;
                                                                                                                                                                                      statearr_14152_14462[1] = 23
                                                                                                                                                                                    }else {
                                                                                                                                                                                      var statearr_14153_14463 = state_13865__$1;
                                                                                                                                                                                      statearr_14153_14463[1] = 24
                                                                                                                                                                                    }
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if(state_val_13866 === 54) {
                                                                                                                                                                                      try {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_13656 = state_13865[7];
                                                                                                                                                                                          var inst_13732 = cljs.core._EQ_.call(null, inst_13656, "\ufdd0:login-success");
                                                                                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                                                                                          if(inst_13732) {
                                                                                                                                                                                            var statearr_14158_14464 = state_13865__$1;
                                                                                                                                                                                            statearr_14158_14464[1] = 55
                                                                                                                                                                                          }else {
                                                                                                                                                                                            var statearr_14159_14465 = state_13865__$1;
                                                                                                                                                                                            statearr_14159_14465[1] = 56
                                                                                                                                                                                          }
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e14156) {
                                                                                                                                                                                          if(e14156 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e14156;
                                                                                                                                                                                            var statearr_14157_14466 = state_13865;
                                                                                                                                                                                            statearr_14157_14466[1] = 17;
                                                                                                                                                                                            statearr_14157_14466[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e14156;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }catch(e14154) {
                                                                                                                                                                                        if(e14154 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e14154;
                                                                                                                                                                                          var statearr_14155_14467 = state_13865;
                                                                                                                                                                                          statearr_14155_14467[1] = 50;
                                                                                                                                                                                          statearr_14155_14467[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e14154;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if(state_val_13866 === 86) {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_13817 = state_13865[2];
                                                                                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                                                                                          var statearr_14162_14468 = state_13865__$1;
                                                                                                                                                                                          statearr_14162_14468[2] = inst_13817;
                                                                                                                                                                                          statearr_14162_14468[1] = 85;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e14160) {
                                                                                                                                                                                          if(e14160 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e14160;
                                                                                                                                                                                            var statearr_14161_14469 = state_13865;
                                                                                                                                                                                            statearr_14161_14469[1] = 12;
                                                                                                                                                                                            statearr_14161_14469[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e14160;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if(state_val_13866 === 23) {
                                                                                                                                                                                          var inst_13656 = state_13865[7];
                                                                                                                                                                                          var inst_13655 = state_13865[12];
                                                                                                                                                                                          var inst_13670 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_13655), cljs.core.str(" "), cljs.core.str(inst_13656)].join("");
                                                                                                                                                                                          var inst_13671 = new Error(inst_13670);
                                                                                                                                                                                          var inst_13672 = function() {
                                                                                                                                                                                            throw inst_13671;
                                                                                                                                                                                          }();
                                                                                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                                                                                          var statearr_14163_14470 = state_13865__$1;
                                                                                                                                                                                          statearr_14163_14470[2] = inst_13672;
                                                                                                                                                                                          statearr_14163_14470[1] = 25;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if(state_val_13866 === 55) {
                                                                                                                                                                                            try {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_13657 = state_13865[8];
                                                                                                                                                                                                var inst_13734 = chatter_box.user_view_component.login_success.call(null, inst_13657);
                                                                                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                                                                                var statearr_14168_14471 = state_13865__$1;
                                                                                                                                                                                                statearr_14168_14471[2] = inst_13734;
                                                                                                                                                                                                statearr_14168_14471[1] = 57;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e14166) {
                                                                                                                                                                                                if(e14166 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e14166;
                                                                                                                                                                                                  var statearr_14167_14472 = state_13865;
                                                                                                                                                                                                  statearr_14167_14472[1] = 17;
                                                                                                                                                                                                  statearr_14167_14472[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e14166;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }catch(e14164) {
                                                                                                                                                                                              if(e14164 instanceof Error) {
                                                                                                                                                                                                var ex__5575__auto__ = e14164;
                                                                                                                                                                                                var statearr_14165_14473 = state_13865;
                                                                                                                                                                                                statearr_14165_14473[1] = 50;
                                                                                                                                                                                                statearr_14165_14473[2] = ex__5575__auto__;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                  throw e14164;
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  return null
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if(state_val_13866 === 87) {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_13795 = state_13865[18];
                                                                                                                                                                                                var inst_13795__$1 = state_13865[2];
                                                                                                                                                                                                var inst_13796 = inst_13795__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                var state_13865__$1 = function() {
                                                                                                                                                                                                  var statearr_14171 = state_13865;
                                                                                                                                                                                                  statearr_14171[18] = inst_13795__$1;
                                                                                                                                                                                                  return statearr_14171
                                                                                                                                                                                                }();
                                                                                                                                                                                                if(cljs.core.truth_(inst_13796)) {
                                                                                                                                                                                                  var statearr_14172_14474 = state_13865__$1;
                                                                                                                                                                                                  statearr_14172_14474[1] = 88
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  var statearr_14173_14475 = state_13865__$1;
                                                                                                                                                                                                  statearr_14173_14475[1] = 89
                                                                                                                                                                                                }
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e14169) {
                                                                                                                                                                                                if(e14169 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e14169;
                                                                                                                                                                                                  var statearr_14170_14476 = state_13865;
                                                                                                                                                                                                  statearr_14170_14476[1] = 12;
                                                                                                                                                                                                  statearr_14170_14476[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e14169;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if(state_val_13866 === 24) {
                                                                                                                                                                                                var inst_13667 = state_13865[17];
                                                                                                                                                                                                var inst_13674 = function() {
                                                                                                                                                                                                  throw inst_13667;
                                                                                                                                                                                                }();
                                                                                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                                                                                var statearr_14174_14477 = state_13865__$1;
                                                                                                                                                                                                statearr_14174_14477[2] = inst_13674;
                                                                                                                                                                                                statearr_14174_14477[1] = 25;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if(state_val_13866 === 56) {
                                                                                                                                                                                                  try {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        var statearr_14179_14478 = state_13865__$1;
                                                                                                                                                                                                        statearr_14179_14478[1] = 58
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        var statearr_14180_14479 = state_13865__$1;
                                                                                                                                                                                                        statearr_14180_14479[1] = 59
                                                                                                                                                                                                      }
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e14177) {
                                                                                                                                                                                                      if(e14177 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e14177;
                                                                                                                                                                                                        var statearr_14178_14480 = state_13865;
                                                                                                                                                                                                        statearr_14178_14480[1] = 17;
                                                                                                                                                                                                        statearr_14178_14480[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e14177;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }catch(e14175) {
                                                                                                                                                                                                    if(e14175 instanceof Error) {
                                                                                                                                                                                                      var ex__5575__auto__ = e14175;
                                                                                                                                                                                                      var statearr_14176_14481 = state_13865;
                                                                                                                                                                                                      statearr_14176_14481[1] = 50;
                                                                                                                                                                                                      statearr_14176_14481[2] = ex__5575__auto__;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        throw e14175;
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        return null
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if(state_val_13866 === 88) {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var inst_13798 = function() {
                                                                                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                                                                                      }();
                                                                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                                                                      var statearr_14183_14482 = state_13865__$1;
                                                                                                                                                                                                      statearr_14183_14482[2] = inst_13798;
                                                                                                                                                                                                      statearr_14183_14482[1] = 90;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e14181) {
                                                                                                                                                                                                      if(e14181 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e14181;
                                                                                                                                                                                                        var statearr_14182_14483 = state_13865;
                                                                                                                                                                                                        statearr_14182_14483[1] = 12;
                                                                                                                                                                                                        statearr_14182_14483[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e14181;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if(state_val_13866 === 25) {
                                                                                                                                                                                                      var inst_13676 = state_13865[2];
                                                                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                                                                      var statearr_14184_14484 = state_13865__$1;
                                                                                                                                                                                                      statearr_14184_14484[2] = inst_13676;
                                                                                                                                                                                                      statearr_14184_14484[1] = 21;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if(state_val_13866 === 57) {
                                                                                                                                                                                                        try {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_13742 = state_13865[2];
                                                                                                                                                                                                            var state_13865__$1 = state_13865;
                                                                                                                                                                                                            var statearr_14189_14485 = state_13865__$1;
                                                                                                                                                                                                            statearr_14189_14485[2] = inst_13742;
                                                                                                                                                                                                            statearr_14189_14485[1] = 49;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e14187) {
                                                                                                                                                                                                            if(e14187 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e14187;
                                                                                                                                                                                                              var statearr_14188_14486 = state_13865;
                                                                                                                                                                                                              statearr_14188_14486[1] = 17;
                                                                                                                                                                                                              statearr_14188_14486[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e14187;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }catch(e14185) {
                                                                                                                                                                                                          if(e14185 instanceof Error) {
                                                                                                                                                                                                            var ex__5575__auto__ = e14185;
                                                                                                                                                                                                            var statearr_14186_14487 = state_13865;
                                                                                                                                                                                                            statearr_14186_14487[1] = 50;
                                                                                                                                                                                                            statearr_14186_14487[2] = ex__5575__auto__;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                              throw e14185;
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              return null
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if(state_val_13866 === 89) {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_13795 = state_13865[18];
                                                                                                                                                                                                            var inst_13800 = function() {
                                                                                                                                                                                                              throw inst_13795;
                                                                                                                                                                                                            }();
                                                                                                                                                                                                            var state_13865__$1 = state_13865;
                                                                                                                                                                                                            var statearr_14192_14488 = state_13865__$1;
                                                                                                                                                                                                            statearr_14192_14488[2] = inst_13800;
                                                                                                                                                                                                            statearr_14192_14488[1] = 90;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e14190) {
                                                                                                                                                                                                            if(e14190 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e14190;
                                                                                                                                                                                                              var statearr_14191_14489 = state_13865;
                                                                                                                                                                                                              statearr_14191_14489[1] = 12;
                                                                                                                                                                                                              statearr_14191_14489[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e14190;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if(state_val_13866 === 26) {
                                                                                                                                                                                                            try {
                                                                                                                                                                                                              var inst_13655 = state_13865[12];
                                                                                                                                                                                                              var inst_13679 = cljs.core._EQ_.call(null, inst_13655, "\ufdd0:user");
                                                                                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                                                                                              if(inst_13679) {
                                                                                                                                                                                                                var statearr_14195_14490 = state_13865__$1;
                                                                                                                                                                                                                statearr_14195_14490[1] = 27
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                var statearr_14196_14491 = state_13865__$1;
                                                                                                                                                                                                                statearr_14196_14491[1] = 28
                                                                                                                                                                                                              }
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }catch(e14193) {
                                                                                                                                                                                                              if(e14193 instanceof Error) {
                                                                                                                                                                                                                var ex__5575__auto__ = e14193;
                                                                                                                                                                                                                var statearr_14194_14492 = state_13865;
                                                                                                                                                                                                                statearr_14194_14492[1] = 22;
                                                                                                                                                                                                                statearr_14194_14492[2] = ex__5575__auto__;
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                  throw e14193;
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if(state_val_13866 === 58) {
                                                                                                                                                                                                              try {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_13737 = function() {
                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                                                                                                  var statearr_14201_14493 = state_13865__$1;
                                                                                                                                                                                                                  statearr_14201_14493[2] = inst_13737;
                                                                                                                                                                                                                  statearr_14201_14493[1] = 60;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e14199) {
                                                                                                                                                                                                                  if(e14199 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e14199;
                                                                                                                                                                                                                    var statearr_14200_14494 = state_13865;
                                                                                                                                                                                                                    statearr_14200_14494[1] = 17;
                                                                                                                                                                                                                    statearr_14200_14494[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e14199;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }catch(e14197) {
                                                                                                                                                                                                                if(e14197 instanceof Error) {
                                                                                                                                                                                                                  var ex__5575__auto__ = e14197;
                                                                                                                                                                                                                  var statearr_14198_14495 = state_13865;
                                                                                                                                                                                                                  statearr_14198_14495[1] = 50;
                                                                                                                                                                                                                  statearr_14198_14495[2] = ex__5575__auto__;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    throw e14197;
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if(state_val_13866 === 90) {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_13802 = state_13865[2];
                                                                                                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                                                                                                  var statearr_14204_14496 = state_13865__$1;
                                                                                                                                                                                                                  statearr_14204_14496[2] = inst_13802;
                                                                                                                                                                                                                  statearr_14204_14496[1] = 86;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e14202) {
                                                                                                                                                                                                                  if(e14202 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e14202;
                                                                                                                                                                                                                    var statearr_14203_14497 = state_13865;
                                                                                                                                                                                                                    statearr_14203_14497[1] = 12;
                                                                                                                                                                                                                    statearr_14203_14497[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e14202;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if(state_val_13866 === 27) {
                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                    var state_13865__$1 = state_13865;
                                                                                                                                                                                                                    var statearr_14207_14498 = state_13865__$1;
                                                                                                                                                                                                                    statearr_14207_14498[2] = null;
                                                                                                                                                                                                                    statearr_14207_14498[1] = 35;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }catch(e14205) {
                                                                                                                                                                                                                    if(e14205 instanceof Error) {
                                                                                                                                                                                                                      var ex__5575__auto__ = e14205;
                                                                                                                                                                                                                      var statearr_14206_14499 = state_13865;
                                                                                                                                                                                                                      statearr_14206_14499[1] = 22;
                                                                                                                                                                                                                      statearr_14206_14499[2] = ex__5575__auto__;
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        throw e14205;
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if(state_val_13866 === 59) {
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                                                                                                        var statearr_14212_14500 = state_13865__$1;
                                                                                                                                                                                                                        statearr_14212_14500[2] = null;
                                                                                                                                                                                                                        statearr_14212_14500[1] = 60;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }catch(e14210) {
                                                                                                                                                                                                                        if(e14210 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e14210;
                                                                                                                                                                                                                          var statearr_14211_14501 = state_13865;
                                                                                                                                                                                                                          statearr_14211_14501[1] = 17;
                                                                                                                                                                                                                          statearr_14211_14501[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e14210;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }catch(e14208) {
                                                                                                                                                                                                                      if(e14208 instanceof Error) {
                                                                                                                                                                                                                        var ex__5575__auto__ = e14208;
                                                                                                                                                                                                                        var statearr_14209_14502 = state_13865;
                                                                                                                                                                                                                        statearr_14209_14502[1] = 50;
                                                                                                                                                                                                                        statearr_14209_14502[2] = ex__5575__auto__;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                          throw e14208;
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if(state_val_13866 === 91) {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var inst_13656 = state_13865[7];
                                                                                                                                                                                                                          var inst_13805 = cljs.core._EQ_.call(null, inst_13656, "\ufdd0:init");
                                                                                                                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                                                                                                                          if(inst_13805) {
                                                                                                                                                                                                                            var statearr_14217_14503 = state_13865__$1;
                                                                                                                                                                                                                            statearr_14217_14503[1] = 92
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_14218_14504 = state_13865__$1;
                                                                                                                                                                                                                            statearr_14218_14504[1] = 93
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e14215) {
                                                                                                                                                                                                                          if(e14215 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e14215;
                                                                                                                                                                                                                            var statearr_14216_14505 = state_13865;
                                                                                                                                                                                                                            statearr_14216_14505[1] = 12;
                                                                                                                                                                                                                            statearr_14216_14505[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e14215;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }catch(e14213) {
                                                                                                                                                                                                                        if(e14213 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e14213;
                                                                                                                                                                                                                          var statearr_14214_14506 = state_13865;
                                                                                                                                                                                                                          statearr_14214_14506[1] = 87;
                                                                                                                                                                                                                          statearr_14214_14506[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e14213;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if(state_val_13866 === 28) {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var state_13865__$1 = state_13865;
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            var statearr_14221_14507 = state_13865__$1;
                                                                                                                                                                                                                            statearr_14221_14507[1] = 42
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_14222_14508 = state_13865__$1;
                                                                                                                                                                                                                            statearr_14222_14508[1] = 43
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e14219) {
                                                                                                                                                                                                                          if(e14219 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e14219;
                                                                                                                                                                                                                            var statearr_14220_14509 = state_13865;
                                                                                                                                                                                                                            statearr_14220_14509[1] = 22;
                                                                                                                                                                                                                            statearr_14220_14509[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e14219;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if(state_val_13866 === 60) {
                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              var inst_13740 = state_13865[2];
                                                                                                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                                                                                                              var statearr_14227_14510 = state_13865__$1;
                                                                                                                                                                                                                              statearr_14227_14510[2] = inst_13740;
                                                                                                                                                                                                                              statearr_14227_14510[1] = 57;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }catch(e14225) {
                                                                                                                                                                                                                              if(e14225 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e14225;
                                                                                                                                                                                                                                var statearr_14226_14511 = state_13865;
                                                                                                                                                                                                                                statearr_14226_14511[1] = 17;
                                                                                                                                                                                                                                statearr_14226_14511[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e14225;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }catch(e14223) {
                                                                                                                                                                                                                            if(e14223 instanceof Error) {
                                                                                                                                                                                                                              var ex__5575__auto__ = e14223;
                                                                                                                                                                                                                              var statearr_14224_14512 = state_13865;
                                                                                                                                                                                                                              statearr_14224_14512[1] = 50;
                                                                                                                                                                                                                              statearr_14224_14512[2] = ex__5575__auto__;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                throw e14223;
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if(state_val_13866 === 92) {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_13807 = chatter_box.user_view_component.initialize.call(null);
                                                                                                                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                var statearr_14232_14513 = state_13865__$1;
                                                                                                                                                                                                                                statearr_14232_14513[2] = inst_13807;
                                                                                                                                                                                                                                statearr_14232_14513[1] = 94;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e14230) {
                                                                                                                                                                                                                                if(e14230 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e14230;
                                                                                                                                                                                                                                  var statearr_14231_14514 = state_13865;
                                                                                                                                                                                                                                  statearr_14231_14514[1] = 12;
                                                                                                                                                                                                                                  statearr_14231_14514[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e14230;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }catch(e14228) {
                                                                                                                                                                                                                              if(e14228 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e14228;
                                                                                                                                                                                                                                var statearr_14229_14515 = state_13865;
                                                                                                                                                                                                                                statearr_14229_14515[1] = 87;
                                                                                                                                                                                                                                statearr_14229_14515[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e14228;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if(state_val_13866 === 29) {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_13711 = state_13865[2];
                                                                                                                                                                                                                                var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                var statearr_14235_14516 = state_13865__$1;
                                                                                                                                                                                                                                statearr_14235_14516[2] = inst_13711;
                                                                                                                                                                                                                                statearr_14235_14516[1] = 21;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e14233) {
                                                                                                                                                                                                                                if(e14233 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e14233;
                                                                                                                                                                                                                                  var statearr_14234_14517 = state_13865;
                                                                                                                                                                                                                                  statearr_14234_14517[1] = 22;
                                                                                                                                                                                                                                  statearr_14234_14517[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e14233;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if(state_val_13866 === 61) {
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                  var statearr_14238_14518 = state_13865__$1;
                                                                                                                                                                                                                                  statearr_14238_14518[2] = null;
                                                                                                                                                                                                                                  statearr_14238_14518[1] = 69;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }catch(e14236) {
                                                                                                                                                                                                                                  if(e14236 instanceof Error) {
                                                                                                                                                                                                                                    var ex__5575__auto__ = e14236;
                                                                                                                                                                                                                                    var statearr_14237_14519 = state_13865;
                                                                                                                                                                                                                                    statearr_14237_14519[1] = 17;
                                                                                                                                                                                                                                    statearr_14237_14519[2] = ex__5575__auto__;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                      throw e14236;
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if(state_val_13866 === 93) {
                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        var statearr_14243_14520 = state_13865__$1;
                                                                                                                                                                                                                                        statearr_14243_14520[1] = 95
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        var statearr_14244_14521 = state_13865__$1;
                                                                                                                                                                                                                                        statearr_14244_14521[1] = 96
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e14241) {
                                                                                                                                                                                                                                      if(e14241 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e14241;
                                                                                                                                                                                                                                        var statearr_14242_14522 = state_13865;
                                                                                                                                                                                                                                        statearr_14242_14522[1] = 12;
                                                                                                                                                                                                                                        statearr_14242_14522[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e14241;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }catch(e14239) {
                                                                                                                                                                                                                                    if(e14239 instanceof Error) {
                                                                                                                                                                                                                                      var ex__5575__auto__ = e14239;
                                                                                                                                                                                                                                      var statearr_14240_14523 = state_13865;
                                                                                                                                                                                                                                      statearr_14240_14523[1] = 87;
                                                                                                                                                                                                                                      statearr_14240_14523[2] = ex__5575__auto__;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        throw e14239;
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if(state_val_13866 === 30) {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var inst_13703 = state_13865[2];
                                                                                                                                                                                                                                      var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                      var statearr_14247_14524 = state_13865__$1;
                                                                                                                                                                                                                                      statearr_14247_14524[2] = inst_13703;
                                                                                                                                                                                                                                      statearr_14247_14524[1] = 29;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e14245) {
                                                                                                                                                                                                                                      if(e14245 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e14245;
                                                                                                                                                                                                                                        var statearr_14246_14525 = state_13865;
                                                                                                                                                                                                                                        statearr_14246_14525[1] = 22;
                                                                                                                                                                                                                                        statearr_14246_14525[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e14245;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if(state_val_13866 === 62) {
                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                        var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          var statearr_14250_14526 = state_13865__$1;
                                                                                                                                                                                                                                          statearr_14250_14526[1] = 76
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          var statearr_14251_14527 = state_13865__$1;
                                                                                                                                                                                                                                          statearr_14251_14527[1] = 77
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }catch(e14248) {
                                                                                                                                                                                                                                        if(e14248 instanceof Error) {
                                                                                                                                                                                                                                          var ex__5575__auto__ = e14248;
                                                                                                                                                                                                                                          var statearr_14249_14528 = state_13865;
                                                                                                                                                                                                                                          statearr_14249_14528[1] = 17;
                                                                                                                                                                                                                                          statearr_14249_14528[2] = ex__5575__auto__;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                            throw e14248;
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if(state_val_13866 === 94) {
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_13815 = state_13865[2];
                                                                                                                                                                                                                                            var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                            var statearr_14256_14529 = state_13865__$1;
                                                                                                                                                                                                                                            statearr_14256_14529[2] = inst_13815;
                                                                                                                                                                                                                                            statearr_14256_14529[1] = 86;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e14254) {
                                                                                                                                                                                                                                            if(e14254 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e14254;
                                                                                                                                                                                                                                              var statearr_14255_14530 = state_13865;
                                                                                                                                                                                                                                              statearr_14255_14530[1] = 12;
                                                                                                                                                                                                                                              statearr_14255_14530[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e14254;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }catch(e14252) {
                                                                                                                                                                                                                                          if(e14252 instanceof Error) {
                                                                                                                                                                                                                                            var ex__5575__auto__ = e14252;
                                                                                                                                                                                                                                            var statearr_14253_14531 = state_13865;
                                                                                                                                                                                                                                            statearr_14253_14531[1] = 87;
                                                                                                                                                                                                                                            statearr_14253_14531[2] = ex__5575__auto__;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                              throw e14252;
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if(state_val_13866 === 31) {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_13681 = state_13865[5];
                                                                                                                                                                                                                                            var inst_13681__$1 = state_13865[2];
                                                                                                                                                                                                                                            var inst_13682 = inst_13681__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                            var state_13865__$1 = function() {
                                                                                                                                                                                                                                              var statearr_14259 = state_13865;
                                                                                                                                                                                                                                              statearr_14259[5] = inst_13681__$1;
                                                                                                                                                                                                                                              return statearr_14259
                                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                                            if(cljs.core.truth_(inst_13682)) {
                                                                                                                                                                                                                                              var statearr_14260_14532 = state_13865__$1;
                                                                                                                                                                                                                                              statearr_14260_14532[1] = 32
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              var statearr_14261_14533 = state_13865__$1;
                                                                                                                                                                                                                                              statearr_14261_14533[1] = 33
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e14257) {
                                                                                                                                                                                                                                            if(e14257 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e14257;
                                                                                                                                                                                                                                              var statearr_14258_14534 = state_13865;
                                                                                                                                                                                                                                              statearr_14258_14534[1] = 22;
                                                                                                                                                                                                                                              statearr_14258_14534[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e14257;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if(state_val_13866 === 63) {
                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                              var inst_13778 = state_13865[2];
                                                                                                                                                                                                                                              var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                              var statearr_14264_14535 = state_13865__$1;
                                                                                                                                                                                                                                              statearr_14264_14535[2] = inst_13778;
                                                                                                                                                                                                                                              statearr_14264_14535[1] = 48;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }catch(e14262) {
                                                                                                                                                                                                                                              if(e14262 instanceof Error) {
                                                                                                                                                                                                                                                var ex__5575__auto__ = e14262;
                                                                                                                                                                                                                                                var statearr_14263_14536 = state_13865;
                                                                                                                                                                                                                                                statearr_14263_14536[1] = 17;
                                                                                                                                                                                                                                                statearr_14263_14536[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                  throw e14262;
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if(state_val_13866 === 95) {
                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                  var inst_13810 = function() {
                                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                                  var state_13865__$1 = state_13865;
                                                                                                                                                                                                                                                  var statearr_14269_14537 = state_13865__$1;
                                                                                                                                                                                                                                                  statearr_14269_14537[2] = inst_13810;
                                                                                                                                                                                                                                                  statearr_14269_14537[1] = 97;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }catch(e14267) {
                                                                                                                                                                                                                                                  if(e14267 instanceof Error) {
                                                                                                                                                                                                                                                    var ex__5575__auto__ = e14267;
                                                                                                                                                                                                                                                    var statearr_14268_14538 = state_13865;
                                                                                                                                                                                                                                                    statearr_14268_14538[1] = 12;
                                                                                                                                                                                                                                                    statearr_14268_14538[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                                      throw e14267;
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }catch(e14265) {
                                                                                                                                                                                                                                                if(e14265 instanceof Error) {
                                                                                                                                                                                                                                                  var ex__5575__auto__ = e14265;
                                                                                                                                                                                                                                                  var statearr_14266_14539 = state_13865;
                                                                                                                                                                                                                                                  statearr_14266_14539[1] = 87;
                                                                                                                                                                                                                                                  statearr_14266_14539[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                    throw e14265;
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_14271 = new Array(19);
            statearr_14271[0] = state_machine__5582__auto__;
            statearr_14271[1] = 1;
            return statearr_14271
          };
          var state_machine__5582__auto____1 = function(state_13865) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_13865);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_13865) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_13865)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_14272 = f__5654__auto__.call(null);
      statearr_14272[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_14272
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.chat_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.chat_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:join"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-success"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:receive-chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:left"], true), null], true);
chatter_box.chat_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.user = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.active_conv = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.create_chat_view_component = function create_chat_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.chat_view_component.t32136 !== "undefined") {
  }else {
    goog.provide("chatter_box.chat_view_component.t32136");
    chatter_box.chat_view_component.t32136 = function(in_ch, create_chat_view_component, meta32137) {
      this.in_ch = in_ch;
      this.create_chat_view_component = create_chat_view_component;
      this.meta32137 = meta32137;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.chat_view_component.t32136.cljs$lang$type = true;
    chatter_box.chat_view_component.t32136.cljs$lang$ctorStr = "chatter-box.chat-view-component/t32136";
    chatter_box.chat_view_component.t32136.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-view-component/t32136")
    };
    chatter_box.chat_view_component.t32136.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.chat_view_component.t32136.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.out_chan, out_ch);
      return chatter_box.chat_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.chat_view_component.t32136.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.chat_view_component.valid_types).call(null, msg)
    };
    chatter_box.chat_view_component.t32136.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.chat_view_component.t32136.prototype.cljs$core$IMeta$_meta$arity$1 = function(_32138) {
      var self__ = this;
      return self__.meta32137
    };
    chatter_box.chat_view_component.t32136.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_32138, meta32137__$1) {
      var self__ = this;
      return new chatter_box.chat_view_component.t32136(self__.in_ch, self__.create_chat_view_component, meta32137__$1)
    };
    chatter_box.chat_view_component.__GT_t32136 = function __GT_t32136(in_ch__$1, create_chat_view_component__$1, meta32137) {
      return new chatter_box.chat_view_component.t32136(in_ch__$1, create_chat_view_component__$1, meta32137)
    }
  }
  return new chatter_box.chat_view_component.t32136(in_ch, create_chat_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html[".container"]') == null) {
  var vec__32139_32144 = enfocus.core.replace_ids.call(null, "en8152_", '\x3cdiv id\x3d"chat-container" class\x3d"container"\x3e \n \x3cdiv class\x3d"header"\x3e \n  \x3cul class\x3d"nav nav-pills pull-right"\x3e \n   \x3cli\x3e\x3ca id\x3d"profile-btn" href\x3d"create_user.html"\x3eProfile\x3c/a\x3e\x3c/li\x3e \n   \x3cli\x3e\x3ca id\x3d"logout-btn" href\x3d"login.html"\x3eLogout\x3c/a\x3e\x3c/li\x3e \n  \x3c/ul\x3e \n  \x3ch3 class\x3d"text-muted"\x3eChatter Box\x3c/h3\x3e \n \x3c/div\x3e \n \x3cdiv class\x3d"row marketing"\x3e \n  \x3cdiv class\x3d"col-lg-6"\x3e \n   \x3ch4\x3eLogin Users\x3c/h4\x3e \n   \x3cdiv id\x3d"user-list" style\x3d"height: 300px; overflow: auto"\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"https://1.gravatar.com/avatar/c29cd3a5f182e6de85cbd172fb9b5ab8?d\x3dhttps%3A%2F%2Fidenticons.github.com%2Fcd0f7919b441e9bb94c2308a8a5cfaea.png\x26amp;s\x3d420" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n   \x3c/div\x3e \n  \x3c/div\x3e \n  \x3cdiv class\x3d"col-lg-6"\x3e \n   \x3ch4 id\x3d"conv-name"\x3eCreighton Kirkendall\x3c/h4\x3e \n   \x3cdiv id\x3d"chat-list" style\x3d"height: 300px; overflow: auto"\x3e \n    \x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"remote btn  btn-default btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"right" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"remote btn btn-default btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"right" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n   \x3c/div\x3e \n   \x3cdiv id\x3d"chat-form-div"\x3e \n    \x3cform name\x3d"chat-form" id\x3d"chat-form"\x3e \n     \x3cinput id\x3d"chat-msg" name\x3d"chat-msg" type\x3d"text" class\x3d"form-control" placeholder\x3d"Enter Text" autofocus\x3d"" /\x3e \n     \x3cbutton id\x3d"chat-btn" type\x3d"button" class\x3d"btn"\x3e send \x3c/button\x3e \n    \x3c/form\x3e \n   \x3c/div\x3e \n  \x3c/div\x3e \n \x3c/div\x3e \n \x3cdiv class\x3d"footer"\x3e \n  \x3cp\x3e\x26copy; Creighton Kirkendall 2013\x3c/p\x3e \n \x3c/div\x3e \n\x3c/div\x3e');
  var sym__4174__auto___32145 = cljs.core.nth.call(null, vec__32139_32144, 0, null);
  var txt__4175__auto___32146 = cljs.core.nth.call(null, vec__32139_32144, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___32145, txt__4175__auto___32146], true))
}else {
}
chatter_box.chat_view_component.chat_window_page = function chat_window_page() {
  var vec__32143 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html[".container"]')
  }.call(null);
  var id_sym32140 = cljs.core.nth.call(null, vec__32143, 0, null);
  var pnod32141 = cljs.core.nth.call(null, vec__32143, 1, null);
  var pnod32141__$1 = enfocus.core.create_hidden_dom.call(null, pnod32141);
  enfocus.core.i_at.call(null, id_sym32140, pnod32141__$1, "#chat-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"), "#user-list *", enfocus.core.remove_node.call(null), "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a User"), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym32140, pnod32141__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod32141__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]') == null) {
  var vec__32147_32152 = enfocus.core.replace_ids.call(null, "en8161_", '\x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"https://1.gravatar.com/avatar/c29cd3a5f182e6de85cbd172fb9b5ab8?d\x3dhttps%3A%2F%2Fidenticons.github.com%2Fcd0f7919b441e9bb94c2308a8a5cfaea.png\x26amp;s\x3d420" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e');
  var sym__4174__auto___32153 = cljs.core.nth.call(null, vec__32147_32152, 0, null);
  var txt__4175__auto___32154 = cljs.core.nth.call(null, vec__32147_32152, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___32153, txt__4175__auto___32154], true))
}else {
}
chatter_box.chat_view_component.chat_user_element = function chat_user_element(usr) {
  var vec__32151 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]')
  }.call(null);
  var id_sym32148 = cljs.core.nth.call(null, vec__32151, 0, null);
  var pnod32149 = cljs.core.nth.call(null, vec__32151, 1, null);
  var pnod32149__$1 = enfocus.core.create_hidden_dom.call(null, pnod32149);
  enfocus.core.i_at.call(null, id_sym32148, pnod32149__$1, "button", enfocus.core.do__GT_.call(null, enfocus.core.set_attr.call(null, "\ufdd0:id", [cljs.core.str("id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, usr))].join("")), enfocus.core.set_data.call(null, "\ufdd0:user", usr), enfocus.events.listen.call(null, "\ufdd0:click", function() {
    return chatter_box.chat_view_component.load_conversation.call(null, usr)
  })), "img", enfocus.core.set_attr.call(null, "\ufdd0:src", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, usr)), ".full_name", enfocus.core.content.call(null, [cljs.core.str((new cljs.core.Keyword("\ufdd0:first")).call(null, usr)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0:last")).call(null, usr))].join("")));
  enfocus.core.reset_ids.call(null, id_sym32148, pnod32149__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod32149__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]') == null) {
  var vec__32155_32160 = enfocus.core.replace_ids.call(null, "en8170_", '\x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e');
  var sym__4174__auto___32161 = cljs.core.nth.call(null, vec__32155_32160, 0, null);
  var txt__4175__auto___32162 = cljs.core.nth.call(null, vec__32155_32160, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___32161, txt__4175__auto___32162], true))
}else {
}
chatter_box.chat_view_component.chat_message_element = function chat_message_element(usr, text) {
  var vec__32159 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]')
  }.call(null);
  var id_sym32156 = cljs.core.nth.call(null, vec__32159, 0, null);
  var pnod32157 = cljs.core.nth.call(null, vec__32159, 1, null);
  var pnod32157__$1 = enfocus.core.create_hidden_dom.call(null, pnod32157);
  enfocus.core.i_at.call(null, id_sym32156, pnod32157__$1, "button", enfocus.core.do__GT_.call(null, enfocus.core.remove_class.call(null, "\ufdd0:remote"), enfocus.core.remove_class.call(null, "\ufdd0:local"), enfocus.core.add_class.call(null, cljs.core._EQ_.call(null, usr, cljs.core.deref.call(null, chatter_box.chat_view_component.user)) ? "local" : "remote")), "img", enfocus.core.set_attr.call(null, "\ufdd0:src", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, usr)), ".message", enfocus.core.content.call(null, 
  text));
  enfocus.core.reset_ids.call(null, id_sym32156, pnod32157__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod32157__$1)
};
chatter_box.chat_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, document, "body", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_window_page.call(null)), "#profile-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.nav_update_user)), "#logout-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.logout)), 
  "#chat-btn", enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.send_chat))
};
chatter_box.chat_view_component.navigate = function navigate(p__32163) {
  var map__32165 = p__32163;
  var map__32165__$1 = cljs.core.seq_QMARK_.call(null, map__32165) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32165) : map__32165;
  var page = cljs.core.get.call(null, map__32165__$1, "\ufdd0:key");
  var display = cljs.core._EQ_.call(null, page, "\ufdd0:chat") ? "" : "none";
  return enfocus.core.at.call(null, "#chat-container", enfocus.core.set_style.call(null, "\ufdd0:display", display))
};
chatter_box.chat_view_component.load_conversation = function load_conversation(r_usr) {
  var r_id = [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join("");
  var messages = enfocus.core.from.call(null, r_id, enfocus.core.get_data.call(null, "\ufdd0:msgs"));
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, r_usr);
  return enfocus.core.at.call(null, "#conv-name", enfocus.core.content.call(null, [cljs.core.str((new cljs.core.Keyword("\ufdd0:first")).call(null, r_usr)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0:last")).call(null, r_usr))].join("")), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", ""), "#chat-list", enfocus.core.content.call(null, function() {
    var iter__3470__auto__ = function iter__32170(s__32171) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__32171__$1 = s__32171;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__32171__$1);
          if(temp__4092__auto__) {
            var s__32171__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__32171__$2)) {
              var c__3468__auto__ = cljs.core.chunk_first.call(null, s__32171__$2);
              var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
              var b__32173 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
              if(function() {
                var i__32172 = 0;
                while(true) {
                  if(i__32172 < size__3469__auto__) {
                    var msg = cljs.core._nth.call(null, c__3468__auto__, i__32172);
                    cljs.core.chunk_append.call(null, b__32173, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:local")).call(null, msg), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? chatter_box.chat_view_component.chat_message_element.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user), (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)) : chatter_box.chat_view_component.chat_message_element.call(null, 
                    r_usr, (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)));
                    var G__32174 = i__32172 + 1;
                    i__32172 = G__32174;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__32173), iter__32170.call(null, cljs.core.chunk_rest.call(null, s__32171__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__32173), null)
              }
            }else {
              var msg = cljs.core.first.call(null, s__32171__$2);
              return cljs.core.cons.call(null, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:local")).call(null, msg), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? chatter_box.chat_view_component.chat_message_element.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user), (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)) : chatter_box.chat_view_component.chat_message_element.call(null, 
              r_usr, (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)), iter__32170.call(null, cljs.core.rest.call(null, s__32171__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3470__auto__.call(null, messages)
  }()), r_id, enfocus.core.remove_class.call(null, "btn-success"))
};
chatter_box.chat_view_component.user_join = function user_join(r_usr) {
  var id = [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join("");
  return enfocus.core.at.call(null, id, enfocus.core.remove_node.call(null), "#user-list", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_user_element.call(null, r_usr)), id, enfocus.core.set_data.call(null, "\ufdd0:msgs", cljs.core.PersistentVector.EMPTY))
};
chatter_box.chat_view_component.user_left = function user_left(r_usr) {
  enfocus.core.at.call(null, [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join(""), enfocus.core.remove_node.call(null));
  if(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)), (new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))) {
    enfocus.core.at.call(null, "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a User"), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
    return cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, null)
  }else {
    return null
  }
};
chatter_box.chat_view_component.receive_chat = function receive_chat(p__32175) {
  var map__32177 = p__32175;
  var map__32177__$1 = cljs.core.seq_QMARK_.call(null, map__32177) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32177) : map__32177;
  var msg = map__32177__$1;
  var remote = cljs.core.get.call(null, map__32177__$1, "\ufdd0:remote");
  var local = cljs.core.get.call(null, map__32177__$1, "\ufdd0:local");
  var text = cljs.core.get.call(null, map__32177__$1, "\ufdd0:text");
  var rm_but_id = cljs.core._EQ_.call(null, remote, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? [cljs.core.str("#id_"), cljs.core.str(local)].join("") : [cljs.core.str("#id_"), cljs.core.str(remote)].join("");
  var messages = enfocus.core.from.call(null, rm_but_id, enfocus.core.get_data.call(null, "\ufdd0:msgs"));
  enfocus.core.at.call(null, rm_but_id, enfocus.core.set_data.call(null, "\ufdd0:msgs", cljs.core.conj.call(null, messages, msg)));
  if(function() {
    var or__3943__auto__ = cljs.core._EQ_.call(null, remote, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)));
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._EQ_.call(null, local, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)))
    }
  }()) {
    var usr = cljs.core._EQ_.call(null, local, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? cljs.core.deref.call(null, chatter_box.chat_view_component.user) : cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv);
    return enfocus.core.at.call(null, "#chat-list", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_message_element.call(null, usr, text)))
  }else {
    return enfocus.core.at.call(null, rm_but_id, enfocus.core.do__GT_.call(null, enfocus.core.remove_class.call(null, "btn-success"), enfocus.core.add_class.call(null, "btn-success")))
  }
};
chatter_box.chat_view_component.send_chat = function send_chat() {
  var text = enfocus.core.from.call(null, "#chat-msg", enfocus.core.get_prop.call(null, "\ufdd0:value"));
  var msg = chatter_box.protocol.send_chat_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user)), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)), text);
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), msg);
  return chatter_box.chat_view_component.receive_chat.call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, msg))
};
chatter_box.chat_view_component.login_success = function login_success(p__32178) {
  var map__32184 = p__32178;
  var map__32184__$1 = cljs.core.seq_QMARK_.call(null, map__32184) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32184) : map__32184;
  var usr = cljs.core.get.call(null, map__32184__$1, "\ufdd0:user");
  var e_users = cljs.core.get.call(null, map__32184__$1, "\ufdd0:existing-users");
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.user, usr);
  var seq__32185 = cljs.core.seq.call(null, e_users);
  var chunk__32186 = null;
  var count__32187 = 0;
  var i__32188 = 0;
  while(true) {
    if(i__32188 < count__32187) {
      var r_usr = cljs.core._nth.call(null, chunk__32186, i__32188);
      chatter_box.chat_view_component.user_join.call(null, r_usr);
      var G__32189 = seq__32185;
      var G__32190 = chunk__32186;
      var G__32191 = count__32187;
      var G__32192 = i__32188 + 1;
      seq__32185 = G__32189;
      chunk__32186 = G__32190;
      count__32187 = G__32191;
      i__32188 = G__32192;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__32185);
      if(temp__4092__auto__) {
        var seq__32185__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__32185__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__32185__$1);
          var G__32193 = cljs.core.chunk_rest.call(null, seq__32185__$1);
          var G__32194 = c__3501__auto__;
          var G__32195 = cljs.core.count.call(null, c__3501__auto__);
          var G__32196 = 0;
          seq__32185 = G__32193;
          chunk__32186 = G__32194;
          count__32187 = G__32195;
          i__32188 = G__32196;
          continue
        }else {
          var r_usr = cljs.core.first.call(null, seq__32185__$1);
          chatter_box.chat_view_component.user_join.call(null, r_usr);
          var G__32197 = cljs.core.next.call(null, seq__32185__$1);
          var G__32198 = null;
          var G__32199 = 0;
          var G__32200 = 0;
          seq__32185 = G__32197;
          chunk__32186 = G__32198;
          count__32187 = G__32199;
          i__32188 = G__32200;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
chatter_box.chat_view_component.logout = function logout() {
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), chatter_box.protocol.logout_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))));
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.user, null);
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, null);
  return enfocus.core.at.call(null, "#user-list *", enfocus.core.remove_node.call(null), "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a User"))
};
chatter_box.chat_view_component.nav_update_user = function nav_update_user() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:update-user", null))
};
chatter_box.chat_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_33051) {
        var state_val_33052 = state_33051[1];
        if(state_val_33052 === 32) {
          try {
            var inst_32870 = function() {
              throw cljs.core.match.backtrack;
            }();
            var state_33051__$1 = state_33051;
            var statearr_33055_33459 = state_33051__$1;
            statearr_33055_33459[2] = inst_32870;
            statearr_33055_33459[1] = 34;
            return"\ufdd0:recur"
          }catch(e33053) {
            if(e33053 instanceof Error) {
              var ex__5575__auto__ = e33053;
              var statearr_33054_33460 = state_33051;
              statearr_33054_33460[1] = 22;
              statearr_33054_33460[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e33053;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_33052 === 64) {
            try {
              var inst_32841 = state_33051[5];
              var inst_32947 = cljs.core._EQ_.call(null, inst_32841, "\ufdd0:nav");
              var state_33051__$1 = state_33051;
              if(inst_32947) {
                var statearr_33058_33461 = state_33051__$1;
                statearr_33058_33461[1] = 65
              }else {
                var statearr_33059_33462 = state_33051__$1;
                statearr_33059_33462[1] = 66
              }
              return"\ufdd0:recur"
            }catch(e33056) {
              if(e33056 instanceof Error) {
                var ex__5575__auto__ = e33056;
                var statearr_33057_33463 = state_33051;
                statearr_33057_33463[1] = 12;
                statearr_33057_33463[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e33056;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_33052 === 96) {
              try {
                try {
                  var state_33051__$1 = state_33051;
                  var statearr_33064_33464 = state_33051__$1;
                  statearr_33064_33464[2] = null;
                  statearr_33064_33464[1] = 97;
                  return"\ufdd0:recur"
                }catch(e33062) {
                  if(e33062 instanceof Error) {
                    var ex__5575__auto__ = e33062;
                    var statearr_33063_33465 = state_33051;
                    statearr_33063_33465[1] = 12;
                    statearr_33063_33465[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e33062;
                    }else {
                      return null
                    }
                  }
                }
              }catch(e33060) {
                if(e33060 instanceof Error) {
                  var ex__5575__auto__ = e33060;
                  var statearr_33061_33466 = state_33051;
                  statearr_33061_33466[1] = 87;
                  statearr_33061_33466[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e33060;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_33052 === 1) {
                var state_33051__$1 = state_33051;
                var statearr_33065_33467 = state_33051__$1;
                statearr_33065_33467[2] = null;
                statearr_33065_33467[1] = 2;
                return"\ufdd0:recur"
              }else {
                if(state_val_33052 === 33) {
                  try {
                    var inst_32867 = state_33051[6];
                    var inst_32872 = function() {
                      throw inst_32867;
                    }();
                    var state_33051__$1 = state_33051;
                    var statearr_33068_33468 = state_33051__$1;
                    statearr_33068_33468[2] = inst_32872;
                    statearr_33068_33468[1] = 34;
                    return"\ufdd0:recur"
                  }catch(e33066) {
                    if(e33066 instanceof Error) {
                      var ex__5575__auto__ = e33066;
                      var statearr_33067_33469 = state_33051;
                      statearr_33067_33469[1] = 22;
                      statearr_33067_33469[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e33066;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_33052 === 65) {
                    try {
                      var inst_32840 = state_33051[7];
                      var inst_32949 = chatter_box.chat_view_component.navigate.call(null, inst_32840);
                      var state_33051__$1 = state_33051;
                      var statearr_33071_33470 = state_33051__$1;
                      statearr_33071_33470[2] = inst_32949;
                      statearr_33071_33470[1] = 67;
                      return"\ufdd0:recur"
                    }catch(e33069) {
                      if(e33069 instanceof Error) {
                        var ex__5575__auto__ = e33069;
                        var statearr_33070_33471 = state_33051;
                        statearr_33070_33471[1] = 12;
                        statearr_33070_33471[2] = ex__5575__auto__;
                        return"\ufdd0:recur"
                      }else {
                        if("\ufdd0:else") {
                          throw e33069;
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(state_val_33052 === 97) {
                      try {
                        try {
                          var inst_32997 = state_33051[2];
                          var state_33051__$1 = state_33051;
                          var statearr_33076_33472 = state_33051__$1;
                          statearr_33076_33472[2] = inst_32997;
                          statearr_33076_33472[1] = 94;
                          return"\ufdd0:recur"
                        }catch(e33074) {
                          if(e33074 instanceof Error) {
                            var ex__5575__auto__ = e33074;
                            var statearr_33075_33473 = state_33051;
                            statearr_33075_33473[1] = 12;
                            statearr_33075_33473[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e33074;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e33072) {
                        if(e33072 instanceof Error) {
                          var ex__5575__auto__ = e33072;
                          var statearr_33073_33474 = state_33051;
                          statearr_33073_33474[1] = 87;
                          statearr_33073_33474[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e33072;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_33052 === 2) {
                        var state_33051__$1 = state_33051;
                        if(true) {
                          var statearr_33077_33475 = state_33051__$1;
                          statearr_33077_33475[1] = 4
                        }else {
                          var statearr_33078_33476 = state_33051__$1;
                          statearr_33078_33476[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_33052 === 34) {
                          try {
                            var inst_32874 = state_33051[2];
                            var state_33051__$1 = state_33051;
                            var statearr_33081_33477 = state_33051__$1;
                            statearr_33081_33477[2] = inst_32874;
                            statearr_33081_33477[1] = 30;
                            return"\ufdd0:recur"
                          }catch(e33079) {
                            if(e33079 instanceof Error) {
                              var ex__5575__auto__ = e33079;
                              var statearr_33080_33478 = state_33051;
                              statearr_33080_33478[1] = 22;
                              statearr_33080_33478[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e33079;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_33052 === 66) {
                            try {
                              var inst_32841 = state_33051[5];
                              var inst_32951 = cljs.core._EQ_.call(null, inst_32841, "\ufdd0:view");
                              var state_33051__$1 = state_33051;
                              if(inst_32951) {
                                var statearr_33084_33479 = state_33051__$1;
                                statearr_33084_33479[1] = 68
                              }else {
                                var statearr_33085_33480 = state_33051__$1;
                                statearr_33085_33480[1] = 69
                              }
                              return"\ufdd0:recur"
                            }catch(e33082) {
                              if(e33082 instanceof Error) {
                                var ex__5575__auto__ = e33082;
                                var statearr_33083_33481 = state_33051;
                                statearr_33083_33481[1] = 12;
                                statearr_33083_33481[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e33082;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_33052 === 98) {
                              try {
                                var state_33051__$1 = state_33051;
                                var statearr_33088_33482 = state_33051__$1;
                                statearr_33088_33482[2] = null;
                                statearr_33088_33482[1] = 106;
                                return"\ufdd0:recur"
                              }catch(e33086) {
                                if(e33086 instanceof Error) {
                                  var ex__5575__auto__ = e33086;
                                  var statearr_33087_33483 = state_33051;
                                  statearr_33087_33483[1] = 12;
                                  statearr_33087_33483[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e33086;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_33052 === 3) {
                                var inst_33049 = state_33051[2];
                                var state_33051__$1 = state_33051;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33051__$1, inst_33049)
                              }else {
                                if(state_val_33052 === 35) {
                                  try {
                                    try {
                                      var inst_32842 = state_33051[8];
                                      var inst_32877 = cljs.core._EQ_.call(null, inst_32842, "\ufdd0:left");
                                      var state_33051__$1 = state_33051;
                                      if(inst_32877) {
                                        var statearr_33093_33484 = state_33051__$1;
                                        statearr_33093_33484[1] = 36
                                      }else {
                                        var statearr_33094_33485 = state_33051__$1;
                                        statearr_33094_33485[1] = 37
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e33091) {
                                      if(e33091 instanceof Error) {
                                        var ex__5575__auto__ = e33091;
                                        var statearr_33092_33486 = state_33051;
                                        statearr_33092_33486[1] = 22;
                                        statearr_33092_33486[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e33091;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e33089) {
                                    if(e33089 instanceof Error) {
                                      var ex__5575__auto__ = e33089;
                                      var statearr_33090_33487 = state_33051;
                                      statearr_33090_33487[1] = 31;
                                      statearr_33090_33487[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e33089;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_33052 === 67) {
                                    try {
                                      var inst_33041 = state_33051[2];
                                      var state_33051__$1 = state_33051;
                                      var statearr_33097_33488 = state_33051__$1;
                                      statearr_33097_33488[2] = inst_33041;
                                      statearr_33097_33488[1] = 11;
                                      return"\ufdd0:recur"
                                    }catch(e33095) {
                                      if(e33095 instanceof Error) {
                                        var ex__5575__auto__ = e33095;
                                        var statearr_33096_33489 = state_33051;
                                        statearr_33096_33489[1] = 12;
                                        statearr_33096_33489[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e33095;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_33052 === 99) {
                                      try {
                                        var state_33051__$1 = state_33051;
                                        if("\ufdd0:else") {
                                          var statearr_33100_33490 = state_33051__$1;
                                          statearr_33100_33490[1] = 113
                                        }else {
                                          var statearr_33101_33491 = state_33051__$1;
                                          statearr_33101_33491[1] = 114
                                        }
                                        return"\ufdd0:recur"
                                      }catch(e33098) {
                                        if(e33098 instanceof Error) {
                                          var ex__5575__auto__ = e33098;
                                          var statearr_33099_33492 = state_33051;
                                          statearr_33099_33492[1] = 12;
                                          statearr_33099_33492[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e33098;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_33052 === 4) {
                                        var state_33051__$1 = state_33051;
                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33051__$1, 7, in_ch)
                                      }else {
                                        if(state_val_33052 === 36) {
                                          try {
                                            try {
                                              var inst_32843 = state_33051[9];
                                              var inst_32879 = chatter_box.chat_view_component.user_left.call(null, inst_32843);
                                              var state_33051__$1 = state_33051;
                                              var statearr_33106_33493 = state_33051__$1;
                                              statearr_33106_33493[2] = inst_32879;
                                              statearr_33106_33493[1] = 38;
                                              return"\ufdd0:recur"
                                            }catch(e33104) {
                                              if(e33104 instanceof Error) {
                                                var ex__5575__auto__ = e33104;
                                                var statearr_33105_33494 = state_33051;
                                                statearr_33105_33494[1] = 22;
                                                statearr_33105_33494[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e33104;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e33102) {
                                            if(e33102 instanceof Error) {
                                              var ex__5575__auto__ = e33102;
                                              var statearr_33103_33495 = state_33051;
                                              statearr_33103_33495[1] = 31;
                                              statearr_33103_33495[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e33102;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_33052 === 68) {
                                            try {
                                              var state_33051__$1 = state_33051;
                                              var statearr_33109_33496 = state_33051__$1;
                                              statearr_33109_33496[2] = null;
                                              statearr_33109_33496[1] = 76;
                                              return"\ufdd0:recur"
                                            }catch(e33107) {
                                              if(e33107 instanceof Error) {
                                                var ex__5575__auto__ = e33107;
                                                var statearr_33108_33497 = state_33051;
                                                statearr_33108_33497[1] = 12;
                                                statearr_33108_33497[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e33107;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_33052 === 100) {
                                              try {
                                                var inst_33035 = state_33051[2];
                                                var state_33051__$1 = state_33051;
                                                var statearr_33112_33498 = state_33051__$1;
                                                statearr_33112_33498[2] = inst_33035;
                                                statearr_33112_33498[1] = 85;
                                                return"\ufdd0:recur"
                                              }catch(e33110) {
                                                if(e33110 instanceof Error) {
                                                  var ex__5575__auto__ = e33110;
                                                  var statearr_33111_33499 = state_33051;
                                                  statearr_33111_33499[1] = 12;
                                                  statearr_33111_33499[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e33110;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_33052 === 5) {
                                                var state_33051__$1 = state_33051;
                                                var statearr_33113_33500 = state_33051__$1;
                                                statearr_33113_33500[2] = null;
                                                statearr_33113_33500[1] = 6;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_33052 === 37) {
                                                  try {
                                                    try {
                                                      var state_33051__$1 = state_33051;
                                                      if("\ufdd0:else") {
                                                        var statearr_33118_33501 = state_33051__$1;
                                                        statearr_33118_33501[1] = 39
                                                      }else {
                                                        var statearr_33119_33502 = state_33051__$1;
                                                        statearr_33119_33502[1] = 40
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e33116) {
                                                      if(e33116 instanceof Error) {
                                                        var ex__5575__auto__ = e33116;
                                                        var statearr_33117_33503 = state_33051;
                                                        statearr_33117_33503[1] = 22;
                                                        statearr_33117_33503[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e33116;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }catch(e33114) {
                                                    if(e33114 instanceof Error) {
                                                      var ex__5575__auto__ = e33114;
                                                      var statearr_33115_33504 = state_33051;
                                                      statearr_33115_33504[1] = 31;
                                                      statearr_33115_33504[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e33114;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_33052 === 69) {
                                                    try {
                                                      var inst_32841 = state_33051[5];
                                                      var inst_32977 = cljs.core._EQ_.call(null, inst_32841, "\ufdd0:security");
                                                      var state_33051__$1 = state_33051;
                                                      if(inst_32977) {
                                                        var statearr_33122_33505 = state_33051__$1;
                                                        statearr_33122_33505[1] = 83
                                                      }else {
                                                        var statearr_33123_33506 = state_33051__$1;
                                                        statearr_33123_33506[1] = 84
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e33120) {
                                                      if(e33120 instanceof Error) {
                                                        var ex__5575__auto__ = e33120;
                                                        var statearr_33121_33507 = state_33051;
                                                        statearr_33121_33507[1] = 12;
                                                        statearr_33121_33507[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e33120;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_33052 === 101) {
                                                      try {
                                                        var inst_33027 = state_33051[2];
                                                        var state_33051__$1 = state_33051;
                                                        var statearr_33126_33508 = state_33051__$1;
                                                        statearr_33126_33508[2] = inst_33027;
                                                        statearr_33126_33508[1] = 100;
                                                        return"\ufdd0:recur"
                                                      }catch(e33124) {
                                                        if(e33124 instanceof Error) {
                                                          var ex__5575__auto__ = e33124;
                                                          var statearr_33125_33509 = state_33051;
                                                          statearr_33125_33509[1] = 12;
                                                          statearr_33125_33509[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e33124;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_33052 === 6) {
                                                        var inst_33047 = state_33051[2];
                                                        var state_33051__$1 = state_33051;
                                                        var statearr_33127_33510 = state_33051__$1;
                                                        statearr_33127_33510[2] = inst_33047;
                                                        statearr_33127_33510[1] = 3;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_33052 === 38) {
                                                          try {
                                                            try {
                                                              var inst_32887 = state_33051[2];
                                                              var state_33051__$1 = state_33051;
                                                              var statearr_33132_33511 = state_33051__$1;
                                                              statearr_33132_33511[2] = inst_32887;
                                                              statearr_33132_33511[1] = 30;
                                                              return"\ufdd0:recur"
                                                            }catch(e33130) {
                                                              if(e33130 instanceof Error) {
                                                                var ex__5575__auto__ = e33130;
                                                                var statearr_33131_33512 = state_33051;
                                                                statearr_33131_33512[1] = 22;
                                                                statearr_33131_33512[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e33130;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }catch(e33128) {
                                                            if(e33128 instanceof Error) {
                                                              var ex__5575__auto__ = e33128;
                                                              var statearr_33129_33513 = state_33051;
                                                              statearr_33129_33513[1] = 31;
                                                              statearr_33129_33513[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e33128;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_33052 === 70) {
                                                            try {
                                                              var inst_33039 = state_33051[2];
                                                              var state_33051__$1 = state_33051;
                                                              var statearr_33135_33514 = state_33051__$1;
                                                              statearr_33135_33514[2] = inst_33039;
                                                              statearr_33135_33514[1] = 67;
                                                              return"\ufdd0:recur"
                                                            }catch(e33133) {
                                                              if(e33133 instanceof Error) {
                                                                var ex__5575__auto__ = e33133;
                                                                var statearr_33134_33515 = state_33051;
                                                                statearr_33134_33515[1] = 12;
                                                                statearr_33134_33515[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e33133;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_33052 === 102) {
                                                              try {
                                                                var inst_33005 = state_33051[10];
                                                                var inst_33005__$1 = state_33051[2];
                                                                var inst_33006 = inst_33005__$1 === cljs.core.match.backtrack;
                                                                var state_33051__$1 = function() {
                                                                  var statearr_33138 = state_33051;
                                                                  statearr_33138[10] = inst_33005__$1;
                                                                  return statearr_33138
                                                                }();
                                                                if(cljs.core.truth_(inst_33006)) {
                                                                  var statearr_33139_33516 = state_33051__$1;
                                                                  statearr_33139_33516[1] = 103
                                                                }else {
                                                                  var statearr_33140_33517 = state_33051__$1;
                                                                  statearr_33140_33517[1] = 104
                                                                }
                                                                return"\ufdd0:recur"
                                                              }catch(e33136) {
                                                                if(e33136 instanceof Error) {
                                                                  var ex__5575__auto__ = e33136;
                                                                  var statearr_33137_33518 = state_33051;
                                                                  statearr_33137_33518[1] = 12;
                                                                  statearr_33137_33518[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e33136;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_33052 === 7) {
                                                                var inst_32834 = state_33051[11];
                                                                var inst_32834__$1 = state_33051[2];
                                                                var inst_32835 = cljs.core.seq_QMARK_.call(null, inst_32834__$1);
                                                                var state_33051__$1 = function() {
                                                                  var statearr_33141 = state_33051;
                                                                  statearr_33141[11] = inst_32834__$1;
                                                                  return statearr_33141
                                                                }();
                                                                if(inst_32835) {
                                                                  var statearr_33142_33519 = state_33051__$1;
                                                                  statearr_33142_33519[1] = 8
                                                                }else {
                                                                  var statearr_33143_33520 = state_33051__$1;
                                                                  statearr_33143_33520[1] = 9
                                                                }
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if(state_val_33052 === 39) {
                                                                  try {
                                                                    try {
                                                                      var inst_32882 = function() {
                                                                        throw cljs.core.match.backtrack;
                                                                      }();
                                                                      var state_33051__$1 = state_33051;
                                                                      var statearr_33148_33521 = state_33051__$1;
                                                                      statearr_33148_33521[2] = inst_32882;
                                                                      statearr_33148_33521[1] = 41;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e33146) {
                                                                      if(e33146 instanceof Error) {
                                                                        var ex__5575__auto__ = e33146;
                                                                        var statearr_33147_33522 = state_33051;
                                                                        statearr_33147_33522[1] = 22;
                                                                        statearr_33147_33522[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e33146;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e33144) {
                                                                    if(e33144 instanceof Error) {
                                                                      var ex__5575__auto__ = e33144;
                                                                      var statearr_33145_33523 = state_33051;
                                                                      statearr_33145_33523[1] = 31;
                                                                      statearr_33145_33523[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e33144;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_33052 === 71) {
                                                                    try {
                                                                      var inst_32975 = state_33051[2];
                                                                      var state_33051__$1 = state_33051;
                                                                      var statearr_33151_33524 = state_33051__$1;
                                                                      statearr_33151_33524[2] = inst_32975;
                                                                      statearr_33151_33524[1] = 70;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e33149) {
                                                                      if(e33149 instanceof Error) {
                                                                        var ex__5575__auto__ = e33149;
                                                                        var statearr_33150_33525 = state_33051;
                                                                        statearr_33150_33525[1] = 12;
                                                                        statearr_33150_33525[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e33149;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_33052 === 103) {
                                                                      try {
                                                                        var inst_33008 = function() {
                                                                          throw cljs.core.match.backtrack;
                                                                        }();
                                                                        var state_33051__$1 = state_33051;
                                                                        var statearr_33154_33526 = state_33051__$1;
                                                                        statearr_33154_33526[2] = inst_33008;
                                                                        statearr_33154_33526[1] = 105;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e33152) {
                                                                        if(e33152 instanceof Error) {
                                                                          var ex__5575__auto__ = e33152;
                                                                          var statearr_33153_33527 = state_33051;
                                                                          statearr_33153_33527[1] = 12;
                                                                          statearr_33153_33527[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e33152;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_33052 === 8) {
                                                                        var inst_32834 = state_33051[11];
                                                                        var inst_32837 = cljs.core.apply.call(null, cljs.core.hash_map, inst_32834);
                                                                        var state_33051__$1 = state_33051;
                                                                        var statearr_33155_33528 = state_33051__$1;
                                                                        statearr_33155_33528[2] = inst_32837;
                                                                        statearr_33155_33528[1] = 10;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if(state_val_33052 === 40) {
                                                                          try {
                                                                            try {
                                                                              var state_33051__$1 = state_33051;
                                                                              var statearr_33160_33529 = state_33051__$1;
                                                                              statearr_33160_33529[2] = null;
                                                                              statearr_33160_33529[1] = 41;
                                                                              return"\ufdd0:recur"
                                                                            }catch(e33158) {
                                                                              if(e33158 instanceof Error) {
                                                                                var ex__5575__auto__ = e33158;
                                                                                var statearr_33159_33530 = state_33051;
                                                                                statearr_33159_33530[1] = 22;
                                                                                statearr_33159_33530[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e33158;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }catch(e33156) {
                                                                            if(e33156 instanceof Error) {
                                                                              var ex__5575__auto__ = e33156;
                                                                              var statearr_33157_33531 = state_33051;
                                                                              statearr_33157_33531[1] = 31;
                                                                              statearr_33157_33531[2] = ex__5575__auto__;
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if("\ufdd0:else") {
                                                                                throw e33156;
                                                                              }else {
                                                                                return null
                                                                              }
                                                                            }
                                                                          }
                                                                        }else {
                                                                          if(state_val_33052 === 72) {
                                                                            try {
                                                                              var inst_32953 = state_33051[12];
                                                                              var inst_32953__$1 = state_33051[2];
                                                                              var inst_32954 = inst_32953__$1 === cljs.core.match.backtrack;
                                                                              var state_33051__$1 = function() {
                                                                                var statearr_33163 = state_33051;
                                                                                statearr_33163[12] = inst_32953__$1;
                                                                                return statearr_33163
                                                                              }();
                                                                              if(cljs.core.truth_(inst_32954)) {
                                                                                var statearr_33164_33532 = state_33051__$1;
                                                                                statearr_33164_33532[1] = 73
                                                                              }else {
                                                                                var statearr_33165_33533 = state_33051__$1;
                                                                                statearr_33165_33533[1] = 74
                                                                              }
                                                                              return"\ufdd0:recur"
                                                                            }catch(e33161) {
                                                                              if(e33161 instanceof Error) {
                                                                                var ex__5575__auto__ = e33161;
                                                                                var statearr_33162_33534 = state_33051;
                                                                                statearr_33162_33534[1] = 12;
                                                                                statearr_33162_33534[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e33161;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_33052 === 104) {
                                                                              try {
                                                                                var inst_33005 = state_33051[10];
                                                                                var inst_33010 = function() {
                                                                                  throw inst_33005;
                                                                                }();
                                                                                var state_33051__$1 = state_33051;
                                                                                var statearr_33168_33535 = state_33051__$1;
                                                                                statearr_33168_33535[2] = inst_33010;
                                                                                statearr_33168_33535[1] = 105;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e33166) {
                                                                                if(e33166 instanceof Error) {
                                                                                  var ex__5575__auto__ = e33166;
                                                                                  var statearr_33167_33536 = state_33051;
                                                                                  statearr_33167_33536[1] = 12;
                                                                                  statearr_33167_33536[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e33166;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_33052 === 9) {
                                                                                var inst_32834 = state_33051[11];
                                                                                var state_33051__$1 = state_33051;
                                                                                var statearr_33169_33537 = state_33051__$1;
                                                                                statearr_33169_33537[2] = inst_32834;
                                                                                statearr_33169_33537[1] = 10;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_33052 === 41) {
                                                                                  try {
                                                                                    try {
                                                                                      var inst_32885 = state_33051[2];
                                                                                      var state_33051__$1 = state_33051;
                                                                                      var statearr_33174_33538 = state_33051__$1;
                                                                                      statearr_33174_33538[2] = inst_32885;
                                                                                      statearr_33174_33538[1] = 38;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e33172) {
                                                                                      if(e33172 instanceof Error) {
                                                                                        var ex__5575__auto__ = e33172;
                                                                                        var statearr_33173_33539 = state_33051;
                                                                                        statearr_33173_33539[1] = 22;
                                                                                        statearr_33173_33539[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e33172;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }catch(e33170) {
                                                                                    if(e33170 instanceof Error) {
                                                                                      var ex__5575__auto__ = e33170;
                                                                                      var statearr_33171_33540 = state_33051;
                                                                                      statearr_33171_33540[1] = 31;
                                                                                      statearr_33171_33540[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e33170;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_33052 === 73) {
                                                                                    try {
                                                                                      var inst_32956 = function() {
                                                                                        throw cljs.core.match.backtrack;
                                                                                      }();
                                                                                      var state_33051__$1 = state_33051;
                                                                                      var statearr_33177_33541 = state_33051__$1;
                                                                                      statearr_33177_33541[2] = inst_32956;
                                                                                      statearr_33177_33541[1] = 75;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e33175) {
                                                                                      if(e33175 instanceof Error) {
                                                                                        var ex__5575__auto__ = e33175;
                                                                                        var statearr_33176_33542 = state_33051;
                                                                                        statearr_33176_33542[1] = 12;
                                                                                        statearr_33176_33542[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e33175;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_33052 === 105) {
                                                                                      try {
                                                                                        var inst_33012 = state_33051[2];
                                                                                        var state_33051__$1 = state_33051;
                                                                                        var statearr_33180_33543 = state_33051__$1;
                                                                                        statearr_33180_33543[2] = inst_33012;
                                                                                        statearr_33180_33543[1] = 101;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e33178) {
                                                                                        if(e33178 instanceof Error) {
                                                                                          var ex__5575__auto__ = e33178;
                                                                                          var statearr_33179_33544 = state_33051;
                                                                                          statearr_33179_33544[1] = 12;
                                                                                          statearr_33179_33544[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e33178;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_33052 === 10) {
                                                                                        var inst_32840 = state_33051[7];
                                                                                        var inst_32840__$1 = state_33051[2];
                                                                                        var inst_32841 = cljs.core.get.call(null, inst_32840__$1, "\ufdd0:area");
                                                                                        var inst_32842 = cljs.core.get.call(null, inst_32840__$1, "\ufdd0:key");
                                                                                        var inst_32843 = cljs.core.get.call(null, inst_32840__$1, "\ufdd0:data");
                                                                                        var state_33051__$1 = function() {
                                                                                          var statearr_33181 = state_33051;
                                                                                          statearr_33181[7] = inst_32840__$1;
                                                                                          statearr_33181[5] = inst_32841;
                                                                                          statearr_33181[8] = inst_32842;
                                                                                          statearr_33181[9] = inst_32843;
                                                                                          return statearr_33181
                                                                                        }();
                                                                                        var statearr_33182_33545 = state_33051__$1;
                                                                                        statearr_33182_33545[2] = null;
                                                                                        statearr_33182_33545[1] = 64;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_33052 === 42) {
                                                                                          try {
                                                                                            var inst_32892 = function() {
                                                                                              throw cljs.core.match.backtrack;
                                                                                            }();
                                                                                            var state_33051__$1 = state_33051;
                                                                                            var statearr_33185_33546 = state_33051__$1;
                                                                                            statearr_33185_33546[2] = inst_32892;
                                                                                            statearr_33185_33546[1] = 44;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e33183) {
                                                                                            if(e33183 instanceof Error) {
                                                                                              var ex__5575__auto__ = e33183;
                                                                                              var statearr_33184_33547 = state_33051;
                                                                                              statearr_33184_33547[1] = 22;
                                                                                              statearr_33184_33547[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e33183;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_33052 === 74) {
                                                                                            try {
                                                                                              var inst_32953 = state_33051[12];
                                                                                              var inst_32958 = function() {
                                                                                                throw inst_32953;
                                                                                              }();
                                                                                              var state_33051__$1 = state_33051;
                                                                                              var statearr_33188_33548 = state_33051__$1;
                                                                                              statearr_33188_33548[2] = inst_32958;
                                                                                              statearr_33188_33548[1] = 75;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e33186) {
                                                                                              if(e33186 instanceof Error) {
                                                                                                var ex__5575__auto__ = e33186;
                                                                                                var statearr_33187_33549 = state_33051;
                                                                                                statearr_33187_33549[1] = 12;
                                                                                                statearr_33187_33549[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e33186;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_33052 === 106) {
                                                                                              try {
                                                                                                try {
                                                                                                  var inst_32842 = state_33051[8];
                                                                                                  var inst_33015 = cljs.core._EQ_.call(null, inst_32842, "\ufdd0:receive-chat");
                                                                                                  var state_33051__$1 = state_33051;
                                                                                                  if(inst_33015) {
                                                                                                    var statearr_33193_33550 = state_33051__$1;
                                                                                                    statearr_33193_33550[1] = 107
                                                                                                  }else {
                                                                                                    var statearr_33194_33551 = state_33051__$1;
                                                                                                    statearr_33194_33551[1] = 108
                                                                                                  }
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e33191) {
                                                                                                  if(e33191 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e33191;
                                                                                                    var statearr_33192_33552 = state_33051;
                                                                                                    statearr_33192_33552[1] = 12;
                                                                                                    statearr_33192_33552[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e33191;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }catch(e33189) {
                                                                                                if(e33189 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e33189;
                                                                                                  var statearr_33190_33553 = state_33051;
                                                                                                  statearr_33190_33553[1] = 102;
                                                                                                  statearr_33190_33553[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e33189;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_33052 === 11) {
                                                                                                var inst_33043 = state_33051[2];
                                                                                                var state_33051__$1 = function() {
                                                                                                  var statearr_33195 = state_33051;
                                                                                                  statearr_33195[13] = inst_33043;
                                                                                                  return statearr_33195
                                                                                                }();
                                                                                                var statearr_33196_33554 = state_33051__$1;
                                                                                                statearr_33196_33554[2] = null;
                                                                                                statearr_33196_33554[1] = 2;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if(state_val_33052 === 43) {
                                                                                                  try {
                                                                                                    var state_33051__$1 = state_33051;
                                                                                                    var statearr_33199_33555 = state_33051__$1;
                                                                                                    statearr_33199_33555[2] = null;
                                                                                                    statearr_33199_33555[1] = 44;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e33197) {
                                                                                                    if(e33197 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e33197;
                                                                                                      var statearr_33198_33556 = state_33051;
                                                                                                      statearr_33198_33556[1] = 22;
                                                                                                      statearr_33198_33556[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e33197;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }else {
                                                                                                  if(state_val_33052 === 75) {
                                                                                                    try {
                                                                                                      var inst_32960 = state_33051[2];
                                                                                                      var state_33051__$1 = state_33051;
                                                                                                      var statearr_33202_33557 = state_33051__$1;
                                                                                                      statearr_33202_33557[2] = inst_32960;
                                                                                                      statearr_33202_33557[1] = 71;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }catch(e33200) {
                                                                                                      if(e33200 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e33200;
                                                                                                        var statearr_33201_33558 = state_33051;
                                                                                                        statearr_33201_33558[1] = 12;
                                                                                                        statearr_33201_33558[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e33200;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_33052 === 107) {
                                                                                                      try {
                                                                                                        try {
                                                                                                          var inst_32843 = state_33051[9];
                                                                                                          var inst_33017 = chatter_box.chat_view_component.receive_chat.call(null, inst_32843);
                                                                                                          var state_33051__$1 = state_33051;
                                                                                                          var statearr_33207_33559 = state_33051__$1;
                                                                                                          statearr_33207_33559[2] = inst_33017;
                                                                                                          statearr_33207_33559[1] = 109;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e33205) {
                                                                                                          if(e33205 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e33205;
                                                                                                            var statearr_33206_33560 = state_33051;
                                                                                                            statearr_33206_33560[1] = 12;
                                                                                                            statearr_33206_33560[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e33205;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }catch(e33203) {
                                                                                                        if(e33203 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e33203;
                                                                                                          var statearr_33204_33561 = state_33051;
                                                                                                          statearr_33204_33561[1] = 102;
                                                                                                          statearr_33204_33561[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e33203;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }else {
                                                                                                      if(state_val_33052 === 12) {
                                                                                                        var inst_32847 = state_33051[14];
                                                                                                        var inst_32847__$1 = state_33051[2];
                                                                                                        var inst_32848 = inst_32847__$1 === cljs.core.match.backtrack;
                                                                                                        var state_33051__$1 = function() {
                                                                                                          var statearr_33208 = state_33051;
                                                                                                          statearr_33208[14] = inst_32847__$1;
                                                                                                          return statearr_33208
                                                                                                        }();
                                                                                                        if(cljs.core.truth_(inst_32848)) {
                                                                                                          var statearr_33209_33562 = state_33051__$1;
                                                                                                          statearr_33209_33562[1] = 13
                                                                                                        }else {
                                                                                                          var statearr_33210_33563 = state_33051__$1;
                                                                                                          statearr_33210_33563[1] = 14
                                                                                                        }
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if(state_val_33052 === 44) {
                                                                                                          try {
                                                                                                            var inst_32895 = state_33051[2];
                                                                                                            var state_33051__$1 = state_33051;
                                                                                                            var statearr_33213_33564 = state_33051__$1;
                                                                                                            statearr_33213_33564[2] = inst_32895;
                                                                                                            statearr_33213_33564[1] = 29;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e33211) {
                                                                                                            if(e33211 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e33211;
                                                                                                              var statearr_33212_33565 = state_33051;
                                                                                                              statearr_33212_33565[1] = 22;
                                                                                                              statearr_33212_33565[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e33211;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_33052 === 76) {
                                                                                                            try {
                                                                                                              try {
                                                                                                                var inst_32842 = state_33051[8];
                                                                                                                var inst_32963 = cljs.core._EQ_.call(null, inst_32842, "\ufdd0:init");
                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                if(inst_32963) {
                                                                                                                  var statearr_33218_33566 = state_33051__$1;
                                                                                                                  statearr_33218_33566[1] = 77
                                                                                                                }else {
                                                                                                                  var statearr_33219_33567 = state_33051__$1;
                                                                                                                  statearr_33219_33567[1] = 78
                                                                                                                }
                                                                                                                return"\ufdd0:recur"
                                                                                                              }catch(e33216) {
                                                                                                                if(e33216 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e33216;
                                                                                                                  var statearr_33217_33568 = state_33051;
                                                                                                                  statearr_33217_33568[1] = 12;
                                                                                                                  statearr_33217_33568[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e33216;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }catch(e33214) {
                                                                                                              if(e33214 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e33214;
                                                                                                                var statearr_33215_33569 = state_33051;
                                                                                                                statearr_33215_33569[1] = 72;
                                                                                                                statearr_33215_33569[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e33214;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_33052 === 108) {
                                                                                                              try {
                                                                                                                try {
                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    var statearr_33224_33570 = state_33051__$1;
                                                                                                                    statearr_33224_33570[1] = 110
                                                                                                                  }else {
                                                                                                                    var statearr_33225_33571 = state_33051__$1;
                                                                                                                    statearr_33225_33571[1] = 111
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e33222) {
                                                                                                                  if(e33222 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e33222;
                                                                                                                    var statearr_33223_33572 = state_33051;
                                                                                                                    statearr_33223_33572[1] = 12;
                                                                                                                    statearr_33223_33572[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e33222;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }catch(e33220) {
                                                                                                                if(e33220 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e33220;
                                                                                                                  var statearr_33221_33573 = state_33051;
                                                                                                                  statearr_33221_33573[1] = 102;
                                                                                                                  statearr_33221_33573[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e33220;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_33052 === 13) {
                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                var statearr_33226_33574 = state_33051__$1;
                                                                                                                statearr_33226_33574[2] = null;
                                                                                                                statearr_33226_33574[1] = 45;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if(state_val_33052 === 45) {
                                                                                                                  try {
                                                                                                                    var inst_32841 = state_33051[5];
                                                                                                                    var inst_32906 = cljs.core._EQ_.call(null, inst_32841, "\ufdd0:messaging");
                                                                                                                    var state_33051__$1 = state_33051;
                                                                                                                    if(inst_32906) {
                                                                                                                      var statearr_33229_33575 = state_33051__$1;
                                                                                                                      statearr_33229_33575[1] = 46
                                                                                                                    }else {
                                                                                                                      var statearr_33230_33576 = state_33051__$1;
                                                                                                                      statearr_33230_33576[1] = 47
                                                                                                                    }
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e33227) {
                                                                                                                    if(e33227 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e33227;
                                                                                                                      var statearr_33228_33577 = state_33051;
                                                                                                                      statearr_33228_33577[1] = 17;
                                                                                                                      statearr_33228_33577[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e33227;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_33052 === 77) {
                                                                                                                    try {
                                                                                                                      try {
                                                                                                                        var inst_32965 = chatter_box.chat_view_component.initialize.call(null);
                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                        var statearr_33235_33578 = state_33051__$1;
                                                                                                                        statearr_33235_33578[2] = inst_32965;
                                                                                                                        statearr_33235_33578[1] = 79;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e33233) {
                                                                                                                        if(e33233 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e33233;
                                                                                                                          var statearr_33234_33579 = state_33051;
                                                                                                                          statearr_33234_33579[1] = 12;
                                                                                                                          statearr_33234_33579[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e33233;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }catch(e33231) {
                                                                                                                      if(e33231 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e33231;
                                                                                                                        var statearr_33232_33580 = state_33051;
                                                                                                                        statearr_33232_33580[1] = 72;
                                                                                                                        statearr_33232_33580[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e33231;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_33052 === 109) {
                                                                                                                      try {
                                                                                                                        try {
                                                                                                                          var inst_33025 = state_33051[2];
                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                          var statearr_33240_33581 = state_33051__$1;
                                                                                                                          statearr_33240_33581[2] = inst_33025;
                                                                                                                          statearr_33240_33581[1] = 101;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e33238) {
                                                                                                                          if(e33238 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e33238;
                                                                                                                            var statearr_33239_33582 = state_33051;
                                                                                                                            statearr_33239_33582[1] = 12;
                                                                                                                            statearr_33239_33582[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e33238;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }catch(e33236) {
                                                                                                                        if(e33236 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e33236;
                                                                                                                          var statearr_33237_33583 = state_33051;
                                                                                                                          statearr_33237_33583[1] = 102;
                                                                                                                          statearr_33237_33583[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e33236;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_33052 === 14) {
                                                                                                                        var inst_32847 = state_33051[14];
                                                                                                                        var inst_32942 = function() {
                                                                                                                          throw inst_32847;
                                                                                                                        }();
                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                        var statearr_33241_33584 = state_33051__$1;
                                                                                                                        statearr_33241_33584[2] = inst_32942;
                                                                                                                        statearr_33241_33584[1] = 15;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if(state_val_33052 === 46) {
                                                                                                                          try {
                                                                                                                            var state_33051__$1 = state_33051;
                                                                                                                            var statearr_33244_33585 = state_33051__$1;
                                                                                                                            statearr_33244_33585[2] = null;
                                                                                                                            statearr_33244_33585[1] = 54;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e33242) {
                                                                                                                            if(e33242 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e33242;
                                                                                                                              var statearr_33243_33586 = state_33051;
                                                                                                                              statearr_33243_33586[1] = 17;
                                                                                                                              statearr_33243_33586[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e33242;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_33052 === 78) {
                                                                                                                            try {
                                                                                                                              try {
                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  var statearr_33249_33587 = state_33051__$1;
                                                                                                                                  statearr_33249_33587[1] = 80
                                                                                                                                }else {
                                                                                                                                  var statearr_33250_33588 = state_33051__$1;
                                                                                                                                  statearr_33250_33588[1] = 81
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e33247) {
                                                                                                                                if(e33247 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e33247;
                                                                                                                                  var statearr_33248_33589 = state_33051;
                                                                                                                                  statearr_33248_33589[1] = 12;
                                                                                                                                  statearr_33248_33589[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e33247;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }catch(e33245) {
                                                                                                                              if(e33245 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e33245;
                                                                                                                                var statearr_33246_33590 = state_33051;
                                                                                                                                statearr_33246_33590[1] = 72;
                                                                                                                                statearr_33246_33590[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e33245;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_33052 === 110) {
                                                                                                                              try {
                                                                                                                                try {
                                                                                                                                  var inst_33020 = function() {
                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                  }();
                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                  var statearr_33255_33591 = state_33051__$1;
                                                                                                                                  statearr_33255_33591[2] = inst_33020;
                                                                                                                                  statearr_33255_33591[1] = 112;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e33253) {
                                                                                                                                  if(e33253 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e33253;
                                                                                                                                    var statearr_33254_33592 = state_33051;
                                                                                                                                    statearr_33254_33592[1] = 12;
                                                                                                                                    statearr_33254_33592[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e33253;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }catch(e33251) {
                                                                                                                                if(e33251 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e33251;
                                                                                                                                  var statearr_33252_33593 = state_33051;
                                                                                                                                  statearr_33252_33593[1] = 102;
                                                                                                                                  statearr_33252_33593[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e33251;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_33052 === 15) {
                                                                                                                                var inst_32944 = state_33051[2];
                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                var statearr_33256_33594 = state_33051__$1;
                                                                                                                                statearr_33256_33594[2] = inst_32944;
                                                                                                                                statearr_33256_33594[1] = 11;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if(state_val_33052 === 47) {
                                                                                                                                  try {
                                                                                                                                    var state_33051__$1 = state_33051;
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      var statearr_33259_33595 = state_33051__$1;
                                                                                                                                      statearr_33259_33595[1] = 61
                                                                                                                                    }else {
                                                                                                                                      var statearr_33260_33596 = state_33051__$1;
                                                                                                                                      statearr_33260_33596[1] = 62
                                                                                                                                    }
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e33257) {
                                                                                                                                    if(e33257 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e33257;
                                                                                                                                      var statearr_33258_33597 = state_33051;
                                                                                                                                      statearr_33258_33597[1] = 17;
                                                                                                                                      statearr_33258_33597[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e33257;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_33052 === 79) {
                                                                                                                                    try {
                                                                                                                                      try {
                                                                                                                                        var inst_32973 = state_33051[2];
                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                        var statearr_33265_33598 = state_33051__$1;
                                                                                                                                        statearr_33265_33598[2] = inst_32973;
                                                                                                                                        statearr_33265_33598[1] = 71;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e33263) {
                                                                                                                                        if(e33263 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e33263;
                                                                                                                                          var statearr_33264_33599 = state_33051;
                                                                                                                                          statearr_33264_33599[1] = 12;
                                                                                                                                          statearr_33264_33599[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e33263;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }catch(e33261) {
                                                                                                                                      if(e33261 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e33261;
                                                                                                                                        var statearr_33262_33600 = state_33051;
                                                                                                                                        statearr_33262_33600[1] = 72;
                                                                                                                                        statearr_33262_33600[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e33261;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_33052 === 111) {
                                                                                                                                      try {
                                                                                                                                        try {
                                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                                          var statearr_33270_33601 = state_33051__$1;
                                                                                                                                          statearr_33270_33601[2] = null;
                                                                                                                                          statearr_33270_33601[1] = 112;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }catch(e33268) {
                                                                                                                                          if(e33268 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e33268;
                                                                                                                                            var statearr_33269_33602 = state_33051;
                                                                                                                                            statearr_33269_33602[1] = 12;
                                                                                                                                            statearr_33269_33602[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e33268;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }catch(e33266) {
                                                                                                                                        if(e33266 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e33266;
                                                                                                                                          var statearr_33267_33603 = state_33051;
                                                                                                                                          statearr_33267_33603[1] = 102;
                                                                                                                                          statearr_33267_33603[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e33266;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_33052 === 16) {
                                                                                                                                        var inst_32940 = state_33051[2];
                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                        var statearr_33271_33604 = state_33051__$1;
                                                                                                                                        statearr_33271_33604[2] = inst_32940;
                                                                                                                                        statearr_33271_33604[1] = 15;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if(state_val_33052 === 48) {
                                                                                                                                          try {
                                                                                                                                            var inst_32938 = state_33051[2];
                                                                                                                                            var state_33051__$1 = state_33051;
                                                                                                                                            var statearr_33274_33605 = state_33051__$1;
                                                                                                                                            statearr_33274_33605[2] = inst_32938;
                                                                                                                                            statearr_33274_33605[1] = 16;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e33272) {
                                                                                                                                            if(e33272 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e33272;
                                                                                                                                              var statearr_33273_33606 = state_33051;
                                                                                                                                              statearr_33273_33606[1] = 17;
                                                                                                                                              statearr_33273_33606[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e33272;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_33052 === 80) {
                                                                                                                                            try {
                                                                                                                                              try {
                                                                                                                                                var inst_32968 = function() {
                                                                                                                                                  throw cljs.core.match.backtrack;
                                                                                                                                                }();
                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                var statearr_33279_33607 = state_33051__$1;
                                                                                                                                                statearr_33279_33607[2] = inst_32968;
                                                                                                                                                statearr_33279_33607[1] = 82;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e33277) {
                                                                                                                                                if(e33277 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e33277;
                                                                                                                                                  var statearr_33278_33608 = state_33051;
                                                                                                                                                  statearr_33278_33608[1] = 12;
                                                                                                                                                  statearr_33278_33608[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e33277;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }catch(e33275) {
                                                                                                                                              if(e33275 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e33275;
                                                                                                                                                var statearr_33276_33609 = state_33051;
                                                                                                                                                statearr_33276_33609[1] = 72;
                                                                                                                                                statearr_33276_33609[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e33275;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_33052 === 112) {
                                                                                                                                              try {
                                                                                                                                                try {
                                                                                                                                                  var inst_33023 = state_33051[2];
                                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                                  var statearr_33284_33610 = state_33051__$1;
                                                                                                                                                  statearr_33284_33610[2] = inst_33023;
                                                                                                                                                  statearr_33284_33610[1] = 109;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e33282) {
                                                                                                                                                  if(e33282 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e33282;
                                                                                                                                                    var statearr_33283_33611 = state_33051;
                                                                                                                                                    statearr_33283_33611[1] = 12;
                                                                                                                                                    statearr_33283_33611[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e33282;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }catch(e33280) {
                                                                                                                                                if(e33280 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e33280;
                                                                                                                                                  var statearr_33281_33612 = state_33051;
                                                                                                                                                  statearr_33281_33612[1] = 102;
                                                                                                                                                  statearr_33281_33612[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e33280;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_33052 === 17) {
                                                                                                                                                var inst_32850 = state_33051[15];
                                                                                                                                                var inst_32850__$1 = state_33051[2];
                                                                                                                                                var inst_32851 = inst_32850__$1 === cljs.core.match.backtrack;
                                                                                                                                                var state_33051__$1 = function() {
                                                                                                                                                  var statearr_33285 = state_33051;
                                                                                                                                                  statearr_33285[15] = inst_32850__$1;
                                                                                                                                                  return statearr_33285
                                                                                                                                                }();
                                                                                                                                                if(cljs.core.truth_(inst_32851)) {
                                                                                                                                                  var statearr_33286_33613 = state_33051__$1;
                                                                                                                                                  statearr_33286_33613[1] = 18
                                                                                                                                                }else {
                                                                                                                                                  var statearr_33287_33614 = state_33051__$1;
                                                                                                                                                  statearr_33287_33614[1] = 19
                                                                                                                                                }
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if(state_val_33052 === 49) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_32930 = state_33051[2];
                                                                                                                                                    var state_33051__$1 = state_33051;
                                                                                                                                                    var statearr_33290_33615 = state_33051__$1;
                                                                                                                                                    statearr_33290_33615[2] = inst_32930;
                                                                                                                                                    statearr_33290_33615[1] = 48;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e33288) {
                                                                                                                                                    if(e33288 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e33288;
                                                                                                                                                      var statearr_33289_33616 = state_33051;
                                                                                                                                                      statearr_33289_33616[1] = 17;
                                                                                                                                                      statearr_33289_33616[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e33288;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_33052 === 81) {
                                                                                                                                                    try {
                                                                                                                                                      try {
                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                        var statearr_33295_33617 = state_33051__$1;
                                                                                                                                                        statearr_33295_33617[2] = null;
                                                                                                                                                        statearr_33295_33617[1] = 82;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e33293) {
                                                                                                                                                        if(e33293 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e33293;
                                                                                                                                                          var statearr_33294_33618 = state_33051;
                                                                                                                                                          statearr_33294_33618[1] = 12;
                                                                                                                                                          statearr_33294_33618[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e33293;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }catch(e33291) {
                                                                                                                                                      if(e33291 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e33291;
                                                                                                                                                        var statearr_33292_33619 = state_33051;
                                                                                                                                                        statearr_33292_33619[1] = 72;
                                                                                                                                                        statearr_33292_33619[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e33291;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_33052 === 113) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_33030 = function() {
                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                        }();
                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                        var statearr_33298_33620 = state_33051__$1;
                                                                                                                                                        statearr_33298_33620[2] = inst_33030;
                                                                                                                                                        statearr_33298_33620[1] = 115;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e33296) {
                                                                                                                                                        if(e33296 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e33296;
                                                                                                                                                          var statearr_33297_33621 = state_33051;
                                                                                                                                                          statearr_33297_33621[1] = 12;
                                                                                                                                                          statearr_33297_33621[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e33296;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_33052 === 18) {
                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                        var statearr_33299_33622 = state_33051__$1;
                                                                                                                                                        statearr_33299_33622[2] = null;
                                                                                                                                                        statearr_33299_33622[1] = 26;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_33052 === 50) {
                                                                                                                                                          try {
                                                                                                                                                            var inst_32908 = state_33051[16];
                                                                                                                                                            var inst_32908__$1 = state_33051[2];
                                                                                                                                                            var inst_32909 = inst_32908__$1 === cljs.core.match.backtrack;
                                                                                                                                                            var state_33051__$1 = function() {
                                                                                                                                                              var statearr_33302 = state_33051;
                                                                                                                                                              statearr_33302[16] = inst_32908__$1;
                                                                                                                                                              return statearr_33302
                                                                                                                                                            }();
                                                                                                                                                            if(cljs.core.truth_(inst_32909)) {
                                                                                                                                                              var statearr_33303_33623 = state_33051__$1;
                                                                                                                                                              statearr_33303_33623[1] = 51
                                                                                                                                                            }else {
                                                                                                                                                              var statearr_33304_33624 = state_33051__$1;
                                                                                                                                                              statearr_33304_33624[1] = 52
                                                                                                                                                            }
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }catch(e33300) {
                                                                                                                                                            if(e33300 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e33300;
                                                                                                                                                              var statearr_33301_33625 = state_33051;
                                                                                                                                                              statearr_33301_33625[1] = 17;
                                                                                                                                                              statearr_33301_33625[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e33300;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_33052 === 82) {
                                                                                                                                                            try {
                                                                                                                                                              try {
                                                                                                                                                                var inst_32971 = state_33051[2];
                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                var statearr_33309_33626 = state_33051__$1;
                                                                                                                                                                statearr_33309_33626[2] = inst_32971;
                                                                                                                                                                statearr_33309_33626[1] = 79;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e33307) {
                                                                                                                                                                if(e33307 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e33307;
                                                                                                                                                                  var statearr_33308_33627 = state_33051;
                                                                                                                                                                  statearr_33308_33627[1] = 12;
                                                                                                                                                                  statearr_33308_33627[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e33307;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }catch(e33305) {
                                                                                                                                                              if(e33305 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e33305;
                                                                                                                                                                var statearr_33306_33628 = state_33051;
                                                                                                                                                                statearr_33306_33628[1] = 72;
                                                                                                                                                                statearr_33306_33628[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e33305;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_33052 === 114) {
                                                                                                                                                              try {
                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                var statearr_33312_33629 = state_33051__$1;
                                                                                                                                                                statearr_33312_33629[2] = null;
                                                                                                                                                                statearr_33312_33629[1] = 115;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e33310) {
                                                                                                                                                                if(e33310 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e33310;
                                                                                                                                                                  var statearr_33311_33630 = state_33051;
                                                                                                                                                                  statearr_33311_33630[1] = 12;
                                                                                                                                                                  statearr_33311_33630[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e33310;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_33052 === 19) {
                                                                                                                                                                var inst_32850 = state_33051[15];
                                                                                                                                                                var inst_32901 = function() {
                                                                                                                                                                  throw inst_32850;
                                                                                                                                                                }();
                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                var statearr_33313_33631 = state_33051__$1;
                                                                                                                                                                statearr_33313_33631[2] = inst_32901;
                                                                                                                                                                statearr_33313_33631[1] = 20;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_33052 === 51) {
                                                                                                                                                                  try {
                                                                                                                                                                    var inst_32911 = function() {
                                                                                                                                                                      throw cljs.core.match.backtrack;
                                                                                                                                                                    }();
                                                                                                                                                                    var state_33051__$1 = state_33051;
                                                                                                                                                                    var statearr_33316_33632 = state_33051__$1;
                                                                                                                                                                    statearr_33316_33632[2] = inst_32911;
                                                                                                                                                                    statearr_33316_33632[1] = 53;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e33314) {
                                                                                                                                                                    if(e33314 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e33314;
                                                                                                                                                                      var statearr_33315_33633 = state_33051;
                                                                                                                                                                      statearr_33315_33633[1] = 17;
                                                                                                                                                                      statearr_33315_33633[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e33314;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_33052 === 83) {
                                                                                                                                                                    try {
                                                                                                                                                                      var state_33051__$1 = state_33051;
                                                                                                                                                                      var statearr_33319_33634 = state_33051__$1;
                                                                                                                                                                      statearr_33319_33634[2] = null;
                                                                                                                                                                      statearr_33319_33634[1] = 91;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }catch(e33317) {
                                                                                                                                                                      if(e33317 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e33317;
                                                                                                                                                                        var statearr_33318_33635 = state_33051;
                                                                                                                                                                        statearr_33318_33635[1] = 12;
                                                                                                                                                                        statearr_33318_33635[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e33317;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_33052 === 115) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_33033 = state_33051[2];
                                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                                        var statearr_33322_33636 = state_33051__$1;
                                                                                                                                                                        statearr_33322_33636[2] = inst_33033;
                                                                                                                                                                        statearr_33322_33636[1] = 100;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e33320) {
                                                                                                                                                                        if(e33320 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e33320;
                                                                                                                                                                          var statearr_33321_33637 = state_33051;
                                                                                                                                                                          statearr_33321_33637[1] = 12;
                                                                                                                                                                          statearr_33321_33637[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e33320;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_33052 === 20) {
                                                                                                                                                                        var inst_32903 = state_33051[2];
                                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                                        var statearr_33323_33638 = state_33051__$1;
                                                                                                                                                                        statearr_33323_33638[2] = inst_32903;
                                                                                                                                                                        statearr_33323_33638[1] = 16;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_33052 === 52) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_32908 = state_33051[16];
                                                                                                                                                                            var inst_32913 = function() {
                                                                                                                                                                              throw inst_32908;
                                                                                                                                                                            }();
                                                                                                                                                                            var state_33051__$1 = state_33051;
                                                                                                                                                                            var statearr_33326_33639 = state_33051__$1;
                                                                                                                                                                            statearr_33326_33639[2] = inst_32913;
                                                                                                                                                                            statearr_33326_33639[1] = 53;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e33324) {
                                                                                                                                                                            if(e33324 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e33324;
                                                                                                                                                                              var statearr_33325_33640 = state_33051;
                                                                                                                                                                              statearr_33325_33640[1] = 17;
                                                                                                                                                                              statearr_33325_33640[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e33324;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_33052 === 84) {
                                                                                                                                                                            try {
                                                                                                                                                                              var inst_32841 = state_33051[5];
                                                                                                                                                                              var inst_33003 = cljs.core._EQ_.call(null, inst_32841, "\ufdd0:messaging");
                                                                                                                                                                              var state_33051__$1 = state_33051;
                                                                                                                                                                              if(inst_33003) {
                                                                                                                                                                                var statearr_33329_33641 = state_33051__$1;
                                                                                                                                                                                statearr_33329_33641[1] = 98
                                                                                                                                                                              }else {
                                                                                                                                                                                var statearr_33330_33642 = state_33051__$1;
                                                                                                                                                                                statearr_33330_33642[1] = 99
                                                                                                                                                                              }
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }catch(e33327) {
                                                                                                                                                                              if(e33327 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e33327;
                                                                                                                                                                                var statearr_33328_33643 = state_33051;
                                                                                                                                                                                statearr_33328_33643[1] = 12;
                                                                                                                                                                                statearr_33328_33643[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e33327;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_33052 === 21) {
                                                                                                                                                                              var inst_32899 = state_33051[2];
                                                                                                                                                                              var state_33051__$1 = state_33051;
                                                                                                                                                                              var statearr_33331_33644 = state_33051__$1;
                                                                                                                                                                              statearr_33331_33644[2] = inst_32899;
                                                                                                                                                                              statearr_33331_33644[1] = 20;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if(state_val_33052 === 53) {
                                                                                                                                                                                try {
                                                                                                                                                                                  var inst_32915 = state_33051[2];
                                                                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                                                                  var statearr_33334_33645 = state_33051__$1;
                                                                                                                                                                                  statearr_33334_33645[2] = inst_32915;
                                                                                                                                                                                  statearr_33334_33645[1] = 49;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }catch(e33332) {
                                                                                                                                                                                  if(e33332 instanceof Error) {
                                                                                                                                                                                    var ex__5575__auto__ = e33332;
                                                                                                                                                                                    var statearr_33333_33646 = state_33051;
                                                                                                                                                                                    statearr_33333_33646[1] = 17;
                                                                                                                                                                                    statearr_33333_33646[2] = ex__5575__auto__;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                      throw e33332;
                                                                                                                                                                                    }else {
                                                                                                                                                                                      return null
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }else {
                                                                                                                                                                                if(state_val_33052 === 85) {
                                                                                                                                                                                  try {
                                                                                                                                                                                    var inst_33037 = state_33051[2];
                                                                                                                                                                                    var state_33051__$1 = state_33051;
                                                                                                                                                                                    var statearr_33337_33647 = state_33051__$1;
                                                                                                                                                                                    statearr_33337_33647[2] = inst_33037;
                                                                                                                                                                                    statearr_33337_33647[1] = 70;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }catch(e33335) {
                                                                                                                                                                                    if(e33335 instanceof Error) {
                                                                                                                                                                                      var ex__5575__auto__ = e33335;
                                                                                                                                                                                      var statearr_33336_33648 = state_33051;
                                                                                                                                                                                      statearr_33336_33648[1] = 12;
                                                                                                                                                                                      statearr_33336_33648[2] = ex__5575__auto__;
                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                        throw e33335;
                                                                                                                                                                                      }else {
                                                                                                                                                                                        return null
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }else {
                                                                                                                                                                                  if(state_val_33052 === 22) {
                                                                                                                                                                                    var inst_32853 = state_33051[17];
                                                                                                                                                                                    var inst_32853__$1 = state_33051[2];
                                                                                                                                                                                    var inst_32854 = inst_32853__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                    var state_33051__$1 = function() {
                                                                                                                                                                                      var statearr_33338 = state_33051;
                                                                                                                                                                                      statearr_33338[17] = inst_32853__$1;
                                                                                                                                                                                      return statearr_33338
                                                                                                                                                                                    }();
                                                                                                                                                                                    if(cljs.core.truth_(inst_32854)) {
                                                                                                                                                                                      var statearr_33339_33649 = state_33051__$1;
                                                                                                                                                                                      statearr_33339_33649[1] = 23
                                                                                                                                                                                    }else {
                                                                                                                                                                                      var statearr_33340_33650 = state_33051__$1;
                                                                                                                                                                                      statearr_33340_33650[1] = 24
                                                                                                                                                                                    }
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if(state_val_33052 === 54) {
                                                                                                                                                                                      try {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_32842 = state_33051[8];
                                                                                                                                                                                          var inst_32918 = cljs.core._EQ_.call(null, inst_32842, "\ufdd0:join");
                                                                                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                                                                                          if(inst_32918) {
                                                                                                                                                                                            var statearr_33345_33651 = state_33051__$1;
                                                                                                                                                                                            statearr_33345_33651[1] = 55
                                                                                                                                                                                          }else {
                                                                                                                                                                                            var statearr_33346_33652 = state_33051__$1;
                                                                                                                                                                                            statearr_33346_33652[1] = 56
                                                                                                                                                                                          }
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e33343) {
                                                                                                                                                                                          if(e33343 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e33343;
                                                                                                                                                                                            var statearr_33344_33653 = state_33051;
                                                                                                                                                                                            statearr_33344_33653[1] = 17;
                                                                                                                                                                                            statearr_33344_33653[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e33343;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }catch(e33341) {
                                                                                                                                                                                        if(e33341 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e33341;
                                                                                                                                                                                          var statearr_33342_33654 = state_33051;
                                                                                                                                                                                          statearr_33342_33654[1] = 50;
                                                                                                                                                                                          statearr_33342_33654[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e33341;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if(state_val_33052 === 86) {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_33001 = state_33051[2];
                                                                                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                                                                                          var statearr_33349_33655 = state_33051__$1;
                                                                                                                                                                                          statearr_33349_33655[2] = inst_33001;
                                                                                                                                                                                          statearr_33349_33655[1] = 85;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e33347) {
                                                                                                                                                                                          if(e33347 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e33347;
                                                                                                                                                                                            var statearr_33348_33656 = state_33051;
                                                                                                                                                                                            statearr_33348_33656[1] = 12;
                                                                                                                                                                                            statearr_33348_33656[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e33347;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if(state_val_33052 === 23) {
                                                                                                                                                                                          var inst_32841 = state_33051[5];
                                                                                                                                                                                          var inst_32842 = state_33051[8];
                                                                                                                                                                                          var inst_32856 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_32841), cljs.core.str(" "), cljs.core.str(inst_32842)].join("");
                                                                                                                                                                                          var inst_32857 = new Error(inst_32856);
                                                                                                                                                                                          var inst_32858 = function() {
                                                                                                                                                                                            throw inst_32857;
                                                                                                                                                                                          }();
                                                                                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                                                                                          var statearr_33350_33657 = state_33051__$1;
                                                                                                                                                                                          statearr_33350_33657[2] = inst_32858;
                                                                                                                                                                                          statearr_33350_33657[1] = 25;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if(state_val_33052 === 55) {
                                                                                                                                                                                            try {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_32843 = state_33051[9];
                                                                                                                                                                                                var inst_32920 = chatter_box.chat_view_component.user_join.call(null, inst_32843);
                                                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                                                var statearr_33355_33658 = state_33051__$1;
                                                                                                                                                                                                statearr_33355_33658[2] = inst_32920;
                                                                                                                                                                                                statearr_33355_33658[1] = 57;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e33353) {
                                                                                                                                                                                                if(e33353 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e33353;
                                                                                                                                                                                                  var statearr_33354_33659 = state_33051;
                                                                                                                                                                                                  statearr_33354_33659[1] = 17;
                                                                                                                                                                                                  statearr_33354_33659[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e33353;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }catch(e33351) {
                                                                                                                                                                                              if(e33351 instanceof Error) {
                                                                                                                                                                                                var ex__5575__auto__ = e33351;
                                                                                                                                                                                                var statearr_33352_33660 = state_33051;
                                                                                                                                                                                                statearr_33352_33660[1] = 50;
                                                                                                                                                                                                statearr_33352_33660[2] = ex__5575__auto__;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                  throw e33351;
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  return null
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if(state_val_33052 === 87) {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_32979 = state_33051[18];
                                                                                                                                                                                                var inst_32979__$1 = state_33051[2];
                                                                                                                                                                                                var inst_32980 = inst_32979__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                var state_33051__$1 = function() {
                                                                                                                                                                                                  var statearr_33358 = state_33051;
                                                                                                                                                                                                  statearr_33358[18] = inst_32979__$1;
                                                                                                                                                                                                  return statearr_33358
                                                                                                                                                                                                }();
                                                                                                                                                                                                if(cljs.core.truth_(inst_32980)) {
                                                                                                                                                                                                  var statearr_33359_33661 = state_33051__$1;
                                                                                                                                                                                                  statearr_33359_33661[1] = 88
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  var statearr_33360_33662 = state_33051__$1;
                                                                                                                                                                                                  statearr_33360_33662[1] = 89
                                                                                                                                                                                                }
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e33356) {
                                                                                                                                                                                                if(e33356 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e33356;
                                                                                                                                                                                                  var statearr_33357_33663 = state_33051;
                                                                                                                                                                                                  statearr_33357_33663[1] = 12;
                                                                                                                                                                                                  statearr_33357_33663[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e33356;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if(state_val_33052 === 24) {
                                                                                                                                                                                                var inst_32853 = state_33051[17];
                                                                                                                                                                                                var inst_32860 = function() {
                                                                                                                                                                                                  throw inst_32853;
                                                                                                                                                                                                }();
                                                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                                                var statearr_33361_33664 = state_33051__$1;
                                                                                                                                                                                                statearr_33361_33664[2] = inst_32860;
                                                                                                                                                                                                statearr_33361_33664[1] = 25;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if(state_val_33052 === 56) {
                                                                                                                                                                                                  try {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var state_33051__$1 = state_33051;
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        var statearr_33366_33665 = state_33051__$1;
                                                                                                                                                                                                        statearr_33366_33665[1] = 58
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        var statearr_33367_33666 = state_33051__$1;
                                                                                                                                                                                                        statearr_33367_33666[1] = 59
                                                                                                                                                                                                      }
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e33364) {
                                                                                                                                                                                                      if(e33364 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e33364;
                                                                                                                                                                                                        var statearr_33365_33667 = state_33051;
                                                                                                                                                                                                        statearr_33365_33667[1] = 17;
                                                                                                                                                                                                        statearr_33365_33667[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e33364;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }catch(e33362) {
                                                                                                                                                                                                    if(e33362 instanceof Error) {
                                                                                                                                                                                                      var ex__5575__auto__ = e33362;
                                                                                                                                                                                                      var statearr_33363_33668 = state_33051;
                                                                                                                                                                                                      statearr_33363_33668[1] = 50;
                                                                                                                                                                                                      statearr_33363_33668[2] = ex__5575__auto__;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        throw e33362;
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        return null
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if(state_val_33052 === 88) {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var inst_32982 = function() {
                                                                                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                                                                                      }();
                                                                                                                                                                                                      var state_33051__$1 = state_33051;
                                                                                                                                                                                                      var statearr_33370_33669 = state_33051__$1;
                                                                                                                                                                                                      statearr_33370_33669[2] = inst_32982;
                                                                                                                                                                                                      statearr_33370_33669[1] = 90;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e33368) {
                                                                                                                                                                                                      if(e33368 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e33368;
                                                                                                                                                                                                        var statearr_33369_33670 = state_33051;
                                                                                                                                                                                                        statearr_33369_33670[1] = 12;
                                                                                                                                                                                                        statearr_33369_33670[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e33368;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if(state_val_33052 === 25) {
                                                                                                                                                                                                      var inst_32862 = state_33051[2];
                                                                                                                                                                                                      var state_33051__$1 = state_33051;
                                                                                                                                                                                                      var statearr_33371_33671 = state_33051__$1;
                                                                                                                                                                                                      statearr_33371_33671[2] = inst_32862;
                                                                                                                                                                                                      statearr_33371_33671[1] = 21;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if(state_val_33052 === 57) {
                                                                                                                                                                                                        try {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_32928 = state_33051[2];
                                                                                                                                                                                                            var state_33051__$1 = state_33051;
                                                                                                                                                                                                            var statearr_33376_33672 = state_33051__$1;
                                                                                                                                                                                                            statearr_33376_33672[2] = inst_32928;
                                                                                                                                                                                                            statearr_33376_33672[1] = 49;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e33374) {
                                                                                                                                                                                                            if(e33374 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e33374;
                                                                                                                                                                                                              var statearr_33375_33673 = state_33051;
                                                                                                                                                                                                              statearr_33375_33673[1] = 17;
                                                                                                                                                                                                              statearr_33375_33673[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e33374;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }catch(e33372) {
                                                                                                                                                                                                          if(e33372 instanceof Error) {
                                                                                                                                                                                                            var ex__5575__auto__ = e33372;
                                                                                                                                                                                                            var statearr_33373_33674 = state_33051;
                                                                                                                                                                                                            statearr_33373_33674[1] = 50;
                                                                                                                                                                                                            statearr_33373_33674[2] = ex__5575__auto__;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                              throw e33372;
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              return null
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if(state_val_33052 === 89) {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_32979 = state_33051[18];
                                                                                                                                                                                                            var inst_32984 = function() {
                                                                                                                                                                                                              throw inst_32979;
                                                                                                                                                                                                            }();
                                                                                                                                                                                                            var state_33051__$1 = state_33051;
                                                                                                                                                                                                            var statearr_33379_33675 = state_33051__$1;
                                                                                                                                                                                                            statearr_33379_33675[2] = inst_32984;
                                                                                                                                                                                                            statearr_33379_33675[1] = 90;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e33377) {
                                                                                                                                                                                                            if(e33377 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e33377;
                                                                                                                                                                                                              var statearr_33378_33676 = state_33051;
                                                                                                                                                                                                              statearr_33378_33676[1] = 12;
                                                                                                                                                                                                              statearr_33378_33676[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e33377;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if(state_val_33052 === 26) {
                                                                                                                                                                                                            try {
                                                                                                                                                                                                              var inst_32841 = state_33051[5];
                                                                                                                                                                                                              var inst_32865 = cljs.core._EQ_.call(null, inst_32841, "\ufdd0:messaging");
                                                                                                                                                                                                              var state_33051__$1 = state_33051;
                                                                                                                                                                                                              if(inst_32865) {
                                                                                                                                                                                                                var statearr_33382_33677 = state_33051__$1;
                                                                                                                                                                                                                statearr_33382_33677[1] = 27
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                var statearr_33383_33678 = state_33051__$1;
                                                                                                                                                                                                                statearr_33383_33678[1] = 28
                                                                                                                                                                                                              }
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }catch(e33380) {
                                                                                                                                                                                                              if(e33380 instanceof Error) {
                                                                                                                                                                                                                var ex__5575__auto__ = e33380;
                                                                                                                                                                                                                var statearr_33381_33679 = state_33051;
                                                                                                                                                                                                                statearr_33381_33679[1] = 22;
                                                                                                                                                                                                                statearr_33381_33679[2] = ex__5575__auto__;
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                  throw e33380;
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if(state_val_33052 === 58) {
                                                                                                                                                                                                              try {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_32923 = function() {
                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                                                                                                  var statearr_33388_33680 = state_33051__$1;
                                                                                                                                                                                                                  statearr_33388_33680[2] = inst_32923;
                                                                                                                                                                                                                  statearr_33388_33680[1] = 60;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e33386) {
                                                                                                                                                                                                                  if(e33386 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e33386;
                                                                                                                                                                                                                    var statearr_33387_33681 = state_33051;
                                                                                                                                                                                                                    statearr_33387_33681[1] = 17;
                                                                                                                                                                                                                    statearr_33387_33681[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e33386;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }catch(e33384) {
                                                                                                                                                                                                                if(e33384 instanceof Error) {
                                                                                                                                                                                                                  var ex__5575__auto__ = e33384;
                                                                                                                                                                                                                  var statearr_33385_33682 = state_33051;
                                                                                                                                                                                                                  statearr_33385_33682[1] = 50;
                                                                                                                                                                                                                  statearr_33385_33682[2] = ex__5575__auto__;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    throw e33384;
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if(state_val_33052 === 90) {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_32986 = state_33051[2];
                                                                                                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                                                                                                  var statearr_33391_33683 = state_33051__$1;
                                                                                                                                                                                                                  statearr_33391_33683[2] = inst_32986;
                                                                                                                                                                                                                  statearr_33391_33683[1] = 86;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e33389) {
                                                                                                                                                                                                                  if(e33389 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e33389;
                                                                                                                                                                                                                    var statearr_33390_33684 = state_33051;
                                                                                                                                                                                                                    statearr_33390_33684[1] = 12;
                                                                                                                                                                                                                    statearr_33390_33684[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e33389;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if(state_val_33052 === 27) {
                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                    var state_33051__$1 = state_33051;
                                                                                                                                                                                                                    var statearr_33394_33685 = state_33051__$1;
                                                                                                                                                                                                                    statearr_33394_33685[2] = null;
                                                                                                                                                                                                                    statearr_33394_33685[1] = 35;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }catch(e33392) {
                                                                                                                                                                                                                    if(e33392 instanceof Error) {
                                                                                                                                                                                                                      var ex__5575__auto__ = e33392;
                                                                                                                                                                                                                      var statearr_33393_33686 = state_33051;
                                                                                                                                                                                                                      statearr_33393_33686[1] = 22;
                                                                                                                                                                                                                      statearr_33393_33686[2] = ex__5575__auto__;
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        throw e33392;
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if(state_val_33052 === 59) {
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                                                                                        var statearr_33399_33687 = state_33051__$1;
                                                                                                                                                                                                                        statearr_33399_33687[2] = null;
                                                                                                                                                                                                                        statearr_33399_33687[1] = 60;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }catch(e33397) {
                                                                                                                                                                                                                        if(e33397 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e33397;
                                                                                                                                                                                                                          var statearr_33398_33688 = state_33051;
                                                                                                                                                                                                                          statearr_33398_33688[1] = 17;
                                                                                                                                                                                                                          statearr_33398_33688[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e33397;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }catch(e33395) {
                                                                                                                                                                                                                      if(e33395 instanceof Error) {
                                                                                                                                                                                                                        var ex__5575__auto__ = e33395;
                                                                                                                                                                                                                        var statearr_33396_33689 = state_33051;
                                                                                                                                                                                                                        statearr_33396_33689[1] = 50;
                                                                                                                                                                                                                        statearr_33396_33689[2] = ex__5575__auto__;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                          throw e33395;
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if(state_val_33052 === 91) {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var inst_32842 = state_33051[8];
                                                                                                                                                                                                                          var inst_32989 = cljs.core._EQ_.call(null, inst_32842, "\ufdd0:login-success");
                                                                                                                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                                                                                                                          if(inst_32989) {
                                                                                                                                                                                                                            var statearr_33404_33690 = state_33051__$1;
                                                                                                                                                                                                                            statearr_33404_33690[1] = 92
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_33405_33691 = state_33051__$1;
                                                                                                                                                                                                                            statearr_33405_33691[1] = 93
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e33402) {
                                                                                                                                                                                                                          if(e33402 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e33402;
                                                                                                                                                                                                                            var statearr_33403_33692 = state_33051;
                                                                                                                                                                                                                            statearr_33403_33692[1] = 12;
                                                                                                                                                                                                                            statearr_33403_33692[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e33402;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }catch(e33400) {
                                                                                                                                                                                                                        if(e33400 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e33400;
                                                                                                                                                                                                                          var statearr_33401_33693 = state_33051;
                                                                                                                                                                                                                          statearr_33401_33693[1] = 87;
                                                                                                                                                                                                                          statearr_33401_33693[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e33400;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if(state_val_33052 === 28) {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var state_33051__$1 = state_33051;
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            var statearr_33408_33694 = state_33051__$1;
                                                                                                                                                                                                                            statearr_33408_33694[1] = 42
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_33409_33695 = state_33051__$1;
                                                                                                                                                                                                                            statearr_33409_33695[1] = 43
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e33406) {
                                                                                                                                                                                                                          if(e33406 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e33406;
                                                                                                                                                                                                                            var statearr_33407_33696 = state_33051;
                                                                                                                                                                                                                            statearr_33407_33696[1] = 22;
                                                                                                                                                                                                                            statearr_33407_33696[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e33406;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if(state_val_33052 === 60) {
                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              var inst_32926 = state_33051[2];
                                                                                                                                                                                                                              var state_33051__$1 = state_33051;
                                                                                                                                                                                                                              var statearr_33414_33697 = state_33051__$1;
                                                                                                                                                                                                                              statearr_33414_33697[2] = inst_32926;
                                                                                                                                                                                                                              statearr_33414_33697[1] = 57;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }catch(e33412) {
                                                                                                                                                                                                                              if(e33412 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e33412;
                                                                                                                                                                                                                                var statearr_33413_33698 = state_33051;
                                                                                                                                                                                                                                statearr_33413_33698[1] = 17;
                                                                                                                                                                                                                                statearr_33413_33698[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e33412;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }catch(e33410) {
                                                                                                                                                                                                                            if(e33410 instanceof Error) {
                                                                                                                                                                                                                              var ex__5575__auto__ = e33410;
                                                                                                                                                                                                                              var statearr_33411_33699 = state_33051;
                                                                                                                                                                                                                              statearr_33411_33699[1] = 50;
                                                                                                                                                                                                                              statearr_33411_33699[2] = ex__5575__auto__;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                throw e33410;
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if(state_val_33052 === 92) {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_32843 = state_33051[9];
                                                                                                                                                                                                                                var inst_32991 = chatter_box.chat_view_component.login_success.call(null, inst_32843);
                                                                                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                var statearr_33419_33700 = state_33051__$1;
                                                                                                                                                                                                                                statearr_33419_33700[2] = inst_32991;
                                                                                                                                                                                                                                statearr_33419_33700[1] = 94;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e33417) {
                                                                                                                                                                                                                                if(e33417 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e33417;
                                                                                                                                                                                                                                  var statearr_33418_33701 = state_33051;
                                                                                                                                                                                                                                  statearr_33418_33701[1] = 12;
                                                                                                                                                                                                                                  statearr_33418_33701[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e33417;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }catch(e33415) {
                                                                                                                                                                                                                              if(e33415 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e33415;
                                                                                                                                                                                                                                var statearr_33416_33702 = state_33051;
                                                                                                                                                                                                                                statearr_33416_33702[1] = 87;
                                                                                                                                                                                                                                statearr_33416_33702[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e33415;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if(state_val_33052 === 29) {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_32897 = state_33051[2];
                                                                                                                                                                                                                                var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                var statearr_33422_33703 = state_33051__$1;
                                                                                                                                                                                                                                statearr_33422_33703[2] = inst_32897;
                                                                                                                                                                                                                                statearr_33422_33703[1] = 21;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e33420) {
                                                                                                                                                                                                                                if(e33420 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e33420;
                                                                                                                                                                                                                                  var statearr_33421_33704 = state_33051;
                                                                                                                                                                                                                                  statearr_33421_33704[1] = 22;
                                                                                                                                                                                                                                  statearr_33421_33704[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e33420;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if(state_val_33052 === 61) {
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                  var inst_32933 = function() {
                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                  var statearr_33425_33705 = state_33051__$1;
                                                                                                                                                                                                                                  statearr_33425_33705[2] = inst_32933;
                                                                                                                                                                                                                                  statearr_33425_33705[1] = 63;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }catch(e33423) {
                                                                                                                                                                                                                                  if(e33423 instanceof Error) {
                                                                                                                                                                                                                                    var ex__5575__auto__ = e33423;
                                                                                                                                                                                                                                    var statearr_33424_33706 = state_33051;
                                                                                                                                                                                                                                    statearr_33424_33706[1] = 17;
                                                                                                                                                                                                                                    statearr_33424_33706[2] = ex__5575__auto__;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                      throw e33423;
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if(state_val_33052 === 93) {
                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        var statearr_33430_33707 = state_33051__$1;
                                                                                                                                                                                                                                        statearr_33430_33707[1] = 95
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        var statearr_33431_33708 = state_33051__$1;
                                                                                                                                                                                                                                        statearr_33431_33708[1] = 96
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e33428) {
                                                                                                                                                                                                                                      if(e33428 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e33428;
                                                                                                                                                                                                                                        var statearr_33429_33709 = state_33051;
                                                                                                                                                                                                                                        statearr_33429_33709[1] = 12;
                                                                                                                                                                                                                                        statearr_33429_33709[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e33428;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }catch(e33426) {
                                                                                                                                                                                                                                    if(e33426 instanceof Error) {
                                                                                                                                                                                                                                      var ex__5575__auto__ = e33426;
                                                                                                                                                                                                                                      var statearr_33427_33710 = state_33051;
                                                                                                                                                                                                                                      statearr_33427_33710[1] = 87;
                                                                                                                                                                                                                                      statearr_33427_33710[2] = ex__5575__auto__;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        throw e33426;
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if(state_val_33052 === 30) {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var inst_32889 = state_33051[2];
                                                                                                                                                                                                                                      var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                      var statearr_33434_33711 = state_33051__$1;
                                                                                                                                                                                                                                      statearr_33434_33711[2] = inst_32889;
                                                                                                                                                                                                                                      statearr_33434_33711[1] = 29;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e33432) {
                                                                                                                                                                                                                                      if(e33432 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e33432;
                                                                                                                                                                                                                                        var statearr_33433_33712 = state_33051;
                                                                                                                                                                                                                                        statearr_33433_33712[1] = 22;
                                                                                                                                                                                                                                        statearr_33433_33712[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e33432;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if(state_val_33052 === 62) {
                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                        var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                        var statearr_33437_33713 = state_33051__$1;
                                                                                                                                                                                                                                        statearr_33437_33713[2] = null;
                                                                                                                                                                                                                                        statearr_33437_33713[1] = 63;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }catch(e33435) {
                                                                                                                                                                                                                                        if(e33435 instanceof Error) {
                                                                                                                                                                                                                                          var ex__5575__auto__ = e33435;
                                                                                                                                                                                                                                          var statearr_33436_33714 = state_33051;
                                                                                                                                                                                                                                          statearr_33436_33714[1] = 17;
                                                                                                                                                                                                                                          statearr_33436_33714[2] = ex__5575__auto__;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                            throw e33435;
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if(state_val_33052 === 94) {
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_32999 = state_33051[2];
                                                                                                                                                                                                                                            var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                            var statearr_33442_33715 = state_33051__$1;
                                                                                                                                                                                                                                            statearr_33442_33715[2] = inst_32999;
                                                                                                                                                                                                                                            statearr_33442_33715[1] = 86;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e33440) {
                                                                                                                                                                                                                                            if(e33440 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e33440;
                                                                                                                                                                                                                                              var statearr_33441_33716 = state_33051;
                                                                                                                                                                                                                                              statearr_33441_33716[1] = 12;
                                                                                                                                                                                                                                              statearr_33441_33716[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e33440;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }catch(e33438) {
                                                                                                                                                                                                                                          if(e33438 instanceof Error) {
                                                                                                                                                                                                                                            var ex__5575__auto__ = e33438;
                                                                                                                                                                                                                                            var statearr_33439_33717 = state_33051;
                                                                                                                                                                                                                                            statearr_33439_33717[1] = 87;
                                                                                                                                                                                                                                            statearr_33439_33717[2] = ex__5575__auto__;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                              throw e33438;
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if(state_val_33052 === 31) {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_32867 = state_33051[6];
                                                                                                                                                                                                                                            var inst_32867__$1 = state_33051[2];
                                                                                                                                                                                                                                            var inst_32868 = inst_32867__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                            var state_33051__$1 = function() {
                                                                                                                                                                                                                                              var statearr_33445 = state_33051;
                                                                                                                                                                                                                                              statearr_33445[6] = inst_32867__$1;
                                                                                                                                                                                                                                              return statearr_33445
                                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                                            if(cljs.core.truth_(inst_32868)) {
                                                                                                                                                                                                                                              var statearr_33446_33718 = state_33051__$1;
                                                                                                                                                                                                                                              statearr_33446_33718[1] = 32
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              var statearr_33447_33719 = state_33051__$1;
                                                                                                                                                                                                                                              statearr_33447_33719[1] = 33
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e33443) {
                                                                                                                                                                                                                                            if(e33443 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e33443;
                                                                                                                                                                                                                                              var statearr_33444_33720 = state_33051;
                                                                                                                                                                                                                                              statearr_33444_33720[1] = 22;
                                                                                                                                                                                                                                              statearr_33444_33720[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e33443;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if(state_val_33052 === 63) {
                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                              var inst_32936 = state_33051[2];
                                                                                                                                                                                                                                              var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                              var statearr_33450_33721 = state_33051__$1;
                                                                                                                                                                                                                                              statearr_33450_33721[2] = inst_32936;
                                                                                                                                                                                                                                              statearr_33450_33721[1] = 48;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }catch(e33448) {
                                                                                                                                                                                                                                              if(e33448 instanceof Error) {
                                                                                                                                                                                                                                                var ex__5575__auto__ = e33448;
                                                                                                                                                                                                                                                var statearr_33449_33722 = state_33051;
                                                                                                                                                                                                                                                statearr_33449_33722[1] = 17;
                                                                                                                                                                                                                                                statearr_33449_33722[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                  throw e33448;
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if(state_val_33052 === 95) {
                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                  var inst_32994 = function() {
                                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                                  var state_33051__$1 = state_33051;
                                                                                                                                                                                                                                                  var statearr_33455_33723 = state_33051__$1;
                                                                                                                                                                                                                                                  statearr_33455_33723[2] = inst_32994;
                                                                                                                                                                                                                                                  statearr_33455_33723[1] = 97;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }catch(e33453) {
                                                                                                                                                                                                                                                  if(e33453 instanceof Error) {
                                                                                                                                                                                                                                                    var ex__5575__auto__ = e33453;
                                                                                                                                                                                                                                                    var statearr_33454_33724 = state_33051;
                                                                                                                                                                                                                                                    statearr_33454_33724[1] = 12;
                                                                                                                                                                                                                                                    statearr_33454_33724[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                                      throw e33453;
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }catch(e33451) {
                                                                                                                                                                                                                                                if(e33451 instanceof Error) {
                                                                                                                                                                                                                                                  var ex__5575__auto__ = e33451;
                                                                                                                                                                                                                                                  var statearr_33452_33725 = state_33051;
                                                                                                                                                                                                                                                  statearr_33452_33725[1] = 87;
                                                                                                                                                                                                                                                  statearr_33452_33725[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                    throw e33451;
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_33457 = new Array(19);
            statearr_33457[0] = state_machine__5582__auto__;
            statearr_33457[1] = 1;
            return statearr_33457
          };
          var state_machine__5582__auto____1 = function(state_33051) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_33051);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_33051) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_33051)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_33458 = f__5654__auto__.call(null);
      statearr_33458[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_33458
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.consol_log_component");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.core");
chatter_box.consol_log_component.create_consol_log_component = function create_consol_log_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.consol_log_component.t28161 !== "undefined") {
  }else {
    goog.provide("chatter_box.consol_log_component.t28161");
    chatter_box.consol_log_component.t28161 = function(in_ch, create_consol_log_component, meta28162) {
      this.in_ch = in_ch;
      this.create_consol_log_component = create_consol_log_component;
      this.meta28162 = meta28162;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.consol_log_component.t28161.cljs$lang$type = true;
    chatter_box.consol_log_component.t28161.cljs$lang$ctorStr = "chatter-box.consol-log-component/t28161";
    chatter_box.consol_log_component.t28161.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.consol-log-component/t28161")
    };
    chatter_box.consol_log_component.t28161.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.consol_log_component.t28161.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__5654__auto__ = function() {
          var switch__5581__auto__ = function(state_28177) {
            var state_val_28178 = state_28177[1];
            if(state_val_28178 === 7) {
              var inst_28167 = state_28177[2];
              var inst_28168 = cljs.core.pr_str.call(null, inst_28167);
              var inst_28169 = enfocus.core.log_debug.call(null, inst_28168);
              var state_28177__$1 = function() {
                var statearr_28179 = state_28177;
                statearr_28179[5] = inst_28169;
                return statearr_28179
              }();
              var statearr_28180_28189 = state_28177__$1;
              statearr_28180_28189[2] = null;
              statearr_28180_28189[1] = 2;
              return"\ufdd0:recur"
            }else {
              if(state_val_28178 === 6) {
                var inst_28173 = state_28177[2];
                var state_28177__$1 = state_28177;
                var statearr_28181_28190 = state_28177__$1;
                statearr_28181_28190[2] = inst_28173;
                statearr_28181_28190[1] = 3;
                return"\ufdd0:recur"
              }else {
                if(state_val_28178 === 5) {
                  var state_28177__$1 = state_28177;
                  var statearr_28182_28191 = state_28177__$1;
                  statearr_28182_28191[2] = null;
                  statearr_28182_28191[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_28178 === 4) {
                    var state_28177__$1 = state_28177;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28177__$1, 7, self__.in_ch)
                  }else {
                    if(state_val_28178 === 3) {
                      var inst_28175 = state_28177[2];
                      var state_28177__$1 = state_28177;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28177__$1, inst_28175)
                    }else {
                      if(state_val_28178 === 2) {
                        var state_28177__$1 = state_28177;
                        if(true) {
                          var statearr_28183_28192 = state_28177__$1;
                          statearr_28183_28192[1] = 4
                        }else {
                          var statearr_28184_28193 = state_28177__$1;
                          statearr_28184_28193[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_28178 === 1) {
                          var state_28177__$1 = state_28177;
                          var statearr_28185_28194 = state_28177__$1;
                          statearr_28185_28194[2] = null;
                          statearr_28185_28194[1] = 2;
                          return"\ufdd0:recur"
                        }else {
                          return null
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__5581__auto__) {
            return function() {
              var state_machine__5582__auto__ = null;
              var state_machine__5582__auto____0 = function() {
                var statearr_28187 = new Array(6);
                statearr_28187[0] = state_machine__5582__auto__;
                statearr_28187[1] = 1;
                return statearr_28187
              };
              var state_machine__5582__auto____1 = function(state_28177) {
                while(true) {
                  var result__5583__auto__ = switch__5581__auto__.call(null, state_28177);
                  if(result__5583__auto__ === "\ufdd0:recur") {
                    continue
                  }else {
                    return result__5583__auto__
                  }
                  break
                }
              };
              state_machine__5582__auto__ = function(state_28177) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5582__auto____0.call(this);
                  case 1:
                    return state_machine__5582__auto____1.call(this, state_28177)
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
              state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
              return state_machine__5582__auto__
            }()
          }(switch__5581__auto__)
        }();
        var state__5655__auto__ = function() {
          var statearr_28188 = f__5654__auto__.call(null);
          statearr_28188[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
          return statearr_28188
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
      });
      return c__5653__auto__
    };
    chatter_box.consol_log_component.t28161.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return true
    };
    chatter_box.consol_log_component.t28161.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.consol_log_component.t28161.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28163) {
      var self__ = this;
      return self__.meta28162
    };
    chatter_box.consol_log_component.t28161.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28163, meta28162__$1) {
      var self__ = this;
      return new chatter_box.consol_log_component.t28161(self__.in_ch, self__.create_consol_log_component, meta28162__$1)
    };
    chatter_box.consol_log_component.__GT_t28161 = function __GT_t28161(in_ch__$1, create_consol_log_component__$1, meta28162) {
      return new chatter_box.consol_log_component.t28161(in_ch__$1, create_consol_log_component__$1, meta28162)
    }
  }
  return new chatter_box.consol_log_component.t28161(in_ch, create_consol_log_component, null)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3370__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.read_char[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.read_char["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3370__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.unread[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.unread["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  if(self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx]
  }else {
    return self__.buffer.pop()
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  return self__.buffer.push(ch)
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1)
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto__ = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var and__3941__auto__ = function() {
      var or__3943__auto____$1 = "+" === initch;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch);
        return next_ch
      }())
    }else {
      return and__3941__auto__
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__34074) {
    var rdr = cljs.core.first(arglist__34074);
    var msg = cljs.core.rest(arglist__34074);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto__ = !(ch === "#");
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !(ch === "'");
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(ch === ":");
      if(and__3941__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__34075 = function() {
        sb.append(ch);
        return sb
      }();
      var G__34076 = cljs.reader.read_char.call(null, rdr);
      sb = G__34075;
      ch = G__34076;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto__ = ch === "n";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = ch === "r";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return ch == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!function() {
    var or__3943__auto__ = group3 == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return group3.length < 1
    }
  }()) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : "\ufdd0:default" ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(function() {
    var and__3941__auto__ = !(matches == null);
    if(and__3941__auto__) {
      return matches[0] === s
    }else {
      return and__3941__auto__
    }
  }()) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\b"
            }else {
              if(c === "f") {
                return"\f"
              }else {
                if("\ufdd0:else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if("\ufdd0:else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__34077 = cljs.reader.read_char.call(null, rdr);
      ch = G__34077;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__34078 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__34078;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__34079 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__34079;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3943__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__34080 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__34081 = cljs.reader.read_char.call(null, reader);
      buffer = G__34080;
      ch = G__34081;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__34082 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__34083 = cljs.reader.read_char.call(null, reader);
        buffer = G__34082;
        ch = G__34083;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if("\ufdd0:default") {
            var G__34084 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__34085 = cljs.reader.read_char.call(null, reader);
            buffer = G__34084;
            ch = G__34085;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = function() {
      var and__3941__auto__ = !(void 0 === ns);
      if(and__3941__auto__) {
        return ns.substring(ns.length - 2, ns.length) === ":/"
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = name[name.length - 1] === ":";
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return!(token__$1.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(function() {
      var and__3941__auto__ = !(ns == null);
      if(and__3941__auto__) {
        return ns.length > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true)
      }else {
        if("\ufdd0:else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__34087 = o;
    if(G__34087) {
      if(function() {
        var or__3943__auto__ = G__34087.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__34087.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__34087.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__34087)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__34087)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0:else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0:else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__34088 = reader;
        var G__34089 = eof_is_error;
        var G__34090 = sentinel;
        var G__34091 = is_recursive;
        reader = G__34088;
        eof_is_error = G__34089;
        sentinel = G__34090;
        is_recursive = G__34091;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__34092 = cljs.reader.read_comment.call(null, reader, ch);
          var G__34093 = eof_is_error;
          var G__34094 = sentinel;
          var G__34095 = is_recursive;
          reader = G__34092;
          eof_is_error = G__34093;
          sentinel = G__34094;
          is_recursive = G__34095;
          continue
        }else {
          if("\ufdd0:else") {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : "\ufdd0:else" ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__34096 = reader;
              var G__34097 = eof_is_error;
              var G__34098 = sentinel;
              var G__34099 = is_recursive;
              reader = G__34096;
              eof_is_error = G__34097;
              sentinel = G__34098;
              is_recursive = G__34099;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width)
    }else {
      if("\ufdd0:else") {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__34100 = b.append("0");
            b = G__34100;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto__)) {
    var or__3943__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if(cljs.core.not.call(null, isNaN(n))) {
    return n
  }else {
    return null
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if(function() {
    var and__3941__auto__ = low <= n;
    if(and__3941__auto__) {
      return n <= high
    }else {
      return and__3941__auto__
    }
  }()) {
  }else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""))
  }
  return n
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__34102 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__34102, 0, null);
  var years = cljs.core.nth.call(null, vec__34102, 1, null);
  var months = cljs.core.nth.call(null, vec__34102, 2, null);
  var days = cljs.core.nth.call(null, vec__34102, 3, null);
  var hours = cljs.core.nth.call(null, vec__34102, 4, null);
  var minutes = cljs.core.nth.call(null, vec__34102, 5, null);
  var seconds = cljs.core.nth.call(null, vec__34102, 6, null);
  var fraction = cljs.core.nth.call(null, vec__34102, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__34102, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__34102, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__34102, 10, null);
  var v = vec__34102;
  if(cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""))
  }else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, months);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 1
      }
    }();
    var days__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, days);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 1
      }
    }();
    var hours__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, hours);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var minutes__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, minutes);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var seconds__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, seconds);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var fraction__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return cljs.core.PersistentVector.fromArray([years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check.call(null, 0, minutes__$1, 
    59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], true)
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__34104 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__34104, 0, null);
    var months = cljs.core.nth.call(null, vec__34104, 1, null);
    var days = cljs.core.nth.call(null, vec__34104, 2, null);
    var hours = cljs.core.nth.call(null, vec__34104, 3, null);
    var minutes = cljs.core.nth.call(null, vec__34104, 4, null);
    var seconds = cljs.core.nth.call(null, vec__34104, 5, null);
    var ms = cljs.core.nth.call(null, vec__34104, 6, null);
    var offset = cljs.core.nth.call(null, vec__34104, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.fromArray(["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], true));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if("\ufdd0:else") {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("chatter_box.error_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.error_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-failure"], true), null], true);
chatter_box.error_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.error_view_component.create_error_view_component = function create_error_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.error_view_component.t25029 !== "undefined") {
  }else {
    goog.provide("chatter_box.error_view_component.t25029");
    chatter_box.error_view_component.t25029 = function(in_ch, create_error_view_component, meta25030) {
      this.in_ch = in_ch;
      this.create_error_view_component = create_error_view_component;
      this.meta25030 = meta25030;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.error_view_component.t25029.cljs$lang$type = true;
    chatter_box.error_view_component.t25029.cljs$lang$ctorStr = "chatter-box.error-view-component/t25029";
    chatter_box.error_view_component.t25029.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.error-view-component/t25029")
    };
    chatter_box.error_view_component.t25029.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.error_view_component.t25029.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.error_view_component.out_chan, out_ch);
      return chatter_box.error_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.error_view_component.t25029.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.error_view_component.valid_types).call(null, msg)
    };
    chatter_box.error_view_component.t25029.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.error_view_component.t25029.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25031) {
      var self__ = this;
      return self__.meta25030
    };
    chatter_box.error_view_component.t25029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25031, meta25030__$1) {
      var self__ = this;
      return new chatter_box.error_view_component.t25029(self__.in_ch, self__.create_error_view_component, meta25030__$1)
    };
    chatter_box.error_view_component.__GT_t25029 = function __GT_t25029(in_ch__$1, create_error_view_component__$1, meta25030) {
      return new chatter_box.error_view_component.t25029(in_ch__$1, create_error_view_component__$1, meta25030)
    }
  }
  return new chatter_box.error_view_component.t25029(in_ch, create_error_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/error.html["#error-div"]') == null) {
  var vec__25032_25037 = enfocus.core.replace_ids.call(null, "en8679_", '\x3cdiv id\x3d"error-div" class\x3d"alert alert-danger"\x3e \n \x3ccenter\x3e \n  \x3cdiv id\x3d"error-txt"\x3e\n   This is an error\n  \x3c/div\x3e \n  \x3cbr /\x3e \n  \x3cbutton id\x3d"error-btn" class\x3d"btn btn-danger"\x3eClose\x3c/button\x3e \n  \x3ccenter\x3e \n  \x3c/center\x3e\n \x3c/center\x3e\n\x3c/div\x3e');
  var sym__4174__auto___25038 = cljs.core.nth.call(null, vec__25032_25037, 0, null);
  var txt__4175__auto___25039 = cljs.core.nth.call(null, vec__25032_25037, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/error.html["#error-div"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___25038, txt__4175__auto___25039], true))
}else {
}
chatter_box.error_view_component.error_div = function error_div() {
  var vec__25036 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/error.html["#error-div"]')
  }.call(null);
  var id_sym25033 = cljs.core.nth.call(null, vec__25036, 0, null);
  var pnod25034 = cljs.core.nth.call(null, vec__25036, 1, null);
  var pnod25034__$1 = enfocus.core.create_hidden_dom.call(null, pnod25034);
  enfocus.core.i_at.call(null, id_sym25033, pnod25034__$1, "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym25033, pnod25034__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod25034__$1)
};
chatter_box.error_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, "body", enfocus.core.append.call(null, chatter_box.error_view_component.error_div.call(null)), "#error-btn", enfocus.core.do__GT_.call(null, enfocus.events.listen.call(null, "\ufdd0:click", function() {
    return enfocus.core.at.call(null, "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"))
  })))
};
chatter_box.error_view_component.show_error = function show_error(msg) {
  return enfocus.core.at.call(null, "#error-txt", enfocus.core.content.call(null, msg), "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", ""))
};
chatter_box.error_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_25120) {
        var state_val_25121 = state_25120[1];
        if(state_val_25121 === 1) {
          var state_25120__$1 = state_25120;
          var statearr_25122_25142 = state_25120__$1;
          statearr_25122_25142[2] = null;
          statearr_25122_25142[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_25121 === 2) {
            var state_25120__$1 = state_25120;
            if(true) {
              var statearr_25123_25143 = state_25120__$1;
              statearr_25123_25143[1] = 4
            }else {
              var statearr_25124_25144 = state_25120__$1;
              statearr_25124_25144[1] = 5
            }
            return"\ufdd0:recur"
          }else {
            if(state_val_25121 === 3) {
              var inst_25118 = state_25120[2];
              var state_25120__$1 = state_25120;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25120__$1, inst_25118)
            }else {
              if(state_val_25121 === 4) {
                var state_25120__$1 = state_25120;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25120__$1, 7, in_ch)
              }else {
                if(state_val_25121 === 5) {
                  var state_25120__$1 = state_25120;
                  var statearr_25125_25145 = state_25120__$1;
                  statearr_25125_25145[2] = null;
                  statearr_25125_25145[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_25121 === 6) {
                    var inst_25116 = state_25120[2];
                    var state_25120__$1 = state_25120;
                    var statearr_25126_25146 = state_25120__$1;
                    statearr_25126_25146[2] = inst_25116;
                    statearr_25126_25146[1] = 3;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_25121 === 7) {
                      var inst_25096 = state_25120[5];
                      var inst_25094 = state_25120[6];
                      var inst_25094__$1 = state_25120[2];
                      var inst_25095 = (new cljs.core.Keyword("\ufdd0:area")).call(null, inst_25094__$1);
                      var inst_25096__$1 = cljs.core._EQ_.call(null, inst_25095, "\ufdd0:view");
                      var state_25120__$1 = function() {
                        var statearr_25127 = state_25120;
                        statearr_25127[5] = inst_25096__$1;
                        statearr_25127[6] = inst_25094__$1;
                        return statearr_25127
                      }();
                      if(inst_25096__$1) {
                        var statearr_25128_25147 = state_25120__$1;
                        statearr_25128_25147[1] = 8
                      }else {
                        var statearr_25129_25148 = state_25120__$1;
                        statearr_25129_25148[1] = 9
                      }
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_25121 === 8) {
                        var inst_25094 = state_25120[6];
                        var inst_25098 = (new cljs.core.Keyword("\ufdd0:key")).call(null, inst_25094);
                        var inst_25099 = cljs.core._EQ_.call(null, inst_25098, "\ufdd0:init");
                        var state_25120__$1 = state_25120;
                        var statearr_25130_25149 = state_25120__$1;
                        statearr_25130_25149[2] = inst_25099;
                        statearr_25130_25149[1] = 10;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_25121 === 9) {
                          var inst_25096 = state_25120[5];
                          var state_25120__$1 = state_25120;
                          var statearr_25131_25150 = state_25120__$1;
                          statearr_25131_25150[2] = inst_25096;
                          statearr_25131_25150[1] = 10;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_25121 === 10) {
                            var inst_25102 = state_25120[2];
                            var state_25120__$1 = state_25120;
                            if(cljs.core.truth_(inst_25102)) {
                              var statearr_25132_25151 = state_25120__$1;
                              statearr_25132_25151[1] = 11
                            }else {
                              var statearr_25133_25152 = state_25120__$1;
                              statearr_25133_25152[1] = 12
                            }
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_25121 === 11) {
                              var inst_25104 = chatter_box.error_view_component.initialize.call(null);
                              var state_25120__$1 = state_25120;
                              var statearr_25134_25153 = state_25120__$1;
                              statearr_25134_25153[2] = inst_25104;
                              statearr_25134_25153[1] = 13;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_25121 === 12) {
                                var inst_25094 = state_25120[6];
                                var inst_25106 = cljs.core.pr_str.call(null, "ERROR:", inst_25094);
                                var inst_25107 = enfocus.core.log_debug.call(null, inst_25106);
                                var inst_25108 = (new cljs.core.Keyword("\ufdd0:data")).call(null, inst_25094);
                                var inst_25109 = (new cljs.core.Keyword("\ufdd0:err")).call(null, inst_25108);
                                var inst_25110 = chatter_box.error_view_component.show_error.call(null, inst_25109);
                                var state_25120__$1 = function() {
                                  var statearr_25135 = state_25120;
                                  statearr_25135[7] = inst_25107;
                                  return statearr_25135
                                }();
                                var statearr_25136_25154 = state_25120__$1;
                                statearr_25136_25154[2] = inst_25110;
                                statearr_25136_25154[1] = 13;
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_25121 === 13) {
                                  var inst_25112 = state_25120[2];
                                  var state_25120__$1 = function() {
                                    var statearr_25137 = state_25120;
                                    statearr_25137[8] = inst_25112;
                                    return statearr_25137
                                  }();
                                  var statearr_25138_25155 = state_25120__$1;
                                  statearr_25138_25155[2] = null;
                                  statearr_25138_25155[1] = 2;
                                  return"\ufdd0:recur"
                                }else {
                                  return null
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_25140 = new Array(9);
            statearr_25140[0] = state_machine__5582__auto__;
            statearr_25140[1] = 1;
            return statearr_25140
          };
          var state_machine__5582__auto____1 = function(state_25120) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_25120);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_25120) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_25120)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_25141 = f__5654__auto__.call(null);
      statearr_25141[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_25141
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.chat_client");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("cljs.core.match");
goog.require("cljs.core.async");
goog.require("chatter_box.protocol");
goog.require("chatter_box.event_bus");
goog.require("enfocus.core");
chatter_box.chat_client.external_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:join"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:created"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", 
"\ufdd0:key", "\ufdd0:updated"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:receive-chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", 
"\ufdd0:left"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-failure"], true), null], true);
chatter_box.chat_client.create_chat_client = function() {
  var create_chat_client__delegate = function(sub_components) {
    var in_ch = cljs.core.async.chan.call(null);
    if(typeof chatter_box.chat_client.t49743 !== "undefined") {
    }else {
      goog.provide("chatter_box.chat_client.t49743");
      chatter_box.chat_client.t49743 = function(in_ch, sub_components, create_chat_client, meta49744) {
        this.in_ch = in_ch;
        this.sub_components = sub_components;
        this.create_chat_client = create_chat_client;
        this.meta49744 = meta49744;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      chatter_box.chat_client.t49743.cljs$lang$type = true;
      chatter_box.chat_client.t49743.cljs$lang$ctorStr = "chatter-box.chat-client/t49743";
      chatter_box.chat_client.t49743.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-client/t49743")
      };
      chatter_box.chat_client.t49743.prototype.chatter_box$event_bus$Component$ = true;
      chatter_box.chat_client.t49743.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
        var self__ = this;
        return chatter_box.chat_client.setup.call(null, out_ch, self__.in_ch, self__.sub_components)
      };
      chatter_box.chat_client.t49743.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
        var self__ = this;
        return chatter_box.protocol.create_filter.call(null, chatter_box.chat_client.external_types).call(null, msg)
      };
      chatter_box.chat_client.t49743.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
        var self__ = this;
        return self__.in_ch
      };
      chatter_box.chat_client.t49743.prototype.cljs$core$IMeta$_meta$arity$1 = function(_49745) {
        var self__ = this;
        return self__.meta49744
      };
      chatter_box.chat_client.t49743.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_49745, meta49744__$1) {
        var self__ = this;
        return new chatter_box.chat_client.t49743(self__.in_ch, self__.sub_components, self__.create_chat_client, meta49744__$1)
      };
      chatter_box.chat_client.__GT_t49743 = function __GT_t49743(in_ch__$1, sub_components__$1, create_chat_client__$1, meta49744) {
        return new chatter_box.chat_client.t49743(in_ch__$1, sub_components__$1, create_chat_client__$1, meta49744)
      }
    }
    return new chatter_box.chat_client.t49743(in_ch, sub_components, create_chat_client, null)
  };
  var create_chat_client = function(var_args) {
    var sub_components = null;
    if(arguments.length > 0) {
      sub_components = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return create_chat_client__delegate.call(this, sub_components)
  };
  create_chat_client.cljs$lang$maxFixedArity = 0;
  create_chat_client.cljs$lang$applyTo = function(arglist__49746) {
    var sub_components = cljs.core.seq(arglist__49746);
    return create_chat_client__delegate(sub_components)
  };
  create_chat_client.cljs$core$IFn$_invoke$arity$variadic = create_chat_client__delegate;
  return create_chat_client
}();
chatter_box.chat_client.pipe_ch = function pipe_ch(in_ch, out_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_49783) {
        var state_val_49784 = state_49783[1];
        if(state_val_49784 === 7) {
          var inst_49774 = state_49783[2];
          var inst_49775 = cljs.core.async.put_BANG_.call(null, out_ch, inst_49774);
          var state_49783__$1 = function() {
            var statearr_49785 = state_49783;
            statearr_49785[5] = inst_49775;
            return statearr_49785
          }();
          var statearr_49786_49795 = state_49783__$1;
          statearr_49786_49795[2] = null;
          statearr_49786_49795[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_49784 === 6) {
            var inst_49779 = state_49783[2];
            var state_49783__$1 = state_49783;
            var statearr_49787_49796 = state_49783__$1;
            statearr_49787_49796[2] = inst_49779;
            statearr_49787_49796[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_49784 === 5) {
              var state_49783__$1 = state_49783;
              var statearr_49788_49797 = state_49783__$1;
              statearr_49788_49797[2] = null;
              statearr_49788_49797[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_49784 === 4) {
                var state_49783__$1 = state_49783;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_49783__$1, 7, in_ch)
              }else {
                if(state_val_49784 === 3) {
                  var inst_49781 = state_49783[2];
                  var state_49783__$1 = state_49783;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49783__$1, inst_49781)
                }else {
                  if(state_val_49784 === 2) {
                    var state_49783__$1 = state_49783;
                    if(true) {
                      var statearr_49789_49798 = state_49783__$1;
                      statearr_49789_49798[1] = 4
                    }else {
                      var statearr_49790_49799 = state_49783__$1;
                      statearr_49790_49799[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_49784 === 1) {
                      var state_49783__$1 = state_49783;
                      var statearr_49791_49800 = state_49783__$1;
                      statearr_49791_49800[2] = null;
                      statearr_49791_49800[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_49793 = new Array(6);
            statearr_49793[0] = state_machine__5582__auto__;
            statearr_49793[1] = 1;
            return statearr_49793
          };
          var state_machine__5582__auto____1 = function(state_49783) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_49783);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_49783) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_49783)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_49794 = f__5654__auto__.call(null);
      statearr_49794[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_49794
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
chatter_box.chat_client.internal_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:update"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:create"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:send-chat"], true), null], true);
chatter_box.chat_client.create_internal_component = function create_internal_component(ext_out, ext_in) {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.chat_client.t49804 !== "undefined") {
  }else {
    goog.provide("chatter_box.chat_client.t49804");
    chatter_box.chat_client.t49804 = function(in_ch, ext_in, ext_out, create_internal_component, meta49805) {
      this.in_ch = in_ch;
      this.ext_in = ext_in;
      this.ext_out = ext_out;
      this.create_internal_component = create_internal_component;
      this.meta49805 = meta49805;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.chat_client.t49804.cljs$lang$type = true;
    chatter_box.chat_client.t49804.cljs$lang$ctorStr = "chatter-box.chat-client/t49804";
    chatter_box.chat_client.t49804.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-client/t49804")
    };
    chatter_box.chat_client.t49804.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.chat_client.t49804.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      chatter_box.chat_client.pipe_ch.call(null, self__.ext_in, out_ch);
      return chatter_box.chat_client.pipe_ch.call(null, self__.in_ch, self__.ext_out)
    };
    chatter_box.chat_client.t49804.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.chat_client.internal_types).call(null, msg)
    };
    chatter_box.chat_client.t49804.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.chat_client.t49804.prototype.cljs$core$IMeta$_meta$arity$1 = function(_49806) {
      var self__ = this;
      return self__.meta49805
    };
    chatter_box.chat_client.t49804.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_49806, meta49805__$1) {
      var self__ = this;
      return new chatter_box.chat_client.t49804(self__.in_ch, self__.ext_in, self__.ext_out, self__.create_internal_component, meta49805__$1)
    };
    chatter_box.chat_client.__GT_t49804 = function __GT_t49804(in_ch__$1, ext_in__$1, ext_out__$1, create_internal_component__$1, meta49805) {
      return new chatter_box.chat_client.t49804(in_ch__$1, ext_in__$1, ext_out__$1, create_internal_component__$1, meta49805)
    }
  }
  return new chatter_box.chat_client.t49804(in_ch, ext_in, ext_out, create_internal_component, null)
};
chatter_box.chat_client.setup = function setup(out_ch, in_ch, sub_components) {
  return cljs.core.apply.call(null, chatter_box.event_bus.create_bus, cljs.core.conj.call(null, sub_components, chatter_box.chat_client.create_internal_component.call(null, out_ch, in_ch)))
};
goog.provide("chatter_box.main");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("chatter_box.user_view_component");
goog.require("cljs.core.async");
goog.require("chatter_box.protocol");
goog.require("chatter_box.chat_view_component");
goog.require("cljs.reader");
goog.require("chatter_box.consol_log_component");
goog.require("chatter_box.chat_client");
goog.require("chatter_box.login_view_component");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.error_view_component");
chatter_box.main.testing = false;
chatter_box.main.ws_url = "ws://10.0.1.62:3000/async";
chatter_box.main.init = function init() {
  var c_client = chatter_box.chat_client.create_chat_client.call(null, chatter_box.user_view_component.create_user_view_component.call(null), chatter_box.chat_view_component.create_chat_view_component.call(null), chatter_box.login_view_component.create_login_view_component.call(null), chatter_box.consol_log_component.create_consol_log_component.call(null), chatter_box.error_view_component.create_error_view_component.call(null));
  var out_ch = cljs.core.async.chan.call(null);
  var in_ch = chatter_box.event_bus.get_channel.call(null, c_client);
  var ws = cljs.core.atom.call(null, new WebSocket(chatter_box.main.ws_url));
  chatter_box.event_bus.init.call(null, c_client, out_ch);
  cljs.core.deref.call(null, ws).onmessage = function(msg) {
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, "RECEIVE:", msg.data));
    return cljs.core.async.put_BANG_.call(null, in_ch, cljs.reader.read_string.call(null, msg.data))
  };
  cljs.core.deref.call(null, ws).onclose = function(msg) {
    return location.reload()
  };
  var c__5653__auto___9361 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_9349) {
        var state_val_9350 = state_9349[1];
        if(state_val_9350 === 7) {
          var inst_9336 = state_9349[2];
          var inst_9337 = cljs.core.pr_str.call(null, "SEND:", inst_9336);
          var inst_9338 = enfocus.core.log_debug.call(null, inst_9337);
          var inst_9339 = cljs.core.deref.call(null, ws);
          var inst_9340 = cljs.core.pr_str.call(null, inst_9336);
          var inst_9341 = inst_9339.send(inst_9340);
          var state_9349__$1 = function() {
            var statearr_9351 = state_9349;
            statearr_9351[5] = inst_9341;
            statearr_9351[6] = inst_9338;
            return statearr_9351
          }();
          var statearr_9352_9362 = state_9349__$1;
          statearr_9352_9362[2] = null;
          statearr_9352_9362[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_9350 === 6) {
            var inst_9345 = state_9349[2];
            var state_9349__$1 = state_9349;
            var statearr_9353_9363 = state_9349__$1;
            statearr_9353_9363[2] = inst_9345;
            statearr_9353_9363[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_9350 === 5) {
              var state_9349__$1 = state_9349;
              var statearr_9354_9364 = state_9349__$1;
              statearr_9354_9364[2] = null;
              statearr_9354_9364[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_9350 === 4) {
                var state_9349__$1 = state_9349;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9349__$1, 7, out_ch)
              }else {
                if(state_val_9350 === 3) {
                  var inst_9347 = state_9349[2];
                  var state_9349__$1 = state_9349;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9349__$1, inst_9347)
                }else {
                  if(state_val_9350 === 2) {
                    var state_9349__$1 = state_9349;
                    if(true) {
                      var statearr_9355_9365 = state_9349__$1;
                      statearr_9355_9365[1] = 4
                    }else {
                      var statearr_9356_9366 = state_9349__$1;
                      statearr_9356_9366[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_9350 === 1) {
                      var state_9349__$1 = state_9349;
                      var statearr_9357_9367 = state_9349__$1;
                      statearr_9357_9367[2] = null;
                      statearr_9357_9367[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_9359 = new Array(7);
            statearr_9359[0] = state_machine__5582__auto__;
            statearr_9359[1] = 1;
            return statearr_9359
          };
          var state_machine__5582__auto____1 = function(state_9349) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_9349);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_9349) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_9349)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_9360 = f__5654__auto__.call(null);
      statearr_9360[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto___9361;
      return statearr_9360
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return cljs.core.async.put_BANG_.call(null, in_ch, chatter_box.protocol.create_message.call(null, "\ufdd0:view", "\ufdd0:init", null))
};
window.onload = chatter_box.main.init;
goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3941__auto__ = evt;
    if(and__3941__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    var x__3370__auto__ = evt == null ? null : evt;
    return function() {
      var or__3943__auto__ = domina.events.prevent_default[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.events.prevent_default["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3941__auto__ = evt;
    if(and__3941__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    var x__3370__auto__ = evt == null ? null : evt;
    return function() {
      var or__3943__auto__ = domina.events.stop_propagation[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.events.stop_propagation["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3941__auto__ = evt;
    if(and__3941__auto__) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    var x__3370__auto__ = evt == null ? null : evt;
    return function() {
      var or__3943__auto__ = domina.events.target[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.events.target["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3941__auto__ = evt;
    if(and__3941__auto__) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    var x__3370__auto__ = evt == null ? null : evt;
    return function() {
      var or__3943__auto__ = domina.events.current_target[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.events.current_target["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3941__auto__ = evt;
    if(and__3941__auto__) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    var x__3370__auto__ = evt == null ? null : evt;
    return function() {
      var or__3943__auto__ = domina.events.event_type[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.events.event_type["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3941__auto__ = evt;
    if(and__3941__auto__) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    var x__3370__auto__ = evt == null ? null : evt;
    return function() {
      var or__3943__auto__ = domina.events.raw_event[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.events.raw_event["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(typeof domina.events.t34164 !== "undefined") {
      }else {
        goog.provide("domina.events.t34164");
        domina.events.t34164 = function(evt, f, create_listener_function, meta34165) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta34165 = meta34165;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t34164.cljs$lang$type = true;
        domina.events.t34164.cljs$lang$ctorStr = "domina.events/t34164";
        domina.events.t34164.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
          return cljs.core._write.call(null, writer__3312__auto__, "domina.events/t34164")
        };
        domina.events.t34164.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var temp__4090__auto__ = self__.evt[k];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var val = temp__4090__auto__;
            return val
          }else {
            return self__.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t34164.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var or__3943__auto__ = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return not_found
          }
        };
        domina.events.t34164.prototype.domina$events$Event$ = true;
        domina.events.t34164.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          return self__.evt.preventDefault()
        };
        domina.events.t34164.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          return self__.evt.stopPropagation()
        };
        domina.events.t34164.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          return self__.evt.target
        };
        domina.events.t34164.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          return self__.evt.currentTarget
        };
        domina.events.t34164.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          return self__.evt.type
        };
        domina.events.t34164.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          return self__.evt
        };
        domina.events.t34164.prototype.cljs$core$IMeta$_meta$arity$1 = function(_34166) {
          var self__ = this;
          return self__.meta34165
        };
        domina.events.t34164.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_34166, meta34165__$1) {
          var self__ = this;
          return new domina.events.t34164(self__.evt, self__.f, self__.create_listener_function, meta34165__$1)
        };
        domina.events.__GT_t34164 = function __GT_t34164(evt__$1, f__$1, create_listener_function__$1, meta34165) {
          return new domina.events.t34164(evt__$1, f__$1, create_listener_function__$1, meta34165)
        }
      }
      return new domina.events.t34164(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__3470__auto__ = function iter__34171(s__34172) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__34172__$1 = s__34172;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__34172__$1);
          if(temp__4092__auto__) {
            var s__34172__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__34172__$2)) {
              var c__3468__auto__ = cljs.core.chunk_first.call(null, s__34172__$2);
              var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
              var b__34174 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
              if(function() {
                var i__34173 = 0;
                while(true) {
                  if(i__34173 < size__3469__auto__) {
                    var node = cljs.core._nth.call(null, c__3468__auto__, i__34173);
                    cljs.core.chunk_append.call(null, b__34174, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                    var G__34175 = i__34173 + 1;
                    i__34173 = G__34175;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34174), iter__34171.call(null, cljs.core.chunk_rest.call(null, s__34172__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__34174), null)
              }
            }else {
              var node = cljs.core.first.call(null, s__34172__$2);
              return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__34171.call(null, cljs.core.rest.call(null, s__34172__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3470__auto__.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var seq__34184 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__34185 = null;
    var count__34186 = 0;
    var i__34187 = 0;
    while(true) {
      if(i__34187 < count__34186) {
        var node = cljs.core._nth.call(null, chunk__34185, i__34187);
        goog.events.removeAll(node);
        var G__34192 = seq__34184;
        var G__34193 = chunk__34185;
        var G__34194 = count__34186;
        var G__34195 = i__34187 + 1;
        seq__34184 = G__34192;
        chunk__34185 = G__34193;
        count__34186 = G__34194;
        i__34187 = G__34195;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__34184);
        if(temp__4092__auto__) {
          var seq__34184__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__34184__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__34184__$1);
            var G__34196 = cljs.core.chunk_rest.call(null, seq__34184__$1);
            var G__34197 = c__3501__auto__;
            var G__34198 = cljs.core.count.call(null, c__3501__auto__);
            var G__34199 = 0;
            seq__34184 = G__34196;
            chunk__34185 = G__34197;
            count__34186 = G__34198;
            i__34187 = G__34199;
            continue
          }else {
            var node = cljs.core.first.call(null, seq__34184__$1);
            goog.events.removeAll(node);
            var G__34200 = cljs.core.next.call(null, seq__34184__$1);
            var G__34201 = null;
            var G__34202 = 0;
            var G__34203 = 0;
            seq__34184 = G__34200;
            chunk__34185 = G__34201;
            count__34186 = G__34202;
            i__34187 = G__34203;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = domina.events.find_builtin_type.call(null, type);
    var seq__34188 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__34189 = null;
    var count__34190 = 0;
    var i__34191 = 0;
    while(true) {
      if(i__34191 < count__34190) {
        var node = cljs.core._nth.call(null, chunk__34189, i__34191);
        goog.events.removeAll(node, type__$1);
        var G__34204 = seq__34188;
        var G__34205 = chunk__34189;
        var G__34206 = count__34190;
        var G__34207 = i__34191 + 1;
        seq__34188 = G__34204;
        chunk__34189 = G__34205;
        count__34190 = G__34206;
        i__34191 = G__34207;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__34188);
        if(temp__4092__auto__) {
          var seq__34188__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__34188__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__34188__$1);
            var G__34208 = cljs.core.chunk_rest.call(null, seq__34188__$1);
            var G__34209 = c__3501__auto__;
            var G__34210 = cljs.core.count.call(null, c__3501__auto__);
            var G__34211 = 0;
            seq__34188 = G__34208;
            chunk__34189 = G__34209;
            count__34190 = G__34210;
            i__34191 = G__34211;
            continue
          }else {
            var node = cljs.core.first.call(null, seq__34188__$1);
            goog.events.removeAll(node, type__$1);
            var G__34212 = cljs.core.next.call(null, seq__34188__$1);
            var G__34213 = null;
            var G__34214 = 0;
            var G__34215 = 0;
            seq__34188 = G__34212;
            chunk__34189 = G__34213;
            count__34190 = G__34214;
            i__34191 = G__34215;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__4090__auto__ = n.parentNode;
      if(cljs.core.truth_(temp__4090__auto__)) {
        var parent = temp__4090__auto__;
        var G__34216 = parent;
        var G__34217 = cljs.core.cons.call(null, parent, so_far);
        n = G__34216;
        so_far = G__34217;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__34226_34234 = cljs.core.seq.call(null, ancestors);
  var chunk__34227_34235 = null;
  var count__34228_34236 = 0;
  var i__34229_34237 = 0;
  while(true) {
    if(i__34229_34237 < count__34228_34236) {
      var n_34238 = cljs.core._nth.call(null, chunk__34227_34235, i__34229_34237);
      if(cljs.core.truth_(n_34238.propagationStopped)) {
      }else {
        evt.currentTarget = n_34238;
        goog.events.fireListeners(n_34238, evt.type, true, evt)
      }
      var G__34239 = seq__34226_34234;
      var G__34240 = chunk__34227_34235;
      var G__34241 = count__34228_34236;
      var G__34242 = i__34229_34237 + 1;
      seq__34226_34234 = G__34239;
      chunk__34227_34235 = G__34240;
      count__34228_34236 = G__34241;
      i__34229_34237 = G__34242;
      continue
    }else {
      var temp__4092__auto___34243 = cljs.core.seq.call(null, seq__34226_34234);
      if(temp__4092__auto___34243) {
        var seq__34226_34244__$1 = temp__4092__auto___34243;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__34226_34244__$1)) {
          var c__3501__auto___34245 = cljs.core.chunk_first.call(null, seq__34226_34244__$1);
          var G__34246 = cljs.core.chunk_rest.call(null, seq__34226_34244__$1);
          var G__34247 = c__3501__auto___34245;
          var G__34248 = cljs.core.count.call(null, c__3501__auto___34245);
          var G__34249 = 0;
          seq__34226_34234 = G__34246;
          chunk__34227_34235 = G__34247;
          count__34228_34236 = G__34248;
          i__34229_34237 = G__34249;
          continue
        }else {
          var n_34250 = cljs.core.first.call(null, seq__34226_34244__$1);
          if(cljs.core.truth_(n_34250.propagationStopped)) {
          }else {
            evt.currentTarget = n_34250;
            goog.events.fireListeners(n_34250, evt.type, true, evt)
          }
          var G__34251 = cljs.core.next.call(null, seq__34226_34244__$1);
          var G__34252 = null;
          var G__34253 = 0;
          var G__34254 = 0;
          seq__34226_34234 = G__34251;
          chunk__34227_34235 = G__34252;
          count__34228_34236 = G__34253;
          i__34229_34237 = G__34254;
          continue
        }
      }else {
      }
    }
    break
  }
  var seq__34230_34255 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__34231_34256 = null;
  var count__34232_34257 = 0;
  var i__34233_34258 = 0;
  while(true) {
    if(i__34233_34258 < count__34232_34257) {
      var n_34259 = cljs.core._nth.call(null, chunk__34231_34256, i__34233_34258);
      if(cljs.core.truth_(n_34259.propagationStopped)) {
      }else {
        evt.currentTarget = n_34259;
        goog.events.fireListeners(n_34259, evt.type, false, evt)
      }
      var G__34260 = seq__34230_34255;
      var G__34261 = chunk__34231_34256;
      var G__34262 = count__34232_34257;
      var G__34263 = i__34233_34258 + 1;
      seq__34230_34255 = G__34260;
      chunk__34231_34256 = G__34261;
      count__34232_34257 = G__34262;
      i__34233_34258 = G__34263;
      continue
    }else {
      var temp__4092__auto___34264 = cljs.core.seq.call(null, seq__34230_34255);
      if(temp__4092__auto___34264) {
        var seq__34230_34265__$1 = temp__4092__auto___34264;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__34230_34265__$1)) {
          var c__3501__auto___34266 = cljs.core.chunk_first.call(null, seq__34230_34265__$1);
          var G__34267 = cljs.core.chunk_rest.call(null, seq__34230_34265__$1);
          var G__34268 = c__3501__auto___34266;
          var G__34269 = cljs.core.count.call(null, c__3501__auto___34266);
          var G__34270 = 0;
          seq__34230_34255 = G__34267;
          chunk__34231_34256 = G__34268;
          count__34232_34257 = G__34269;
          i__34233_34258 = G__34270;
          continue
        }else {
          var n_34271 = cljs.core.first.call(null, seq__34230_34265__$1);
          if(cljs.core.truth_(n_34271.propagationStopped)) {
          }else {
            evt.currentTarget = n_34271;
            goog.events.fireListeners(n_34271, evt.type, false, evt)
          }
          var G__34272 = cljs.core.next.call(null, seq__34230_34265__$1);
          var G__34273 = null;
          var G__34274 = 0;
          var G__34275 = 0;
          seq__34230_34255 = G__34272;
          chunk__34231_34256 = G__34273;
          count__34232_34257 = G__34274;
          i__34233_34258 = G__34275;
          continue
        }
      }else {
      }
    }
    break
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3941__auto__ = o.getParentEventTarget;
  if(cljs.core.truth_(and__3941__auto__)) {
    return o.dispatchEvent
  }else {
    return and__3941__auto__
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var seq__34282_34288 = cljs.core.seq.call(null, evt_map);
    var chunk__34283_34289 = null;
    var count__34284_34290 = 0;
    var i__34285_34291 = 0;
    while(true) {
      if(i__34285_34291 < count__34284_34290) {
        var vec__34286_34292 = cljs.core._nth.call(null, chunk__34283_34289, i__34285_34291);
        var k_34293 = cljs.core.nth.call(null, vec__34286_34292, 0, null);
        var v_34294 = cljs.core.nth.call(null, vec__34286_34292, 1, null);
        evt[k_34293] = v_34294;
        var G__34295 = seq__34282_34288;
        var G__34296 = chunk__34283_34289;
        var G__34297 = count__34284_34290;
        var G__34298 = i__34285_34291 + 1;
        seq__34282_34288 = G__34295;
        chunk__34283_34289 = G__34296;
        count__34284_34290 = G__34297;
        i__34285_34291 = G__34298;
        continue
      }else {
        var temp__4092__auto___34299 = cljs.core.seq.call(null, seq__34282_34288);
        if(temp__4092__auto___34299) {
          var seq__34282_34300__$1 = temp__4092__auto___34299;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__34282_34300__$1)) {
            var c__3501__auto___34301 = cljs.core.chunk_first.call(null, seq__34282_34300__$1);
            var G__34302 = cljs.core.chunk_rest.call(null, seq__34282_34300__$1);
            var G__34303 = c__3501__auto___34301;
            var G__34304 = cljs.core.count.call(null, c__3501__auto___34301);
            var G__34305 = 0;
            seq__34282_34288 = G__34302;
            chunk__34283_34289 = G__34303;
            count__34284_34290 = G__34304;
            i__34285_34291 = G__34305;
            continue
          }else {
            var vec__34287_34306 = cljs.core.first.call(null, seq__34282_34300__$1);
            var k_34307 = cljs.core.nth.call(null, vec__34287_34306, 0, null);
            var v_34308 = cljs.core.nth.call(null, vec__34287_34306, 1, null);
            evt[k_34307] = v_34308;
            var G__34309 = cljs.core.next.call(null, seq__34282_34300__$1);
            var G__34310 = null;
            var G__34311 = 0;
            var G__34312 = 0;
            seq__34282_34288 = G__34309;
            chunk__34283_34289 = G__34310;
            count__34284_34290 = G__34311;
            i__34285_34291 = G__34312;
            continue
          }
        }else {
        }
      }
      break
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__34313_SHARP_) {
    return goog.events.getListeners(p1__34313_SHARP_, type__$1, false)
  }, domina.nodes.call(null, content))
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
cemerick.cljs.test._STAR_report_counters_STAR_ = null;
cemerick.cljs.test._STAR_initial_report_counters_STAR_ = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:test", 0, "\ufdd0:pass", 0, "\ufdd0:fail", 0, "\ufdd0:error", 0], true);
cemerick.cljs.test._STAR_testing_vars_STAR_ = cljs.core.list.call(null);
cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.list.call(null);
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, cljs.core.PersistentVector.fromArray([ns], true), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), name)
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name)
};
cemerick.cljs.test.testing_vars_str = function testing_vars_str(m) {
  var map__34106 = m;
  var map__34106__$1 = cljs.core.seq_QMARK_.call(null, map__34106) ? cljs.core.apply.call(null, cljs.core.hash_map, map__34106) : map__34106;
  var line = cljs.core.get.call(null, map__34106__$1, "\ufdd0:line");
  var file = cljs.core.get.call(null, map__34106__$1, "\ufdd0:file");
  return[cljs.core.str(cljs.core.pr_str.call(null, cljs.core.reverse.call(null, cemerick.cljs.test._STAR_testing_vars_STAR_))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(")")].join("")
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_)))
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(name) {
  if(cljs.core.truth_(cemerick.cljs.test._STAR_report_counters_STAR_)) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test._STAR_report_counters_STAR_, cljs.core.update_in, cljs.core.PersistentVector.fromArray([name], true), cljs.core.fnil.call(null, cljs.core.inc, 0))
  }else {
    return null
  }
};
cemerick.cljs.test.report = function() {
  var method_table__3558__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__3559__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__3560__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__3561__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__3562__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:hierarchy", cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report", "\ufdd0:type", "\ufdd0:default", hierarchy__3562__auto__, method_table__3558__auto__, prefer_table__3559__auto__, method_cache__3560__auto__, cached_hierarchy__3561__auto__)
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:file", error.fileName, "\ufdd0:line", error.lineNumber], true)
};
cemerick.cljs.test.do_report = function do_report(m) {
  return cemerick.cljs.test.report.call(null, function() {
    var G__34108 = (new cljs.core.Keyword("\ufdd0:type")).call(null, m);
    if(cljs.core._EQ_.call(null, "\ufdd0:error", G__34108)) {
      return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword("\ufdd0:actual")).call(null, m)), m)
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0:fail", G__34108)) {
        return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m)
      }else {
        if("\ufdd0:else") {
          return m
        }else {
          return null
        }
      }
    }
  }())
};
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:default", function(m) {
  var _STAR_print_fn_STAR_34109 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3943__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core._STAR_print_fn_STAR_
      }
    }();
    return cljs.core.prn.call(null, m)
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_34109
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:pass", function(m) {
  var _STAR_print_fn_STAR_34111 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3943__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core._STAR_print_fn_STAR_
      }
    }();
    return cemerick.cljs.test.inc_report_counter.call(null, "\ufdd0:pass")
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_34111
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:fail", function(m) {
  var _STAR_print_fn_STAR_34113 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3943__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core._STAR_print_fn_STAR_
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, "\ufdd0:fail");
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if(cljs.core.seq.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_)) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null))
    }else {
    }
    var temp__4092__auto___34115 = (new cljs.core.Keyword("\ufdd0:message")).call(null, m);
    if(cljs.core.truth_(temp__4092__auto___34115)) {
      var message_34116 = temp__4092__auto___34115;
      cljs.core.println.call(null, message_34116)
    }else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword("\ufdd0:expected")).call(null, m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword("\ufdd0:actual")).call(null, m)))
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_34113
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:error", function(m) {
  var _STAR_print_fn_STAR_34117 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3943__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core._STAR_print_fn_STAR_
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, "\ufdd0:error");
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if(cljs.core.seq.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_)) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null))
    }else {
    }
    var temp__4092__auto___34119 = (new cljs.core.Keyword("\ufdd0:message")).call(null, m);
    if(cljs.core.truth_(temp__4092__auto___34119)) {
      var message_34120 = temp__4092__auto___34119;
      cljs.core.println.call(null, message_34120)
    }else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword("\ufdd0:expected")).call(null, m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword("\ufdd0:actual")).call(null, m);
    if(actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack)
    }else {
      return cljs.core.prn.call(null, actual)
    }
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_34117
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:summary", function(m) {
  var _STAR_print_fn_STAR_34121 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3943__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core._STAR_print_fn_STAR_
      }
    }();
    cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword("\ufdd0:test")).call(null, m), "tests containing", (new cljs.core.Keyword("\ufdd0:pass")).call(null, m) + (new cljs.core.Keyword("\ufdd0:fail")).call(null, m) + (new cljs.core.Keyword("\ufdd0:error")).call(null, m), "assertions.");
    return cljs.core.println.call(null, (new cljs.core.Keyword("\ufdd0:fail")).call(null, m), "failures,", (new cljs.core.Keyword("\ufdd0:error")).call(null, m), "errors.")
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_34121
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:begin-test-ns", function(m) {
  var _STAR_print_fn_STAR_34123 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3943__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core._STAR_print_fn_STAR_
      }
    }();
    return cljs.core.println.call(null, "\nTesting", (new cljs.core.Keyword("\ufdd0:ns")).call(null, m))
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_34123
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:end-test-ns", function(m) {
  return null
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:begin-test-var", function(m) {
  return null
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, "\ufdd0:end-test-var", function(m) {
  return null
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, cljs.core.PersistentVector.fromArray([ns_sym, fixture_type], true), cljs.core.constantly.call(null, fixture_fns))
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if(arguments.length > 2) {
      fixture_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns)
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__34125) {
    var ns_sym = cljs.core.first(arglist__34125);
    arglist__34125 = cljs.core.next(arglist__34125);
    var fixture_type = cljs.core.first(arglist__34125);
    var fixture_fns = cljs.core.rest(arglist__34125);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns)
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null)
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g)
    })
  }
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures)
};
cemerick.cljs.test.test_var = function test_var(v) {
  if(cljs.core.fn_QMARK_.call(null, v)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("test-var must be passed the function to be tested (not a symbol naming it)"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", -1640430032, null), new cljs.core.Symbol(null, "v", "v", -1640531409, null))))].join(""));
  }
  var temp__4092__auto__ = (new cljs.core.Keyword("\ufdd0:test")).call(null, cljs.core.meta.call(null, v));
  if(cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    var _STAR_testing_vars_STAR_34129 = cemerick.cljs.test._STAR_testing_vars_STAR_;
    try {
      cemerick.cljs.test._STAR_testing_vars_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_vars_STAR_, function() {
        var or__3943__auto__ = (new cljs.core.Keyword("\ufdd0:name")).call(null, cljs.core.meta.call(null, v));
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return v
        }
      }());
      cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:begin-test-var", "\ufdd0:var", v], true));
      cemerick.cljs.test.inc_report_counter.call(null, "\ufdd0:test");
      try {
        t.call(null)
      }catch(e34131) {
        if(e34131 instanceof Error) {
          var e_34132 = e34131;
          cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:error", "\ufdd0:message", "Uncaught exception, not in assertion.", "\ufdd0:expected", null, "\ufdd0:actual", e_34132], true))
        }else {
          if("\ufdd0:else") {
            throw e34131;
          }else {
          }
        }
      }
      return cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:end-test-var", "\ufdd0:var", v], true))
    }finally {
      cemerick.cljs.test._STAR_testing_vars_STAR_ = _STAR_testing_vars_STAR_34129
    }
  }else {
    return null
  }
};
cemerick.cljs.test.test_all_vars = function test_all_vars(ns_sym) {
  var once_fixture_fn = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword("\ufdd0:once")).call(null, ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
  var each_fixture_fn = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword("\ufdd0:each")).call(null, ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
  return once_fixture_fn.call(null, function() {
    var seq__34137 = cljs.core.seq.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym));
    var chunk__34138 = null;
    var count__34139 = 0;
    var i__34140 = 0;
    while(true) {
      if(i__34140 < count__34139) {
        var v = cljs.core._nth.call(null, chunk__34138, i__34140);
        if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:test")).call(null, cljs.core.meta.call(null, v)))) {
          each_fixture_fn.call(null, function(seq__34137, chunk__34138, count__34139, i__34140, v) {
            return function() {
              return cemerick.cljs.test.test_var.call(null, v)
            }
          }(seq__34137, chunk__34138, count__34139, i__34140, v))
        }else {
        }
        var G__34141 = seq__34137;
        var G__34142 = chunk__34138;
        var G__34143 = count__34139;
        var G__34144 = i__34140 + 1;
        seq__34137 = G__34141;
        chunk__34138 = G__34142;
        count__34139 = G__34143;
        i__34140 = G__34144;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__34137);
        if(temp__4092__auto__) {
          var seq__34137__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__34137__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__34137__$1);
            var G__34145 = cljs.core.chunk_rest.call(null, seq__34137__$1);
            var G__34146 = c__3501__auto__;
            var G__34147 = cljs.core.count.call(null, c__3501__auto__);
            var G__34148 = 0;
            seq__34137 = G__34145;
            chunk__34138 = G__34146;
            count__34139 = G__34147;
            i__34140 = G__34148;
            continue
          }else {
            var v = cljs.core.first.call(null, seq__34137__$1);
            if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:test")).call(null, cljs.core.meta.call(null, v)))) {
              each_fixture_fn.call(null, function(seq__34137, chunk__34138, count__34139, i__34140, v, seq__34137__$1, temp__4092__auto__) {
                return function() {
                  return cemerick.cljs.test.test_var.call(null, v)
                }
              }(seq__34137, chunk__34138, count__34139, i__34140, v, seq__34137__$1, temp__4092__auto__))
            }else {
            }
            var G__34149 = cljs.core.next.call(null, seq__34137__$1);
            var G__34150 = null;
            var G__34151 = 0;
            var G__34152 = 0;
            seq__34137 = G__34149;
            chunk__34138 = G__34150;
            count__34139 = G__34151;
            i__34140 = G__34152;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  })
};
cemerick.cljs.test.test_ns = function test_ns(ns_sym) {
  var _STAR_report_counters_STAR_34155 = cemerick.cljs.test._STAR_report_counters_STAR_;
  try {
    cemerick.cljs.test._STAR_report_counters_STAR_ = cljs.core.atom.call(null, cemerick.cljs.test._STAR_initial_report_counters_STAR_);
    cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:begin-test-ns", "\ufdd0:ns", ns_sym], true));
    var temp__4090__auto___34157 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
    if(cljs.core.truth_(temp__4090__auto___34157)) {
      var test_hook_34158 = temp__4090__auto___34157;
      test_hook_34158.call(null)
    }else {
      cemerick.cljs.test.test_all_vars.call(null, ns_sym)
    }
    cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", "\ufdd0:end-test-ns", "\ufdd0:ns", ns_sym], true));
    return cljs.core.deref.call(null, cemerick.cljs.test._STAR_report_counters_STAR_)
  }finally {
    cemerick.cljs.test._STAR_report_counters_STAR_ = _STAR_report_counters_STAR_34155
  }
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var summary = cljs.core.assoc.call(null, cljs.core.apply.call(null, cljs.core.merge_with, cljs.core._PLUS_, cljs.core.map.call(null, cemerick.cljs.test.test_ns, namespaces)), "\ufdd0:type", "\ufdd0:summary");
    cemerick.cljs.test.do_report.call(null, summary);
    return summary
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if(arguments.length > 0) {
      namespaces = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return run_tests_STAR___delegate.call(this, namespaces)
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__34159) {
    var namespaces = cljs.core.seq(arglist__34159);
    return run_tests_STAR___delegate(namespaces)
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)))
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__34160_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__34160_SHARP_))
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))))
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(summary) {
  var and__3941__auto__ = (new cljs.core.Keyword("\ufdd0:fail")).call(null, summary, 0) === 0;
  if(and__3941__auto__) {
    return(new cljs.core.Keyword("\ufdd0:error")).call(null, summary, 0) === 0
  }else {
    return and__3941__auto__
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("chatter_box.chat_view_test");
goog.require("cljs.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.async");
goog.require("chatter_box.chat_view_component");
goog.require("cemerick.cljs.test");
goog.require("chatter_box.protocol");
goog.require("domina.events");
goog.require("enfocus.core");
goog.require("chatter_box.event_bus");
chatter_box.chat_view_test.setup_chan = function setup_chan(out_ch) {
  var cp = chatter_box.chat_view_component.create_chat_view_component.call(null);
  chatter_box.event_bus.init.call(null, cp, out_ch);
  return chatter_box.event_bus.get_channel.call(null, cp)
};
chatter_box.chat_view_test.basic_test = function basic_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.chat_view_test.basic_test)
};
chatter_box.chat_view_test.basic_test = cljs.core.vary_meta.call(null, chatter_box.chat_view_test.basic_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "basic-test", "basic-test", 1484290186, null), "\ufdd0:test", function basic_test_test() {
  var init = chatter_box.protocol.create_message.call(null, "\ufdd0:view", "\ufdd0:init", "\ufdd0:nothing");
  var cr1 = chatter_box.protocol.create_user_message.call(null, "u1", "p1", "f1", "l1", "i1");
  var cr2 = chatter_box.protocol.create_user_message.call(null, "u2", "p2", "f2", "l2", "i2");
  var user1 = (new cljs.core.Keyword("\ufdd0:user")).call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, cr1));
  var user2 = (new cljs.core.Keyword("\ufdd0:user")).call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, cr2));
  var ls1 = chatter_box.protocol.login_success_message.call(null, user1, cljs.core.list.call(null, user2));
  var r1 = chatter_box.protocol.receive_chat_message.call(null, "u2", "u1", "testing");
  var s1 = chatter_box.protocol.send_chat_message.call(null, "u1", "u2", "testing2");
  var lo1 = chatter_box.protocol.logout_message.call(null, "u1");
  var out_ch1 = cljs.core.async.chan.call(null);
  var in_ch1 = chatter_box.chat_view_test.setup_chan.call(null, out_ch1);
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_8297) {
        var state_val_8298 = state_8297[1];
        if(state_val_8298 === 32) {
          var inst_8067 = state_8297[2];
          var inst_8068 = enfocus.core.get_text.call(null);
          var inst_8069 = enfocus.core.from.call(null, "#chat-list button:last-child span", inst_8068);
          var inst_8070 = enfocus.core.get_text.call(null);
          var inst_8071 = enfocus.core.from.call(null, "#conv-name", inst_8070);
          var state_8297__$1 = function() {
            var statearr_8299 = state_8297;
            statearr_8299[5] = inst_8071;
            statearr_8299[6] = inst_8069;
            statearr_8299[7] = inst_8067;
            return statearr_8299
          }();
          var statearr_8300_8528 = state_8297__$1;
          statearr_8300_8528[2] = null;
          statearr_8300_8528[1] = 35;
          return"\ufdd0:recur"
        }else {
          if(state_val_8298 === 64) {
            var inst_8213 = state_8297[2];
            var inst_8214 = cljs.core.async.timeout.call(null, 100);
            var state_8297__$1 = function() {
              var statearr_8301 = state_8297;
              statearr_8301[8] = inst_8213;
              return statearr_8301
            }();
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8297__$1, 65, inst_8214)
          }else {
            if(state_val_8298 === 1) {
              var state_8297__$1 = state_8297;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_8297__$1, 2, in_ch1, init)
            }else {
              if(state_val_8298 === 33) {
                var inst_8096 = state_8297[2];
                var state_8297__$1 = function() {
                  var statearr_8302 = state_8297;
                  statearr_8302[9] = inst_8096;
                  return statearr_8302
                }();
                var statearr_8303_8529 = state_8297__$1;
                statearr_8303_8529[2] = null;
                statearr_8303_8529[1] = 41;
                return"\ufdd0:recur"
              }else {
                if(state_val_8298 === 65) {
                  var inst_8216 = state_8297[2];
                  var state_8297__$1 = function() {
                    var statearr_8304 = state_8297;
                    statearr_8304[10] = inst_8216;
                    return statearr_8304
                  }();
                  var statearr_8305_8530 = state_8297__$1;
                  statearr_8305_8530[2] = null;
                  statearr_8305_8530[1] = 68;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_8298 === 2) {
                    var inst_7936 = state_8297[2];
                    var inst_7937 = cljs.core.async.timeout.call(null, 50);
                    var state_8297__$1 = function() {
                      var statearr_8306 = state_8297;
                      statearr_8306[11] = inst_7936;
                      return statearr_8306
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8297__$1, 3, inst_7937)
                  }else {
                    if(state_val_8298 === 34) {
                      var inst_8072 = state_8297[2];
                      var inst_8073 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "testing", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                      var inst_8074 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8072, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8073);
                      var inst_8075 = cemerick.cljs.test.do_report.call(null, inst_8074);
                      var state_8297__$1 = state_8297;
                      var statearr_8307_8531 = state_8297__$1;
                      statearr_8307_8531[2] = inst_8075;
                      statearr_8307_8531[1] = 33;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_8298 === 66) {
                        var inst_8242 = state_8297[2];
                        var state_8297__$1 = function() {
                          var statearr_8308 = state_8297;
                          statearr_8308[12] = inst_8242;
                          return statearr_8308
                        }();
                        var statearr_8309_8532 = state_8297__$1;
                        statearr_8309_8532[2] = null;
                        statearr_8309_8532[1] = 74;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_8298 === 3) {
                          var inst_7939 = state_8297[2];
                          var inst_7940 = enfocus.core.get_text.call(null);
                          var inst_7941 = enfocus.core.from.call(null, "#profile-btn", inst_7940);
                          var state_8297__$1 = function() {
                            var statearr_8310 = state_8297;
                            statearr_8310[13] = inst_7939;
                            statearr_8310[14] = inst_7941;
                            return statearr_8310
                          }();
                          var statearr_8311_8533 = state_8297__$1;
                          statearr_8311_8533[2] = null;
                          statearr_8311_8533[1] = 6;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_8298 === 35) {
                            try {
                              var inst_8069 = state_8297[6];
                              var inst_8079 = state_8297[15];
                              var inst_8078 = state_8297[16];
                              var inst_8078__$1 = cljs.core.list.call(null, "testing", inst_8069);
                              var inst_8079__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8078__$1);
                              var state_8297__$1 = function() {
                                var statearr_8314 = state_8297;
                                statearr_8314[15] = inst_8079__$1;
                                statearr_8314[16] = inst_8078__$1;
                                return statearr_8314
                              }();
                              if(cljs.core.truth_(inst_8079__$1)) {
                                var statearr_8315_8534 = state_8297__$1;
                                statearr_8315_8534[1] = 36
                              }else {
                                var statearr_8316_8535 = state_8297__$1;
                                statearr_8316_8535[1] = 37
                              }
                              return"\ufdd0:recur"
                            }catch(e8312) {
                              if(e8312 instanceof Error) {
                                var ex__5575__auto__ = e8312;
                                var statearr_8313_8536 = state_8297;
                                statearr_8313_8536[1] = 34;
                                statearr_8313_8536[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e8312;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_8298 === 67) {
                              var inst_8217 = state_8297[2];
                              var inst_8218 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "user", "c/user", -1636925889, null)));
                              var inst_8219 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8217, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8218);
                              var inst_8220 = cemerick.cljs.test.do_report.call(null, inst_8219);
                              var state_8297__$1 = state_8297;
                              var statearr_8317_8537 = state_8297__$1;
                              statearr_8317_8537[2] = inst_8220;
                              statearr_8317_8537[1] = 66;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_8298 === 4) {
                                var inst_7966 = state_8297[2];
                                var state_8297__$1 = function() {
                                  var statearr_8318 = state_8297;
                                  statearr_8318[17] = inst_7966;
                                  return statearr_8318
                                }();
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_8297__$1, 10, in_ch1, ls1)
                              }else {
                                if(state_val_8298 === 36) {
                                  try {
                                    var inst_8078 = state_8297[16];
                                    var inst_8081 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8078);
                                    var inst_8082 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "testing", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                    var inst_8083 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8081, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8082);
                                    var inst_8084 = cemerick.cljs.test.do_report.call(null, inst_8083);
                                    var state_8297__$1 = state_8297;
                                    var statearr_8321_8538 = state_8297__$1;
                                    statearr_8321_8538[2] = inst_8084;
                                    statearr_8321_8538[1] = 38;
                                    return"\ufdd0:recur"
                                  }catch(e8319) {
                                    if(e8319 instanceof Error) {
                                      var ex__5575__auto__ = e8319;
                                      var statearr_8320_8539 = state_8297;
                                      statearr_8320_8539[1] = 34;
                                      statearr_8320_8539[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e8319;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_8298 === 68) {
                                    try {
                                      var inst_8225 = state_8297[18];
                                      var inst_8224 = state_8297[19];
                                      var inst_8223 = cljs.core.deref.call(null, chatter_box.chat_view_component.user);
                                      var inst_8224__$1 = cljs.core.list.call(null, null, inst_8223);
                                      var inst_8225__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8224__$1);
                                      var state_8297__$1 = function() {
                                        var statearr_8324 = state_8297;
                                        statearr_8324[18] = inst_8225__$1;
                                        statearr_8324[19] = inst_8224__$1;
                                        return statearr_8324
                                      }();
                                      if(cljs.core.truth_(inst_8225__$1)) {
                                        var statearr_8325_8540 = state_8297__$1;
                                        statearr_8325_8540[1] = 69
                                      }else {
                                        var statearr_8326_8541 = state_8297__$1;
                                        statearr_8326_8541[1] = 70
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e8322) {
                                      if(e8322 instanceof Error) {
                                        var ex__5575__auto__ = e8322;
                                        var statearr_8323_8542 = state_8297;
                                        statearr_8323_8542[1] = 67;
                                        statearr_8323_8542[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e8322;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_8298 === 5) {
                                      var inst_7942 = state_8297[2];
                                      var inst_7943 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Profile", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                      var inst_7944 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7942, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_7943);
                                      var inst_7945 = cemerick.cljs.test.do_report.call(null, inst_7944);
                                      var state_8297__$1 = state_8297;
                                      var statearr_8327_8543 = state_8297__$1;
                                      statearr_8327_8543[2] = inst_7945;
                                      statearr_8327_8543[1] = 4;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_8298 === 37) {
                                        try {
                                          var inst_8078 = state_8297[16];
                                          var inst_8086 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                          var inst_8087 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                          var inst_8088 = cljs.core.cons.call(null, inst_8087, inst_8078);
                                          var inst_8089 = cljs.core.list.call(null, inst_8086, inst_8088);
                                          var inst_8090 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "testing", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                          var inst_8091 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8089, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8090);
                                          var inst_8092 = cemerick.cljs.test.do_report.call(null, inst_8091);
                                          var state_8297__$1 = state_8297;
                                          var statearr_8330_8544 = state_8297__$1;
                                          statearr_8330_8544[2] = inst_8092;
                                          statearr_8330_8544[1] = 38;
                                          return"\ufdd0:recur"
                                        }catch(e8328) {
                                          if(e8328 instanceof Error) {
                                            var ex__5575__auto__ = e8328;
                                            var statearr_8329_8545 = state_8297;
                                            statearr_8329_8545[1] = 34;
                                            statearr_8329_8545[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e8328;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_8298 === 69) {
                                          try {
                                            var inst_8224 = state_8297[19];
                                            var inst_8227 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8224);
                                            var inst_8228 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "user", "c/user", -1636925889, null)));
                                            var inst_8229 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8227, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8228);
                                            var inst_8230 = cemerick.cljs.test.do_report.call(null, inst_8229);
                                            var state_8297__$1 = state_8297;
                                            var statearr_8333_8546 = state_8297__$1;
                                            statearr_8333_8546[2] = inst_8230;
                                            statearr_8333_8546[1] = 71;
                                            return"\ufdd0:recur"
                                          }catch(e8331) {
                                            if(e8331 instanceof Error) {
                                              var ex__5575__auto__ = e8331;
                                              var statearr_8332_8547 = state_8297;
                                              statearr_8332_8547[1] = 67;
                                              statearr_8332_8547[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e8331;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_8298 === 6) {
                                            try {
                                              var inst_7949 = state_8297[20];
                                              var inst_7948 = state_8297[21];
                                              var inst_7941 = state_8297[14];
                                              var inst_7948__$1 = cljs.core.list.call(null, "Profile", inst_7941);
                                              var inst_7949__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_7948__$1);
                                              var state_8297__$1 = function() {
                                                var statearr_8336 = state_8297;
                                                statearr_8336[20] = inst_7949__$1;
                                                statearr_8336[21] = inst_7948__$1;
                                                return statearr_8336
                                              }();
                                              if(cljs.core.truth_(inst_7949__$1)) {
                                                var statearr_8337_8548 = state_8297__$1;
                                                statearr_8337_8548[1] = 7
                                              }else {
                                                var statearr_8338_8549 = state_8297__$1;
                                                statearr_8338_8549[1] = 8
                                              }
                                              return"\ufdd0:recur"
                                            }catch(e8334) {
                                              if(e8334 instanceof Error) {
                                                var ex__5575__auto__ = e8334;
                                                var statearr_8335_8550 = state_8297;
                                                statearr_8335_8550[1] = 5;
                                                statearr_8335_8550[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e8334;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_8298 === 38) {
                                              try {
                                                var inst_8079 = state_8297[15];
                                                var inst_8094 = state_8297[2];
                                                var state_8297__$1 = function() {
                                                  var statearr_8341 = state_8297;
                                                  statearr_8341[22] = inst_8094;
                                                  return statearr_8341
                                                }();
                                                var statearr_8342_8551 = state_8297__$1;
                                                statearr_8342_8551[2] = inst_8079;
                                                statearr_8342_8551[1] = 33;
                                                return"\ufdd0:recur"
                                              }catch(e8339) {
                                                if(e8339 instanceof Error) {
                                                  var ex__5575__auto__ = e8339;
                                                  var statearr_8340_8552 = state_8297;
                                                  statearr_8340_8552[1] = 34;
                                                  statearr_8340_8552[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e8339;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_8298 === 70) {
                                                try {
                                                  var inst_8224 = state_8297[19];
                                                  var inst_8232 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                  var inst_8233 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                  var inst_8234 = cljs.core.cons.call(null, inst_8233, inst_8224);
                                                  var inst_8235 = cljs.core.list.call(null, inst_8232, inst_8234);
                                                  var inst_8236 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "user", "c/user", -1636925889, null)));
                                                  var inst_8237 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8235, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8236);
                                                  var inst_8238 = cemerick.cljs.test.do_report.call(null, inst_8237);
                                                  var state_8297__$1 = state_8297;
                                                  var statearr_8345_8553 = state_8297__$1;
                                                  statearr_8345_8553[2] = inst_8238;
                                                  statearr_8345_8553[1] = 71;
                                                  return"\ufdd0:recur"
                                                }catch(e8343) {
                                                  if(e8343 instanceof Error) {
                                                    var ex__5575__auto__ = e8343;
                                                    var statearr_8344_8554 = state_8297;
                                                    statearr_8344_8554[1] = 67;
                                                    statearr_8344_8554[2] = ex__5575__auto__;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if("\ufdd0:else") {
                                                      throw e8343;
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }else {
                                                if(state_val_8298 === 7) {
                                                  try {
                                                    var inst_7948 = state_8297[21];
                                                    var inst_7951 = cljs.core.cons.call(null, cljs.core._EQ_, inst_7948);
                                                    var inst_7952 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Profile", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                                    var inst_7953 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7951, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_7952);
                                                    var inst_7954 = cemerick.cljs.test.do_report.call(null, inst_7953);
                                                    var state_8297__$1 = state_8297;
                                                    var statearr_8348_8555 = state_8297__$1;
                                                    statearr_8348_8555[2] = inst_7954;
                                                    statearr_8348_8555[1] = 9;
                                                    return"\ufdd0:recur"
                                                  }catch(e8346) {
                                                    if(e8346 instanceof Error) {
                                                      var ex__5575__auto__ = e8346;
                                                      var statearr_8347_8556 = state_8297;
                                                      statearr_8347_8556[1] = 5;
                                                      statearr_8347_8556[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e8346;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_8298 === 39) {
                                                    var inst_8121 = state_8297[2];
                                                    var inst_8122 = enfocus.core.set_prop.call(null, "\ufdd0:value", "testing2");
                                                    var inst_8123 = function() {
                                                      return function(inst_8121, inst_8122, state_val_8298) {
                                                        return function(p1__7341_SHARP_) {
                                                          return domina.events.dispatch_BANG_.call(null, p1__7341_SHARP_, "\ufdd0:click", cljs.core.PersistentArrayMap.EMPTY)
                                                        }
                                                      }(inst_8121, inst_8122, state_val_8298)
                                                    }();
                                                    var inst_8124 = enfocus.core.at.call(null, "#chat-msg", inst_8122, "#chat-btn", inst_8123);
                                                    var state_8297__$1 = function() {
                                                      var statearr_8349 = state_8297;
                                                      statearr_8349[23] = inst_8124;
                                                      statearr_8349[24] = inst_8121;
                                                      return statearr_8349
                                                    }();
                                                    var statearr_8350_8557 = state_8297__$1;
                                                    statearr_8350_8557[2] = null;
                                                    statearr_8350_8557[1] = 47;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if(state_val_8298 === 71) {
                                                      try {
                                                        var inst_8225 = state_8297[18];
                                                        var inst_8240 = state_8297[2];
                                                        var state_8297__$1 = function() {
                                                          var statearr_8353 = state_8297;
                                                          statearr_8353[25] = inst_8240;
                                                          return statearr_8353
                                                        }();
                                                        var statearr_8354_8558 = state_8297__$1;
                                                        statearr_8354_8558[2] = inst_8225;
                                                        statearr_8354_8558[1] = 66;
                                                        return"\ufdd0:recur"
                                                      }catch(e8351) {
                                                        if(e8351 instanceof Error) {
                                                          var ex__5575__auto__ = e8351;
                                                          var statearr_8352_8559 = state_8297;
                                                          statearr_8352_8559[1] = 67;
                                                          statearr_8352_8559[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e8351;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_8298 === 8) {
                                                        try {
                                                          var inst_7948 = state_8297[21];
                                                          var inst_7956 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                          var inst_7957 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                          var inst_7958 = cljs.core.cons.call(null, inst_7957, inst_7948);
                                                          var inst_7959 = cljs.core.list.call(null, inst_7956, inst_7958);
                                                          var inst_7960 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Profile", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                                          var inst_7961 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7959, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_7960);
                                                          var inst_7962 = cemerick.cljs.test.do_report.call(null, inst_7961);
                                                          var state_8297__$1 = state_8297;
                                                          var statearr_8357_8560 = state_8297__$1;
                                                          statearr_8357_8560[2] = inst_7962;
                                                          statearr_8357_8560[1] = 9;
                                                          return"\ufdd0:recur"
                                                        }catch(e8355) {
                                                          if(e8355 instanceof Error) {
                                                            var ex__5575__auto__ = e8355;
                                                            var statearr_8356_8561 = state_8297;
                                                            statearr_8356_8561[1] = 5;
                                                            statearr_8356_8561[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e8355;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }else {
                                                        if(state_val_8298 === 40) {
                                                          var inst_8097 = state_8297[2];
                                                          var inst_8098 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "f2 l2", new cljs.core.Symbol(null, "text2", "text2", -1530275234, null));
                                                          var inst_8099 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8097, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8098);
                                                          var inst_8100 = cemerick.cljs.test.do_report.call(null, inst_8099);
                                                          var state_8297__$1 = state_8297;
                                                          var statearr_8358_8562 = state_8297__$1;
                                                          statearr_8358_8562[2] = inst_8100;
                                                          statearr_8358_8562[1] = 39;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if(state_val_8298 === 72) {
                                                            var inst_8268 = state_8297[2];
                                                            var state_8297__$1 = function() {
                                                              var statearr_8359 = state_8297;
                                                              statearr_8359[26] = inst_8268;
                                                              return statearr_8359
                                                            }();
                                                            var statearr_8360_8563 = state_8297__$1;
                                                            statearr_8360_8563[2] = null;
                                                            statearr_8360_8563[1] = 80;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if(state_val_8298 === 9) {
                                                              try {
                                                                var inst_7949 = state_8297[20];
                                                                var inst_7964 = state_8297[2];
                                                                var state_8297__$1 = function() {
                                                                  var statearr_8363 = state_8297;
                                                                  statearr_8363[27] = inst_7964;
                                                                  return statearr_8363
                                                                }();
                                                                var statearr_8364_8564 = state_8297__$1;
                                                                statearr_8364_8564[2] = inst_7949;
                                                                statearr_8364_8564[1] = 4;
                                                                return"\ufdd0:recur"
                                                              }catch(e8361) {
                                                                if(e8361 instanceof Error) {
                                                                  var ex__5575__auto__ = e8361;
                                                                  var statearr_8362_8565 = state_8297;
                                                                  statearr_8362_8565[1] = 5;
                                                                  statearr_8362_8565[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e8361;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_8298 === 41) {
                                                                try {
                                                                  var inst_8071 = state_8297[5];
                                                                  var inst_8104 = state_8297[28];
                                                                  var inst_8103 = state_8297[29];
                                                                  var inst_8103__$1 = cljs.core.list.call(null, "f2 l2", inst_8071);
                                                                  var inst_8104__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8103__$1);
                                                                  var state_8297__$1 = function() {
                                                                    var statearr_8367 = state_8297;
                                                                    statearr_8367[28] = inst_8104__$1;
                                                                    statearr_8367[29] = inst_8103__$1;
                                                                    return statearr_8367
                                                                  }();
                                                                  if(cljs.core.truth_(inst_8104__$1)) {
                                                                    var statearr_8368_8566 = state_8297__$1;
                                                                    statearr_8368_8566[1] = 42
                                                                  }else {
                                                                    var statearr_8369_8567 = state_8297__$1;
                                                                    statearr_8369_8567[1] = 43
                                                                  }
                                                                  return"\ufdd0:recur"
                                                                }catch(e8365) {
                                                                  if(e8365 instanceof Error) {
                                                                    var ex__5575__auto__ = e8365;
                                                                    var statearr_8366_8568 = state_8297;
                                                                    statearr_8366_8568[1] = 40;
                                                                    statearr_8366_8568[2] = ex__5575__auto__;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if("\ufdd0:else") {
                                                                      throw e8365;
                                                                    }else {
                                                                      return null
                                                                    }
                                                                  }
                                                                }
                                                              }else {
                                                                if(state_val_8298 === 73) {
                                                                  var inst_8243 = state_8297[2];
                                                                  var inst_8244 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "active-conv", "c/active-conv", 1556437071, null)));
                                                                  var inst_8245 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8243, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8244);
                                                                  var inst_8246 = cemerick.cljs.test.do_report.call(null, inst_8245);
                                                                  var state_8297__$1 = state_8297;
                                                                  var statearr_8370_8569 = state_8297__$1;
                                                                  statearr_8370_8569[2] = inst_8246;
                                                                  statearr_8370_8569[1] = 72;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if(state_val_8298 === 10) {
                                                                    var inst_7968 = state_8297[2];
                                                                    var inst_7969 = cljs.core.async.timeout.call(null, 100);
                                                                    var state_8297__$1 = function() {
                                                                      var statearr_8371 = state_8297;
                                                                      statearr_8371[30] = inst_7968;
                                                                      return statearr_8371
                                                                    }();
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8297__$1, 11, inst_7969)
                                                                  }else {
                                                                    if(state_val_8298 === 42) {
                                                                      try {
                                                                        var inst_8103 = state_8297[29];
                                                                        var inst_8106 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8103);
                                                                        var inst_8107 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "f2 l2", new cljs.core.Symbol(null, "text2", "text2", -1530275234, null));
                                                                        var inst_8108 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8106, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8107);
                                                                        var inst_8109 = cemerick.cljs.test.do_report.call(null, inst_8108);
                                                                        var state_8297__$1 = state_8297;
                                                                        var statearr_8374_8570 = state_8297__$1;
                                                                        statearr_8374_8570[2] = inst_8109;
                                                                        statearr_8374_8570[1] = 44;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e8372) {
                                                                        if(e8372 instanceof Error) {
                                                                          var ex__5575__auto__ = e8372;
                                                                          var statearr_8373_8571 = state_8297;
                                                                          statearr_8373_8571[1] = 40;
                                                                          statearr_8373_8571[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e8372;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_8298 === 74) {
                                                                        try {
                                                                          var inst_8250 = state_8297[31];
                                                                          var inst_8251 = state_8297[32];
                                                                          var inst_8249 = cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv);
                                                                          var inst_8250__$1 = cljs.core.list.call(null, null, inst_8249);
                                                                          var inst_8251__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8250__$1);
                                                                          var state_8297__$1 = function() {
                                                                            var statearr_8377 = state_8297;
                                                                            statearr_8377[31] = inst_8250__$1;
                                                                            statearr_8377[32] = inst_8251__$1;
                                                                            return statearr_8377
                                                                          }();
                                                                          if(cljs.core.truth_(inst_8251__$1)) {
                                                                            var statearr_8378_8572 = state_8297__$1;
                                                                            statearr_8378_8572[1] = 75
                                                                          }else {
                                                                            var statearr_8379_8573 = state_8297__$1;
                                                                            statearr_8379_8573[1] = 76
                                                                          }
                                                                          return"\ufdd0:recur"
                                                                        }catch(e8375) {
                                                                          if(e8375 instanceof Error) {
                                                                            var ex__5575__auto__ = e8375;
                                                                            var statearr_8376_8574 = state_8297;
                                                                            statearr_8376_8574[1] = 73;
                                                                            statearr_8376_8574[2] = ex__5575__auto__;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if("\ufdd0:else") {
                                                                              throw e8375;
                                                                            }else {
                                                                              return null
                                                                            }
                                                                          }
                                                                        }
                                                                      }else {
                                                                        if(state_val_8298 === 11) {
                                                                          var inst_7971 = state_8297[2];
                                                                          var state_8297__$1 = function() {
                                                                            var statearr_8380 = state_8297;
                                                                            statearr_8380[33] = inst_7971;
                                                                            return statearr_8380
                                                                          }();
                                                                          var statearr_8381_8575 = state_8297__$1;
                                                                          statearr_8381_8575[2] = null;
                                                                          statearr_8381_8575[1] = 14;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if(state_val_8298 === 43) {
                                                                            try {
                                                                              var inst_8103 = state_8297[29];
                                                                              var inst_8111 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                              var inst_8112 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                              var inst_8113 = cljs.core.cons.call(null, inst_8112, inst_8103);
                                                                              var inst_8114 = cljs.core.list.call(null, inst_8111, inst_8113);
                                                                              var inst_8115 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "f2 l2", new cljs.core.Symbol(null, "text2", "text2", -1530275234, null));
                                                                              var inst_8116 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8114, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8115);
                                                                              var inst_8117 = cemerick.cljs.test.do_report.call(null, inst_8116);
                                                                              var state_8297__$1 = state_8297;
                                                                              var statearr_8384_8576 = state_8297__$1;
                                                                              statearr_8384_8576[2] = inst_8117;
                                                                              statearr_8384_8576[1] = 44;
                                                                              return"\ufdd0:recur"
                                                                            }catch(e8382) {
                                                                              if(e8382 instanceof Error) {
                                                                                var ex__5575__auto__ = e8382;
                                                                                var statearr_8383_8577 = state_8297;
                                                                                statearr_8383_8577[1] = 40;
                                                                                statearr_8383_8577[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e8382;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_8298 === 75) {
                                                                              try {
                                                                                var inst_8250 = state_8297[31];
                                                                                var inst_8253 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8250);
                                                                                var inst_8254 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "active-conv", "c/active-conv", 1556437071, null)));
                                                                                var inst_8255 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8253, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8254);
                                                                                var inst_8256 = cemerick.cljs.test.do_report.call(null, inst_8255);
                                                                                var state_8297__$1 = state_8297;
                                                                                var statearr_8387_8578 = state_8297__$1;
                                                                                statearr_8387_8578[2] = inst_8256;
                                                                                statearr_8387_8578[1] = 77;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e8385) {
                                                                                if(e8385 instanceof Error) {
                                                                                  var ex__5575__auto__ = e8385;
                                                                                  var statearr_8386_8579 = state_8297;
                                                                                  statearr_8386_8579[1] = 73;
                                                                                  statearr_8386_8579[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e8385;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_8298 === 12) {
                                                                                var inst_7997 = state_8297[2];
                                                                                var state_8297__$1 = function() {
                                                                                  var statearr_8388 = state_8297;
                                                                                  statearr_8388[34] = inst_7997;
                                                                                  return statearr_8388
                                                                                }();
                                                                                var statearr_8389_8580 = state_8297__$1;
                                                                                statearr_8389_8580[2] = null;
                                                                                statearr_8389_8580[1] = 20;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_8298 === 44) {
                                                                                  try {
                                                                                    var inst_8104 = state_8297[28];
                                                                                    var inst_8119 = state_8297[2];
                                                                                    var state_8297__$1 = function() {
                                                                                      var statearr_8392 = state_8297;
                                                                                      statearr_8392[35] = inst_8119;
                                                                                      return statearr_8392
                                                                                    }();
                                                                                    var statearr_8393_8581 = state_8297__$1;
                                                                                    statearr_8393_8581[2] = inst_8104;
                                                                                    statearr_8393_8581[1] = 39;
                                                                                    return"\ufdd0:recur"
                                                                                  }catch(e8390) {
                                                                                    if(e8390 instanceof Error) {
                                                                                      var ex__5575__auto__ = e8390;
                                                                                      var statearr_8391_8582 = state_8297;
                                                                                      statearr_8391_8582[1] = 40;
                                                                                      statearr_8391_8582[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e8390;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_8298 === 76) {
                                                                                    try {
                                                                                      var inst_8250 = state_8297[31];
                                                                                      var inst_8258 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                      var inst_8259 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                      var inst_8260 = cljs.core.cons.call(null, inst_8259, inst_8250);
                                                                                      var inst_8261 = cljs.core.list.call(null, inst_8258, inst_8260);
                                                                                      var inst_8262 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "active-conv", "c/active-conv", 1556437071, null)));
                                                                                      var inst_8263 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8261, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8262);
                                                                                      var inst_8264 = cemerick.cljs.test.do_report.call(null, inst_8263);
                                                                                      var state_8297__$1 = state_8297;
                                                                                      var statearr_8396_8583 = state_8297__$1;
                                                                                      statearr_8396_8583[2] = inst_8264;
                                                                                      statearr_8396_8583[1] = 77;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e8394) {
                                                                                      if(e8394 instanceof Error) {
                                                                                        var ex__5575__auto__ = e8394;
                                                                                        var statearr_8395_8584 = state_8297;
                                                                                        statearr_8395_8584[1] = 73;
                                                                                        statearr_8395_8584[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e8394;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_8298 === 13) {
                                                                                      var inst_7972 = state_8297[2];
                                                                                      var inst_7973 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "user", "c/user", -1636925889, null)), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null));
                                                                                      var inst_7974 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7972, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_7973);
                                                                                      var inst_7975 = cemerick.cljs.test.do_report.call(null, inst_7974);
                                                                                      var state_8297__$1 = state_8297;
                                                                                      var statearr_8397_8585 = state_8297__$1;
                                                                                      statearr_8397_8585[2] = inst_7975;
                                                                                      statearr_8397_8585[1] = 12;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if(state_val_8298 === 45) {
                                                                                        var inst_8154 = state_8297[2];
                                                                                        var state_8297__$1 = function() {
                                                                                          var statearr_8398 = state_8297;
                                                                                          statearr_8398[36] = inst_8154;
                                                                                          return statearr_8398
                                                                                        }();
                                                                                        var statearr_8399_8586 = state_8297__$1;
                                                                                        statearr_8399_8586[2] = null;
                                                                                        statearr_8399_8586[1] = 54;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_8298 === 77) {
                                                                                          try {
                                                                                            var inst_8251 = state_8297[32];
                                                                                            var inst_8266 = state_8297[2];
                                                                                            var state_8297__$1 = function() {
                                                                                              var statearr_8402 = state_8297;
                                                                                              statearr_8402[37] = inst_8266;
                                                                                              return statearr_8402
                                                                                            }();
                                                                                            var statearr_8403_8587 = state_8297__$1;
                                                                                            statearr_8403_8587[2] = inst_8251;
                                                                                            statearr_8403_8587[1] = 72;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e8400) {
                                                                                            if(e8400 instanceof Error) {
                                                                                              var ex__5575__auto__ = e8400;
                                                                                              var statearr_8401_8588 = state_8297;
                                                                                              statearr_8401_8588[1] = 73;
                                                                                              statearr_8401_8588[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e8400;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_8298 === 14) {
                                                                                            try {
                                                                                              var inst_7980 = state_8297[38];
                                                                                              var inst_7979 = state_8297[39];
                                                                                              var inst_7978 = cljs.core.deref.call(null, chatter_box.chat_view_component.user);
                                                                                              var inst_7979__$1 = cljs.core.list.call(null, inst_7978, user1);
                                                                                              var inst_7980__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_7979__$1);
                                                                                              var state_8297__$1 = function() {
                                                                                                var statearr_8406 = state_8297;
                                                                                                statearr_8406[38] = inst_7980__$1;
                                                                                                statearr_8406[39] = inst_7979__$1;
                                                                                                return statearr_8406
                                                                                              }();
                                                                                              if(cljs.core.truth_(inst_7980__$1)) {
                                                                                                var statearr_8407_8589 = state_8297__$1;
                                                                                                statearr_8407_8589[1] = 15
                                                                                              }else {
                                                                                                var statearr_8408_8590 = state_8297__$1;
                                                                                                statearr_8408_8590[1] = 16
                                                                                              }
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e8404) {
                                                                                              if(e8404 instanceof Error) {
                                                                                                var ex__5575__auto__ = e8404;
                                                                                                var statearr_8405_8591 = state_8297;
                                                                                                statearr_8405_8591[1] = 13;
                                                                                                statearr_8405_8591[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e8404;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_8298 === 46) {
                                                                                              var inst_8125 = state_8297[2];
                                                                                              var inst_8126 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "s1", "s1", -1640527913, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 
                                                                                              1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                              var inst_8127 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8125, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8126);
                                                                                              var inst_8128 = cemerick.cljs.test.do_report.call(null, inst_8127);
                                                                                              var state_8297__$1 = state_8297;
                                                                                              var statearr_8409_8592 = state_8297__$1;
                                                                                              statearr_8409_8592[2] = inst_8128;
                                                                                              statearr_8409_8592[1] = 45;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if(state_val_8298 === 78) {
                                                                                                var inst_8295 = state_8297[2];
                                                                                                var state_8297__$1 = state_8297;
                                                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8297__$1, inst_8295)
                                                                                              }else {
                                                                                                if(state_val_8298 === 15) {
                                                                                                  try {
                                                                                                    var inst_7979 = state_8297[39];
                                                                                                    var inst_7982 = cljs.core.cons.call(null, cljs.core._EQ_, inst_7979);
                                                                                                    var inst_7983 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "user", "c/user", -1636925889, null)), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null));
                                                                                                    var inst_7984 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7982, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_7983);
                                                                                                    var inst_7985 = cemerick.cljs.test.do_report.call(null, inst_7984);
                                                                                                    var state_8297__$1 = state_8297;
                                                                                                    var statearr_8412_8593 = state_8297__$1;
                                                                                                    statearr_8412_8593[2] = inst_7985;
                                                                                                    statearr_8412_8593[1] = 17;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e8410) {
                                                                                                    if(e8410 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e8410;
                                                                                                      var statearr_8411_8594 = state_8297;
                                                                                                      statearr_8411_8594[1] = 13;
                                                                                                      statearr_8411_8594[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e8410;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }else {
                                                                                                  if(state_val_8298 === 47) {
                                                                                                    try {
                                                                                                      var inst_8131 = cljs.core.async.timeout.call(null, 100);
                                                                                                      var inst_8132 = cljs.core.vector.call(null, inst_8131, out_ch1);
                                                                                                      var state_8297__$1 = state_8297;
                                                                                                      return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_8297__$1, 48, inst_8132)
                                                                                                    }catch(e8413) {
                                                                                                      if(e8413 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e8413;
                                                                                                        var statearr_8414_8595 = state_8297;
                                                                                                        statearr_8414_8595[1] = 46;
                                                                                                        statearr_8414_8595[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e8413;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_8298 === 79) {
                                                                                                      var inst_8269 = state_8297[2];
                                                                                                      var inst_8270 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Select a User", cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#conv-name", cljs.core.list(new cljs.core.Symbol(null, "get-text", "get-text", 289961725, null))));
                                                                                                      var inst_8271 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8269, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8270);
                                                                                                      var inst_8272 = cemerick.cljs.test.do_report.call(null, inst_8271);
                                                                                                      var state_8297__$1 = state_8297;
                                                                                                      var statearr_8415_8596 = state_8297__$1;
                                                                                                      statearr_8415_8596[2] = inst_8272;
                                                                                                      statearr_8415_8596[1] = 78;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if(state_val_8298 === 16) {
                                                                                                        try {
                                                                                                          var inst_7979 = state_8297[39];
                                                                                                          var inst_7987 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                          var inst_7988 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                          var inst_7989 = cljs.core.cons.call(null, inst_7988, inst_7979);
                                                                                                          var inst_7990 = cljs.core.list.call(null, inst_7987, inst_7989);
                                                                                                          var inst_7991 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("c", "user", "c/user", -1636925889, null)), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null));
                                                                                                          var inst_7992 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7990, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_7991);
                                                                                                          var inst_7993 = cemerick.cljs.test.do_report.call(null, inst_7992);
                                                                                                          var state_8297__$1 = state_8297;
                                                                                                          var statearr_8418_8597 = state_8297__$1;
                                                                                                          statearr_8418_8597[2] = inst_7993;
                                                                                                          statearr_8418_8597[1] = 17;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e8416) {
                                                                                                          if(e8416 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e8416;
                                                                                                            var statearr_8417_8598 = state_8297;
                                                                                                            statearr_8417_8598[1] = 13;
                                                                                                            statearr_8417_8598[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e8416;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }else {
                                                                                                        if(state_val_8298 === 48) {
                                                                                                          try {
                                                                                                            var inst_8137 = state_8297[40];
                                                                                                            var inst_8136 = state_8297[41];
                                                                                                            var inst_8134 = state_8297[2];
                                                                                                            var inst_8135 = cljs.core.first.call(null, inst_8134);
                                                                                                            var inst_8136__$1 = cljs.core.list.call(null, s1, inst_8135);
                                                                                                            var inst_8137__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8136__$1);
                                                                                                            var state_8297__$1 = function() {
                                                                                                              var statearr_8421 = state_8297;
                                                                                                              statearr_8421[40] = inst_8137__$1;
                                                                                                              statearr_8421[41] = inst_8136__$1;
                                                                                                              return statearr_8421
                                                                                                            }();
                                                                                                            if(cljs.core.truth_(inst_8137__$1)) {
                                                                                                              var statearr_8422_8599 = state_8297__$1;
                                                                                                              statearr_8422_8599[1] = 49
                                                                                                            }else {
                                                                                                              var statearr_8423_8600 = state_8297__$1;
                                                                                                              statearr_8423_8600[1] = 50
                                                                                                            }
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e8419) {
                                                                                                            if(e8419 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e8419;
                                                                                                              var statearr_8420_8601 = state_8297;
                                                                                                              statearr_8420_8601[1] = 46;
                                                                                                              statearr_8420_8601[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e8419;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_8298 === 80) {
                                                                                                            try {
                                                                                                              var inst_8278 = state_8297[42];
                                                                                                              var inst_8277 = state_8297[43];
                                                                                                              var inst_8275 = enfocus.core.get_text.call(null);
                                                                                                              var inst_8276 = enfocus.core.from.call(null, "#conv-name", inst_8275);
                                                                                                              var inst_8277__$1 = cljs.core.list.call(null, "Select a User", inst_8276);
                                                                                                              var inst_8278__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8277__$1);
                                                                                                              var state_8297__$1 = function() {
                                                                                                                var statearr_8426 = state_8297;
                                                                                                                statearr_8426[42] = inst_8278__$1;
                                                                                                                statearr_8426[43] = inst_8277__$1;
                                                                                                                return statearr_8426
                                                                                                              }();
                                                                                                              if(cljs.core.truth_(inst_8278__$1)) {
                                                                                                                var statearr_8427_8602 = state_8297__$1;
                                                                                                                statearr_8427_8602[1] = 81
                                                                                                              }else {
                                                                                                                var statearr_8428_8603 = state_8297__$1;
                                                                                                                statearr_8428_8603[1] = 82
                                                                                                              }
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e8424) {
                                                                                                              if(e8424 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e8424;
                                                                                                                var statearr_8425_8604 = state_8297;
                                                                                                                statearr_8425_8604[1] = 79;
                                                                                                                statearr_8425_8604[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e8424;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_8298 === 17) {
                                                                                                              try {
                                                                                                                var inst_7980 = state_8297[38];
                                                                                                                var inst_7995 = state_8297[2];
                                                                                                                var state_8297__$1 = function() {
                                                                                                                  var statearr_8431 = state_8297;
                                                                                                                  statearr_8431[44] = inst_7995;
                                                                                                                  return statearr_8431
                                                                                                                }();
                                                                                                                var statearr_8432_8605 = state_8297__$1;
                                                                                                                statearr_8432_8605[2] = inst_7980;
                                                                                                                statearr_8432_8605[1] = 12;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }catch(e8429) {
                                                                                                                if(e8429 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e8429;
                                                                                                                  var statearr_8430_8606 = state_8297;
                                                                                                                  statearr_8430_8606[1] = 13;
                                                                                                                  statearr_8430_8606[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e8429;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_8298 === 49) {
                                                                                                                try {
                                                                                                                  var inst_8136 = state_8297[41];
                                                                                                                  var inst_8139 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8136);
                                                                                                                  var inst_8140 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "s1", "s1", -1640527913, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                  "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                                                  var inst_8141 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8139, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8140);
                                                                                                                  var inst_8142 = cemerick.cljs.test.do_report.call(null, inst_8141);
                                                                                                                  var state_8297__$1 = state_8297;
                                                                                                                  var statearr_8435_8607 = state_8297__$1;
                                                                                                                  statearr_8435_8607[2] = inst_8142;
                                                                                                                  statearr_8435_8607[1] = 51;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e8433) {
                                                                                                                  if(e8433 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e8433;
                                                                                                                    var statearr_8434_8608 = state_8297;
                                                                                                                    statearr_8434_8608[1] = 46;
                                                                                                                    statearr_8434_8608[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e8433;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }else {
                                                                                                                if(state_val_8298 === 81) {
                                                                                                                  try {
                                                                                                                    var inst_8277 = state_8297[43];
                                                                                                                    var inst_8280 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8277);
                                                                                                                    var inst_8281 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Select a User", cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#conv-name", cljs.core.list(new cljs.core.Symbol(null, "get-text", "get-text", 289961725, null))));
                                                                                                                    var inst_8282 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8280, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8281);
                                                                                                                    var inst_8283 = cemerick.cljs.test.do_report.call(null, inst_8282);
                                                                                                                    var state_8297__$1 = state_8297;
                                                                                                                    var statearr_8438_8609 = state_8297__$1;
                                                                                                                    statearr_8438_8609[2] = inst_8283;
                                                                                                                    statearr_8438_8609[1] = 83;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e8436) {
                                                                                                                    if(e8436 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e8436;
                                                                                                                      var statearr_8437_8610 = state_8297;
                                                                                                                      statearr_8437_8610[1] = 79;
                                                                                                                      statearr_8437_8610[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e8436;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_8298 === 18) {
                                                                                                                    var inst_8028 = state_8297[2];
                                                                                                                    var state_8297__$1 = function() {
                                                                                                                      var statearr_8439 = state_8297;
                                                                                                                      statearr_8439[45] = inst_8028;
                                                                                                                      return statearr_8439
                                                                                                                    }();
                                                                                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_8297__$1, 24, in_ch1, r1)
                                                                                                                  }else {
                                                                                                                    if(state_val_8298 === 50) {
                                                                                                                      try {
                                                                                                                        var inst_8136 = state_8297[41];
                                                                                                                        var inst_8144 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                        var inst_8145 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                        var inst_8146 = cljs.core.cons.call(null, inst_8145, inst_8136);
                                                                                                                        var inst_8147 = cljs.core.list.call(null, inst_8144, inst_8146);
                                                                                                                        var inst_8148 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "s1", "s1", -1640527913, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                        "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                                                        var inst_8149 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8147, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8148);
                                                                                                                        var inst_8150 = cemerick.cljs.test.do_report.call(null, inst_8149);
                                                                                                                        var state_8297__$1 = state_8297;
                                                                                                                        var statearr_8442_8611 = state_8297__$1;
                                                                                                                        statearr_8442_8611[2] = inst_8150;
                                                                                                                        statearr_8442_8611[1] = 51;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e8440) {
                                                                                                                        if(e8440 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e8440;
                                                                                                                          var statearr_8441_8612 = state_8297;
                                                                                                                          statearr_8441_8612[1] = 46;
                                                                                                                          statearr_8441_8612[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e8440;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_8298 === 82) {
                                                                                                                        try {
                                                                                                                          var inst_8277 = state_8297[43];
                                                                                                                          var inst_8285 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                          var inst_8286 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                          var inst_8287 = cljs.core.cons.call(null, inst_8286, inst_8277);
                                                                                                                          var inst_8288 = cljs.core.list.call(null, inst_8285, inst_8287);
                                                                                                                          var inst_8289 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Select a User", cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#conv-name", cljs.core.list(new cljs.core.Symbol(null, "get-text", "get-text", 289961725, null))));
                                                                                                                          var inst_8290 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8288, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8289);
                                                                                                                          var inst_8291 = cemerick.cljs.test.do_report.call(null, inst_8290);
                                                                                                                          var state_8297__$1 = state_8297;
                                                                                                                          var statearr_8445_8613 = state_8297__$1;
                                                                                                                          statearr_8445_8613[2] = inst_8291;
                                                                                                                          statearr_8445_8613[1] = 83;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e8443) {
                                                                                                                          if(e8443 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e8443;
                                                                                                                            var statearr_8444_8614 = state_8297;
                                                                                                                            statearr_8444_8614[1] = 79;
                                                                                                                            statearr_8444_8614[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e8443;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }else {
                                                                                                                        if(state_val_8298 === 19) {
                                                                                                                          var inst_7998 = state_8297[2];
                                                                                                                          var inst_7999 = enfocus.core.get_text.call(null);
                                                                                                                          var inst_8000 = enfocus.core.from.call(null, "#id_u2 span", inst_7999);
                                                                                                                          var inst_8001 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "f2 l2");
                                                                                                                          var inst_8002 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_7998, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", inst_8000, "\ufdd0:expected", inst_8001);
                                                                                                                          var inst_8003 = cemerick.cljs.test.do_report.call(null, inst_8002);
                                                                                                                          var state_8297__$1 = state_8297;
                                                                                                                          var statearr_8446_8615 = state_8297__$1;
                                                                                                                          statearr_8446_8615[2] = inst_8003;
                                                                                                                          statearr_8446_8615[1] = 18;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if(state_val_8298 === 51) {
                                                                                                                            try {
                                                                                                                              var inst_8137 = state_8297[40];
                                                                                                                              var inst_8152 = state_8297[2];
                                                                                                                              var state_8297__$1 = function() {
                                                                                                                                var statearr_8449 = state_8297;
                                                                                                                                statearr_8449[46] = inst_8152;
                                                                                                                                return statearr_8449
                                                                                                                              }();
                                                                                                                              var statearr_8450_8616 = state_8297__$1;
                                                                                                                              statearr_8450_8616[2] = inst_8137;
                                                                                                                              statearr_8450_8616[1] = 45;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }catch(e8447) {
                                                                                                                              if(e8447 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e8447;
                                                                                                                                var statearr_8448_8617 = state_8297;
                                                                                                                                statearr_8448_8617[1] = 46;
                                                                                                                                statearr_8448_8617[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e8447;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_8298 === 83) {
                                                                                                                              try {
                                                                                                                                var inst_8278 = state_8297[42];
                                                                                                                                var inst_8293 = state_8297[2];
                                                                                                                                var state_8297__$1 = function() {
                                                                                                                                  var statearr_8453 = state_8297;
                                                                                                                                  statearr_8453[47] = inst_8293;
                                                                                                                                  return statearr_8453
                                                                                                                                }();
                                                                                                                                var statearr_8454_8618 = state_8297__$1;
                                                                                                                                statearr_8454_8618[2] = inst_8278;
                                                                                                                                statearr_8454_8618[1] = 78;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e8451) {
                                                                                                                                if(e8451 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e8451;
                                                                                                                                  var statearr_8452_8619 = state_8297;
                                                                                                                                  statearr_8452_8619[1] = 79;
                                                                                                                                  statearr_8452_8619[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e8451;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_8298 === 20) {
                                                                                                                                try {
                                                                                                                                  var inst_8007 = state_8297[48];
                                                                                                                                  var inst_8006 = state_8297[49];
                                                                                                                                  var inst_8006__$1 = cljs.core.list.call(null, "f2 l2");
                                                                                                                                  var inst_8007__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8006__$1);
                                                                                                                                  var state_8297__$1 = function() {
                                                                                                                                    var statearr_8457 = state_8297;
                                                                                                                                    statearr_8457[48] = inst_8007__$1;
                                                                                                                                    statearr_8457[49] = inst_8006__$1;
                                                                                                                                    return statearr_8457
                                                                                                                                  }();
                                                                                                                                  if(cljs.core.truth_(inst_8007__$1)) {
                                                                                                                                    var statearr_8458_8620 = state_8297__$1;
                                                                                                                                    statearr_8458_8620[1] = 21
                                                                                                                                  }else {
                                                                                                                                    var statearr_8459_8621 = state_8297__$1;
                                                                                                                                    statearr_8459_8621[1] = 22
                                                                                                                                  }
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e8455) {
                                                                                                                                  if(e8455 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e8455;
                                                                                                                                    var statearr_8456_8622 = state_8297;
                                                                                                                                    statearr_8456_8622[1] = 19;
                                                                                                                                    statearr_8456_8622[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e8455;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }else {
                                                                                                                                if(state_val_8298 === 52) {
                                                                                                                                  var inst_8184 = state_8297[2];
                                                                                                                                  var state_8297__$1 = function() {
                                                                                                                                    var statearr_8460 = state_8297;
                                                                                                                                    statearr_8460[50] = inst_8184;
                                                                                                                                    return statearr_8460
                                                                                                                                  }();
                                                                                                                                  var statearr_8461_8623 = state_8297__$1;
                                                                                                                                  statearr_8461_8623[2] = null;
                                                                                                                                  statearr_8461_8623[1] = 60;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if(state_val_8298 === 21) {
                                                                                                                                    try {
                                                                                                                                      var inst_8006 = state_8297[49];
                                                                                                                                      var inst_8009 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8006);
                                                                                                                                      var inst_8010 = enfocus.core.get_text.call(null);
                                                                                                                                      var inst_8011 = enfocus.core.from.call(null, "#id_u2 span", inst_8010);
                                                                                                                                      var inst_8012 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "f2 l2");
                                                                                                                                      var inst_8013 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8009, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", inst_8011, "\ufdd0:expected", inst_8012);
                                                                                                                                      var inst_8014 = cemerick.cljs.test.do_report.call(null, inst_8013);
                                                                                                                                      var state_8297__$1 = state_8297;
                                                                                                                                      var statearr_8464_8624 = state_8297__$1;
                                                                                                                                      statearr_8464_8624[2] = inst_8014;
                                                                                                                                      statearr_8464_8624[1] = 23;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }catch(e8462) {
                                                                                                                                      if(e8462 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e8462;
                                                                                                                                        var statearr_8463_8625 = state_8297;
                                                                                                                                        statearr_8463_8625[1] = 19;
                                                                                                                                        statearr_8463_8625[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e8462;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_8298 === 53) {
                                                                                                                                      var inst_8155 = state_8297[2];
                                                                                                                                      var inst_8156 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "r1", "r1", -1640527944, null)), cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "s1", "s1", -1640527913, null))], true), cljs.core.list(new cljs.core.Symbol(null, "from", 
                                                                                                                                      "from", -1637379741, null), "#id_u2", cljs.core.list(new cljs.core.Symbol(null, "get-data", "get-data", 289481082, null), "\ufdd0:msgs")));
                                                                                                                                      var inst_8157 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8155, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8156);
                                                                                                                                      var inst_8158 = cemerick.cljs.test.do_report.call(null, inst_8157);
                                                                                                                                      var state_8297__$1 = state_8297;
                                                                                                                                      var statearr_8465_8626 = state_8297__$1;
                                                                                                                                      statearr_8465_8626[2] = inst_8158;
                                                                                                                                      statearr_8465_8626[1] = 52;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if(state_val_8298 === 22) {
                                                                                                                                        try {
                                                                                                                                          var inst_8006 = state_8297[49];
                                                                                                                                          var inst_8016 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                                          var inst_8017 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                                          var inst_8018 = cljs.core.cons.call(null, inst_8017, inst_8006);
                                                                                                                                          var inst_8019 = cljs.core.list.call(null, inst_8016, inst_8018);
                                                                                                                                          var inst_8020 = enfocus.core.get_text.call(null);
                                                                                                                                          var inst_8021 = enfocus.core.from.call(null, "#id_u2 span", inst_8020);
                                                                                                                                          var inst_8022 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "f2 l2");
                                                                                                                                          var inst_8023 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8019, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", inst_8021, "\ufdd0:expected", inst_8022);
                                                                                                                                          var inst_8024 = cemerick.cljs.test.do_report.call(null, inst_8023);
                                                                                                                                          var state_8297__$1 = state_8297;
                                                                                                                                          var statearr_8468_8627 = state_8297__$1;
                                                                                                                                          statearr_8468_8627[2] = inst_8024;
                                                                                                                                          statearr_8468_8627[1] = 23;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }catch(e8466) {
                                                                                                                                          if(e8466 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e8466;
                                                                                                                                            var statearr_8467_8628 = state_8297;
                                                                                                                                            statearr_8467_8628[1] = 19;
                                                                                                                                            statearr_8467_8628[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e8466;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }else {
                                                                                                                                        if(state_val_8298 === 54) {
                                                                                                                                          try {
                                                                                                                                            var inst_8167 = state_8297[51];
                                                                                                                                            var inst_8166 = state_8297[52];
                                                                                                                                            var inst_8161 = (new cljs.core.Keyword("\ufdd0:data")).call(null, r1);
                                                                                                                                            var inst_8162 = (new cljs.core.Keyword("\ufdd0:data")).call(null, s1);
                                                                                                                                            var inst_8163 = cljs.core.vector.call(null, inst_8161, inst_8162);
                                                                                                                                            var inst_8164 = enfocus.core.get_data.call(null, "\ufdd0:msgs");
                                                                                                                                            var inst_8165 = enfocus.core.from.call(null, "#id_u2", inst_8164);
                                                                                                                                            var inst_8166__$1 = cljs.core.list.call(null, inst_8163, inst_8165);
                                                                                                                                            var inst_8167__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8166__$1);
                                                                                                                                            var state_8297__$1 = function() {
                                                                                                                                              var statearr_8471 = state_8297;
                                                                                                                                              statearr_8471[51] = inst_8167__$1;
                                                                                                                                              statearr_8471[52] = inst_8166__$1;
                                                                                                                                              return statearr_8471
                                                                                                                                            }();
                                                                                                                                            if(cljs.core.truth_(inst_8167__$1)) {
                                                                                                                                              var statearr_8472_8629 = state_8297__$1;
                                                                                                                                              statearr_8472_8629[1] = 55
                                                                                                                                            }else {
                                                                                                                                              var statearr_8473_8630 = state_8297__$1;
                                                                                                                                              statearr_8473_8630[1] = 56
                                                                                                                                            }
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e8469) {
                                                                                                                                            if(e8469 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e8469;
                                                                                                                                              var statearr_8470_8631 = state_8297;
                                                                                                                                              statearr_8470_8631[1] = 53;
                                                                                                                                              statearr_8470_8631[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e8469;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_8298 === 23) {
                                                                                                                                            try {
                                                                                                                                              var inst_8007 = state_8297[48];
                                                                                                                                              var inst_8026 = state_8297[2];
                                                                                                                                              var state_8297__$1 = function() {
                                                                                                                                                var statearr_8476 = state_8297;
                                                                                                                                                statearr_8476[53] = inst_8026;
                                                                                                                                                return statearr_8476
                                                                                                                                              }();
                                                                                                                                              var statearr_8477_8632 = state_8297__$1;
                                                                                                                                              statearr_8477_8632[2] = inst_8007;
                                                                                                                                              statearr_8477_8632[1] = 18;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }catch(e8474) {
                                                                                                                                              if(e8474 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e8474;
                                                                                                                                                var statearr_8475_8633 = state_8297;
                                                                                                                                                statearr_8475_8633[1] = 19;
                                                                                                                                                statearr_8475_8633[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e8474;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_8298 === 55) {
                                                                                                                                              try {
                                                                                                                                                var inst_8166 = state_8297[52];
                                                                                                                                                var inst_8169 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8166);
                                                                                                                                                var inst_8170 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "r1", "r1", -1640527944, null)), cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "s1", "s1", -1640527913, null))], true), cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                                                "from", "from", -1637379741, null), "#id_u2", cljs.core.list(new cljs.core.Symbol(null, "get-data", "get-data", 289481082, null), "\ufdd0:msgs")));
                                                                                                                                                var inst_8171 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8169, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8170);
                                                                                                                                                var inst_8172 = cemerick.cljs.test.do_report.call(null, inst_8171);
                                                                                                                                                var state_8297__$1 = state_8297;
                                                                                                                                                var statearr_8480_8634 = state_8297__$1;
                                                                                                                                                statearr_8480_8634[2] = inst_8172;
                                                                                                                                                statearr_8480_8634[1] = 57;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e8478) {
                                                                                                                                                if(e8478 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e8478;
                                                                                                                                                  var statearr_8479_8635 = state_8297;
                                                                                                                                                  statearr_8479_8635[1] = 53;
                                                                                                                                                  statearr_8479_8635[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e8478;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_8298 === 24) {
                                                                                                                                                var inst_8030 = state_8297[2];
                                                                                                                                                var inst_8031 = cljs.core.async.timeout.call(null, 50);
                                                                                                                                                var state_8297__$1 = function() {
                                                                                                                                                  var statearr_8481 = state_8297;
                                                                                                                                                  statearr_8481[54] = inst_8030;
                                                                                                                                                  return statearr_8481
                                                                                                                                                }();
                                                                                                                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8297__$1, 25, inst_8031)
                                                                                                                                              }else {
                                                                                                                                                if(state_val_8298 === 56) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_8166 = state_8297[52];
                                                                                                                                                    var inst_8174 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                                                    var inst_8175 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                                                    var inst_8176 = cljs.core.cons.call(null, inst_8175, inst_8166);
                                                                                                                                                    var inst_8177 = cljs.core.list.call(null, inst_8174, inst_8176);
                                                                                                                                                    var inst_8178 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "r1", "r1", -1640527944, null)), cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "s1", "s1", -1640527913, null))], true), cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                                                    "from", "from", -1637379741, null), "#id_u2", cljs.core.list(new cljs.core.Symbol(null, "get-data", "get-data", 289481082, null), "\ufdd0:msgs")));
                                                                                                                                                    var inst_8179 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8177, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8178);
                                                                                                                                                    var inst_8180 = cemerick.cljs.test.do_report.call(null, inst_8179);
                                                                                                                                                    var state_8297__$1 = state_8297;
                                                                                                                                                    var statearr_8484_8636 = state_8297__$1;
                                                                                                                                                    statearr_8484_8636[2] = inst_8180;
                                                                                                                                                    statearr_8484_8636[1] = 57;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e8482) {
                                                                                                                                                    if(e8482 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e8482;
                                                                                                                                                      var statearr_8483_8637 = state_8297;
                                                                                                                                                      statearr_8483_8637[1] = 53;
                                                                                                                                                      statearr_8483_8637[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e8482;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_8298 === 25) {
                                                                                                                                                    var inst_8033 = state_8297[2];
                                                                                                                                                    var state_8297__$1 = function() {
                                                                                                                                                      var statearr_8485 = state_8297;
                                                                                                                                                      statearr_8485[55] = inst_8033;
                                                                                                                                                      return statearr_8485
                                                                                                                                                    }();
                                                                                                                                                    var statearr_8486_8638 = state_8297__$1;
                                                                                                                                                    statearr_8486_8638[2] = null;
                                                                                                                                                    statearr_8486_8638[1] = 28;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_8298 === 57) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_8167 = state_8297[51];
                                                                                                                                                        var inst_8182 = state_8297[2];
                                                                                                                                                        var state_8297__$1 = function() {
                                                                                                                                                          var statearr_8489 = state_8297;
                                                                                                                                                          statearr_8489[56] = inst_8182;
                                                                                                                                                          return statearr_8489
                                                                                                                                                        }();
                                                                                                                                                        var statearr_8490_8639 = state_8297__$1;
                                                                                                                                                        statearr_8490_8639[2] = inst_8167;
                                                                                                                                                        statearr_8490_8639[1] = 52;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e8487) {
                                                                                                                                                        if(e8487 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e8487;
                                                                                                                                                          var statearr_8488_8640 = state_8297;
                                                                                                                                                          statearr_8488_8640[1] = 53;
                                                                                                                                                          statearr_8488_8640[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e8487;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_8298 === 26) {
                                                                                                                                                        var inst_8062 = state_8297[2];
                                                                                                                                                        var inst_8063 = function() {
                                                                                                                                                          return function(inst_8062, state_val_8298) {
                                                                                                                                                            return function(p1__7340_SHARP_) {
                                                                                                                                                              return domina.events.dispatch_BANG_.call(null, p1__7340_SHARP_, "\ufdd0:click", cljs.core.PersistentArrayMap.EMPTY)
                                                                                                                                                            }
                                                                                                                                                          }(inst_8062, state_val_8298)
                                                                                                                                                        }();
                                                                                                                                                        var inst_8064 = enfocus.core.at.call(null, "#id_u2", inst_8063);
                                                                                                                                                        var inst_8065 = cljs.core.async.timeout.call(null, 50);
                                                                                                                                                        var state_8297__$1 = function() {
                                                                                                                                                          var statearr_8491 = state_8297;
                                                                                                                                                          statearr_8491[57] = inst_8062;
                                                                                                                                                          statearr_8491[58] = inst_8064;
                                                                                                                                                          return statearr_8491
                                                                                                                                                        }();
                                                                                                                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8297__$1, 32, inst_8065)
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_8298 === 58) {
                                                                                                                                                          var inst_8211 = state_8297[2];
                                                                                                                                                          var state_8297__$1 = function() {
                                                                                                                                                            var statearr_8492 = state_8297;
                                                                                                                                                            statearr_8492[59] = inst_8211;
                                                                                                                                                            return statearr_8492
                                                                                                                                                          }();
                                                                                                                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_8297__$1, 64, in_ch1, lo1)
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_8298 === 27) {
                                                                                                                                                            var inst_8034 = state_8297[2];
                                                                                                                                                            var inst_8035 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "r1", "r1", -1640527944, null))], true), cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#id_u2", cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                                                            "get-data", "get-data", 289481082, null), "\ufdd0:msgs")));
                                                                                                                                                            var inst_8036 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8034, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8035);
                                                                                                                                                            var inst_8037 = cemerick.cljs.test.do_report.call(null, inst_8036);
                                                                                                                                                            var state_8297__$1 = state_8297;
                                                                                                                                                            var statearr_8493_8641 = state_8297__$1;
                                                                                                                                                            statearr_8493_8641[2] = inst_8037;
                                                                                                                                                            statearr_8493_8641[1] = 26;
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_8298 === 59) {
                                                                                                                                                              var inst_8185 = state_8297[2];
                                                                                                                                                              var inst_8186 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "testing2", cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#chat-list button:last-child span", cljs.core.list(new cljs.core.Symbol(null, "get-text", "get-text", 289961725, null))));
                                                                                                                                                              var inst_8187 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8185, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_8186);
                                                                                                                                                              var inst_8188 = cemerick.cljs.test.do_report.call(null, inst_8187);
                                                                                                                                                              var state_8297__$1 = state_8297;
                                                                                                                                                              var statearr_8494_8642 = state_8297__$1;
                                                                                                                                                              statearr_8494_8642[2] = inst_8188;
                                                                                                                                                              statearr_8494_8642[1] = 58;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_8298 === 28) {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_8044 = state_8297[60];
                                                                                                                                                                  var inst_8045 = state_8297[61];
                                                                                                                                                                  var inst_8040 = (new cljs.core.Keyword("\ufdd0:data")).call(null, r1);
                                                                                                                                                                  var inst_8041 = cljs.core.vector.call(null, inst_8040);
                                                                                                                                                                  var inst_8042 = enfocus.core.get_data.call(null, "\ufdd0:msgs");
                                                                                                                                                                  var inst_8043 = enfocus.core.from.call(null, "#id_u2", inst_8042);
                                                                                                                                                                  var inst_8044__$1 = cljs.core.list.call(null, inst_8041, inst_8043);
                                                                                                                                                                  var inst_8045__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8044__$1);
                                                                                                                                                                  var state_8297__$1 = function() {
                                                                                                                                                                    var statearr_8497 = state_8297;
                                                                                                                                                                    statearr_8497[60] = inst_8044__$1;
                                                                                                                                                                    statearr_8497[61] = inst_8045__$1;
                                                                                                                                                                    return statearr_8497
                                                                                                                                                                  }();
                                                                                                                                                                  if(cljs.core.truth_(inst_8045__$1)) {
                                                                                                                                                                    var statearr_8498_8643 = state_8297__$1;
                                                                                                                                                                    statearr_8498_8643[1] = 29
                                                                                                                                                                  }else {
                                                                                                                                                                    var statearr_8499_8644 = state_8297__$1;
                                                                                                                                                                    statearr_8499_8644[1] = 30
                                                                                                                                                                  }
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e8495) {
                                                                                                                                                                  if(e8495 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e8495;
                                                                                                                                                                    var statearr_8496_8645 = state_8297;
                                                                                                                                                                    statearr_8496_8645[1] = 27;
                                                                                                                                                                    statearr_8496_8645[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e8495;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_8298 === 60) {
                                                                                                                                                                  try {
                                                                                                                                                                    var inst_8193 = state_8297[62];
                                                                                                                                                                    var inst_8194 = state_8297[63];
                                                                                                                                                                    var inst_8191 = enfocus.core.get_text.call(null);
                                                                                                                                                                    var inst_8192 = enfocus.core.from.call(null, "#chat-list button:last-child span", inst_8191);
                                                                                                                                                                    var inst_8193__$1 = cljs.core.list.call(null, "testing2", inst_8192);
                                                                                                                                                                    var inst_8194__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_8193__$1);
                                                                                                                                                                    var state_8297__$1 = function() {
                                                                                                                                                                      var statearr_8502 = state_8297;
                                                                                                                                                                      statearr_8502[62] = inst_8193__$1;
                                                                                                                                                                      statearr_8502[63] = inst_8194__$1;
                                                                                                                                                                      return statearr_8502
                                                                                                                                                                    }();
                                                                                                                                                                    if(cljs.core.truth_(inst_8194__$1)) {
                                                                                                                                                                      var statearr_8503_8646 = state_8297__$1;
                                                                                                                                                                      statearr_8503_8646[1] = 61
                                                                                                                                                                    }else {
                                                                                                                                                                      var statearr_8504_8647 = state_8297__$1;
                                                                                                                                                                      statearr_8504_8647[1] = 62
                                                                                                                                                                    }
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e8500) {
                                                                                                                                                                    if(e8500 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e8500;
                                                                                                                                                                      var statearr_8501_8648 = state_8297;
                                                                                                                                                                      statearr_8501_8648[1] = 59;
                                                                                                                                                                      statearr_8501_8648[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e8500;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_8298 === 29) {
                                                                                                                                                                    try {
                                                                                                                                                                      var inst_8044 = state_8297[60];
                                                                                                                                                                      var inst_8047 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8044);
                                                                                                                                                                      var inst_8048 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "r1", "r1", -1640527944, null))], true), cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#id_u2", cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                                                                      "get-data", "get-data", 289481082, null), "\ufdd0:msgs")));
                                                                                                                                                                      var inst_8049 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8047, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8048);
                                                                                                                                                                      var inst_8050 = cemerick.cljs.test.do_report.call(null, inst_8049);
                                                                                                                                                                      var state_8297__$1 = state_8297;
                                                                                                                                                                      var statearr_8507_8649 = state_8297__$1;
                                                                                                                                                                      statearr_8507_8649[2] = inst_8050;
                                                                                                                                                                      statearr_8507_8649[1] = 31;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }catch(e8505) {
                                                                                                                                                                      if(e8505 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e8505;
                                                                                                                                                                        var statearr_8506_8650 = state_8297;
                                                                                                                                                                        statearr_8506_8650[1] = 27;
                                                                                                                                                                        statearr_8506_8650[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e8505;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_8298 === 61) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_8193 = state_8297[62];
                                                                                                                                                                        var inst_8196 = cljs.core.cons.call(null, cljs.core._EQ_, inst_8193);
                                                                                                                                                                        var inst_8197 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "testing2", cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#chat-list button:last-child span", cljs.core.list(new cljs.core.Symbol(null, "get-text", "get-text", 289961725, null))));
                                                                                                                                                                        var inst_8198 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8196, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_8197);
                                                                                                                                                                        var inst_8199 = cemerick.cljs.test.do_report.call(null, inst_8198);
                                                                                                                                                                        var state_8297__$1 = state_8297;
                                                                                                                                                                        var statearr_8510_8651 = state_8297__$1;
                                                                                                                                                                        statearr_8510_8651[2] = inst_8199;
                                                                                                                                                                        statearr_8510_8651[1] = 63;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e8508) {
                                                                                                                                                                        if(e8508 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e8508;
                                                                                                                                                                          var statearr_8509_8652 = state_8297;
                                                                                                                                                                          statearr_8509_8652[1] = 59;
                                                                                                                                                                          statearr_8509_8652[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e8508;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_8298 === 30) {
                                                                                                                                                                        try {
                                                                                                                                                                          var inst_8044 = state_8297[60];
                                                                                                                                                                          var inst_8052 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                                                                          var inst_8053 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                                                                          var inst_8054 = cljs.core.cons.call(null, inst_8053, inst_8044);
                                                                                                                                                                          var inst_8055 = cljs.core.list.call(null, inst_8052, inst_8054);
                                                                                                                                                                          var inst_8056 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.list("\ufdd0:data", new cljs.core.Symbol(null, "r1", "r1", -1640527944, null))], true), cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#id_u2", cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                                                                          "get-data", "get-data", 289481082, null), "\ufdd0:msgs")));
                                                                                                                                                                          var inst_8057 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8055, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8056);
                                                                                                                                                                          var inst_8058 = cemerick.cljs.test.do_report.call(null, inst_8057);
                                                                                                                                                                          var state_8297__$1 = state_8297;
                                                                                                                                                                          var statearr_8513_8653 = state_8297__$1;
                                                                                                                                                                          statearr_8513_8653[2] = inst_8058;
                                                                                                                                                                          statearr_8513_8653[1] = 31;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }catch(e8511) {
                                                                                                                                                                          if(e8511 instanceof Error) {
                                                                                                                                                                            var ex__5575__auto__ = e8511;
                                                                                                                                                                            var statearr_8512_8654 = state_8297;
                                                                                                                                                                            statearr_8512_8654[1] = 27;
                                                                                                                                                                            statearr_8512_8654[2] = ex__5575__auto__;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }else {
                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                              throw e8511;
                                                                                                                                                                            }else {
                                                                                                                                                                              return null
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_8298 === 62) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_8193 = state_8297[62];
                                                                                                                                                                            var inst_8201 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                                                                            var inst_8202 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                                                                            var inst_8203 = cljs.core.cons.call(null, inst_8202, inst_8193);
                                                                                                                                                                            var inst_8204 = cljs.core.list.call(null, inst_8201, inst_8203);
                                                                                                                                                                            var inst_8205 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "testing2", cljs.core.list(new cljs.core.Symbol(null, "from", "from", -1637379741, null), "#chat-list button:last-child span", cljs.core.list(new cljs.core.Symbol(null, "get-text", "get-text", 289961725, null))));
                                                                                                                                                                            var inst_8206 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_8204, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_8205);
                                                                                                                                                                            var inst_8207 = cemerick.cljs.test.do_report.call(null, inst_8206);
                                                                                                                                                                            var state_8297__$1 = state_8297;
                                                                                                                                                                            var statearr_8516_8655 = state_8297__$1;
                                                                                                                                                                            statearr_8516_8655[2] = inst_8207;
                                                                                                                                                                            statearr_8516_8655[1] = 63;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e8514) {
                                                                                                                                                                            if(e8514 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e8514;
                                                                                                                                                                              var statearr_8515_8656 = state_8297;
                                                                                                                                                                              statearr_8515_8656[1] = 59;
                                                                                                                                                                              statearr_8515_8656[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e8514;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_8298 === 31) {
                                                                                                                                                                            try {
                                                                                                                                                                              var inst_8045 = state_8297[61];
                                                                                                                                                                              var inst_8060 = state_8297[2];
                                                                                                                                                                              var state_8297__$1 = function() {
                                                                                                                                                                                var statearr_8519 = state_8297;
                                                                                                                                                                                statearr_8519[64] = inst_8060;
                                                                                                                                                                                return statearr_8519
                                                                                                                                                                              }();
                                                                                                                                                                              var statearr_8520_8657 = state_8297__$1;
                                                                                                                                                                              statearr_8520_8657[2] = inst_8045;
                                                                                                                                                                              statearr_8520_8657[1] = 26;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }catch(e8517) {
                                                                                                                                                                              if(e8517 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e8517;
                                                                                                                                                                                var statearr_8518_8658 = state_8297;
                                                                                                                                                                                statearr_8518_8658[1] = 27;
                                                                                                                                                                                statearr_8518_8658[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e8517;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_8298 === 63) {
                                                                                                                                                                              try {
                                                                                                                                                                                var inst_8194 = state_8297[63];
                                                                                                                                                                                var inst_8209 = state_8297[2];
                                                                                                                                                                                var state_8297__$1 = function() {
                                                                                                                                                                                  var statearr_8523 = state_8297;
                                                                                                                                                                                  statearr_8523[65] = inst_8209;
                                                                                                                                                                                  return statearr_8523
                                                                                                                                                                                }();
                                                                                                                                                                                var statearr_8524_8659 = state_8297__$1;
                                                                                                                                                                                statearr_8524_8659[2] = inst_8194;
                                                                                                                                                                                statearr_8524_8659[1] = 58;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }catch(e8521) {
                                                                                                                                                                                if(e8521 instanceof Error) {
                                                                                                                                                                                  var ex__5575__auto__ = e8521;
                                                                                                                                                                                  var statearr_8522_8660 = state_8297;
                                                                                                                                                                                  statearr_8522_8660[1] = 59;
                                                                                                                                                                                  statearr_8522_8660[2] = ex__5575__auto__;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }else {
                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                    throw e8521;
                                                                                                                                                                                  }else {
                                                                                                                                                                                    return null
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }else {
                                                                                                                                                                              return null
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_8526 = new Array(66);
            statearr_8526[0] = state_machine__5582__auto__;
            statearr_8526[1] = 1;
            return statearr_8526
          };
          var state_machine__5582__auto____1 = function(state_8297) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_8297);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_8297) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_8297)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_8527 = f__5654__auto__.call(null);
      statearr_8527[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_8527
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.chat-view-test", "chatter-box.chat-view-test", -1450464955, null), chatter_box.chat_view_test.basic_test);
goog.provide("chatter_box.login_view_test");
goog.require("cljs.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.async");
goog.require("chatter_box.login_view_component");
goog.require("cemerick.cljs.test");
goog.require("chatter_box.protocol");
goog.require("domina.events");
goog.require("enfocus.core");
goog.require("chatter_box.event_bus");
chatter_box.login_view_test.setup_chan = function setup_chan(out_ch) {
  var cp = chatter_box.login_view_component.create_login_view_component.call(null);
  chatter_box.event_bus.init.call(null, cp, out_ch);
  return chatter_box.event_bus.get_channel.call(null, cp)
};
chatter_box.login_view_test.basic_test = function basic_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.login_view_test.basic_test)
};
chatter_box.login_view_test.basic_test = cljs.core.vary_meta.call(null, chatter_box.login_view_test.basic_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "basic-test", "basic-test", 1484290186, null), "\ufdd0:test", function basic_test_test() {
  var init = chatter_box.protocol.create_message.call(null, "\ufdd0:view", "\ufdd0:init", "\ufdd0:nothing");
  var cr1 = chatter_box.protocol.create_user_message.call(null, "u1", "p1", "f1", "l1", "u1");
  var user1 = (new cljs.core.Keyword("\ufdd0:user")).call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, cr1));
  var ls1 = chatter_box.protocol.login_success_message.call(null, user1, cljs.core.PersistentArrayMap.EMPTY);
  var lo1 = chatter_box.protocol.logout_message.call(null, "u1");
  var out_ch1 = cljs.core.async.chan.call(null);
  var in_ch1 = chatter_box.login_view_test.setup_chan.call(null, out_ch1);
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_31106) {
        var state_val_31107 = state_31106[1];
        if(state_val_31107 === 32) {
          try {
            var inst_31087 = state_31106[5];
            var inst_31102 = state_31106[2];
            var state_31106__$1 = function() {
              var statearr_31110 = state_31106;
              statearr_31110[6] = inst_31102;
              return statearr_31110
            }();
            var statearr_31111_31193 = state_31106__$1;
            statearr_31111_31193[2] = inst_31087;
            statearr_31111_31193[1] = 27;
            return"\ufdd0:recur"
          }catch(e31108) {
            if(e31108 instanceof Error) {
              var ex__5575__auto__ = e31108;
              var statearr_31109_31194 = state_31106;
              statearr_31109_31194[1] = 28;
              statearr_31109_31194[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e31108;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_31107 === 1) {
            var state_31106__$1 = state_31106;
            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31106__$1, 2, in_ch1, init)
          }else {
            if(state_val_31107 === 2) {
              var inst_30975 = state_31106[2];
              var inst_30976 = cljs.core.async.timeout.call(null, 100);
              var state_31106__$1 = function() {
                var statearr_31112 = state_31106;
                statearr_31112[7] = inst_30975;
                return statearr_31112
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31106__$1, 3, inst_30976)
            }else {
              if(state_val_31107 === 3) {
                var inst_30978 = state_31106[2];
                var inst_30979 = enfocus.core.get_text.call(null);
                var inst_30980 = enfocus.core.from.call(null, "#login-btn", inst_30979);
                var state_31106__$1 = function() {
                  var statearr_31113 = state_31106;
                  statearr_31113[8] = inst_30978;
                  statearr_31113[9] = inst_30980;
                  return statearr_31113
                }();
                var statearr_31114_31195 = state_31106__$1;
                statearr_31114_31195[2] = null;
                statearr_31114_31195[1] = 6;
                return"\ufdd0:recur"
              }else {
                if(state_val_31107 === 4) {
                  var inst_31005 = state_31106[2];
                  var inst_31006 = enfocus.core.set_prop.call(null, "\ufdd0:value", "u1");
                  var inst_31007 = enfocus.core.set_prop.call(null, "\ufdd0:value", "p1");
                  var inst_31008 = function() {
                    return function(inst_31005, inst_31006, inst_31007, state_val_31107) {
                      return function(p1__30754_SHARP_) {
                        return domina.events.dispatch_BANG_.call(null, p1__30754_SHARP_, "\ufdd0:click", cljs.core.PersistentArrayMap.EMPTY)
                      }
                    }(inst_31005, inst_31006, inst_31007, state_val_31107)
                  }();
                  var inst_31009 = enfocus.core.at.call(null, "#login-username", inst_31006, "#login-password", inst_31007, "#login-btn", inst_31008);
                  var state_31106__$1 = function() {
                    var statearr_31115 = state_31106;
                    statearr_31115[10] = inst_31005;
                    statearr_31115[11] = inst_31009;
                    return statearr_31115
                  }();
                  var statearr_31116_31196 = state_31106__$1;
                  statearr_31116_31196[2] = null;
                  statearr_31116_31196[1] = 12;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_31107 === 5) {
                    var inst_30981 = state_31106[2];
                    var inst_30982 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Sign in ", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                    var inst_30983 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30981, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30982);
                    var inst_30984 = cemerick.cljs.test.do_report.call(null, inst_30983);
                    var state_31106__$1 = state_31106;
                    var statearr_31117_31197 = state_31106__$1;
                    statearr_31117_31197[2] = inst_30984;
                    statearr_31117_31197[1] = 4;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_31107 === 6) {
                      try {
                        var inst_30988 = state_31106[12];
                        var inst_30987 = state_31106[13];
                        var inst_30980 = state_31106[9];
                        var inst_30987__$1 = cljs.core.list.call(null, "Sign in ", inst_30980);
                        var inst_30988__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30987__$1);
                        var state_31106__$1 = function() {
                          var statearr_31120 = state_31106;
                          statearr_31120[12] = inst_30988__$1;
                          statearr_31120[13] = inst_30987__$1;
                          return statearr_31120
                        }();
                        if(cljs.core.truth_(inst_30988__$1)) {
                          var statearr_31121_31198 = state_31106__$1;
                          statearr_31121_31198[1] = 7
                        }else {
                          var statearr_31122_31199 = state_31106__$1;
                          statearr_31122_31199[1] = 8
                        }
                        return"\ufdd0:recur"
                      }catch(e31118) {
                        if(e31118 instanceof Error) {
                          var ex__5575__auto__ = e31118;
                          var statearr_31119_31200 = state_31106;
                          statearr_31119_31200[1] = 5;
                          statearr_31119_31200[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e31118;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_31107 === 7) {
                        try {
                          var inst_30987 = state_31106[13];
                          var inst_30990 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30987);
                          var inst_30991 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Sign in ", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                          var inst_30992 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30990, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30991);
                          var inst_30993 = cemerick.cljs.test.do_report.call(null, inst_30992);
                          var state_31106__$1 = state_31106;
                          var statearr_31125_31201 = state_31106__$1;
                          statearr_31125_31201[2] = inst_30993;
                          statearr_31125_31201[1] = 9;
                          return"\ufdd0:recur"
                        }catch(e31123) {
                          if(e31123 instanceof Error) {
                            var ex__5575__auto__ = e31123;
                            var statearr_31124_31202 = state_31106;
                            statearr_31124_31202[1] = 5;
                            statearr_31124_31202[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e31123;
                            }else {
                              return null
                            }
                          }
                        }
                      }else {
                        if(state_val_31107 === 8) {
                          try {
                            var inst_30987 = state_31106[13];
                            var inst_30995 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                            var inst_30996 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                            var inst_30997 = cljs.core.cons.call(null, inst_30996, inst_30987);
                            var inst_30998 = cljs.core.list.call(null, inst_30995, inst_30997);
                            var inst_30999 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Sign in ", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                            var inst_31000 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30998, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30999);
                            var inst_31001 = cemerick.cljs.test.do_report.call(null, inst_31000);
                            var state_31106__$1 = state_31106;
                            var statearr_31128_31203 = state_31106__$1;
                            statearr_31128_31203[2] = inst_31001;
                            statearr_31128_31203[1] = 9;
                            return"\ufdd0:recur"
                          }catch(e31126) {
                            if(e31126 instanceof Error) {
                              var ex__5575__auto__ = e31126;
                              var statearr_31127_31204 = state_31106;
                              statearr_31127_31204[1] = 5;
                              statearr_31127_31204[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e31126;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_31107 === 9) {
                            try {
                              var inst_30988 = state_31106[12];
                              var inst_31003 = state_31106[2];
                              var state_31106__$1 = function() {
                                var statearr_31131 = state_31106;
                                statearr_31131[14] = inst_31003;
                                return statearr_31131
                              }();
                              var statearr_31132_31205 = state_31106__$1;
                              statearr_31132_31205[2] = inst_30988;
                              statearr_31132_31205[1] = 4;
                              return"\ufdd0:recur"
                            }catch(e31129) {
                              if(e31129 instanceof Error) {
                                var ex__5575__auto__ = e31129;
                                var statearr_31130_31206 = state_31106;
                                statearr_31130_31206[1] = 5;
                                statearr_31130_31206[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e31129;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_31107 === 10) {
                              var inst_31040 = state_31106[2];
                              var state_31106__$1 = function() {
                                var statearr_31133 = state_31106;
                                statearr_31133[15] = inst_31040;
                                return statearr_31133
                              }();
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31106__$1, 17, in_ch1, ls1)
                            }else {
                              if(state_val_31107 === 11) {
                                var inst_31010 = state_31106[2];
                                var inst_31011 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "login-message", "p/login-message", -560992504, null), "u1", "p1"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, 
                                null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                var inst_31012 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31010, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31011);
                                var inst_31013 = cemerick.cljs.test.do_report.call(null, inst_31012);
                                var state_31106__$1 = state_31106;
                                var statearr_31134_31207 = state_31106__$1;
                                statearr_31134_31207[2] = inst_31013;
                                statearr_31134_31207[1] = 10;
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_31107 === 12) {
                                  try {
                                    var inst_31016 = chatter_box.protocol.login_message.call(null, "u1", "p1");
                                    var inst_31017 = cljs.core.async.timeout.call(null, 100);
                                    var inst_31018 = cljs.core.vector.call(null, inst_31017, out_ch1);
                                    var state_31106__$1 = function() {
                                      var statearr_31137 = state_31106;
                                      statearr_31137[16] = inst_31016;
                                      return statearr_31137
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_31106__$1, 13, inst_31018)
                                  }catch(e31135) {
                                    if(e31135 instanceof Error) {
                                      var ex__5575__auto__ = e31135;
                                      var statearr_31136_31208 = state_31106;
                                      statearr_31136_31208[1] = 11;
                                      statearr_31136_31208[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e31135;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_31107 === 13) {
                                    try {
                                      var inst_31023 = state_31106[17];
                                      var inst_31022 = state_31106[18];
                                      var inst_31016 = state_31106[16];
                                      var inst_31020 = state_31106[2];
                                      var inst_31021 = cljs.core.first.call(null, inst_31020);
                                      var inst_31022__$1 = cljs.core.list.call(null, inst_31016, inst_31021);
                                      var inst_31023__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_31022__$1);
                                      var state_31106__$1 = function() {
                                        var statearr_31140 = state_31106;
                                        statearr_31140[17] = inst_31023__$1;
                                        statearr_31140[18] = inst_31022__$1;
                                        return statearr_31140
                                      }();
                                      if(cljs.core.truth_(inst_31023__$1)) {
                                        var statearr_31141_31209 = state_31106__$1;
                                        statearr_31141_31209[1] = 14
                                      }else {
                                        var statearr_31142_31210 = state_31106__$1;
                                        statearr_31142_31210[1] = 15
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e31138) {
                                      if(e31138 instanceof Error) {
                                        var ex__5575__auto__ = e31138;
                                        var statearr_31139_31211 = state_31106;
                                        statearr_31139_31211[1] = 11;
                                        statearr_31139_31211[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e31138;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_31107 === 14) {
                                      try {
                                        var inst_31022 = state_31106[18];
                                        var inst_31025 = cljs.core.cons.call(null, cljs.core._EQ_, inst_31022);
                                        var inst_31026 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "login-message", "p/login-message", -560992504, null), "u1", "p1"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 
                                        1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                        var inst_31027 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31025, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31026);
                                        var inst_31028 = cemerick.cljs.test.do_report.call(null, inst_31027);
                                        var state_31106__$1 = state_31106;
                                        var statearr_31145_31212 = state_31106__$1;
                                        statearr_31145_31212[2] = inst_31028;
                                        statearr_31145_31212[1] = 16;
                                        return"\ufdd0:recur"
                                      }catch(e31143) {
                                        if(e31143 instanceof Error) {
                                          var ex__5575__auto__ = e31143;
                                          var statearr_31144_31213 = state_31106;
                                          statearr_31144_31213[1] = 11;
                                          statearr_31144_31213[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e31143;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_31107 === 15) {
                                        try {
                                          var inst_31022 = state_31106[18];
                                          var inst_31030 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                          var inst_31031 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                          var inst_31032 = cljs.core.cons.call(null, inst_31031, inst_31022);
                                          var inst_31033 = cljs.core.list.call(null, inst_31030, inst_31032);
                                          var inst_31034 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "login-message", "p/login-message", -560992504, null), "u1", "p1"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 
                                          1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                          var inst_31035 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31033, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31034);
                                          var inst_31036 = cemerick.cljs.test.do_report.call(null, inst_31035);
                                          var state_31106__$1 = state_31106;
                                          var statearr_31148_31214 = state_31106__$1;
                                          statearr_31148_31214[2] = inst_31036;
                                          statearr_31148_31214[1] = 16;
                                          return"\ufdd0:recur"
                                        }catch(e31146) {
                                          if(e31146 instanceof Error) {
                                            var ex__5575__auto__ = e31146;
                                            var statearr_31147_31215 = state_31106;
                                            statearr_31147_31215[1] = 11;
                                            statearr_31147_31215[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e31146;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_31107 === 16) {
                                          try {
                                            var inst_31023 = state_31106[17];
                                            var inst_31038 = state_31106[2];
                                            var state_31106__$1 = function() {
                                              var statearr_31151 = state_31106;
                                              statearr_31151[19] = inst_31038;
                                              return statearr_31151
                                            }();
                                            var statearr_31152_31216 = state_31106__$1;
                                            statearr_31152_31216[2] = inst_31023;
                                            statearr_31152_31216[1] = 10;
                                            return"\ufdd0:recur"
                                          }catch(e31149) {
                                            if(e31149 instanceof Error) {
                                              var ex__5575__auto__ = e31149;
                                              var statearr_31150_31217 = state_31106;
                                              statearr_31150_31217[1] = 11;
                                              statearr_31150_31217[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e31149;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_31107 === 17) {
                                            var inst_31042 = state_31106[2];
                                            var state_31106__$1 = function() {
                                              var statearr_31153 = state_31106;
                                              statearr_31153[20] = inst_31042;
                                              return statearr_31153
                                            }();
                                            var statearr_31154_31218 = state_31106__$1;
                                            statearr_31154_31218[2] = null;
                                            statearr_31154_31218[1] = 20;
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_31107 === 18) {
                                              var inst_31073 = state_31106[2];
                                              var state_31106__$1 = function() {
                                                var statearr_31155 = state_31106;
                                                statearr_31155[21] = inst_31073;
                                                return statearr_31155
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31106__$1, 25, in_ch1, lo1)
                                            }else {
                                              if(state_val_31107 === 19) {
                                                var inst_31043 = state_31106[2];
                                                var inst_31044 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:chat", null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                var inst_31045 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31043, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31044);
                                                var inst_31046 = cemerick.cljs.test.do_report.call(null, inst_31045);
                                                var state_31106__$1 = state_31106;
                                                var statearr_31156_31219 = state_31106__$1;
                                                statearr_31156_31219[2] = inst_31046;
                                                statearr_31156_31219[1] = 18;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_31107 === 20) {
                                                  try {
                                                    var inst_31049 = chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", null);
                                                    var inst_31050 = cljs.core.async.timeout.call(null, 100);
                                                    var inst_31051 = cljs.core.vector.call(null, inst_31050, out_ch1);
                                                    var state_31106__$1 = function() {
                                                      var statearr_31159 = state_31106;
                                                      statearr_31159[22] = inst_31049;
                                                      return statearr_31159
                                                    }();
                                                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_31106__$1, 21, inst_31051)
                                                  }catch(e31157) {
                                                    if(e31157 instanceof Error) {
                                                      var ex__5575__auto__ = e31157;
                                                      var statearr_31158_31220 = state_31106;
                                                      statearr_31158_31220[1] = 19;
                                                      statearr_31158_31220[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e31157;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_31107 === 21) {
                                                    try {
                                                      var inst_31056 = state_31106[23];
                                                      var inst_31049 = state_31106[22];
                                                      var inst_31055 = state_31106[24];
                                                      var inst_31053 = state_31106[2];
                                                      var inst_31054 = cljs.core.first.call(null, inst_31053);
                                                      var inst_31055__$1 = cljs.core.list.call(null, inst_31049, inst_31054);
                                                      var inst_31056__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_31055__$1);
                                                      var state_31106__$1 = function() {
                                                        var statearr_31162 = state_31106;
                                                        statearr_31162[23] = inst_31056__$1;
                                                        statearr_31162[24] = inst_31055__$1;
                                                        return statearr_31162
                                                      }();
                                                      if(cljs.core.truth_(inst_31056__$1)) {
                                                        var statearr_31163_31221 = state_31106__$1;
                                                        statearr_31163_31221[1] = 22
                                                      }else {
                                                        var statearr_31164_31222 = state_31106__$1;
                                                        statearr_31164_31222[1] = 23
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e31160) {
                                                      if(e31160 instanceof Error) {
                                                        var ex__5575__auto__ = e31160;
                                                        var statearr_31161_31223 = state_31106;
                                                        statearr_31161_31223[1] = 19;
                                                        statearr_31161_31223[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e31160;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_31107 === 22) {
                                                      try {
                                                        var inst_31055 = state_31106[24];
                                                        var inst_31058 = cljs.core.cons.call(null, cljs.core._EQ_, inst_31055);
                                                        var inst_31059 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:chat", null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                        "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                        var inst_31060 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31058, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31059);
                                                        var inst_31061 = cemerick.cljs.test.do_report.call(null, inst_31060);
                                                        var state_31106__$1 = state_31106;
                                                        var statearr_31167_31224 = state_31106__$1;
                                                        statearr_31167_31224[2] = inst_31061;
                                                        statearr_31167_31224[1] = 24;
                                                        return"\ufdd0:recur"
                                                      }catch(e31165) {
                                                        if(e31165 instanceof Error) {
                                                          var ex__5575__auto__ = e31165;
                                                          var statearr_31166_31225 = state_31106;
                                                          statearr_31166_31225[1] = 19;
                                                          statearr_31166_31225[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e31165;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_31107 === 23) {
                                                        try {
                                                          var inst_31055 = state_31106[24];
                                                          var inst_31063 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                          var inst_31064 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                          var inst_31065 = cljs.core.cons.call(null, inst_31064, inst_31055);
                                                          var inst_31066 = cljs.core.list.call(null, inst_31063, inst_31065);
                                                          var inst_31067 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:chat", null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                          "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                          var inst_31068 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31066, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31067);
                                                          var inst_31069 = cemerick.cljs.test.do_report.call(null, inst_31068);
                                                          var state_31106__$1 = state_31106;
                                                          var statearr_31170_31226 = state_31106__$1;
                                                          statearr_31170_31226[2] = inst_31069;
                                                          statearr_31170_31226[1] = 24;
                                                          return"\ufdd0:recur"
                                                        }catch(e31168) {
                                                          if(e31168 instanceof Error) {
                                                            var ex__5575__auto__ = e31168;
                                                            var statearr_31169_31227 = state_31106;
                                                            statearr_31169_31227[1] = 19;
                                                            statearr_31169_31227[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e31168;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }else {
                                                        if(state_val_31107 === 24) {
                                                          try {
                                                            var inst_31056 = state_31106[23];
                                                            var inst_31071 = state_31106[2];
                                                            var state_31106__$1 = function() {
                                                              var statearr_31173 = state_31106;
                                                              statearr_31173[25] = inst_31071;
                                                              return statearr_31173
                                                            }();
                                                            var statearr_31174_31228 = state_31106__$1;
                                                            statearr_31174_31228[2] = inst_31056;
                                                            statearr_31174_31228[1] = 18;
                                                            return"\ufdd0:recur"
                                                          }catch(e31171) {
                                                            if(e31171 instanceof Error) {
                                                              var ex__5575__auto__ = e31171;
                                                              var statearr_31172_31229 = state_31106;
                                                              statearr_31172_31229[1] = 19;
                                                              statearr_31172_31229[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e31171;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_31107 === 25) {
                                                            var inst_31075 = state_31106[2];
                                                            var inst_31076 = cljs.core.async.timeout.call(null, 100);
                                                            var state_31106__$1 = function() {
                                                              var statearr_31175 = state_31106;
                                                              statearr_31175[26] = inst_31075;
                                                              return statearr_31175
                                                            }();
                                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31106__$1, 26, inst_31076)
                                                          }else {
                                                            if(state_val_31107 === 26) {
                                                              var inst_31078 = state_31106[2];
                                                              var state_31106__$1 = function() {
                                                                var statearr_31176 = state_31106;
                                                                statearr_31176[27] = inst_31078;
                                                                return statearr_31176
                                                              }();
                                                              var statearr_31177_31230 = state_31106__$1;
                                                              statearr_31177_31230[2] = null;
                                                              statearr_31177_31230[1] = 29;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_31107 === 27) {
                                                                var inst_31104 = state_31106[2];
                                                                var state_31106__$1 = state_31106;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31106__$1, inst_31104)
                                                              }else {
                                                                if(state_val_31107 === 28) {
                                                                  var inst_31079 = state_31106[2];
                                                                  var inst_31080 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("l", "user", "l/user", -1636925197, null)));
                                                                  var inst_31081 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31079, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31080);
                                                                  var inst_31082 = cemerick.cljs.test.do_report.call(null, inst_31081);
                                                                  var state_31106__$1 = state_31106;
                                                                  var statearr_31178_31231 = state_31106__$1;
                                                                  statearr_31178_31231[2] = inst_31082;
                                                                  statearr_31178_31231[1] = 27;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if(state_val_31107 === 29) {
                                                                    try {
                                                                      var inst_31087 = state_31106[5];
                                                                      var inst_31086 = state_31106[28];
                                                                      var inst_31085 = cljs.core.deref.call(null, chatter_box.login_view_component.user);
                                                                      var inst_31086__$1 = cljs.core.list.call(null, null, inst_31085);
                                                                      var inst_31087__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_31086__$1);
                                                                      var state_31106__$1 = function() {
                                                                        var statearr_31181 = state_31106;
                                                                        statearr_31181[5] = inst_31087__$1;
                                                                        statearr_31181[28] = inst_31086__$1;
                                                                        return statearr_31181
                                                                      }();
                                                                      if(cljs.core.truth_(inst_31087__$1)) {
                                                                        var statearr_31182_31232 = state_31106__$1;
                                                                        statearr_31182_31232[1] = 30
                                                                      }else {
                                                                        var statearr_31183_31233 = state_31106__$1;
                                                                        statearr_31183_31233[1] = 31
                                                                      }
                                                                      return"\ufdd0:recur"
                                                                    }catch(e31179) {
                                                                      if(e31179 instanceof Error) {
                                                                        var ex__5575__auto__ = e31179;
                                                                        var statearr_31180_31234 = state_31106;
                                                                        statearr_31180_31234[1] = 28;
                                                                        statearr_31180_31234[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e31179;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_31107 === 30) {
                                                                      try {
                                                                        var inst_31086 = state_31106[28];
                                                                        var inst_31089 = cljs.core.cons.call(null, cljs.core._EQ_, inst_31086);
                                                                        var inst_31090 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("l", "user", "l/user", -1636925197, null)));
                                                                        var inst_31091 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31089, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31090);
                                                                        var inst_31092 = cemerick.cljs.test.do_report.call(null, inst_31091);
                                                                        var state_31106__$1 = state_31106;
                                                                        var statearr_31186_31235 = state_31106__$1;
                                                                        statearr_31186_31235[2] = inst_31092;
                                                                        statearr_31186_31235[1] = 32;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e31184) {
                                                                        if(e31184 instanceof Error) {
                                                                          var ex__5575__auto__ = e31184;
                                                                          var statearr_31185_31236 = state_31106;
                                                                          statearr_31185_31236[1] = 28;
                                                                          statearr_31185_31236[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e31184;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_31107 === 31) {
                                                                        try {
                                                                          var inst_31086 = state_31106[28];
                                                                          var inst_31094 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                          var inst_31095 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                          var inst_31096 = cljs.core.cons.call(null, inst_31095, inst_31086);
                                                                          var inst_31097 = cljs.core.list.call(null, inst_31094, inst_31096);
                                                                          var inst_31098 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("l", "user", "l/user", -1636925197, null)));
                                                                          var inst_31099 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31097, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31098);
                                                                          var inst_31100 = cemerick.cljs.test.do_report.call(null, inst_31099);
                                                                          var state_31106__$1 = state_31106;
                                                                          var statearr_31189_31237 = state_31106__$1;
                                                                          statearr_31189_31237[2] = inst_31100;
                                                                          statearr_31189_31237[1] = 32;
                                                                          return"\ufdd0:recur"
                                                                        }catch(e31187) {
                                                                          if(e31187 instanceof Error) {
                                                                            var ex__5575__auto__ = e31187;
                                                                            var statearr_31188_31238 = state_31106;
                                                                            statearr_31188_31238[1] = 28;
                                                                            statearr_31188_31238[2] = ex__5575__auto__;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if("\ufdd0:else") {
                                                                              throw e31187;
                                                                            }else {
                                                                              return null
                                                                            }
                                                                          }
                                                                        }
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_31191 = new Array(29);
            statearr_31191[0] = state_machine__5582__auto__;
            statearr_31191[1] = 1;
            return statearr_31191
          };
          var state_machine__5582__auto____1 = function(state_31106) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_31106);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_31106) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_31106)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_31192 = f__5654__auto__.call(null);
      statearr_31192[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_31192
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.login-view-test", "chatter-box.login-view-test", -1544320280, null), chatter_box.login_view_test.basic_test);
goog.provide("chatter_box.core_test");
goog.require("cljs.core");
goog.require("cemerick.cljs.test");
chatter_box.core_test.a_test = function a_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.core_test.a_test)
};
chatter_box.core_test.a_test = cljs.core.vary_meta.call(null, chatter_box.core_test.a_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "a-test", "a-test", 1181611063, null), "\ufdd0:test", function a_test_test() {
  var _STAR_testing_contexts_STAR_28423 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "FIXME, I fail.");
    try {
      var values__28285__auto__ = cljs.core.list.call(null, 0, 1);
      var result__28286__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__28285__auto__);
      if(cljs.core.truth_(result__28286__auto__)) {
        cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:actual", cljs.core.cons.call(null, cljs.core._EQ_, values__28285__auto__), "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 0, 1)], true))
      }else {
        cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:actual", cljs.core.list.call(null, new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__28285__auto__)), "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 0, 1)], true))
      }
      return result__28286__auto__
    }catch(e28425) {
      if(e28425 instanceof Error) {
        var t__28322__auto__ = e28425;
        return cemerick.cljs.test.do_report.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:actual", t__28322__auto__, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 0, 1)], true))
      }else {
        if("\ufdd0:else") {
          throw e28425;
        }else {
          return null
        }
      }
    }
  }finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_28423
  }
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.core-test", "chatter-box.core-test", -851650990, null), chatter_box.core_test.a_test);
goog.provide("chatter_box.event_bus_test");
goog.require("cljs.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cemerick.cljs.test");
goog.require("chatter_box.event_bus");
goog.provide("chatter_box.event_bus_test.TestComponent");
chatter_box.event_bus_test.TestComponent = function(channel, filt, __meta, __extmap) {
  this.channel = channel;
  this.filt = filt;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3324__auto__) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, this__3324__auto__);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3329__auto__, k__3330__auto__) {
  var self__ = this;
  return this__3329__auto__.cljs$core$ILookup$_lookup$arity$3(this__3329__auto__, k__3330__auto__, null)
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3331__auto__, k31240, else__3332__auto__) {
  var self__ = this;
  if(k31240 === "\ufdd0:channel") {
    return self__.channel
  }else {
    if(k31240 === "\ufdd0:filt") {
      return self__.filt
    }else {
      if("\ufdd0:else") {
        return cljs.core.get.call(null, self__.__extmap, k31240, else__3332__auto__)
      }else {
        return null
      }
    }
  }
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3336__auto__, k__3337__auto__, G__31239) {
  var self__ = this;
  var pred__31242 = cljs.core.identical_QMARK_;
  var expr__31243 = k__3337__auto__;
  if(pred__31242.call(null, "\ufdd0:channel", expr__31243)) {
    return new chatter_box.event_bus_test.TestComponent(G__31239, self__.filt, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__31242.call(null, "\ufdd0:filt", expr__31243)) {
      return new chatter_box.event_bus_test.TestComponent(self__.channel, G__31239, self__.__meta, self__.__extmap, null)
    }else {
      return new chatter_box.event_bus_test.TestComponent(self__.channel, self__.filt, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3337__auto__, G__31239), null)
    }
  }
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3343__auto__, writer__3344__auto__, opts__3345__auto__) {
  var self__ = this;
  var pr_pair__3346__auto__ = function(keyval__3347__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3344__auto__, cljs.core.pr_writer, "", " ", "", opts__3345__auto__, keyval__3347__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3344__auto__, pr_pair__3346__auto__, "#chatter-box.event-bus-test.TestComponent{", ", ", "}", opts__3345__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:channel", self__.channel), cljs.core.vector.call(null, "\ufdd0:filt", self__.filt)], true), self__.__extmap))
};
chatter_box.event_bus_test.TestComponent.prototype.chatter_box$event_bus$Component$ = true;
chatter_box.event_bus_test.TestComponent.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, ch) {
  var self__ = this;
  return ch
};
chatter_box.event_bus_test.TestComponent.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
  var self__ = this;
  return self__.filt.call(null, msg)
};
chatter_box.event_bus_test.TestComponent.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
  var self__ = this;
  return self__.channel
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3334__auto__, entry__3335__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3335__auto__)) {
    return this__3334__auto__.cljs$core$IAssociative$_assoc$arity$3(this__3334__auto__, cljs.core._nth.call(null, entry__3335__auto__, 0), cljs.core._nth.call(null, entry__3335__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3334__auto__, entry__3335__auto__)
  }
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3341__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:channel", self__.channel), cljs.core.vector.call(null, "\ufdd0:filt", self__.filt)], true), self__.__extmap))
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3333__auto__) {
  var self__ = this;
  return 2 + cljs.core.count.call(null, self__.__extmap)
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3325__auto__, other__3326__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__3326__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__3325__auto__.constructor === other__3326__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__3325__auto__, other__3326__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3328__auto__, G__31239) {
  var self__ = this;
  return new chatter_box.event_bus_test.TestComponent(self__.channel, self__.filt, G__31239, self__.__extmap, self__.__hash)
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3327__auto__) {
  var self__ = this;
  return self__.__meta
};
chatter_box.event_bus_test.TestComponent.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3338__auto__, k__3339__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:filt", null, "\ufdd0:channel", null], true), k__3339__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3338__auto__), self__.__meta), k__3339__auto__)
  }else {
    return new chatter_box.event_bus_test.TestComponent(self__.channel, self__.filt, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3339__auto__)), null)
  }
};
chatter_box.event_bus_test.TestComponent.cljs$lang$type = true;
chatter_box.event_bus_test.TestComponent.cljs$lang$ctorPrSeq = function(this__3363__auto__) {
  return cljs.core.list.call(null, "chatter-box.event-bus-test/TestComponent")
};
chatter_box.event_bus_test.TestComponent.cljs$lang$ctorPrWriter = function(this__3363__auto__, writer__3364__auto__) {
  return cljs.core._write.call(null, writer__3364__auto__, "chatter-box.event-bus-test/TestComponent")
};
chatter_box.event_bus_test.__GT_TestComponent = function __GT_TestComponent(channel, filt) {
  return new chatter_box.event_bus_test.TestComponent(channel, filt)
};
chatter_box.event_bus_test.map__GT_TestComponent = function map__GT_TestComponent(G__31241) {
  return new chatter_box.event_bus_test.TestComponent((new cljs.core.Keyword("\ufdd0:channel")).call(null, G__31241), (new cljs.core.Keyword("\ufdd0:filt")).call(null, G__31241), null, cljs.core.dissoc.call(null, G__31241, "\ufdd0:channel", "\ufdd0:filt"))
};
chatter_box.event_bus_test.basic_test = function basic_test(filt, check, message) {
  var my_co = new chatter_box.event_bus_test.TestComponent(cljs.core.async.chan.call(null), filt);
  var bus_chan = chatter_box.event_bus.create_bus.call(null, my_co);
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_31341) {
        var state_val_31342 = state_31341[1];
        if(state_val_31342 === 9) {
          try {
            var inst_31322 = state_31341[5];
            var inst_31337 = state_31341[2];
            var state_31341__$1 = function() {
              var statearr_31345 = state_31341;
              statearr_31345[6] = inst_31337;
              return statearr_31345
            }();
            var statearr_31346_31365 = state_31341__$1;
            statearr_31346_31365[2] = inst_31322;
            statearr_31346_31365[1] = 4;
            return"\ufdd0:recur"
          }catch(e31343) {
            if(e31343 instanceof Error) {
              var ex__5575__auto__ = e31343;
              var statearr_31344_31366 = state_31341;
              statearr_31344_31366[1] = 5;
              statearr_31344_31366[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e31343;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_31342 === 8) {
            try {
              var inst_31321 = state_31341[7];
              var inst_31329 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
              var inst_31330 = new cljs.core.Symbol(null, "check", "check", -1545904447, null);
              var inst_31331 = cljs.core.cons.call(null, inst_31330, inst_31321);
              var inst_31332 = cljs.core.list.call(null, inst_31329, inst_31331);
              var inst_31333 = cljs.core.list(new cljs.core.Symbol(null, "check", "check", -1545904447, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
              var inst_31334 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31332, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31333);
              var inst_31335 = cemerick.cljs.test.do_report.call(null, inst_31334);
              var state_31341__$1 = state_31341;
              var statearr_31349_31367 = state_31341__$1;
              statearr_31349_31367[2] = inst_31335;
              statearr_31349_31367[1] = 9;
              return"\ufdd0:recur"
            }catch(e31347) {
              if(e31347 instanceof Error) {
                var ex__5575__auto__ = e31347;
                var statearr_31348_31368 = state_31341;
                statearr_31348_31368[1] = 5;
                statearr_31348_31368[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e31347;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_31342 === 7) {
              try {
                var inst_31321 = state_31341[7];
                var inst_31324 = cljs.core.cons.call(null, check, inst_31321);
                var inst_31325 = cljs.core.list(new cljs.core.Symbol(null, "check", "check", -1545904447, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                var inst_31326 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31324, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31325);
                var inst_31327 = cemerick.cljs.test.do_report.call(null, inst_31326);
                var state_31341__$1 = state_31341;
                var statearr_31352_31369 = state_31341__$1;
                statearr_31352_31369[2] = inst_31327;
                statearr_31352_31369[1] = 9;
                return"\ufdd0:recur"
              }catch(e31350) {
                if(e31350 instanceof Error) {
                  var ex__5575__auto__ = e31350;
                  var statearr_31351_31370 = state_31341;
                  statearr_31351_31370[1] = 5;
                  statearr_31351_31370[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e31350;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_31342 === 6) {
                try {
                  var inst_31322 = state_31341[5];
                  var inst_31321 = state_31341[7];
                  var inst_31313 = state_31341[8];
                  var inst_31321__$1 = cljs.core.list.call(null, inst_31313, message);
                  var inst_31322__$1 = cljs.core.apply.call(null, check, inst_31321__$1);
                  var state_31341__$1 = function() {
                    var statearr_31355 = state_31341;
                    statearr_31355[5] = inst_31322__$1;
                    statearr_31355[7] = inst_31321__$1;
                    return statearr_31355
                  }();
                  if(cljs.core.truth_(inst_31322__$1)) {
                    var statearr_31356_31371 = state_31341__$1;
                    statearr_31356_31371[1] = 7
                  }else {
                    var statearr_31357_31372 = state_31341__$1;
                    statearr_31357_31372[1] = 8
                  }
                  return"\ufdd0:recur"
                }catch(e31353) {
                  if(e31353 instanceof Error) {
                    var ex__5575__auto__ = e31353;
                    var statearr_31354_31373 = state_31341;
                    statearr_31354_31373[1] = 5;
                    statearr_31354_31373[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e31353;
                    }else {
                      return null
                    }
                  }
                }
              }else {
                if(state_val_31342 === 5) {
                  var inst_31315 = state_31341[2];
                  var inst_31316 = cljs.core.list(new cljs.core.Symbol(null, "check", "check", -1545904447, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                  var inst_31317 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31315, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31316);
                  var inst_31318 = cemerick.cljs.test.do_report.call(null, inst_31317);
                  var state_31341__$1 = state_31341;
                  var statearr_31358_31374 = state_31341__$1;
                  statearr_31358_31374[2] = inst_31318;
                  statearr_31358_31374[1] = 4;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_31342 === 4) {
                    var inst_31339 = state_31341[2];
                    var state_31341__$1 = state_31341;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31341__$1, inst_31339)
                  }else {
                    if(state_val_31342 === 3) {
                      var inst_31312 = state_31341[2];
                      var inst_31313 = cljs.core.nth.call(null, inst_31312, 0, null);
                      var inst_31314 = cljs.core.nth.call(null, inst_31312, 1, null);
                      var state_31341__$1 = function() {
                        var statearr_31359 = state_31341;
                        statearr_31359[8] = inst_31313;
                        statearr_31359[9] = inst_31314;
                        return statearr_31359
                      }();
                      var statearr_31360_31375 = state_31341__$1;
                      statearr_31360_31375[2] = null;
                      statearr_31360_31375[1] = 6;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_31342 === 2) {
                        var inst_31306 = state_31341[2];
                        var inst_31308 = cljs.core.async.timeout.call(null, 100);
                        var inst_31309 = (new cljs.core.Keyword("\ufdd0:channel")).call(null, my_co);
                        var inst_31310 = cljs.core.vector.call(null, inst_31308, inst_31309);
                        var state_31341__$1 = function() {
                          var statearr_31361 = state_31341;
                          statearr_31361[10] = inst_31306;
                          return statearr_31361
                        }();
                        return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_31341__$1, 3, inst_31310)
                      }else {
                        if(state_val_31342 === 1) {
                          var state_31341__$1 = state_31341;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31341__$1, 2, bus_chan, message)
                        }else {
                          return null
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_31363 = new Array(11);
            statearr_31363[0] = state_machine__5582__auto__;
            statearr_31363[1] = 1;
            return statearr_31363
          };
          var state_machine__5582__auto____1 = function(state_31341) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_31341);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_31341) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_31341)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_31364 = f__5654__auto__.call(null);
      statearr_31364[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_31364
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
chatter_box.event_bus_test.bus_echo_test = function bus_echo_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.event_bus_test.bus_echo_test)
};
chatter_box.event_bus_test.bus_echo_test = cljs.core.vary_meta.call(null, chatter_box.event_bus_test.bus_echo_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "bus-echo-test", "bus-echo-test", 753681894, null), "\ufdd0:test", function bus_echo_test_test() {
  var _STAR_testing_contexts_STAR_31378 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "bus basic echo test");
    return chatter_box.event_bus_test.basic_test.call(null, function(msg) {
      return true
    }, cljs.core._EQ_, "testing")
  }finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_31378
  }
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.event-bus-test", "chatter-box.event-bus-test", 52350034, null), chatter_box.event_bus_test.bus_echo_test);
chatter_box.event_bus_test.bus_filter_test = function bus_filter_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.event_bus_test.bus_filter_test)
};
chatter_box.event_bus_test.bus_filter_test = cljs.core.vary_meta.call(null, chatter_box.event_bus_test.bus_filter_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "bus-filter-test", "bus-filter-test", -2049093709, null), "\ufdd0:test", function bus_filter_test_test() {
  var _STAR_testing_contexts_STAR_31384_31388 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "negative filter");
    chatter_box.event_bus_test.basic_test.call(null, "\ufdd0:good-key", function(in$, out) {
      return in$ == null
    }, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:bad-key", true], true))
  }finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_31384_31388
  }
  var _STAR_testing_contexts_STAR_31386 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "positive filter");
    return chatter_box.event_bus_test.basic_test.call(null, "\ufdd0:good-key", cljs.core._EQ_, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:good-key", true], true))
  }finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_31386
  }
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.event-bus-test", "chatter-box.event-bus-test", 52350034, null), chatter_box.event_bus_test.bus_filter_test);
chatter_box.event_bus_test.bus_multi_test = function bus_multi_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.event_bus_test.bus_multi_test)
};
chatter_box.event_bus_test.bus_multi_test = cljs.core.vary_meta.call(null, chatter_box.event_bus_test.bus_multi_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "bus-multi-test", "bus-multi-test", -4439092, null), "\ufdd0:test", function bus_multi_test_test() {
  var _STAR_testing_contexts_STAR_31549 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "multiple component test");
    var co1 = new chatter_box.event_bus_test.TestComponent(cljs.core.async.chan.call(null), "\ufdd0:good-key");
    var co2 = new chatter_box.event_bus_test.TestComponent(cljs.core.async.chan.call(null), "\ufdd0:good-key");
    var co3 = new chatter_box.event_bus_test.TestComponent(cljs.core.async.chan.call(null), "\ufdd0:bad-key");
    var bus_chan = chatter_box.event_bus.create_bus.call(null, co1, co2, co2);
    var message = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:good-key", true], true);
    var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5654__auto__ = function() {
        var switch__5581__auto__ = function(state_31647) {
          var state_val_31648 = state_31647[1];
          if(state_val_31648 === 1) {
            var state_31647__$1 = state_31647;
            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31647__$1, 2, bus_chan, message)
          }else {
            if(state_val_31648 === 2) {
              var inst_31552 = state_31647[2];
              var inst_31554 = cljs.core.async.timeout.call(null, 100);
              var inst_31555 = (new cljs.core.Keyword("\ufdd0:channel")).call(null, co1);
              var inst_31556 = cljs.core.vector.call(null, inst_31554, inst_31555);
              var state_31647__$1 = function() {
                var statearr_31649 = state_31647;
                statearr_31649[5] = inst_31552;
                return statearr_31649
              }();
              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_31647__$1, 3, inst_31556)
            }else {
              if(state_val_31648 === 3) {
                var inst_31558 = state_31647[2];
                var inst_31559 = cljs.core.nth.call(null, inst_31558, 0, null);
                var inst_31560 = cljs.core.nth.call(null, inst_31558, 1, null);
                var state_31647__$1 = function() {
                  var statearr_31650 = state_31647;
                  statearr_31650[6] = inst_31559;
                  statearr_31650[7] = inst_31560;
                  return statearr_31650
                }();
                var statearr_31651_31709 = state_31647__$1;
                statearr_31651_31709[2] = null;
                statearr_31651_31709[1] = 6;
                return"\ufdd0:recur"
              }else {
                if(state_val_31648 === 4) {
                  var inst_31585 = state_31647[2];
                  var inst_31587 = cljs.core.async.timeout.call(null, 100);
                  var inst_31588 = (new cljs.core.Keyword("\ufdd0:channel")).call(null, co2);
                  var inst_31589 = cljs.core.vector.call(null, inst_31587, inst_31588);
                  var state_31647__$1 = function() {
                    var statearr_31652 = state_31647;
                    statearr_31652[8] = inst_31585;
                    return statearr_31652
                  }();
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_31647__$1, 10, inst_31589)
                }else {
                  if(state_val_31648 === 5) {
                    var inst_31561 = state_31647[2];
                    var inst_31562 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                    var inst_31563 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31561, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31562);
                    var inst_31564 = cemerick.cljs.test.do_report.call(null, inst_31563);
                    var state_31647__$1 = state_31647;
                    var statearr_31653_31710 = state_31647__$1;
                    statearr_31653_31710[2] = inst_31564;
                    statearr_31653_31710[1] = 4;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_31648 === 6) {
                      try {
                        var inst_31559 = state_31647[6];
                        var inst_31567 = state_31647[9];
                        var inst_31568 = state_31647[10];
                        var inst_31567__$1 = cljs.core.list.call(null, inst_31559, message);
                        var inst_31568__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_31567__$1);
                        var state_31647__$1 = function() {
                          var statearr_31656 = state_31647;
                          statearr_31656[9] = inst_31567__$1;
                          statearr_31656[10] = inst_31568__$1;
                          return statearr_31656
                        }();
                        if(cljs.core.truth_(inst_31568__$1)) {
                          var statearr_31657_31711 = state_31647__$1;
                          statearr_31657_31711[1] = 7
                        }else {
                          var statearr_31658_31712 = state_31647__$1;
                          statearr_31658_31712[1] = 8
                        }
                        return"\ufdd0:recur"
                      }catch(e31654) {
                        if(e31654 instanceof Error) {
                          var ex__5575__auto__ = e31654;
                          var statearr_31655_31713 = state_31647;
                          statearr_31655_31713[1] = 5;
                          statearr_31655_31713[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e31654;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_31648 === 7) {
                        try {
                          var inst_31567 = state_31647[9];
                          var inst_31570 = cljs.core.cons.call(null, cljs.core._EQ_, inst_31567);
                          var inst_31571 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                          var inst_31572 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31570, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31571);
                          var inst_31573 = cemerick.cljs.test.do_report.call(null, inst_31572);
                          var state_31647__$1 = state_31647;
                          var statearr_31661_31714 = state_31647__$1;
                          statearr_31661_31714[2] = inst_31573;
                          statearr_31661_31714[1] = 9;
                          return"\ufdd0:recur"
                        }catch(e31659) {
                          if(e31659 instanceof Error) {
                            var ex__5575__auto__ = e31659;
                            var statearr_31660_31715 = state_31647;
                            statearr_31660_31715[1] = 5;
                            statearr_31660_31715[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e31659;
                            }else {
                              return null
                            }
                          }
                        }
                      }else {
                        if(state_val_31648 === 8) {
                          try {
                            var inst_31567 = state_31647[9];
                            var inst_31575 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                            var inst_31576 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                            var inst_31577 = cljs.core.cons.call(null, inst_31576, inst_31567);
                            var inst_31578 = cljs.core.list.call(null, inst_31575, inst_31577);
                            var inst_31579 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                            var inst_31580 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31578, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31579);
                            var inst_31581 = cemerick.cljs.test.do_report.call(null, inst_31580);
                            var state_31647__$1 = state_31647;
                            var statearr_31664_31716 = state_31647__$1;
                            statearr_31664_31716[2] = inst_31581;
                            statearr_31664_31716[1] = 9;
                            return"\ufdd0:recur"
                          }catch(e31662) {
                            if(e31662 instanceof Error) {
                              var ex__5575__auto__ = e31662;
                              var statearr_31663_31717 = state_31647;
                              statearr_31663_31717[1] = 5;
                              statearr_31663_31717[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e31662;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_31648 === 9) {
                            try {
                              var inst_31568 = state_31647[10];
                              var inst_31583 = state_31647[2];
                              var state_31647__$1 = function() {
                                var statearr_31667 = state_31647;
                                statearr_31667[11] = inst_31583;
                                return statearr_31667
                              }();
                              var statearr_31668_31718 = state_31647__$1;
                              statearr_31668_31718[2] = inst_31568;
                              statearr_31668_31718[1] = 4;
                              return"\ufdd0:recur"
                            }catch(e31665) {
                              if(e31665 instanceof Error) {
                                var ex__5575__auto__ = e31665;
                                var statearr_31666_31719 = state_31647;
                                statearr_31666_31719[1] = 5;
                                statearr_31666_31719[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e31665;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_31648 === 10) {
                              var inst_31591 = state_31647[2];
                              var inst_31592 = cljs.core.nth.call(null, inst_31591, 0, null);
                              var inst_31593 = cljs.core.nth.call(null, inst_31591, 1, null);
                              var state_31647__$1 = function() {
                                var statearr_31669 = state_31647;
                                statearr_31669[12] = inst_31592;
                                statearr_31669[13] = inst_31593;
                                return statearr_31669
                              }();
                              var statearr_31670_31720 = state_31647__$1;
                              statearr_31670_31720[2] = null;
                              statearr_31670_31720[1] = 13;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_31648 === 11) {
                                var inst_31618 = state_31647[2];
                                var inst_31620 = cljs.core.async.timeout.call(null, 100);
                                var inst_31621 = (new cljs.core.Keyword("\ufdd0:channel")).call(null, co3);
                                var inst_31622 = cljs.core.vector.call(null, inst_31620, inst_31621);
                                var state_31647__$1 = function() {
                                  var statearr_31671 = state_31647;
                                  statearr_31671[14] = inst_31618;
                                  return statearr_31671
                                }();
                                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_31647__$1, 17, inst_31622)
                              }else {
                                if(state_val_31648 === 12) {
                                  var inst_31594 = state_31647[2];
                                  var inst_31595 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                                  var inst_31596 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31594, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31595);
                                  var inst_31597 = cemerick.cljs.test.do_report.call(null, inst_31596);
                                  var state_31647__$1 = state_31647;
                                  var statearr_31672_31721 = state_31647__$1;
                                  statearr_31672_31721[2] = inst_31597;
                                  statearr_31672_31721[1] = 11;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_31648 === 13) {
                                    try {
                                      var inst_31600 = state_31647[15];
                                      var inst_31601 = state_31647[16];
                                      var inst_31592 = state_31647[12];
                                      var inst_31600__$1 = cljs.core.list.call(null, inst_31592, message);
                                      var inst_31601__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_31600__$1);
                                      var state_31647__$1 = function() {
                                        var statearr_31675 = state_31647;
                                        statearr_31675[15] = inst_31600__$1;
                                        statearr_31675[16] = inst_31601__$1;
                                        return statearr_31675
                                      }();
                                      if(cljs.core.truth_(inst_31601__$1)) {
                                        var statearr_31676_31722 = state_31647__$1;
                                        statearr_31676_31722[1] = 14
                                      }else {
                                        var statearr_31677_31723 = state_31647__$1;
                                        statearr_31677_31723[1] = 15
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e31673) {
                                      if(e31673 instanceof Error) {
                                        var ex__5575__auto__ = e31673;
                                        var statearr_31674_31724 = state_31647;
                                        statearr_31674_31724[1] = 12;
                                        statearr_31674_31724[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e31673;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_31648 === 14) {
                                      try {
                                        var inst_31600 = state_31647[15];
                                        var inst_31603 = cljs.core.cons.call(null, cljs.core._EQ_, inst_31600);
                                        var inst_31604 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                                        var inst_31605 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31603, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31604);
                                        var inst_31606 = cemerick.cljs.test.do_report.call(null, inst_31605);
                                        var state_31647__$1 = state_31647;
                                        var statearr_31680_31725 = state_31647__$1;
                                        statearr_31680_31725[2] = inst_31606;
                                        statearr_31680_31725[1] = 16;
                                        return"\ufdd0:recur"
                                      }catch(e31678) {
                                        if(e31678 instanceof Error) {
                                          var ex__5575__auto__ = e31678;
                                          var statearr_31679_31726 = state_31647;
                                          statearr_31679_31726[1] = 12;
                                          statearr_31679_31726[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e31678;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_31648 === 15) {
                                        try {
                                          var inst_31600 = state_31647[15];
                                          var inst_31608 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                          var inst_31609 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                          var inst_31610 = cljs.core.cons.call(null, inst_31609, inst_31600);
                                          var inst_31611 = cljs.core.list.call(null, inst_31608, inst_31610);
                                          var inst_31612 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null), new cljs.core.Symbol(null, "message", "message", -685606464, null));
                                          var inst_31613 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31611, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31612);
                                          var inst_31614 = cemerick.cljs.test.do_report.call(null, inst_31613);
                                          var state_31647__$1 = state_31647;
                                          var statearr_31683_31727 = state_31647__$1;
                                          statearr_31683_31727[2] = inst_31614;
                                          statearr_31683_31727[1] = 16;
                                          return"\ufdd0:recur"
                                        }catch(e31681) {
                                          if(e31681 instanceof Error) {
                                            var ex__5575__auto__ = e31681;
                                            var statearr_31682_31728 = state_31647;
                                            statearr_31682_31728[1] = 12;
                                            statearr_31682_31728[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e31681;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_31648 === 16) {
                                          try {
                                            var inst_31601 = state_31647[16];
                                            var inst_31616 = state_31647[2];
                                            var state_31647__$1 = function() {
                                              var statearr_31686 = state_31647;
                                              statearr_31686[17] = inst_31616;
                                              return statearr_31686
                                            }();
                                            var statearr_31687_31729 = state_31647__$1;
                                            statearr_31687_31729[2] = inst_31601;
                                            statearr_31687_31729[1] = 11;
                                            return"\ufdd0:recur"
                                          }catch(e31684) {
                                            if(e31684 instanceof Error) {
                                              var ex__5575__auto__ = e31684;
                                              var statearr_31685_31730 = state_31647;
                                              statearr_31685_31730[1] = 12;
                                              statearr_31685_31730[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e31684;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_31648 === 17) {
                                            var inst_31624 = state_31647[2];
                                            var inst_31625 = cljs.core.nth.call(null, inst_31624, 0, null);
                                            var inst_31626 = cljs.core.nth.call(null, inst_31624, 1, null);
                                            var state_31647__$1 = function() {
                                              var statearr_31688 = state_31647;
                                              statearr_31688[18] = inst_31626;
                                              statearr_31688[19] = inst_31625;
                                              return statearr_31688
                                            }();
                                            var statearr_31689_31731 = state_31647__$1;
                                            statearr_31689_31731[2] = null;
                                            statearr_31689_31731[1] = 20;
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_31648 === 18) {
                                              var inst_31645 = state_31647[2];
                                              var state_31647__$1 = state_31647;
                                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31647__$1, inst_31645)
                                            }else {
                                              if(state_val_31648 === 19) {
                                                var inst_31627 = state_31647[2];
                                                var inst_31628 = cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null));
                                                var inst_31629 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31627, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_31628);
                                                var inst_31630 = cemerick.cljs.test.do_report.call(null, inst_31629);
                                                var state_31647__$1 = state_31647;
                                                var statearr_31690_31732 = state_31647__$1;
                                                statearr_31690_31732[2] = inst_31630;
                                                statearr_31690_31732[1] = 18;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_31648 === 20) {
                                                  try {
                                                    var inst_31625 = state_31647[19];
                                                    var inst_31633 = state_31647[20];
                                                    var inst_31633__$1 = inst_31625 == null;
                                                    var state_31647__$1 = function() {
                                                      var statearr_31693 = state_31647;
                                                      statearr_31693[20] = inst_31633__$1;
                                                      return statearr_31693
                                                    }();
                                                    if(cljs.core.truth_(inst_31633__$1)) {
                                                      var statearr_31694_31733 = state_31647__$1;
                                                      statearr_31694_31733[1] = 21
                                                    }else {
                                                      var statearr_31695_31734 = state_31647__$1;
                                                      statearr_31695_31734[1] = 22
                                                    }
                                                    return"\ufdd0:recur"
                                                  }catch(e31691) {
                                                    if(e31691 instanceof Error) {
                                                      var ex__5575__auto__ = e31691;
                                                      var statearr_31692_31735 = state_31647;
                                                      statearr_31692_31735[1] = 19;
                                                      statearr_31692_31735[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e31691;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_31648 === 21) {
                                                    try {
                                                      var inst_31633 = state_31647[20];
                                                      var inst_31635 = cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null));
                                                      var inst_31636 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31633, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_31635);
                                                      var inst_31637 = cemerick.cljs.test.do_report.call(null, inst_31636);
                                                      var state_31647__$1 = state_31647;
                                                      var statearr_31698_31736 = state_31647__$1;
                                                      statearr_31698_31736[2] = inst_31637;
                                                      statearr_31698_31736[1] = 23;
                                                      return"\ufdd0:recur"
                                                    }catch(e31696) {
                                                      if(e31696 instanceof Error) {
                                                        var ex__5575__auto__ = e31696;
                                                        var statearr_31697_31737 = state_31647;
                                                        statearr_31697_31737[1] = 19;
                                                        statearr_31697_31737[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e31696;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_31648 === 22) {
                                                      try {
                                                        var inst_31633 = state_31647[20];
                                                        var inst_31639 = cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "msg", "msg", -1640423110, null));
                                                        var inst_31640 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_31633, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_31639);
                                                        var inst_31641 = cemerick.cljs.test.do_report.call(null, inst_31640);
                                                        var state_31647__$1 = state_31647;
                                                        var statearr_31701_31738 = state_31647__$1;
                                                        statearr_31701_31738[2] = inst_31641;
                                                        statearr_31701_31738[1] = 23;
                                                        return"\ufdd0:recur"
                                                      }catch(e31699) {
                                                        if(e31699 instanceof Error) {
                                                          var ex__5575__auto__ = e31699;
                                                          var statearr_31700_31739 = state_31647;
                                                          statearr_31700_31739[1] = 19;
                                                          statearr_31700_31739[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e31699;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_31648 === 23) {
                                                        try {
                                                          var inst_31633 = state_31647[20];
                                                          var inst_31643 = state_31647[2];
                                                          var state_31647__$1 = function() {
                                                            var statearr_31704 = state_31647;
                                                            statearr_31704[21] = inst_31643;
                                                            return statearr_31704
                                                          }();
                                                          var statearr_31705_31740 = state_31647__$1;
                                                          statearr_31705_31740[2] = inst_31633;
                                                          statearr_31705_31740[1] = 18;
                                                          return"\ufdd0:recur"
                                                        }catch(e31702) {
                                                          if(e31702 instanceof Error) {
                                                            var ex__5575__auto__ = e31702;
                                                            var statearr_31703_31741 = state_31647;
                                                            statearr_31703_31741[1] = 19;
                                                            statearr_31703_31741[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e31702;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5581__auto__) {
          return function() {
            var state_machine__5582__auto__ = null;
            var state_machine__5582__auto____0 = function() {
              var statearr_31707 = new Array(22);
              statearr_31707[0] = state_machine__5582__auto__;
              statearr_31707[1] = 1;
              return statearr_31707
            };
            var state_machine__5582__auto____1 = function(state_31647) {
              while(true) {
                var result__5583__auto__ = switch__5581__auto__.call(null, state_31647);
                if(result__5583__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__5583__auto__
                }
                break
              }
            };
            state_machine__5582__auto__ = function(state_31647) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5582__auto____0.call(this);
                case 1:
                  return state_machine__5582__auto____1.call(this, state_31647)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
            return state_machine__5582__auto__
          }()
        }(switch__5581__auto__)
      }();
      var state__5655__auto__ = function() {
        var statearr_31708 = f__5654__auto__.call(null);
        statearr_31708[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
        return statearr_31708
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
    });
    return c__5653__auto__
  }finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_31549
  }
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.event-bus-test", "chatter-box.event-bus-test", 52350034, null), chatter_box.event_bus_test.bus_multi_test);
goog.provide("chatter_box.user_view_test");
goog.require("cljs.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.async");
goog.require("chatter_box.user_view_component");
goog.require("cemerick.cljs.test");
goog.require("chatter_box.protocol");
goog.require("domina.events");
goog.require("enfocus.core");
goog.require("chatter_box.event_bus");
chatter_box.user_view_test.setup_chan = function setup_chan(out_ch) {
  var cp = chatter_box.user_view_component.create_user_view_component.call(null);
  chatter_box.event_bus.init.call(null, cp, out_ch);
  return chatter_box.event_bus.get_channel.call(null, cp)
};
chatter_box.user_view_test.basic_test = function basic_test() {
  return cemerick.cljs.test.test_var.call(null, chatter_box.user_view_test.basic_test)
};
chatter_box.user_view_test.basic_test = cljs.core.vary_meta.call(null, chatter_box.user_view_test.basic_test, cljs.core.assoc, "\ufdd0:name", new cljs.core.Symbol(null, "basic-test", "basic-test", 1484290186, null), "\ufdd0:test", function basic_test_test() {
  var init = chatter_box.protocol.create_message.call(null, "\ufdd0:view", "\ufdd0:init", "\ufdd0:nothing");
  var cr1 = chatter_box.protocol.create_user_message.call(null, "u1", "p1", "f1", "l1", "i1");
  var user1 = (new cljs.core.Keyword("\ufdd0:user")).call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, cr1));
  var uc1 = chatter_box.protocol.user_created_message.call(null, user1);
  var up1 = chatter_box.protocol.user_updated_message.call(null, cljs.core.assoc.call(null, user1, "\ufdd0:first", "F1"));
  var ls1 = chatter_box.protocol.login_success_message.call(null, user1, cljs.core.PersistentArrayMap.EMPTY);
  var lo1 = chatter_box.protocol.logout_message.call(null, "u1");
  var out_ch1 = cljs.core.async.chan.call(null);
  var in_ch1 = chatter_box.user_view_test.setup_chan.call(null, out_ch1);
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_30495) {
        var state_val_30496 = state_30495[1];
        if(state_val_30496 === 32) {
          var inst_30367 = state_30495[2];
          var inst_30368 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "cr1", "cr1", -1640432805, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 
          1546307366, null)], true))));
          var inst_30369 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30367, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30368);
          var inst_30370 = cemerick.cljs.test.do_report.call(null, inst_30369);
          var state_30495__$1 = state_30495;
          var statearr_30497_30662 = state_30495__$1;
          statearr_30497_30662[2] = inst_30370;
          statearr_30497_30662[1] = 31;
          return"\ufdd0:recur"
        }else {
          if(state_val_30496 === 1) {
            var state_30495__$1 = state_30495;
            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30495__$1, 2, in_ch1, init)
          }else {
            if(state_val_30496 === 33) {
              try {
                var inst_30373 = cljs.core.async.timeout.call(null, 100);
                var inst_30374 = cljs.core.vector.call(null, inst_30373, out_ch1);
                var state_30495__$1 = state_30495;
                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_30495__$1, 34, inst_30374)
              }catch(e30498) {
                if(e30498 instanceof Error) {
                  var ex__5575__auto__ = e30498;
                  var statearr_30499_30663 = state_30495;
                  statearr_30499_30663[1] = 32;
                  statearr_30499_30663[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e30498;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_30496 === 2) {
                var inst_30233 = state_30495[2];
                var inst_30234 = cljs.core.async.timeout.call(null, 100);
                var state_30495__$1 = function() {
                  var statearr_30500 = state_30495;
                  statearr_30500[5] = inst_30233;
                  return statearr_30500
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30495__$1, 3, inst_30234)
              }else {
                if(state_val_30496 === 34) {
                  try {
                    var inst_30378 = state_30495[6];
                    var inst_30379 = state_30495[7];
                    var inst_30376 = state_30495[2];
                    var inst_30377 = cljs.core.first.call(null, inst_30376);
                    var inst_30378__$1 = cljs.core.list.call(null, cr1, inst_30377);
                    var inst_30379__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30378__$1);
                    var state_30495__$1 = function() {
                      var statearr_30503 = state_30495;
                      statearr_30503[6] = inst_30378__$1;
                      statearr_30503[7] = inst_30379__$1;
                      return statearr_30503
                    }();
                    if(cljs.core.truth_(inst_30379__$1)) {
                      var statearr_30504_30664 = state_30495__$1;
                      statearr_30504_30664[1] = 35
                    }else {
                      var statearr_30505_30665 = state_30495__$1;
                      statearr_30505_30665[1] = 36
                    }
                    return"\ufdd0:recur"
                  }catch(e30501) {
                    if(e30501 instanceof Error) {
                      var ex__5575__auto__ = e30501;
                      var statearr_30502_30666 = state_30495;
                      statearr_30502_30666[1] = 32;
                      statearr_30502_30666[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e30501;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_30496 === 3) {
                    var inst_30236 = state_30495[2];
                    var inst_30237 = enfocus.core.get_text.call(null);
                    var inst_30238 = enfocus.core.from.call(null, "#create-user-btn", inst_30237);
                    var inst_30239 = enfocus.core.get_text.call(null);
                    var inst_30240 = enfocus.core.from.call(null, "#update-user-btn", inst_30239);
                    var state_30495__$1 = function() {
                      var statearr_30506 = state_30495;
                      statearr_30506[8] = inst_30240;
                      statearr_30506[9] = inst_30236;
                      statearr_30506[10] = inst_30238;
                      return statearr_30506
                    }();
                    var statearr_30507_30667 = state_30495__$1;
                    statearr_30507_30667[2] = null;
                    statearr_30507_30667[1] = 6;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_30496 === 35) {
                      try {
                        var inst_30378 = state_30495[6];
                        var inst_30381 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30378);
                        var inst_30382 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "cr1", "cr1", -1640432805, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", 
                        "out-ch1", 1546307366, null)], true))));
                        var inst_30383 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30381, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30382);
                        var inst_30384 = cemerick.cljs.test.do_report.call(null, inst_30383);
                        var state_30495__$1 = state_30495;
                        var statearr_30510_30668 = state_30495__$1;
                        statearr_30510_30668[2] = inst_30384;
                        statearr_30510_30668[1] = 37;
                        return"\ufdd0:recur"
                      }catch(e30508) {
                        if(e30508 instanceof Error) {
                          var ex__5575__auto__ = e30508;
                          var statearr_30509_30669 = state_30495;
                          statearr_30509_30669[1] = 32;
                          statearr_30509_30669[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e30508;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_30496 === 4) {
                        var inst_30265 = state_30495[2];
                        var state_30495__$1 = function() {
                          var statearr_30511 = state_30495;
                          statearr_30511[11] = inst_30265;
                          return statearr_30511
                        }();
                        var statearr_30512_30670 = state_30495__$1;
                        statearr_30512_30670[2] = null;
                        statearr_30512_30670[1] = 12;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_30496 === 36) {
                          try {
                            var inst_30378 = state_30495[6];
                            var inst_30386 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                            var inst_30387 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                            var inst_30388 = cljs.core.cons.call(null, inst_30387, inst_30378);
                            var inst_30389 = cljs.core.list.call(null, inst_30386, inst_30388);
                            var inst_30390 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "cr1", "cr1", -1640432805, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", 
                            "out-ch1", 1546307366, null)], true))));
                            var inst_30391 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30389, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30390);
                            var inst_30392 = cemerick.cljs.test.do_report.call(null, inst_30391);
                            var state_30495__$1 = state_30495;
                            var statearr_30515_30671 = state_30495__$1;
                            statearr_30515_30671[2] = inst_30392;
                            statearr_30515_30671[1] = 37;
                            return"\ufdd0:recur"
                          }catch(e30513) {
                            if(e30513 instanceof Error) {
                              var ex__5575__auto__ = e30513;
                              var statearr_30514_30672 = state_30495;
                              statearr_30514_30672[1] = 32;
                              statearr_30514_30672[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e30513;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_30496 === 5) {
                            var inst_30241 = state_30495[2];
                            var inst_30242 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Create User", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                            var inst_30243 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30241, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30242);
                            var inst_30244 = cemerick.cljs.test.do_report.call(null, inst_30243);
                            var state_30495__$1 = state_30495;
                            var statearr_30516_30673 = state_30495__$1;
                            statearr_30516_30673[2] = inst_30244;
                            statearr_30516_30673[1] = 4;
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_30496 === 37) {
                              try {
                                var inst_30379 = state_30495[7];
                                var inst_30394 = state_30495[2];
                                var state_30495__$1 = function() {
                                  var statearr_30519 = state_30495;
                                  statearr_30519[12] = inst_30394;
                                  return statearr_30519
                                }();
                                var statearr_30520_30674 = state_30495__$1;
                                statearr_30520_30674[2] = inst_30379;
                                statearr_30520_30674[1] = 31;
                                return"\ufdd0:recur"
                              }catch(e30517) {
                                if(e30517 instanceof Error) {
                                  var ex__5575__auto__ = e30517;
                                  var statearr_30518_30675 = state_30495;
                                  statearr_30518_30675[1] = 32;
                                  statearr_30518_30675[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e30517;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_30496 === 6) {
                                try {
                                  var inst_30247 = state_30495[13];
                                  var inst_30238 = state_30495[10];
                                  var inst_30248 = state_30495[14];
                                  var inst_30247__$1 = cljs.core.list.call(null, "Create User", inst_30238);
                                  var inst_30248__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30247__$1);
                                  var state_30495__$1 = function() {
                                    var statearr_30523 = state_30495;
                                    statearr_30523[13] = inst_30247__$1;
                                    statearr_30523[14] = inst_30248__$1;
                                    return statearr_30523
                                  }();
                                  if(cljs.core.truth_(inst_30248__$1)) {
                                    var statearr_30524_30676 = state_30495__$1;
                                    statearr_30524_30676[1] = 7
                                  }else {
                                    var statearr_30525_30677 = state_30495__$1;
                                    statearr_30525_30677[1] = 8
                                  }
                                  return"\ufdd0:recur"
                                }catch(e30521) {
                                  if(e30521 instanceof Error) {
                                    var ex__5575__auto__ = e30521;
                                    var statearr_30522_30678 = state_30495;
                                    statearr_30522_30678[1] = 5;
                                    statearr_30522_30678[2] = ex__5575__auto__;
                                    return"\ufdd0:recur"
                                  }else {
                                    if("\ufdd0:else") {
                                      throw e30521;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_30496 === 38) {
                                  var inst_30398 = state_30495[2];
                                  var state_30495__$1 = function() {
                                    var statearr_30526 = state_30495;
                                    statearr_30526[15] = inst_30398;
                                    return statearr_30526
                                  }();
                                  var statearr_30527_30679 = state_30495__$1;
                                  statearr_30527_30679[2] = null;
                                  statearr_30527_30679[1] = 41;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_30496 === 7) {
                                    try {
                                      var inst_30247 = state_30495[13];
                                      var inst_30250 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30247);
                                      var inst_30251 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Create User", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                      var inst_30252 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30250, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30251);
                                      var inst_30253 = cemerick.cljs.test.do_report.call(null, inst_30252);
                                      var state_30495__$1 = state_30495;
                                      var statearr_30530_30680 = state_30495__$1;
                                      statearr_30530_30680[2] = inst_30253;
                                      statearr_30530_30680[1] = 9;
                                      return"\ufdd0:recur"
                                    }catch(e30528) {
                                      if(e30528 instanceof Error) {
                                        var ex__5575__auto__ = e30528;
                                        var statearr_30529_30681 = state_30495;
                                        statearr_30529_30681[1] = 5;
                                        statearr_30529_30681[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e30528;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_30496 === 39) {
                                      var inst_30429 = state_30495[2];
                                      var state_30495__$1 = function() {
                                        var statearr_30531 = state_30495;
                                        statearr_30531[16] = inst_30429;
                                        return statearr_30531
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30495__$1, 46, in_ch1, uc1)
                                    }else {
                                      if(state_val_30496 === 8) {
                                        try {
                                          var inst_30247 = state_30495[13];
                                          var inst_30255 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                          var inst_30256 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                          var inst_30257 = cljs.core.cons.call(null, inst_30256, inst_30247);
                                          var inst_30258 = cljs.core.list.call(null, inst_30255, inst_30257);
                                          var inst_30259 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Create User", new cljs.core.Symbol(null, "text", "text", -1636974874, null));
                                          var inst_30260 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30258, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30259);
                                          var inst_30261 = cemerick.cljs.test.do_report.call(null, inst_30260);
                                          var state_30495__$1 = state_30495;
                                          var statearr_30534_30682 = state_30495__$1;
                                          statearr_30534_30682[2] = inst_30261;
                                          statearr_30534_30682[1] = 9;
                                          return"\ufdd0:recur"
                                        }catch(e30532) {
                                          if(e30532 instanceof Error) {
                                            var ex__5575__auto__ = e30532;
                                            var statearr_30533_30683 = state_30495;
                                            statearr_30533_30683[1] = 5;
                                            statearr_30533_30683[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e30532;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_30496 === 40) {
                                          var inst_30399 = state_30495[2];
                                          var inst_30400 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:chat", "user updated"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                          "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                          var inst_30401 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30399, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30400);
                                          var inst_30402 = cemerick.cljs.test.do_report.call(null, inst_30401);
                                          var state_30495__$1 = state_30495;
                                          var statearr_30535_30684 = state_30495__$1;
                                          statearr_30535_30684[2] = inst_30402;
                                          statearr_30535_30684[1] = 39;
                                          return"\ufdd0:recur"
                                        }else {
                                          if(state_val_30496 === 9) {
                                            try {
                                              var inst_30248 = state_30495[14];
                                              var inst_30263 = state_30495[2];
                                              var state_30495__$1 = function() {
                                                var statearr_30538 = state_30495;
                                                statearr_30538[17] = inst_30263;
                                                return statearr_30538
                                              }();
                                              var statearr_30539_30685 = state_30495__$1;
                                              statearr_30539_30685[2] = inst_30248;
                                              statearr_30539_30685[1] = 4;
                                              return"\ufdd0:recur"
                                            }catch(e30536) {
                                              if(e30536 instanceof Error) {
                                                var ex__5575__auto__ = e30536;
                                                var statearr_30537_30686 = state_30495;
                                                statearr_30537_30686[1] = 5;
                                                statearr_30537_30686[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e30536;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_30496 === 41) {
                                              try {
                                                var inst_30405 = chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", "user updated");
                                                var inst_30406 = cljs.core.async.timeout.call(null, 100);
                                                var inst_30407 = cljs.core.vector.call(null, inst_30406, out_ch1);
                                                var state_30495__$1 = function() {
                                                  var statearr_30542 = state_30495;
                                                  statearr_30542[18] = inst_30405;
                                                  return statearr_30542
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_30495__$1, 42, inst_30407)
                                              }catch(e30540) {
                                                if(e30540 instanceof Error) {
                                                  var ex__5575__auto__ = e30540;
                                                  var statearr_30541_30687 = state_30495;
                                                  statearr_30541_30687[1] = 40;
                                                  statearr_30541_30687[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e30540;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_30496 === 10) {
                                                var inst_30290 = state_30495[2];
                                                var state_30495__$1 = function() {
                                                  var statearr_30543 = state_30495;
                                                  statearr_30543[19] = inst_30290;
                                                  return statearr_30543
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30495__$1, 16, in_ch1, ls1)
                                              }else {
                                                if(state_val_30496 === 42) {
                                                  try {
                                                    var inst_30405 = state_30495[18];
                                                    var inst_30411 = state_30495[20];
                                                    var inst_30412 = state_30495[21];
                                                    var inst_30409 = state_30495[2];
                                                    var inst_30410 = cljs.core.first.call(null, inst_30409);
                                                    var inst_30411__$1 = cljs.core.list.call(null, inst_30405, inst_30410);
                                                    var inst_30412__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30411__$1);
                                                    var state_30495__$1 = function() {
                                                      var statearr_30546 = state_30495;
                                                      statearr_30546[20] = inst_30411__$1;
                                                      statearr_30546[21] = inst_30412__$1;
                                                      return statearr_30546
                                                    }();
                                                    if(cljs.core.truth_(inst_30412__$1)) {
                                                      var statearr_30547_30688 = state_30495__$1;
                                                      statearr_30547_30688[1] = 43
                                                    }else {
                                                      var statearr_30548_30689 = state_30495__$1;
                                                      statearr_30548_30689[1] = 44
                                                    }
                                                    return"\ufdd0:recur"
                                                  }catch(e30544) {
                                                    if(e30544 instanceof Error) {
                                                      var ex__5575__auto__ = e30544;
                                                      var statearr_30545_30690 = state_30495;
                                                      statearr_30545_30690[1] = 40;
                                                      statearr_30545_30690[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e30544;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_30496 === 11) {
                                                    var inst_30266 = state_30495[2];
                                                    var inst_30267 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Save", new cljs.core.Symbol(null, "text2", "text2", -1530275234, null));
                                                    var inst_30268 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30266, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30267);
                                                    var inst_30269 = cemerick.cljs.test.do_report.call(null, inst_30268);
                                                    var state_30495__$1 = state_30495;
                                                    var statearr_30549_30691 = state_30495__$1;
                                                    statearr_30549_30691[2] = inst_30269;
                                                    statearr_30549_30691[1] = 10;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if(state_val_30496 === 43) {
                                                      try {
                                                        var inst_30411 = state_30495[20];
                                                        var inst_30414 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30411);
                                                        var inst_30415 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:chat", "user updated"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                        "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                        var inst_30416 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30414, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30415);
                                                        var inst_30417 = cemerick.cljs.test.do_report.call(null, inst_30416);
                                                        var state_30495__$1 = state_30495;
                                                        var statearr_30552_30692 = state_30495__$1;
                                                        statearr_30552_30692[2] = inst_30417;
                                                        statearr_30552_30692[1] = 45;
                                                        return"\ufdd0:recur"
                                                      }catch(e30550) {
                                                        if(e30550 instanceof Error) {
                                                          var ex__5575__auto__ = e30550;
                                                          var statearr_30551_30693 = state_30495;
                                                          statearr_30551_30693[1] = 40;
                                                          statearr_30551_30693[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e30550;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_30496 === 12) {
                                                        try {
                                                          var inst_30240 = state_30495[8];
                                                          var inst_30273 = state_30495[22];
                                                          var inst_30272 = state_30495[23];
                                                          var inst_30272__$1 = cljs.core.list.call(null, "Save", inst_30240);
                                                          var inst_30273__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30272__$1);
                                                          var state_30495__$1 = function() {
                                                            var statearr_30555 = state_30495;
                                                            statearr_30555[22] = inst_30273__$1;
                                                            statearr_30555[23] = inst_30272__$1;
                                                            return statearr_30555
                                                          }();
                                                          if(cljs.core.truth_(inst_30273__$1)) {
                                                            var statearr_30556_30694 = state_30495__$1;
                                                            statearr_30556_30694[1] = 13
                                                          }else {
                                                            var statearr_30557_30695 = state_30495__$1;
                                                            statearr_30557_30695[1] = 14
                                                          }
                                                          return"\ufdd0:recur"
                                                        }catch(e30553) {
                                                          if(e30553 instanceof Error) {
                                                            var ex__5575__auto__ = e30553;
                                                            var statearr_30554_30696 = state_30495;
                                                            statearr_30554_30696[1] = 11;
                                                            statearr_30554_30696[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e30553;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }else {
                                                        if(state_val_30496 === 44) {
                                                          try {
                                                            var inst_30411 = state_30495[20];
                                                            var inst_30419 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                            var inst_30420 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                            var inst_30421 = cljs.core.cons.call(null, inst_30420, inst_30411);
                                                            var inst_30422 = cljs.core.list.call(null, inst_30419, inst_30421);
                                                            var inst_30423 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:chat", "user updated"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                            "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                            var inst_30424 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30422, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30423);
                                                            var inst_30425 = cemerick.cljs.test.do_report.call(null, inst_30424);
                                                            var state_30495__$1 = state_30495;
                                                            var statearr_30560_30697 = state_30495__$1;
                                                            statearr_30560_30697[2] = inst_30425;
                                                            statearr_30560_30697[1] = 45;
                                                            return"\ufdd0:recur"
                                                          }catch(e30558) {
                                                            if(e30558 instanceof Error) {
                                                              var ex__5575__auto__ = e30558;
                                                              var statearr_30559_30698 = state_30495;
                                                              statearr_30559_30698[1] = 40;
                                                              statearr_30559_30698[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e30558;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_30496 === 13) {
                                                            try {
                                                              var inst_30272 = state_30495[23];
                                                              var inst_30275 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30272);
                                                              var inst_30276 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Save", new cljs.core.Symbol(null, "text2", "text2", -1530275234, null));
                                                              var inst_30277 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30275, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30276);
                                                              var inst_30278 = cemerick.cljs.test.do_report.call(null, inst_30277);
                                                              var state_30495__$1 = state_30495;
                                                              var statearr_30563_30699 = state_30495__$1;
                                                              statearr_30563_30699[2] = inst_30278;
                                                              statearr_30563_30699[1] = 15;
                                                              return"\ufdd0:recur"
                                                            }catch(e30561) {
                                                              if(e30561 instanceof Error) {
                                                                var ex__5575__auto__ = e30561;
                                                                var statearr_30562_30700 = state_30495;
                                                                statearr_30562_30700[1] = 11;
                                                                statearr_30562_30700[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e30561;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_30496 === 45) {
                                                              try {
                                                                var inst_30412 = state_30495[21];
                                                                var inst_30427 = state_30495[2];
                                                                var state_30495__$1 = function() {
                                                                  var statearr_30566 = state_30495;
                                                                  statearr_30566[24] = inst_30427;
                                                                  return statearr_30566
                                                                }();
                                                                var statearr_30567_30701 = state_30495__$1;
                                                                statearr_30567_30701[2] = inst_30412;
                                                                statearr_30567_30701[1] = 39;
                                                                return"\ufdd0:recur"
                                                              }catch(e30564) {
                                                                if(e30564 instanceof Error) {
                                                                  var ex__5575__auto__ = e30564;
                                                                  var statearr_30565_30702 = state_30495;
                                                                  statearr_30565_30702[1] = 40;
                                                                  statearr_30565_30702[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e30564;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_30496 === 14) {
                                                                try {
                                                                  var inst_30272 = state_30495[23];
                                                                  var inst_30280 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                  var inst_30281 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                  var inst_30282 = cljs.core.cons.call(null, inst_30281, inst_30272);
                                                                  var inst_30283 = cljs.core.list.call(null, inst_30280, inst_30282);
                                                                  var inst_30284 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Save", new cljs.core.Symbol(null, "text2", "text2", -1530275234, null));
                                                                  var inst_30285 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30283, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30284);
                                                                  var inst_30286 = cemerick.cljs.test.do_report.call(null, inst_30285);
                                                                  var state_30495__$1 = state_30495;
                                                                  var statearr_30570_30703 = state_30495__$1;
                                                                  statearr_30570_30703[2] = inst_30286;
                                                                  statearr_30570_30703[1] = 15;
                                                                  return"\ufdd0:recur"
                                                                }catch(e30568) {
                                                                  if(e30568 instanceof Error) {
                                                                    var ex__5575__auto__ = e30568;
                                                                    var statearr_30569_30704 = state_30495;
                                                                    statearr_30569_30704[1] = 11;
                                                                    statearr_30569_30704[2] = ex__5575__auto__;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if("\ufdd0:else") {
                                                                      throw e30568;
                                                                    }else {
                                                                      return null
                                                                    }
                                                                  }
                                                                }
                                                              }else {
                                                                if(state_val_30496 === 46) {
                                                                  var inst_30431 = state_30495[2];
                                                                  var state_30495__$1 = function() {
                                                                    var statearr_30571 = state_30495;
                                                                    statearr_30571[25] = inst_30431;
                                                                    return statearr_30571
                                                                  }();
                                                                  var statearr_30572_30705 = state_30495__$1;
                                                                  statearr_30572_30705[2] = null;
                                                                  statearr_30572_30705[1] = 49;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if(state_val_30496 === 15) {
                                                                    try {
                                                                      var inst_30273 = state_30495[22];
                                                                      var inst_30288 = state_30495[2];
                                                                      var state_30495__$1 = function() {
                                                                        var statearr_30575 = state_30495;
                                                                        statearr_30575[26] = inst_30288;
                                                                        return statearr_30575
                                                                      }();
                                                                      var statearr_30576_30706 = state_30495__$1;
                                                                      statearr_30576_30706[2] = inst_30273;
                                                                      statearr_30576_30706[1] = 10;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e30573) {
                                                                      if(e30573 instanceof Error) {
                                                                        var ex__5575__auto__ = e30573;
                                                                        var statearr_30574_30707 = state_30495;
                                                                        statearr_30574_30707[1] = 11;
                                                                        statearr_30574_30707[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e30573;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_30496 === 47) {
                                                                      var inst_30462 = state_30495[2];
                                                                      var state_30495__$1 = function() {
                                                                        var statearr_30577 = state_30495;
                                                                        statearr_30577[27] = inst_30462;
                                                                        return statearr_30577
                                                                      }();
                                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30495__$1, 54, in_ch1, lo1)
                                                                    }else {
                                                                      if(state_val_30496 === 16) {
                                                                        var inst_30292 = state_30495[2];
                                                                        var inst_30293 = cljs.core.async.timeout.call(null, 100);
                                                                        var state_30495__$1 = function() {
                                                                          var statearr_30578 = state_30495;
                                                                          statearr_30578[28] = inst_30292;
                                                                          return statearr_30578
                                                                        }();
                                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30495__$1, 17, inst_30293)
                                                                      }else {
                                                                        if(state_val_30496 === 48) {
                                                                          var inst_30432 = state_30495[2];
                                                                          var inst_30433 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:login", "user created"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                                          "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                          var inst_30434 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30432, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30433);
                                                                          var inst_30435 = cemerick.cljs.test.do_report.call(null, inst_30434);
                                                                          var state_30495__$1 = state_30495;
                                                                          var statearr_30579_30708 = state_30495__$1;
                                                                          statearr_30579_30708[2] = inst_30435;
                                                                          statearr_30579_30708[1] = 47;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if(state_val_30496 === 17) {
                                                                            var inst_30295 = state_30495[2];
                                                                            var state_30495__$1 = function() {
                                                                              var statearr_30580 = state_30495;
                                                                              statearr_30580[29] = inst_30295;
                                                                              return statearr_30580
                                                                            }();
                                                                            var statearr_30581_30709 = state_30495__$1;
                                                                            statearr_30581_30709[2] = null;
                                                                            statearr_30581_30709[1] = 20;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if(state_val_30496 === 49) {
                                                                              try {
                                                                                var inst_30438 = chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:login", "user created");
                                                                                var inst_30439 = cljs.core.async.timeout.call(null, 100);
                                                                                var inst_30440 = cljs.core.vector.call(null, inst_30439, out_ch1);
                                                                                var state_30495__$1 = function() {
                                                                                  var statearr_30584 = state_30495;
                                                                                  statearr_30584[30] = inst_30438;
                                                                                  return statearr_30584
                                                                                }();
                                                                                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_30495__$1, 50, inst_30440)
                                                                              }catch(e30582) {
                                                                                if(e30582 instanceof Error) {
                                                                                  var ex__5575__auto__ = e30582;
                                                                                  var statearr_30583_30710 = state_30495;
                                                                                  statearr_30583_30710[1] = 48;
                                                                                  statearr_30583_30710[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e30582;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_30496 === 18) {
                                                                                var inst_30321 = state_30495[2];
                                                                                var inst_30322 = enfocus.core.set_prop.call(null, "\ufdd0:value", "F1");
                                                                                var inst_30323 = enfocus.core.set_prop.call(null, "\ufdd0:value", "l1");
                                                                                var inst_30324 = enfocus.core.set_prop.call(null, "\ufdd0:value", "i1");
                                                                                var inst_30325 = function() {
                                                                                  return function(inst_30321, inst_30322, inst_30323, inst_30324, state_val_30496) {
                                                                                    return function(p1__29800_SHARP_) {
                                                                                      return domina.events.dispatch_BANG_.call(null, p1__29800_SHARP_, "\ufdd0:click", cljs.core.PersistentArrayMap.EMPTY)
                                                                                    }
                                                                                  }(inst_30321, inst_30322, inst_30323, inst_30324, state_val_30496)
                                                                                }();
                                                                                var inst_30326 = enfocus.core.at.call(null, "#up-first", inst_30322, "#up-last", inst_30323, "#up-img-url", inst_30324, "#update-user-btn", inst_30325);
                                                                                var state_30495__$1 = function() {
                                                                                  var statearr_30585 = state_30495;
                                                                                  statearr_30585[31] = inst_30321;
                                                                                  statearr_30585[32] = inst_30326;
                                                                                  return statearr_30585
                                                                                }();
                                                                                var statearr_30586_30711 = state_30495__$1;
                                                                                statearr_30586_30711[2] = null;
                                                                                statearr_30586_30711[1] = 26;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_30496 === 50) {
                                                                                  try {
                                                                                    var inst_30444 = state_30495[33];
                                                                                    var inst_30445 = state_30495[34];
                                                                                    var inst_30438 = state_30495[30];
                                                                                    var inst_30442 = state_30495[2];
                                                                                    var inst_30443 = cljs.core.first.call(null, inst_30442);
                                                                                    var inst_30444__$1 = cljs.core.list.call(null, inst_30438, inst_30443);
                                                                                    var inst_30445__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30444__$1);
                                                                                    var state_30495__$1 = function() {
                                                                                      var statearr_30589 = state_30495;
                                                                                      statearr_30589[33] = inst_30444__$1;
                                                                                      statearr_30589[34] = inst_30445__$1;
                                                                                      return statearr_30589
                                                                                    }();
                                                                                    if(cljs.core.truth_(inst_30445__$1)) {
                                                                                      var statearr_30590_30712 = state_30495__$1;
                                                                                      statearr_30590_30712[1] = 51
                                                                                    }else {
                                                                                      var statearr_30591_30713 = state_30495__$1;
                                                                                      statearr_30591_30713[1] = 52
                                                                                    }
                                                                                    return"\ufdd0:recur"
                                                                                  }catch(e30587) {
                                                                                    if(e30587 instanceof Error) {
                                                                                      var ex__5575__auto__ = e30587;
                                                                                      var statearr_30588_30714 = state_30495;
                                                                                      statearr_30588_30714[1] = 48;
                                                                                      statearr_30588_30714[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e30587;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_30496 === 19) {
                                                                                    var inst_30296 = state_30495[2];
                                                                                    var inst_30297 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("u", "user", "u/user", -1636924780, null)));
                                                                                    var inst_30298 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30296, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30297);
                                                                                    var inst_30299 = cemerick.cljs.test.do_report.call(null, inst_30298);
                                                                                    var state_30495__$1 = state_30495;
                                                                                    var statearr_30592_30715 = state_30495__$1;
                                                                                    statearr_30592_30715[2] = inst_30299;
                                                                                    statearr_30592_30715[1] = 18;
                                                                                    return"\ufdd0:recur"
                                                                                  }else {
                                                                                    if(state_val_30496 === 51) {
                                                                                      try {
                                                                                        var inst_30444 = state_30495[33];
                                                                                        var inst_30447 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30444);
                                                                                        var inst_30448 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:login", "user created"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                                                        "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                        var inst_30449 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30447, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30448);
                                                                                        var inst_30450 = cemerick.cljs.test.do_report.call(null, inst_30449);
                                                                                        var state_30495__$1 = state_30495;
                                                                                        var statearr_30595_30716 = state_30495__$1;
                                                                                        statearr_30595_30716[2] = inst_30450;
                                                                                        statearr_30595_30716[1] = 53;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e30593) {
                                                                                        if(e30593 instanceof Error) {
                                                                                          var ex__5575__auto__ = e30593;
                                                                                          var statearr_30594_30717 = state_30495;
                                                                                          statearr_30594_30717[1] = 48;
                                                                                          statearr_30594_30717[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e30593;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_30496 === 20) {
                                                                                        try {
                                                                                          var inst_30304 = state_30495[35];
                                                                                          var inst_30303 = state_30495[36];
                                                                                          var inst_30302 = cljs.core.deref.call(null, chatter_box.user_view_component.user);
                                                                                          var inst_30303__$1 = cljs.core.list.call(null, user1, inst_30302);
                                                                                          var inst_30304__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30303__$1);
                                                                                          var state_30495__$1 = function() {
                                                                                            var statearr_30598 = state_30495;
                                                                                            statearr_30598[35] = inst_30304__$1;
                                                                                            statearr_30598[36] = inst_30303__$1;
                                                                                            return statearr_30598
                                                                                          }();
                                                                                          if(cljs.core.truth_(inst_30304__$1)) {
                                                                                            var statearr_30599_30718 = state_30495__$1;
                                                                                            statearr_30599_30718[1] = 21
                                                                                          }else {
                                                                                            var statearr_30600_30719 = state_30495__$1;
                                                                                            statearr_30600_30719[1] = 22
                                                                                          }
                                                                                          return"\ufdd0:recur"
                                                                                        }catch(e30596) {
                                                                                          if(e30596 instanceof Error) {
                                                                                            var ex__5575__auto__ = e30596;
                                                                                            var statearr_30597_30720 = state_30495;
                                                                                            statearr_30597_30720[1] = 19;
                                                                                            statearr_30597_30720[2] = ex__5575__auto__;
                                                                                            return"\ufdd0:recur"
                                                                                          }else {
                                                                                            if("\ufdd0:else") {
                                                                                              throw e30596;
                                                                                            }else {
                                                                                              return null
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }else {
                                                                                        if(state_val_30496 === 52) {
                                                                                          try {
                                                                                            var inst_30444 = state_30495[33];
                                                                                            var inst_30452 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                            var inst_30453 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                            var inst_30454 = cljs.core.cons.call(null, inst_30453, inst_30444);
                                                                                            var inst_30455 = cljs.core.list.call(null, inst_30452, inst_30454);
                                                                                            var inst_30456 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "create-message", "p/create-message", 1289379451, null), "\ufdd0:nav", "\ufdd0:login", "user created"), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, 
                                                                                            "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                            var inst_30457 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30455, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30456);
                                                                                            var inst_30458 = cemerick.cljs.test.do_report.call(null, inst_30457);
                                                                                            var state_30495__$1 = state_30495;
                                                                                            var statearr_30603_30721 = state_30495__$1;
                                                                                            statearr_30603_30721[2] = inst_30458;
                                                                                            statearr_30603_30721[1] = 53;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e30601) {
                                                                                            if(e30601 instanceof Error) {
                                                                                              var ex__5575__auto__ = e30601;
                                                                                              var statearr_30602_30722 = state_30495;
                                                                                              statearr_30602_30722[1] = 48;
                                                                                              statearr_30602_30722[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e30601;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_30496 === 21) {
                                                                                            try {
                                                                                              var inst_30303 = state_30495[36];
                                                                                              var inst_30306 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30303);
                                                                                              var inst_30307 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("u", "user", "u/user", -1636924780, null)));
                                                                                              var inst_30308 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30306, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30307);
                                                                                              var inst_30309 = cemerick.cljs.test.do_report.call(null, inst_30308);
                                                                                              var state_30495__$1 = state_30495;
                                                                                              var statearr_30606_30723 = state_30495__$1;
                                                                                              statearr_30606_30723[2] = inst_30309;
                                                                                              statearr_30606_30723[1] = 23;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e30604) {
                                                                                              if(e30604 instanceof Error) {
                                                                                                var ex__5575__auto__ = e30604;
                                                                                                var statearr_30605_30724 = state_30495;
                                                                                                statearr_30605_30724[1] = 19;
                                                                                                statearr_30605_30724[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e30604;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_30496 === 53) {
                                                                                              try {
                                                                                                var inst_30445 = state_30495[34];
                                                                                                var inst_30460 = state_30495[2];
                                                                                                var state_30495__$1 = function() {
                                                                                                  var statearr_30609 = state_30495;
                                                                                                  statearr_30609[37] = inst_30460;
                                                                                                  return statearr_30609
                                                                                                }();
                                                                                                var statearr_30610_30725 = state_30495__$1;
                                                                                                statearr_30610_30725[2] = inst_30445;
                                                                                                statearr_30610_30725[1] = 47;
                                                                                                return"\ufdd0:recur"
                                                                                              }catch(e30607) {
                                                                                                if(e30607 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e30607;
                                                                                                  var statearr_30608_30726 = state_30495;
                                                                                                  statearr_30608_30726[1] = 48;
                                                                                                  statearr_30608_30726[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e30607;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_30496 === 22) {
                                                                                                try {
                                                                                                  var inst_30303 = state_30495[36];
                                                                                                  var inst_30311 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                  var inst_30312 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                  var inst_30313 = cljs.core.cons.call(null, inst_30312, inst_30303);
                                                                                                  var inst_30314 = cljs.core.list.call(null, inst_30311, inst_30313);
                                                                                                  var inst_30315 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("u", "user", "u/user", -1636924780, null)));
                                                                                                  var inst_30316 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30314, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30315);
                                                                                                  var inst_30317 = cemerick.cljs.test.do_report.call(null, inst_30316);
                                                                                                  var state_30495__$1 = state_30495;
                                                                                                  var statearr_30613_30727 = state_30495__$1;
                                                                                                  statearr_30613_30727[2] = inst_30317;
                                                                                                  statearr_30613_30727[1] = 23;
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e30611) {
                                                                                                  if(e30611 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e30611;
                                                                                                    var statearr_30612_30728 = state_30495;
                                                                                                    statearr_30612_30728[1] = 19;
                                                                                                    statearr_30612_30728[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e30611;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }else {
                                                                                                if(state_val_30496 === 54) {
                                                                                                  var inst_30464 = state_30495[2];
                                                                                                  var inst_30465 = cljs.core.async.timeout.call(null, 100);
                                                                                                  var state_30495__$1 = function() {
                                                                                                    var statearr_30614 = state_30495;
                                                                                                    statearr_30614[38] = inst_30464;
                                                                                                    return statearr_30614
                                                                                                  }();
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_30495__$1, 55, inst_30465)
                                                                                                }else {
                                                                                                  if(state_val_30496 === 23) {
                                                                                                    try {
                                                                                                      var inst_30304 = state_30495[35];
                                                                                                      var inst_30319 = state_30495[2];
                                                                                                      var state_30495__$1 = function() {
                                                                                                        var statearr_30617 = state_30495;
                                                                                                        statearr_30617[39] = inst_30319;
                                                                                                        return statearr_30617
                                                                                                      }();
                                                                                                      var statearr_30618_30729 = state_30495__$1;
                                                                                                      statearr_30618_30729[2] = inst_30304;
                                                                                                      statearr_30618_30729[1] = 18;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }catch(e30615) {
                                                                                                      if(e30615 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e30615;
                                                                                                        var statearr_30616_30730 = state_30495;
                                                                                                        statearr_30616_30730[1] = 19;
                                                                                                        statearr_30616_30730[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e30615;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_30496 === 55) {
                                                                                                      var inst_30467 = state_30495[2];
                                                                                                      var state_30495__$1 = function() {
                                                                                                        var statearr_30619 = state_30495;
                                                                                                        statearr_30619[40] = inst_30467;
                                                                                                        return statearr_30619
                                                                                                      }();
                                                                                                      var statearr_30620_30731 = state_30495__$1;
                                                                                                      statearr_30620_30731[2] = null;
                                                                                                      statearr_30620_30731[1] = 58;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if(state_val_30496 === 24) {
                                                                                                        var inst_30358 = state_30495[2];
                                                                                                        var inst_30359 = enfocus.core.set_prop.call(null, "\ufdd0:value", "u1");
                                                                                                        var inst_30360 = enfocus.core.set_prop.call(null, "\ufdd0:value", "p1");
                                                                                                        var inst_30361 = enfocus.core.set_prop.call(null, "\ufdd0:value", "p1");
                                                                                                        var inst_30362 = enfocus.core.set_prop.call(null, "\ufdd0:value", "f1");
                                                                                                        var inst_30363 = enfocus.core.set_prop.call(null, "\ufdd0:value", "l1");
                                                                                                        var inst_30364 = enfocus.core.set_prop.call(null, "\ufdd0:value", "i1");
                                                                                                        var inst_30365 = function() {
                                                                                                          return function(inst_30358, inst_30359, inst_30360, inst_30361, inst_30362, inst_30363, inst_30364, state_val_30496) {
                                                                                                            return function(p1__29801_SHARP_) {
                                                                                                              return domina.events.dispatch_BANG_.call(null, p1__29801_SHARP_, "\ufdd0:click", cljs.core.PersistentArrayMap.EMPTY)
                                                                                                            }
                                                                                                          }(inst_30358, inst_30359, inst_30360, inst_30361, inst_30362, inst_30363, inst_30364, state_val_30496)
                                                                                                        }();
                                                                                                        var inst_30366 = enfocus.core.at.call(null, "#cr-username", inst_30359, "#cr-password", inst_30360, "#cr-password2", inst_30361, "#cr-first", inst_30362, "#cr-last", inst_30363, "#cr-img-url", inst_30364, "#create-user-btn", inst_30365);
                                                                                                        var state_30495__$1 = function() {
                                                                                                          var statearr_30621 = state_30495;
                                                                                                          statearr_30621[41] = inst_30366;
                                                                                                          statearr_30621[42] = inst_30358;
                                                                                                          return statearr_30621
                                                                                                        }();
                                                                                                        var statearr_30622_30732 = state_30495__$1;
                                                                                                        statearr_30622_30732[2] = null;
                                                                                                        statearr_30622_30732[1] = 33;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if(state_val_30496 === 56) {
                                                                                                          var inst_30493 = state_30495[2];
                                                                                                          var state_30495__$1 = state_30495;
                                                                                                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30495__$1, inst_30493)
                                                                                                        }else {
                                                                                                          if(state_val_30496 === 25) {
                                                                                                            var inst_30327 = state_30495[2];
                                                                                                            var inst_30328 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "update-user-message", "p/update-user-message", -1570921426, null), cljs.core.list(new cljs.core.Symbol(null, "assoc", "assoc", -1547409970, null), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null), "\ufdd0:first", "F1")), cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                            "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                                            var inst_30329 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30327, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30328);
                                                                                                            var inst_30330 = cemerick.cljs.test.do_report.call(null, inst_30329);
                                                                                                            var state_30495__$1 = state_30495;
                                                                                                            var statearr_30623_30733 = state_30495__$1;
                                                                                                            statearr_30623_30733[2] = inst_30330;
                                                                                                            statearr_30623_30733[1] = 24;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if(state_val_30496 === 57) {
                                                                                                              var inst_30468 = state_30495[2];
                                                                                                              var inst_30469 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("u", "user", "u/user", -1636924780, null)));
                                                                                                              var inst_30470 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30468, "\ufdd0:type", "\ufdd0:error", "\ufdd0:message", null, "\ufdd0:expected", inst_30469);
                                                                                                              var inst_30471 = cemerick.cljs.test.do_report.call(null, inst_30470);
                                                                                                              var state_30495__$1 = state_30495;
                                                                                                              var statearr_30624_30734 = state_30495__$1;
                                                                                                              statearr_30624_30734[2] = inst_30471;
                                                                                                              statearr_30624_30734[1] = 56;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if(state_val_30496 === 26) {
                                                                                                                try {
                                                                                                                  var inst_30333 = cljs.core.assoc.call(null, user1, "\ufdd0:first", "F1");
                                                                                                                  var inst_30334 = chatter_box.protocol.update_user_message.call(null, inst_30333);
                                                                                                                  var inst_30335 = cljs.core.async.timeout.call(null, 100);
                                                                                                                  var inst_30336 = cljs.core.vector.call(null, inst_30335, out_ch1);
                                                                                                                  var state_30495__$1 = function() {
                                                                                                                    var statearr_30627 = state_30495;
                                                                                                                    statearr_30627[43] = inst_30334;
                                                                                                                    return statearr_30627
                                                                                                                  }();
                                                                                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_30495__$1, 27, inst_30336)
                                                                                                                }catch(e30625) {
                                                                                                                  if(e30625 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e30625;
                                                                                                                    var statearr_30626_30735 = state_30495;
                                                                                                                    statearr_30626_30735[1] = 25;
                                                                                                                    statearr_30626_30735[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e30625;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }else {
                                                                                                                if(state_val_30496 === 58) {
                                                                                                                  try {
                                                                                                                    var inst_30475 = state_30495[44];
                                                                                                                    var inst_30476 = state_30495[45];
                                                                                                                    var inst_30474 = cljs.core.deref.call(null, chatter_box.user_view_component.user);
                                                                                                                    var inst_30475__$1 = cljs.core.list.call(null, null, inst_30474);
                                                                                                                    var inst_30476__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30475__$1);
                                                                                                                    var state_30495__$1 = function() {
                                                                                                                      var statearr_30630 = state_30495;
                                                                                                                      statearr_30630[44] = inst_30475__$1;
                                                                                                                      statearr_30630[45] = inst_30476__$1;
                                                                                                                      return statearr_30630
                                                                                                                    }();
                                                                                                                    if(cljs.core.truth_(inst_30476__$1)) {
                                                                                                                      var statearr_30631_30736 = state_30495__$1;
                                                                                                                      statearr_30631_30736[1] = 59
                                                                                                                    }else {
                                                                                                                      var statearr_30632_30737 = state_30495__$1;
                                                                                                                      statearr_30632_30737[1] = 60
                                                                                                                    }
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e30628) {
                                                                                                                    if(e30628 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e30628;
                                                                                                                      var statearr_30629_30738 = state_30495;
                                                                                                                      statearr_30629_30738[1] = 57;
                                                                                                                      statearr_30629_30738[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e30628;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_30496 === 27) {
                                                                                                                    try {
                                                                                                                      var inst_30341 = state_30495[46];
                                                                                                                      var inst_30334 = state_30495[43];
                                                                                                                      var inst_30340 = state_30495[47];
                                                                                                                      var inst_30338 = state_30495[2];
                                                                                                                      var inst_30339 = cljs.core.first.call(null, inst_30338);
                                                                                                                      var inst_30340__$1 = cljs.core.list.call(null, inst_30334, inst_30339);
                                                                                                                      var inst_30341__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_30340__$1);
                                                                                                                      var state_30495__$1 = function() {
                                                                                                                        var statearr_30635 = state_30495;
                                                                                                                        statearr_30635[46] = inst_30341__$1;
                                                                                                                        statearr_30635[47] = inst_30340__$1;
                                                                                                                        return statearr_30635
                                                                                                                      }();
                                                                                                                      if(cljs.core.truth_(inst_30341__$1)) {
                                                                                                                        var statearr_30636_30739 = state_30495__$1;
                                                                                                                        statearr_30636_30739[1] = 28
                                                                                                                      }else {
                                                                                                                        var statearr_30637_30740 = state_30495__$1;
                                                                                                                        statearr_30637_30740[1] = 29
                                                                                                                      }
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }catch(e30633) {
                                                                                                                      if(e30633 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e30633;
                                                                                                                        var statearr_30634_30741 = state_30495;
                                                                                                                        statearr_30634_30741[1] = 25;
                                                                                                                        statearr_30634_30741[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e30633;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_30496 === 59) {
                                                                                                                      try {
                                                                                                                        var inst_30475 = state_30495[44];
                                                                                                                        var inst_30478 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30475);
                                                                                                                        var inst_30479 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("u", "user", "u/user", -1636924780, null)));
                                                                                                                        var inst_30480 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30478, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30479);
                                                                                                                        var inst_30481 = cemerick.cljs.test.do_report.call(null, inst_30480);
                                                                                                                        var state_30495__$1 = state_30495;
                                                                                                                        var statearr_30640_30742 = state_30495__$1;
                                                                                                                        statearr_30640_30742[2] = inst_30481;
                                                                                                                        statearr_30640_30742[1] = 61;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e30638) {
                                                                                                                        if(e30638 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e30638;
                                                                                                                          var statearr_30639_30743 = state_30495;
                                                                                                                          statearr_30639_30743[1] = 57;
                                                                                                                          statearr_30639_30743[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e30638;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_30496 === 28) {
                                                                                                                        try {
                                                                                                                          var inst_30340 = state_30495[47];
                                                                                                                          var inst_30343 = cljs.core.cons.call(null, cljs.core._EQ_, inst_30340);
                                                                                                                          var inst_30344 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "update-user-message", "p/update-user-message", -1570921426, null), cljs.core.list(new cljs.core.Symbol(null, "assoc", "assoc", -1547409970, null), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null), "\ufdd0:first", "F1")), cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                          "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                                                          var inst_30345 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30343, "\ufdd0:type", "\ufdd0:pass", "\ufdd0:message", null, "\ufdd0:expected", inst_30344);
                                                                                                                          var inst_30346 = cemerick.cljs.test.do_report.call(null, inst_30345);
                                                                                                                          var state_30495__$1 = state_30495;
                                                                                                                          var statearr_30643_30744 = state_30495__$1;
                                                                                                                          statearr_30643_30744[2] = inst_30346;
                                                                                                                          statearr_30643_30744[1] = 30;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e30641) {
                                                                                                                          if(e30641 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e30641;
                                                                                                                            var statearr_30642_30745 = state_30495;
                                                                                                                            statearr_30642_30745[1] = 25;
                                                                                                                            statearr_30642_30745[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e30641;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }else {
                                                                                                                        if(state_val_30496 === 60) {
                                                                                                                          try {
                                                                                                                            var inst_30475 = state_30495[44];
                                                                                                                            var inst_30483 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                            var inst_30484 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                            var inst_30485 = cljs.core.cons.call(null, inst_30484, inst_30475);
                                                                                                                            var inst_30486 = cljs.core.list.call(null, inst_30483, inst_30485);
                                                                                                                            var inst_30487 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), null, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol("u", "user", "u/user", -1636924780, null)));
                                                                                                                            var inst_30488 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30486, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30487);
                                                                                                                            var inst_30489 = cemerick.cljs.test.do_report.call(null, inst_30488);
                                                                                                                            var state_30495__$1 = state_30495;
                                                                                                                            var statearr_30646_30746 = state_30495__$1;
                                                                                                                            statearr_30646_30746[2] = inst_30489;
                                                                                                                            statearr_30646_30746[1] = 61;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e30644) {
                                                                                                                            if(e30644 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e30644;
                                                                                                                              var statearr_30645_30747 = state_30495;
                                                                                                                              statearr_30645_30747[1] = 57;
                                                                                                                              statearr_30645_30747[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e30644;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_30496 === 29) {
                                                                                                                            try {
                                                                                                                              var inst_30340 = state_30495[47];
                                                                                                                              var inst_30348 = new cljs.core.Symbol(null, "not", "not", -1640422260, null);
                                                                                                                              var inst_30349 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null);
                                                                                                                              var inst_30350 = cljs.core.cons.call(null, inst_30349, inst_30340);
                                                                                                                              var inst_30351 = cljs.core.list.call(null, inst_30348, inst_30350);
                                                                                                                              var inst_30352 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol("p", "update-user-message", "p/update-user-message", -1570921426, null), cljs.core.list(new cljs.core.Symbol(null, "assoc", "assoc", -1547409970, null), new cljs.core.Symbol(null, "user1", "user1", -1528952961, null), "\ufdd0:first", "F1")), cljs.core.list(new cljs.core.Symbol(null, 
                                                                                                                              "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "alts!", "alts!", -1547617488, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "timeout", "timeout", 1340524314, null), 100), new cljs.core.Symbol(null, "out-ch1", "out-ch1", 1546307366, null)], true))));
                                                                                                                              var inst_30353 = cljs.core.hash_map.call(null, "\ufdd0:actual", inst_30351, "\ufdd0:type", "\ufdd0:fail", "\ufdd0:message", null, "\ufdd0:expected", inst_30352);
                                                                                                                              var inst_30354 = cemerick.cljs.test.do_report.call(null, inst_30353);
                                                                                                                              var state_30495__$1 = state_30495;
                                                                                                                              var statearr_30649_30748 = state_30495__$1;
                                                                                                                              statearr_30649_30748[2] = inst_30354;
                                                                                                                              statearr_30649_30748[1] = 30;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }catch(e30647) {
                                                                                                                              if(e30647 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e30647;
                                                                                                                                var statearr_30648_30749 = state_30495;
                                                                                                                                statearr_30648_30749[1] = 25;
                                                                                                                                statearr_30648_30749[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e30647;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_30496 === 61) {
                                                                                                                              try {
                                                                                                                                var inst_30476 = state_30495[45];
                                                                                                                                var inst_30491 = state_30495[2];
                                                                                                                                var state_30495__$1 = function() {
                                                                                                                                  var statearr_30652 = state_30495;
                                                                                                                                  statearr_30652[48] = inst_30491;
                                                                                                                                  return statearr_30652
                                                                                                                                }();
                                                                                                                                var statearr_30653_30750 = state_30495__$1;
                                                                                                                                statearr_30653_30750[2] = inst_30476;
                                                                                                                                statearr_30653_30750[1] = 56;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e30650) {
                                                                                                                                if(e30650 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e30650;
                                                                                                                                  var statearr_30651_30751 = state_30495;
                                                                                                                                  statearr_30651_30751[1] = 57;
                                                                                                                                  statearr_30651_30751[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e30650;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_30496 === 30) {
                                                                                                                                try {
                                                                                                                                  var inst_30341 = state_30495[46];
                                                                                                                                  var inst_30356 = state_30495[2];
                                                                                                                                  var state_30495__$1 = function() {
                                                                                                                                    var statearr_30656 = state_30495;
                                                                                                                                    statearr_30656[49] = inst_30356;
                                                                                                                                    return statearr_30656
                                                                                                                                  }();
                                                                                                                                  var statearr_30657_30752 = state_30495__$1;
                                                                                                                                  statearr_30657_30752[2] = inst_30341;
                                                                                                                                  statearr_30657_30752[1] = 24;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e30654) {
                                                                                                                                  if(e30654 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e30654;
                                                                                                                                    var statearr_30655_30753 = state_30495;
                                                                                                                                    statearr_30655_30753[1] = 25;
                                                                                                                                    statearr_30655_30753[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e30654;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }else {
                                                                                                                                if(state_val_30496 === 31) {
                                                                                                                                  var inst_30396 = state_30495[2];
                                                                                                                                  var state_30495__$1 = function() {
                                                                                                                                    var statearr_30658 = state_30495;
                                                                                                                                    statearr_30658[50] = inst_30396;
                                                                                                                                    return statearr_30658
                                                                                                                                  }();
                                                                                                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_30495__$1, 38, in_ch1, up1)
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_30660 = new Array(51);
            statearr_30660[0] = state_machine__5582__auto__;
            statearr_30660[1] = 1;
            return statearr_30660
          };
          var state_machine__5582__auto____1 = function(state_30495) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_30495);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_30495) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_30495)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_30661 = f__5654__auto__.call(null);
      statearr_30661[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_30661
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "chatter-box.user-view-test", "chatter-box.user-view-test", -1077785096, null), chatter_box.user_view_test.basic_test);
