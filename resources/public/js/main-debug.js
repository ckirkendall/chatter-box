var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:flush-on-newline", cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0:readably", cljs.core._STAR_print_readably_STAR_, "\ufdd0:meta", cljs.core._STAR_print_meta_STAR_, "\ufdd0:dup", cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0:else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__12203__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__12203 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12203__delegate.call(this, array, i, idxs)
    };
    G__12203.cljs$lang$maxFixedArity = 2;
    G__12203.cljs$lang$applyTo = function(arglist__12204) {
      var array = cljs.core.first(arglist__12204);
      arglist__12204 = cljs.core.next(arglist__12204);
      var i = cljs.core.first(arglist__12204);
      var idxs = cljs.core.rest(arglist__12204);
      return G__12203__delegate(array, i, idxs)
    };
    G__12203.cljs$core$IFn$_invoke$arity$variadic = G__12203__delegate;
    return G__12203
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__12205__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__12205 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12205__delegate.call(this, array, idx, idx2, idxv)
    };
    G__12205.cljs$lang$maxFixedArity = 3;
    G__12205.cljs$lang$applyTo = function(arglist__12206) {
      var array = cljs.core.first(arglist__12206);
      arglist__12206 = cljs.core.next(arglist__12206);
      var idx = cljs.core.first(arglist__12206);
      arglist__12206 = cljs.core.next(arglist__12206);
      var idx2 = cljs.core.first(arglist__12206);
      var idxv = cljs.core.rest(arglist__12206);
      return G__12205__delegate(array, idx, idx2, idxv)
    };
    G__12205.cljs$core$IFn$_invoke$arity$variadic = G__12205__delegate;
    return G__12205
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3370__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3370__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3370__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3370__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3370__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3191__auto__ = self__._hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__12208 = null;
  var G__12208__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__12208__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__12208 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12208__2.call(this, self__, coll);
      case 3:
        return G__12208__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12208
}();
cljs.core.Symbol.prototype.apply = function(self__, args12207) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12207.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12210 = coll;
      if(G__12210) {
        if(function() {
          var or__3943__auto__ = G__12210.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12210.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if("\ufdd0:else") {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12212 = coll;
      if(G__12212) {
        if(function() {
          var or__3943__auto__ = G__12212.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12212.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12214 = coll;
      if(G__12214) {
        if(function() {
          var or__3943__auto__ = G__12214.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12214.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12216 = coll;
      if(G__12216) {
        if(function() {
          var or__3943__auto__ = G__12216.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12216.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__12217__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12218 = y;
            var G__12219 = cljs.core.first.call(null, more);
            var G__12220 = cljs.core.next.call(null, more);
            x = G__12218;
            y = G__12219;
            more = G__12220;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12217 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12217__delegate.call(this, x, y, more)
    };
    G__12217.cljs$lang$maxFixedArity = 2;
    G__12217.cljs$lang$applyTo = function(arglist__12221) {
      var x = cljs.core.first(arglist__12221);
      arglist__12221 = cljs.core.next(arglist__12221);
      var y = cljs.core.first(arglist__12221);
      var more = cljs.core.rest(arglist__12221);
      return G__12217__delegate(x, y, more)
    };
    G__12217.cljs$core$IFn$_invoke$arity$variadic = G__12217__delegate;
    return G__12217
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__12222 = nval;
            var G__12223 = n + 1;
            val = G__12222;
            n = G__12223;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12224 = nval;
          var G__12225 = n + 1;
          val__$1 = G__12224;
          n = G__12225;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12226 = nval;
          var G__12227 = n + 1;
          val__$1 = G__12226;
          n = G__12227;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__12228 = nval;
            var G__12229 = n + 1;
            val = G__12228;
            n = G__12229;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12230 = nval;
          var G__12231 = n + 1;
          val__$1 = G__12230;
          n = G__12231;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12232 = nval;
          var G__12233 = n + 1;
          val__$1 = G__12232;
          n = G__12233;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__12235 = x;
  if(G__12235) {
    if(function() {
      var or__3943__auto__ = G__12235.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12235.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__12235.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12235)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12235)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__12237 = x;
  if(G__12237) {
    if(function() {
      var or__3943__auto__ = G__12237.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12237.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__12237.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12237)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12237)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function(col, f) {
  return cljs.core.array_reduce.call(null, col, f)
};
cljs.core._reduce["array"] = function(col, f, start) {
  return cljs.core.array_reduce.call(null, col, f, start)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__12238 = sn;
      s = G__12238;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__12239__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__12240 = conj.call(null, coll, x);
          var G__12241 = cljs.core.first.call(null, xs);
          var G__12242 = cljs.core.next.call(null, xs);
          coll = G__12240;
          x = G__12241;
          xs = G__12242;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__12239 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12239__delegate.call(this, coll, x, xs)
    };
    G__12239.cljs$lang$maxFixedArity = 2;
    G__12239.cljs$lang$applyTo = function(arglist__12243) {
      var coll = cljs.core.first(arglist__12243);
      arglist__12243 = cljs.core.next(arglist__12243);
      var x = cljs.core.first(arglist__12243);
      var xs = cljs.core.rest(arglist__12243);
      return G__12239__delegate(coll, x, xs)
    };
    G__12239.cljs$core$IFn$_invoke$arity$variadic = G__12239__delegate;
    return G__12239
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__12244 = cljs.core.next.call(null, s);
      var G__12245 = acc + 1;
      s = G__12244;
      acc = G__12245;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12247 = coll;
      if(G__12247) {
        if(function() {
          var or__3943__auto__ = G__12247.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12247.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if("\ufdd0:else") {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__12248 = cljs.core.next.call(null, coll);
              var G__12249 = n - 1;
              coll = G__12248;
              n = G__12249;
              continue
            }else {
              if("\ufdd0:else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__12250 = cljs.core.next.call(null, coll);
              var G__12251 = n - 1;
              var G__12252 = not_found;
              coll = G__12250;
              n = G__12251;
              not_found = G__12252;
              continue
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12257 = coll;
        if(G__12257) {
          if(function() {
            var or__3943__auto__ = G__12257.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12257.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if("\ufdd0:else") {
                if(function() {
                  var G__12258 = coll;
                  if(G__12258) {
                    if(function() {
                      var or__3943__auto__ = G__12258.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__12258.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__12258.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12258)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12258)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__12259 = coll;
        if(G__12259) {
          if(function() {
            var or__3943__auto__ = G__12259.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12259.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if("\ufdd0:else") {
                if(function() {
                  var G__12260 = coll;
                  if(G__12260) {
                    if(function() {
                      var or__3943__auto__ = G__12260.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__12260.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__12260.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12260)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12260)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__12263 = o;
        if(G__12263) {
          if(function() {
            var or__3943__auto__ = G__12263.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12263.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if("\ufdd0:else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__12264 = o;
        if(G__12264) {
          if(function() {
            var or__3943__auto__ = G__12264.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12264.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__12265__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__12266 = ret;
          var G__12267 = cljs.core.first.call(null, kvs);
          var G__12268 = cljs.core.second.call(null, kvs);
          var G__12269 = cljs.core.nnext.call(null, kvs);
          coll = G__12266;
          k = G__12267;
          v = G__12268;
          kvs = G__12269;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__12265 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12265__delegate.call(this, coll, k, v, kvs)
    };
    G__12265.cljs$lang$maxFixedArity = 3;
    G__12265.cljs$lang$applyTo = function(arglist__12270) {
      var coll = cljs.core.first(arglist__12270);
      arglist__12270 = cljs.core.next(arglist__12270);
      var k = cljs.core.first(arglist__12270);
      arglist__12270 = cljs.core.next(arglist__12270);
      var v = cljs.core.first(arglist__12270);
      var kvs = cljs.core.rest(arglist__12270);
      return G__12265__delegate(coll, k, v, kvs)
    };
    G__12265.cljs$core$IFn$_invoke$arity$variadic = G__12265__delegate;
    return G__12265
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__12271__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12272 = ret;
          var G__12273 = cljs.core.first.call(null, ks);
          var G__12274 = cljs.core.next.call(null, ks);
          coll = G__12272;
          k = G__12273;
          ks = G__12274;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__12271 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12271__delegate.call(this, coll, k, ks)
    };
    G__12271.cljs$lang$maxFixedArity = 2;
    G__12271.cljs$lang$applyTo = function(arglist__12275) {
      var coll = cljs.core.first(arglist__12275);
      arglist__12275 = cljs.core.next(arglist__12275);
      var k = cljs.core.first(arglist__12275);
      var ks = cljs.core.rest(arglist__12275);
      return G__12271__delegate(coll, k, ks)
    };
    G__12271.cljs$core$IFn$_invoke$arity$variadic = G__12271__delegate;
    return G__12271
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__12277 = f;
    if(G__12277) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__12277.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__12277.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__12277)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__12277)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__12283 = o;
        if(G__12283) {
          if(function() {
            var or__3943__auto__ = G__12283.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12283.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__12283.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12283)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12283)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t12284 !== "undefined") {
      }else {
        goog.provide("cljs.core.t12284");
        cljs.core.t12284 = function(meta, o, with_meta, meta12285) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta12285 = meta12285;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t12284.cljs$lang$type = true;
        cljs.core.t12284.cljs$lang$ctorStr = "cljs.core/t12284";
        cljs.core.t12284.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
          return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/t12284")
        };
        cljs.core.t12284.prototype.call = function() {
          var G__12288__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__12288 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__12288__delegate.call(this, self__, args)
          };
          G__12288.cljs$lang$maxFixedArity = 1;
          G__12288.cljs$lang$applyTo = function(arglist__12289) {
            var self__ = cljs.core.first(arglist__12289);
            var args = cljs.core.rest(arglist__12289);
            return G__12288__delegate(self__, args)
          };
          G__12288.cljs$core$IFn$_invoke$arity$variadic = G__12288__delegate;
          return G__12288
        }();
        cljs.core.t12284.prototype.apply = function(self__, args12287) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args12287.slice()))
        };
        cljs.core.t12284.prototype.cljs$core$Fn$ = true;
        cljs.core.t12284.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12286) {
          var self__ = this;
          return self__.meta12285
        };
        cljs.core.t12284.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12286, meta12285__$1) {
          var self__ = this;
          return new cljs.core.t12284(self__.meta, self__.o, self__.with_meta, meta12285__$1)
        };
        cljs.core.__GT_t12284 = function __GT_t12284(meta__$1, o__$1, with_meta__$1, meta12285) {
          return new cljs.core.t12284(meta__$1, o__$1, with_meta__$1, meta12285)
        }
      }
      return new cljs.core.t12284(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__12291 = o;
    if(G__12291) {
      if(function() {
        var or__3943__auto__ = G__12291.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12291.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12291.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12291)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12291)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__12292__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12293 = ret;
          var G__12294 = cljs.core.first.call(null, ks);
          var G__12295 = cljs.core.next.call(null, ks);
          coll = G__12293;
          k = G__12294;
          ks = G__12295;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__12292 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12292__delegate.call(this, coll, k, ks)
    };
    G__12292.cljs$lang$maxFixedArity = 2;
    G__12292.cljs$lang$applyTo = function(arglist__12296) {
      var coll = cljs.core.first(arglist__12296);
      arglist__12296 = cljs.core.next(arglist__12296);
      var k = cljs.core.first(arglist__12296);
      var ks = cljs.core.rest(arglist__12296);
      return G__12292__delegate(coll, k, ks)
    };
    G__12292.cljs$core$IFn$_invoke$arity$variadic = G__12292__delegate;
    return G__12292
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12298 = x;
    if(G__12298) {
      if(function() {
        var or__3943__auto__ = G__12298.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12298.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__12298.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12298)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12298)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12300 = x;
    if(G__12300) {
      if(function() {
        var or__3943__auto__ = G__12300.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12300.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__12300.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12300)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12300)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12302 = x;
  if(G__12302) {
    if(function() {
      var or__3943__auto__ = G__12302.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12302.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__12302.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12302)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12302)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12304 = x;
  if(G__12304) {
    if(function() {
      var or__3943__auto__ = G__12304.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12304.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__12304.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12304)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12304)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12306 = x;
  if(G__12306) {
    if(function() {
      var or__3943__auto__ = G__12306.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12306.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__12306.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12306)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12306)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12308 = x;
    if(G__12308) {
      if(function() {
        var or__3943__auto__ = G__12308.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12308.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__12308.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12308)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12308)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12310 = x;
  if(G__12310) {
    if(function() {
      var or__3943__auto__ = G__12310.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12310.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__12310.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12310)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12310)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12312 = x;
  if(G__12312) {
    if(function() {
      var or__3943__auto__ = G__12312.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12312.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__12313__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__12313 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12313__delegate.call(this, keyvals)
    };
    G__12313.cljs$lang$maxFixedArity = 0;
    G__12313.cljs$lang$applyTo = function(arglist__12314) {
      var keyvals = cljs.core.seq(arglist__12314);
      return G__12313__delegate(keyvals)
    };
    G__12313.cljs$core$IFn$_invoke$arity$variadic = G__12313__delegate;
    return G__12313
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__12315 = i__$1 + 1;
      var G__12316 = j__$1 + 1;
      var G__12317 = len__$1 - 1;
      i__$1 = G__12315;
      j__$1 = G__12316;
      len__$1 = G__12317;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__12318 = i__$1 - 1;
      var G__12319 = j__$1 - 1;
      var G__12320 = len__$1 - 1;
      i__$1 = G__12318;
      j__$1 = G__12319;
      len__$1 = G__12320;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__12322 = s;
    if(G__12322) {
      if(function() {
        var or__3943__auto__ = G__12322.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12322.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__12322.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12322)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12322)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12324 = s;
  if(G__12324) {
    if(function() {
      var or__3943__auto__ = G__12324.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12324.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__12324.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12324)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12324)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto__
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__12326 = f;
    if(G__12326) {
      if(function() {
        var or__3943__auto____$1 = G__12326.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__12326.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__12326.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12326)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12326)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__12327__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__12328 = cljs.core.conj.call(null, s, x__$1);
              var G__12329 = etc;
              s = G__12328;
              xs = G__12329;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__12327 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12327__delegate.call(this, x, y, more)
    };
    G__12327.cljs$lang$maxFixedArity = 2;
    G__12327.cljs$lang$applyTo = function(arglist__12330) {
      var x = cljs.core.first(arglist__12330);
      arglist__12330 = cljs.core.next(arglist__12330);
      var y = cljs.core.first(arglist__12330);
      var more = cljs.core.rest(arglist__12330);
      return G__12327__delegate(x, y, more)
    };
    G__12327.cljs$core$IFn$_invoke$arity$variadic = G__12327__delegate;
    return G__12327
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__12332 = x;
            if(G__12332) {
              if(function() {
                var or__3943__auto__ = G__12332.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__12332.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0:else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if("\ufdd0:else") {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__12333 = xs;
        var G__12334 = ys;
        var G__12335 = len;
        var G__12336 = n + 1;
        xs = G__12333;
        ys = G__12334;
        len = G__12335;
        n = G__12336;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12337 = nval;
          var G__12338 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__12337;
          coll__$1 = G__12338;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__12341 = coll;
      if(G__12341) {
        if(function() {
          var or__3943__auto__ = G__12341.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12341.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__12342 = coll;
      if(G__12342) {
        if(function() {
          var or__3943__auto__ = G__12342.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12342.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__12343__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__12343 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12343__delegate.call(this, x, y, more)
    };
    G__12343.cljs$lang$maxFixedArity = 2;
    G__12343.cljs$lang$applyTo = function(arglist__12344) {
      var x = cljs.core.first(arglist__12344);
      arglist__12344 = cljs.core.next(arglist__12344);
      var y = cljs.core.first(arglist__12344);
      var more = cljs.core.rest(arglist__12344);
      return G__12343__delegate(x, y, more)
    };
    G__12343.cljs$core$IFn$_invoke$arity$variadic = G__12343__delegate;
    return G__12343
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__12345__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__12345 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12345__delegate.call(this, x, y, more)
    };
    G__12345.cljs$lang$maxFixedArity = 2;
    G__12345.cljs$lang$applyTo = function(arglist__12346) {
      var x = cljs.core.first(arglist__12346);
      arglist__12346 = cljs.core.next(arglist__12346);
      var y = cljs.core.first(arglist__12346);
      var more = cljs.core.rest(arglist__12346);
      return G__12345__delegate(x, y, more)
    };
    G__12345.cljs$core$IFn$_invoke$arity$variadic = G__12345__delegate;
    return G__12345
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__12347__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__12347 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12347__delegate.call(this, x, y, more)
    };
    G__12347.cljs$lang$maxFixedArity = 2;
    G__12347.cljs$lang$applyTo = function(arglist__12348) {
      var x = cljs.core.first(arglist__12348);
      arglist__12348 = cljs.core.next(arglist__12348);
      var y = cljs.core.first(arglist__12348);
      var more = cljs.core.rest(arglist__12348);
      return G__12347__delegate(x, y, more)
    };
    G__12347.cljs$core$IFn$_invoke$arity$variadic = G__12347__delegate;
    return G__12347
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__12349__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__12349 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12349__delegate.call(this, x, y, more)
    };
    G__12349.cljs$lang$maxFixedArity = 2;
    G__12349.cljs$lang$applyTo = function(arglist__12350) {
      var x = cljs.core.first(arglist__12350);
      arglist__12350 = cljs.core.next(arglist__12350);
      var y = cljs.core.first(arglist__12350);
      var more = cljs.core.rest(arglist__12350);
      return G__12349__delegate(x, y, more)
    };
    G__12349.cljs$core$IFn$_invoke$arity$variadic = G__12349__delegate;
    return G__12349
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__12351__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__12352 = y;
            var G__12353 = cljs.core.first.call(null, more);
            var G__12354 = cljs.core.next.call(null, more);
            x = G__12352;
            y = G__12353;
            more = G__12354;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12351 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12351__delegate.call(this, x, y, more)
    };
    G__12351.cljs$lang$maxFixedArity = 2;
    G__12351.cljs$lang$applyTo = function(arglist__12355) {
      var x = cljs.core.first(arglist__12355);
      arglist__12355 = cljs.core.next(arglist__12355);
      var y = cljs.core.first(arglist__12355);
      var more = cljs.core.rest(arglist__12355);
      return G__12351__delegate(x, y, more)
    };
    G__12351.cljs$core$IFn$_invoke$arity$variadic = G__12351__delegate;
    return G__12351
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__12356__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12357 = y;
            var G__12358 = cljs.core.first.call(null, more);
            var G__12359 = cljs.core.next.call(null, more);
            x = G__12357;
            y = G__12358;
            more = G__12359;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12356 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12356__delegate.call(this, x, y, more)
    };
    G__12356.cljs$lang$maxFixedArity = 2;
    G__12356.cljs$lang$applyTo = function(arglist__12360) {
      var x = cljs.core.first(arglist__12360);
      arglist__12360 = cljs.core.next(arglist__12360);
      var y = cljs.core.first(arglist__12360);
      var more = cljs.core.rest(arglist__12360);
      return G__12356__delegate(x, y, more)
    };
    G__12356.cljs$core$IFn$_invoke$arity$variadic = G__12356__delegate;
    return G__12356
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__12361__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__12362 = y;
            var G__12363 = cljs.core.first.call(null, more);
            var G__12364 = cljs.core.next.call(null, more);
            x = G__12362;
            y = G__12363;
            more = G__12364;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12361 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12361__delegate.call(this, x, y, more)
    };
    G__12361.cljs$lang$maxFixedArity = 2;
    G__12361.cljs$lang$applyTo = function(arglist__12365) {
      var x = cljs.core.first(arglist__12365);
      arglist__12365 = cljs.core.next(arglist__12365);
      var y = cljs.core.first(arglist__12365);
      var more = cljs.core.rest(arglist__12365);
      return G__12361__delegate(x, y, more)
    };
    G__12361.cljs$core$IFn$_invoke$arity$variadic = G__12361__delegate;
    return G__12361
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__12366__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12367 = y;
            var G__12368 = cljs.core.first.call(null, more);
            var G__12369 = cljs.core.next.call(null, more);
            x = G__12367;
            y = G__12368;
            more = G__12369;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12366 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12366__delegate.call(this, x, y, more)
    };
    G__12366.cljs$lang$maxFixedArity = 2;
    G__12366.cljs$lang$applyTo = function(arglist__12370) {
      var x = cljs.core.first(arglist__12370);
      arglist__12370 = cljs.core.next(arglist__12370);
      var y = cljs.core.first(arglist__12370);
      var more = cljs.core.rest(arglist__12370);
      return G__12366__delegate(x, y, more)
    };
    G__12366.cljs$core$IFn$_invoke$arity$variadic = G__12366__delegate;
    return G__12366
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3092__auto__ = x;
    var y__3093__auto__ = y;
    return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
  };
  var max__3 = function() {
    var G__12371__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3092__auto__ = x;
        var y__3093__auto__ = y;
        return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
      }(), more)
    };
    var G__12371 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12371__delegate.call(this, x, y, more)
    };
    G__12371.cljs$lang$maxFixedArity = 2;
    G__12371.cljs$lang$applyTo = function(arglist__12372) {
      var x = cljs.core.first(arglist__12372);
      arglist__12372 = cljs.core.next(arglist__12372);
      var y = cljs.core.first(arglist__12372);
      var more = cljs.core.rest(arglist__12372);
      return G__12371__delegate(x, y, more)
    };
    G__12371.cljs$core$IFn$_invoke$arity$variadic = G__12371__delegate;
    return G__12371
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3099__auto__ = x;
    var y__3100__auto__ = y;
    return x__3099__auto__ < y__3100__auto__ ? x__3099__auto__ : y__3100__auto__
  };
  var min__3 = function() {
    var G__12373__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3099__auto__ = x;
        var y__3100__auto__ = y;
        return x__3099__auto__ < y__3100__auto__ ? x__3099__auto__ : y__3100__auto__
      }(), more)
    };
    var G__12373 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12373__delegate.call(this, x, y, more)
    };
    G__12373.cljs$lang$maxFixedArity = 2;
    G__12373.cljs$lang$applyTo = function(arglist__12374) {
      var x = cljs.core.first(arglist__12374);
      arglist__12374 = cljs.core.next(arglist__12374);
      var y = cljs.core.first(arglist__12374);
      var more = cljs.core.rest(arglist__12374);
      return G__12373__delegate(x, y, more)
    };
    G__12373.cljs$core$IFn$_invoke$arity$variadic = G__12373__delegate;
    return G__12373
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if("\ufdd0:else") {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__12375__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__12375 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12375__delegate.call(this, x, y, more)
    };
    G__12375.cljs$lang$maxFixedArity = 2;
    G__12375.cljs$lang$applyTo = function(arglist__12376) {
      var x = cljs.core.first(arglist__12376);
      arglist__12376 = cljs.core.next(arglist__12376);
      var y = cljs.core.first(arglist__12376);
      var more = cljs.core.rest(arglist__12376);
      return G__12375__delegate(x, y, more)
    };
    G__12375.cljs$core$IFn$_invoke$arity$variadic = G__12375__delegate;
    return G__12375
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__12377__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__12377 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12377__delegate.call(this, x, y, more)
    };
    G__12377.cljs$lang$maxFixedArity = 2;
    G__12377.cljs$lang$applyTo = function(arglist__12378) {
      var x = cljs.core.first(arglist__12378);
      arglist__12378 = cljs.core.next(arglist__12378);
      var y = cljs.core.first(arglist__12378);
      var more = cljs.core.rest(arglist__12378);
      return G__12377__delegate(x, y, more)
    };
    G__12377.cljs$core$IFn$_invoke$arity$variadic = G__12377__delegate;
    return G__12377
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__12379__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__12379 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12379__delegate.call(this, x, y, more)
    };
    G__12379.cljs$lang$maxFixedArity = 2;
    G__12379.cljs$lang$applyTo = function(arglist__12380) {
      var x = cljs.core.first(arglist__12380);
      arglist__12380 = cljs.core.next(arglist__12380);
      var y = cljs.core.first(arglist__12380);
      var more = cljs.core.rest(arglist__12380);
      return G__12379__delegate(x, y, more)
    };
    G__12379.cljs$core$IFn$_invoke$arity$variadic = G__12379__delegate;
    return G__12379
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__12381__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__12381 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12381__delegate.call(this, x, y, more)
    };
    G__12381.cljs$lang$maxFixedArity = 2;
    G__12381.cljs$lang$applyTo = function(arglist__12382) {
      var x = cljs.core.first(arglist__12382);
      arglist__12382 = cljs.core.next(arglist__12382);
      var y = cljs.core.first(arglist__12382);
      var more = cljs.core.rest(arglist__12382);
      return G__12381__delegate(x, y, more)
    };
    G__12381.cljs$core$IFn$_invoke$arity$variadic = G__12381__delegate;
    return G__12381
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__12383__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__12383 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12383__delegate.call(this, x, y, more)
    };
    G__12383.cljs$lang$maxFixedArity = 2;
    G__12383.cljs$lang$applyTo = function(arglist__12384) {
      var x = cljs.core.first(arglist__12384);
      arglist__12384 = cljs.core.next(arglist__12384);
      var y = cljs.core.first(arglist__12384);
      var more = cljs.core.rest(arglist__12384);
      return G__12383__delegate(x, y, more)
    };
    G__12383.cljs$core$IFn$_invoke$arity$variadic = G__12383__delegate;
    return G__12383
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__12385__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__12385 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12385__delegate.call(this, x, y, more)
    };
    G__12385.cljs$lang$maxFixedArity = 2;
    G__12385.cljs$lang$applyTo = function(arglist__12386) {
      var x = cljs.core.first(arglist__12386);
      arglist__12386 = cljs.core.next(arglist__12386);
      var y = cljs.core.first(arglist__12386);
      var more = cljs.core.rest(arglist__12386);
      return G__12385__delegate(x, y, more)
    };
    G__12385.cljs$core$IFn$_invoke$arity$variadic = G__12385__delegate;
    return G__12385
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__12387__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__12387 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12387__delegate.call(this, x, y, more)
    };
    G__12387.cljs$lang$maxFixedArity = 2;
    G__12387.cljs$lang$applyTo = function(arglist__12388) {
      var x = cljs.core.first(arglist__12388);
      arglist__12388 = cljs.core.next(arglist__12388);
      var y = cljs.core.first(arglist__12388);
      var more = cljs.core.rest(arglist__12388);
      return G__12387__delegate(x, y, more)
    };
    G__12387.cljs$core$IFn$_invoke$arity$variadic = G__12387__delegate;
    return G__12387
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__12389__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12390 = y;
            var G__12391 = cljs.core.first.call(null, more);
            var G__12392 = cljs.core.next.call(null, more);
            x = G__12390;
            y = G__12391;
            more = G__12392;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12389 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12389__delegate.call(this, x, y, more)
    };
    G__12389.cljs$lang$maxFixedArity = 2;
    G__12389.cljs$lang$applyTo = function(arglist__12393) {
      var x = cljs.core.first(arglist__12393);
      arglist__12393 = cljs.core.next(arglist__12393);
      var y = cljs.core.first(arglist__12393);
      var more = cljs.core.rest(arglist__12393);
      return G__12389__delegate(x, y, more)
    };
    G__12389.cljs$core$IFn$_invoke$arity$variadic = G__12389__delegate;
    return G__12389
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__12394 = n__$1 - 1;
      var G__12395 = cljs.core.next.call(null, xs);
      n__$1 = G__12394;
      xs = G__12395;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0:else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__12396__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12397 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__12398 = cljs.core.next.call(null, more);
            sb = G__12397;
            more = G__12398;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__12396 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12396__delegate.call(this, x, ys)
    };
    G__12396.cljs$lang$maxFixedArity = 1;
    G__12396.cljs$lang$applyTo = function(arglist__12399) {
      var x = cljs.core.first(arglist__12399);
      var ys = cljs.core.rest(arglist__12399);
      return G__12396__delegate(x, ys)
    };
    G__12396.cljs$core$IFn$_invoke$arity$variadic = G__12396__delegate;
    return G__12396
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$core$IFn$_invoke$arity$0 = str_STAR___0;
  str_STAR_.cljs$core$IFn$_invoke$arity$1 = str_STAR___1;
  str_STAR_.cljs$core$IFn$_invoke$arity$variadic = str_STAR___2.cljs$core$IFn$_invoke$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
    }else {
      if(x == null) {
        return""
      }else {
        if("\ufdd0:else") {
          return x.toString()
        }else {
          return null
        }
      }
    }
  };
  var str__2 = function() {
    var G__12400__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12401 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__12402 = cljs.core.next.call(null, more);
            sb = G__12401;
            more = G__12402;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__12400 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12400__delegate.call(this, x, ys)
    };
    G__12400.cljs$lang$maxFixedArity = 1;
    G__12400.cljs$lang$applyTo = function(arglist__12403) {
      var x = cljs.core.first(arglist__12403);
      var ys = cljs.core.rest(arglist__12403);
      return G__12400__delegate(x, ys)
    };
    G__12400.cljs$core$IFn$_invoke$arity$variadic = G__12400__delegate;
    return G__12400
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3943__auto__ = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return x instanceof cljs.core.Symbol
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__12404) {
    var fmt = cljs.core.first(arglist__12404);
    var args = cljs.core.rest(arglist__12404);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", ":", cljs.core.name.call(null, name))
      }else {
        if("\ufdd0:else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", ":", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__12405 = cljs.core.next.call(null, xs);
            var G__12406 = cljs.core.next.call(null, ys);
            xs = G__12405;
            ys = G__12406;
            continue
          }else {
            if("\ufdd0:else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__12407_SHARP_, p2__12408_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__12407_SHARP_, cljs.core.hash.call(null, p2__12408_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__12409 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__12410 = cljs.core.next.call(null, s);
      h = G__12409;
      s = G__12410;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__12411 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__12412 = cljs.core.next.call(null, s__$1);
      h = G__12411;
      s__$1 = G__12412;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12419_12425 = cljs.core.seq.call(null, fn_map);
  var chunk__12420_12426 = null;
  var count__12421_12427 = 0;
  var i__12422_12428 = 0;
  while(true) {
    if(i__12422_12428 < count__12421_12427) {
      var vec__12423_12429 = cljs.core._nth.call(null, chunk__12420_12426, i__12422_12428);
      var key_name_12430 = cljs.core.nth.call(null, vec__12423_12429, 0, null);
      var f_12431 = cljs.core.nth.call(null, vec__12423_12429, 1, null);
      var str_name_12432 = cljs.core.name.call(null, key_name_12430);
      obj[str_name_12432] = f_12431;
      var G__12433 = seq__12419_12425;
      var G__12434 = chunk__12420_12426;
      var G__12435 = count__12421_12427;
      var G__12436 = i__12422_12428 + 1;
      seq__12419_12425 = G__12433;
      chunk__12420_12426 = G__12434;
      count__12421_12427 = G__12435;
      i__12422_12428 = G__12436;
      continue
    }else {
      var temp__4092__auto___12437 = cljs.core.seq.call(null, seq__12419_12425);
      if(temp__4092__auto___12437) {
        var seq__12419_12438__$1 = temp__4092__auto___12437;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12419_12438__$1)) {
          var c__3501__auto___12439 = cljs.core.chunk_first.call(null, seq__12419_12438__$1);
          var G__12440 = cljs.core.chunk_rest.call(null, seq__12419_12438__$1);
          var G__12441 = c__3501__auto___12439;
          var G__12442 = cljs.core.count.call(null, c__3501__auto___12439);
          var G__12443 = 0;
          seq__12419_12425 = G__12440;
          chunk__12420_12426 = G__12441;
          count__12421_12427 = G__12442;
          i__12422_12428 = G__12443;
          continue
        }else {
          var vec__12424_12444 = cljs.core.first.call(null, seq__12419_12438__$1);
          var key_name_12445 = cljs.core.nth.call(null, vec__12424_12444, 0, null);
          var f_12446 = cljs.core.nth.call(null, vec__12424_12444, 1, null);
          var str_name_12447 = cljs.core.name.call(null, key_name_12445);
          obj[str_name_12447] = f_12446;
          var G__12448 = cljs.core.next.call(null, seq__12419_12438__$1);
          var G__12449 = null;
          var G__12450 = 0;
          var G__12451 = 0;
          seq__12419_12425 = G__12448;
          chunk__12420_12426 = G__12449;
          count__12421_12427 = G__12450;
          i__12422_12428 = G__12451;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12453 = coll;
  if(G__12453) {
    if(function() {
      var or__3943__auto__ = G__12453.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12453.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__12453.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12453)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12453)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__12454 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__12454;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__12455 = i - 1;
        var G__12456 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__12455;
        r = G__12456;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12457) {
    var xs = cljs.core.seq(arglist__12457);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__12459 = coll;
      if(G__12459) {
        if(function() {
          var or__3943__auto____$1 = G__12459.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__12459.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12461 = x;
  if(G__12461) {
    if(function() {
      var or__3943__auto__ = G__12461.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12461.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__12461.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12461)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12461)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__12465 = null;
  var G__12465__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12463 = coll;
        if(G__12463) {
          if(function() {
            var or__3943__auto__ = G__12463.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12463.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__12463.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12463)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12463)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, self__.k, null)
      }else {
        return null
      }
    }
  };
  var G__12465__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__12464 = coll;
        if(G__12464) {
          if(function() {
            var or__3943__auto__ = G__12464.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12464.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__12464.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12464)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12464)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, self__.k, not_found)
      }else {
        return null
      }
    }
  };
  G__12465 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12465__2.call(this, self__, coll);
      case 3:
        return G__12465__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12465
}();
cljs.core.Keyword.prototype.apply = function(self__, args12462) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12462.slice()))
};
cljs.core.__GT_Keyword = function __GT_Keyword(k) {
  return new cljs.core.Keyword(k)
};
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__12467 = null;
  var G__12467__2 = function(self__, coll) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString())
  };
  var G__12467__3 = function(self__, coll, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString(), not_found)
  };
  G__12467 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12467__2.call(this, self__, coll);
      case 3:
        return G__12467__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12467
}();
String.prototype.apply = function(self__, args12466) {
  return self__.call.apply(self__, [self__].concat(args12466.slice()))
};
String.prototype.apply = function(s, args) {
  if(args.length < 2) {
    return cljs.core.get.call(null, args[0], s)
  }else {
    return cljs.core.get.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, realized, x, __hash) {
  return new cljs.core.LazySeq(meta, realized, x, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__12469 = s;
    if(G__12469) {
      if(function() {
        var or__3943__auto__ = G__12469.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12469.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__12470 = cljs.core.next.call(null, s__$1);
      s__$1 = G__12470;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_12471 = 0;
  var xs_12472 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_12472) {
      ret[i_12471] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_12472));
      var G__12473 = i_12471 + 1;
      var G__12474 = cljs.core.next.call(null, xs_12472);
      i_12471 = G__12473;
      xs_12472 = G__12474;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12475 = i + 1;
          var G__12476 = cljs.core.next.call(null, s__$1);
          i = G__12475;
          s__$1 = G__12476;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___12477 = size;
      var i_12478 = 0;
      while(true) {
        if(i_12478 < n__3548__auto___12477) {
          a[i_12478] = init_val_or_seq;
          var G__12479 = i_12478 + 1;
          i_12478 = G__12479;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12480 = i + 1;
          var G__12481 = cljs.core.next.call(null, s__$1);
          i = G__12480;
          s__$1 = G__12481;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___12482 = size;
      var i_12483 = 0;
      while(true) {
        if(i_12483 < n__3548__auto___12482) {
          a[i_12483] = init_val_or_seq;
          var G__12484 = i_12483 + 1;
          i_12483 = G__12484;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12485 = i + 1;
          var G__12486 = cljs.core.next.call(null, s__$1);
          i = G__12485;
          s__$1 = G__12486;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___12487 = size;
      var i_12488 = 0;
      while(true) {
        if(i_12488 < n__3548__auto___12487) {
          a[i_12488] = init_val_or_seq;
          var G__12489 = i_12488 + 1;
          i_12488 = G__12489;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12490 = i + 1;
          var G__12491 = cljs.core.next.call(null, s__$1);
          i = G__12490;
          s__$1 = G__12491;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___12492 = size;
      var i_12493 = 0;
      while(true) {
        if(i_12493 < n__3548__auto___12492) {
          a[i_12493] = init_val_or_seq;
          var G__12494 = i_12493 + 1;
          i_12493 = G__12494;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12495 = cljs.core.next.call(null, s__$1);
        var G__12496 = i - 1;
        var G__12497 = sum + 1;
        s__$1 = G__12495;
        i = G__12496;
        sum = G__12497;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0:else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__12498__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__12498 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12498__delegate.call(this, x, y, zs)
    };
    G__12498.cljs$lang$maxFixedArity = 2;
    G__12498.cljs$lang$applyTo = function(arglist__12499) {
      var x = cljs.core.first(arglist__12499);
      arglist__12499 = cljs.core.next(arglist__12499);
      var y = cljs.core.first(arglist__12499);
      var zs = cljs.core.rest(arglist__12499);
      return G__12498__delegate(x, y, zs)
    };
    G__12498.cljs$core$IFn$_invoke$arity$variadic = G__12498__delegate;
    return G__12498
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__12500__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__12500 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12500__delegate.call(this, a, b, c, d, more)
    };
    G__12500.cljs$lang$maxFixedArity = 4;
    G__12500.cljs$lang$applyTo = function(arglist__12501) {
      var a = cljs.core.first(arglist__12501);
      arglist__12501 = cljs.core.next(arglist__12501);
      var b = cljs.core.first(arglist__12501);
      arglist__12501 = cljs.core.next(arglist__12501);
      var c = cljs.core.first(arglist__12501);
      arglist__12501 = cljs.core.next(arglist__12501);
      var d = cljs.core.first(arglist__12501);
      var more = cljs.core.rest(arglist__12501);
      return G__12500__delegate(a, b, c, d, more)
    };
    G__12500.cljs$core$IFn$_invoke$arity$variadic = G__12500__delegate;
    return G__12500
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__12502__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__12502 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12502__delegate.call(this, f, a, b, c, d, args)
    };
    G__12502.cljs$lang$maxFixedArity = 5;
    G__12502.cljs$lang$applyTo = function(arglist__12503) {
      var f = cljs.core.first(arglist__12503);
      arglist__12503 = cljs.core.next(arglist__12503);
      var a = cljs.core.first(arglist__12503);
      arglist__12503 = cljs.core.next(arglist__12503);
      var b = cljs.core.first(arglist__12503);
      arglist__12503 = cljs.core.next(arglist__12503);
      var c = cljs.core.first(arglist__12503);
      arglist__12503 = cljs.core.next(arglist__12503);
      var d = cljs.core.first(arglist__12503);
      var args = cljs.core.rest(arglist__12503);
      return G__12502__delegate(f, a, b, c, d, args)
    };
    G__12502.cljs$core$IFn$_invoke$arity$variadic = G__12502__delegate;
    return G__12502
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__12504) {
    var obj = cljs.core.first(arglist__12504);
    arglist__12504 = cljs.core.next(arglist__12504);
    var f = cljs.core.first(arglist__12504);
    var args = cljs.core.rest(arglist__12504);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__12505__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__12505 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12505__delegate.call(this, x, y, more)
    };
    G__12505.cljs$lang$maxFixedArity = 2;
    G__12505.cljs$lang$applyTo = function(arglist__12506) {
      var x = cljs.core.first(arglist__12506);
      arglist__12506 = cljs.core.next(arglist__12506);
      var y = cljs.core.first(arglist__12506);
      var more = cljs.core.rest(arglist__12506);
      return G__12505__delegate(x, y, more)
    };
    G__12505.cljs$core$IFn$_invoke$arity$variadic = G__12505__delegate;
    return G__12505
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__12507 = pred;
        var G__12508 = cljs.core.next.call(null, coll);
        pred = G__12507;
        coll = G__12508;
        continue
      }else {
        if("\ufdd0:else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__12509 = pred;
        var G__12510 = cljs.core.next.call(null, coll);
        pred = G__12509;
        coll = G__12510;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12511 = null;
    var G__12511__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__12511__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__12511__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__12511__3 = function() {
      var G__12512__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__12512 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__12512__delegate.call(this, x, y, zs)
      };
      G__12512.cljs$lang$maxFixedArity = 2;
      G__12512.cljs$lang$applyTo = function(arglist__12513) {
        var x = cljs.core.first(arglist__12513);
        arglist__12513 = cljs.core.next(arglist__12513);
        var y = cljs.core.first(arglist__12513);
        var zs = cljs.core.rest(arglist__12513);
        return G__12512__delegate(x, y, zs)
      };
      G__12512.cljs$core$IFn$_invoke$arity$variadic = G__12512__delegate;
      return G__12512
    }();
    G__12511 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12511__0.call(this);
        case 1:
          return G__12511__1.call(this, x);
        case 2:
          return G__12511__2.call(this, x, y);
        default:
          return G__12511__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12511.cljs$lang$maxFixedArity = 2;
    G__12511.cljs$lang$applyTo = G__12511__3.cljs$lang$applyTo;
    return G__12511
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12514__delegate = function(args) {
      return x
    };
    var G__12514 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12514__delegate.call(this, args)
    };
    G__12514.cljs$lang$maxFixedArity = 0;
    G__12514.cljs$lang$applyTo = function(arglist__12515) {
      var args = cljs.core.seq(arglist__12515);
      return G__12514__delegate(args)
    };
    G__12514.cljs$core$IFn$_invoke$arity$variadic = G__12514__delegate;
    return G__12514
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12516 = null;
      var G__12516__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__12516__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__12516__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__12516__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__12516__4 = function() {
        var G__12517__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12517 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12517__delegate.call(this, x, y, z, args)
        };
        G__12517.cljs$lang$maxFixedArity = 3;
        G__12517.cljs$lang$applyTo = function(arglist__12518) {
          var x = cljs.core.first(arglist__12518);
          arglist__12518 = cljs.core.next(arglist__12518);
          var y = cljs.core.first(arglist__12518);
          arglist__12518 = cljs.core.next(arglist__12518);
          var z = cljs.core.first(arglist__12518);
          var args = cljs.core.rest(arglist__12518);
          return G__12517__delegate(x, y, z, args)
        };
        G__12517.cljs$core$IFn$_invoke$arity$variadic = G__12517__delegate;
        return G__12517
      }();
      G__12516 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12516__0.call(this);
          case 1:
            return G__12516__1.call(this, x);
          case 2:
            return G__12516__2.call(this, x, y);
          case 3:
            return G__12516__3.call(this, x, y, z);
          default:
            return G__12516__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12516.cljs$lang$maxFixedArity = 3;
      G__12516.cljs$lang$applyTo = G__12516__4.cljs$lang$applyTo;
      return G__12516
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12519 = null;
      var G__12519__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__12519__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__12519__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__12519__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__12519__4 = function() {
        var G__12520__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__12520 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12520__delegate.call(this, x, y, z, args)
        };
        G__12520.cljs$lang$maxFixedArity = 3;
        G__12520.cljs$lang$applyTo = function(arglist__12521) {
          var x = cljs.core.first(arglist__12521);
          arglist__12521 = cljs.core.next(arglist__12521);
          var y = cljs.core.first(arglist__12521);
          arglist__12521 = cljs.core.next(arglist__12521);
          var z = cljs.core.first(arglist__12521);
          var args = cljs.core.rest(arglist__12521);
          return G__12520__delegate(x, y, z, args)
        };
        G__12520.cljs$core$IFn$_invoke$arity$variadic = G__12520__delegate;
        return G__12520
      }();
      G__12519 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12519__0.call(this);
          case 1:
            return G__12519__1.call(this, x);
          case 2:
            return G__12519__2.call(this, x, y);
          case 3:
            return G__12519__3.call(this, x, y, z);
          default:
            return G__12519__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12519.cljs$lang$maxFixedArity = 3;
      G__12519.cljs$lang$applyTo = G__12519__4.cljs$lang$applyTo;
      return G__12519
    }()
  };
  var comp__4 = function() {
    var G__12522__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__12523__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__12524 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__12525 = cljs.core.next.call(null, fs__$2);
              ret = G__12524;
              fs__$2 = G__12525;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__12523 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12523__delegate.call(this, args)
        };
        G__12523.cljs$lang$maxFixedArity = 0;
        G__12523.cljs$lang$applyTo = function(arglist__12526) {
          var args = cljs.core.seq(arglist__12526);
          return G__12523__delegate(args)
        };
        G__12523.cljs$core$IFn$_invoke$arity$variadic = G__12523__delegate;
        return G__12523
      }()
    };
    var G__12522 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12522__delegate.call(this, f1, f2, f3, fs)
    };
    G__12522.cljs$lang$maxFixedArity = 3;
    G__12522.cljs$lang$applyTo = function(arglist__12527) {
      var f1 = cljs.core.first(arglist__12527);
      arglist__12527 = cljs.core.next(arglist__12527);
      var f2 = cljs.core.first(arglist__12527);
      arglist__12527 = cljs.core.next(arglist__12527);
      var f3 = cljs.core.first(arglist__12527);
      var fs = cljs.core.rest(arglist__12527);
      return G__12522__delegate(f1, f2, f3, fs)
    };
    G__12522.cljs$core$IFn$_invoke$arity$variadic = G__12522__delegate;
    return G__12522
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12528__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__12528 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12528__delegate.call(this, args)
      };
      G__12528.cljs$lang$maxFixedArity = 0;
      G__12528.cljs$lang$applyTo = function(arglist__12529) {
        var args = cljs.core.seq(arglist__12529);
        return G__12528__delegate(args)
      };
      G__12528.cljs$core$IFn$_invoke$arity$variadic = G__12528__delegate;
      return G__12528
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12530__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__12530 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12530__delegate.call(this, args)
      };
      G__12530.cljs$lang$maxFixedArity = 0;
      G__12530.cljs$lang$applyTo = function(arglist__12531) {
        var args = cljs.core.seq(arglist__12531);
        return G__12530__delegate(args)
      };
      G__12530.cljs$core$IFn$_invoke$arity$variadic = G__12530__delegate;
      return G__12530
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12532__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__12532 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12532__delegate.call(this, args)
      };
      G__12532.cljs$lang$maxFixedArity = 0;
      G__12532.cljs$lang$applyTo = function(arglist__12533) {
        var args = cljs.core.seq(arglist__12533);
        return G__12532__delegate(args)
      };
      G__12532.cljs$core$IFn$_invoke$arity$variadic = G__12532__delegate;
      return G__12532
    }()
  };
  var partial__5 = function() {
    var G__12534__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12535__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__12535 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12535__delegate.call(this, args)
        };
        G__12535.cljs$lang$maxFixedArity = 0;
        G__12535.cljs$lang$applyTo = function(arglist__12536) {
          var args = cljs.core.seq(arglist__12536);
          return G__12535__delegate(args)
        };
        G__12535.cljs$core$IFn$_invoke$arity$variadic = G__12535__delegate;
        return G__12535
      }()
    };
    var G__12534 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12534__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__12534.cljs$lang$maxFixedArity = 4;
    G__12534.cljs$lang$applyTo = function(arglist__12537) {
      var f = cljs.core.first(arglist__12537);
      arglist__12537 = cljs.core.next(arglist__12537);
      var arg1 = cljs.core.first(arglist__12537);
      arglist__12537 = cljs.core.next(arglist__12537);
      var arg2 = cljs.core.first(arglist__12537);
      arglist__12537 = cljs.core.next(arglist__12537);
      var arg3 = cljs.core.first(arglist__12537);
      var more = cljs.core.rest(arglist__12537);
      return G__12534__delegate(f, arg1, arg2, arg3, more)
    };
    G__12534.cljs$core$IFn$_invoke$arity$variadic = G__12534__delegate;
    return G__12534
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12538 = null;
      var G__12538__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__12538__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__12538__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__12538__4 = function() {
        var G__12539__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__12539 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12539__delegate.call(this, a, b, c, ds)
        };
        G__12539.cljs$lang$maxFixedArity = 3;
        G__12539.cljs$lang$applyTo = function(arglist__12540) {
          var a = cljs.core.first(arglist__12540);
          arglist__12540 = cljs.core.next(arglist__12540);
          var b = cljs.core.first(arglist__12540);
          arglist__12540 = cljs.core.next(arglist__12540);
          var c = cljs.core.first(arglist__12540);
          var ds = cljs.core.rest(arglist__12540);
          return G__12539__delegate(a, b, c, ds)
        };
        G__12539.cljs$core$IFn$_invoke$arity$variadic = G__12539__delegate;
        return G__12539
      }();
      G__12538 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12538__1.call(this, a);
          case 2:
            return G__12538__2.call(this, a, b);
          case 3:
            return G__12538__3.call(this, a, b, c);
          default:
            return G__12538__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12538.cljs$lang$maxFixedArity = 3;
      G__12538.cljs$lang$applyTo = G__12538__4.cljs$lang$applyTo;
      return G__12538
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12541 = null;
      var G__12541__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12541__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__12541__4 = function() {
        var G__12542__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__12542 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12542__delegate.call(this, a, b, c, ds)
        };
        G__12542.cljs$lang$maxFixedArity = 3;
        G__12542.cljs$lang$applyTo = function(arglist__12543) {
          var a = cljs.core.first(arglist__12543);
          arglist__12543 = cljs.core.next(arglist__12543);
          var b = cljs.core.first(arglist__12543);
          arglist__12543 = cljs.core.next(arglist__12543);
          var c = cljs.core.first(arglist__12543);
          var ds = cljs.core.rest(arglist__12543);
          return G__12542__delegate(a, b, c, ds)
        };
        G__12542.cljs$core$IFn$_invoke$arity$variadic = G__12542__delegate;
        return G__12542
      }();
      G__12541 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12541__2.call(this, a, b);
          case 3:
            return G__12541__3.call(this, a, b, c);
          default:
            return G__12541__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12541.cljs$lang$maxFixedArity = 3;
      G__12541.cljs$lang$applyTo = G__12541__4.cljs$lang$applyTo;
      return G__12541
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12544 = null;
      var G__12544__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12544__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__12544__4 = function() {
        var G__12545__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__12545 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12545__delegate.call(this, a, b, c, ds)
        };
        G__12545.cljs$lang$maxFixedArity = 3;
        G__12545.cljs$lang$applyTo = function(arglist__12546) {
          var a = cljs.core.first(arglist__12546);
          arglist__12546 = cljs.core.next(arglist__12546);
          var b = cljs.core.first(arglist__12546);
          arglist__12546 = cljs.core.next(arglist__12546);
          var c = cljs.core.first(arglist__12546);
          var ds = cljs.core.rest(arglist__12546);
          return G__12545__delegate(a, b, c, ds)
        };
        G__12545.cljs$core$IFn$_invoke$arity$variadic = G__12545__delegate;
        return G__12545
      }();
      G__12544 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12544__2.call(this, a, b);
          case 3:
            return G__12544__3.call(this, a, b, c);
          default:
            return G__12544__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12544.cljs$lang$maxFixedArity = 3;
      G__12544.cljs$lang$applyTo = G__12544__4.cljs$lang$applyTo;
      return G__12544
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___12547 = size;
          var i_12548 = 0;
          while(true) {
            if(i_12548 < n__3548__auto___12547) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_12548, cljs.core._nth.call(null, c, i_12548)));
              var G__12549 = i_12548 + 1;
              i_12548 = G__12549;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3548__auto___12550 = size;
        var i_12551 = 0;
        while(true) {
          if(i_12551 < n__3548__auto___12550) {
            var x_12552 = f.call(null, cljs.core._nth.call(null, c, i_12551));
            if(x_12552 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_12552)
            }
            var G__12553 = i_12551 + 1;
            i_12551 = G__12553;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___12554 = size;
          var i_12555 = 0;
          while(true) {
            if(i_12555 < n__3548__auto___12554) {
              var x_12556 = f.call(null, idx + i_12555, cljs.core._nth.call(null, c, i_12555));
              if(x_12556 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_12556)
              }
              var G__12557 = i_12555 + 1;
              i_12555 = G__12557;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__12564__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__12564 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12564__delegate.call(this, x, y, z, args)
        };
        G__12564.cljs$lang$maxFixedArity = 3;
        G__12564.cljs$lang$applyTo = function(arglist__12565) {
          var x = cljs.core.first(arglist__12565);
          arglist__12565 = cljs.core.next(arglist__12565);
          var y = cljs.core.first(arglist__12565);
          arglist__12565 = cljs.core.next(arglist__12565);
          var z = cljs.core.first(arglist__12565);
          var args = cljs.core.rest(arglist__12565);
          return G__12564__delegate(x, y, z, args)
        };
        G__12564.cljs$core$IFn$_invoke$arity$variadic = G__12564__delegate;
        return G__12564
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__12566__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12558_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__12558_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__12558_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__12566 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12566__delegate.call(this, x, y, z, args)
        };
        G__12566.cljs$lang$maxFixedArity = 3;
        G__12566.cljs$lang$applyTo = function(arglist__12567) {
          var x = cljs.core.first(arglist__12567);
          arglist__12567 = cljs.core.next(arglist__12567);
          var y = cljs.core.first(arglist__12567);
          arglist__12567 = cljs.core.next(arglist__12567);
          var z = cljs.core.first(arglist__12567);
          var args = cljs.core.rest(arglist__12567);
          return G__12566__delegate(x, y, z, args)
        };
        G__12566.cljs$core$IFn$_invoke$arity$variadic = G__12566__delegate;
        return G__12566
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__12568__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12559_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__12559_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__12559_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__12559_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__12568 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12568__delegate.call(this, x, y, z, args)
        };
        G__12568.cljs$lang$maxFixedArity = 3;
        G__12568.cljs$lang$applyTo = function(arglist__12569) {
          var x = cljs.core.first(arglist__12569);
          arglist__12569 = cljs.core.next(arglist__12569);
          var y = cljs.core.first(arglist__12569);
          arglist__12569 = cljs.core.next(arglist__12569);
          var z = cljs.core.first(arglist__12569);
          var args = cljs.core.rest(arglist__12569);
          return G__12568__delegate(x, y, z, args)
        };
        G__12568.cljs$core$IFn$_invoke$arity$variadic = G__12568__delegate;
        return G__12568
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__12570__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__12560_SHARP_) {
            return p1__12560_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__12561_SHARP_) {
            var and__3941__auto__ = p1__12561_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__12561_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__12562_SHARP_) {
            var and__3941__auto__ = p1__12562_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__12562_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__12562_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__12571__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__12563_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__12563_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__12571 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12571__delegate.call(this, x, y, z, args)
          };
          G__12571.cljs$lang$maxFixedArity = 3;
          G__12571.cljs$lang$applyTo = function(arglist__12572) {
            var x = cljs.core.first(arglist__12572);
            arglist__12572 = cljs.core.next(arglist__12572);
            var y = cljs.core.first(arglist__12572);
            arglist__12572 = cljs.core.next(arglist__12572);
            var z = cljs.core.first(arglist__12572);
            var args = cljs.core.rest(arglist__12572);
            return G__12571__delegate(x, y, z, args)
          };
          G__12571.cljs$core$IFn$_invoke$arity$variadic = G__12571__delegate;
          return G__12571
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__12570 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12570__delegate.call(this, p1, p2, p3, ps)
    };
    G__12570.cljs$lang$maxFixedArity = 3;
    G__12570.cljs$lang$applyTo = function(arglist__12573) {
      var p1 = cljs.core.first(arglist__12573);
      arglist__12573 = cljs.core.next(arglist__12573);
      var p2 = cljs.core.first(arglist__12573);
      arglist__12573 = cljs.core.next(arglist__12573);
      var p3 = cljs.core.first(arglist__12573);
      var ps = cljs.core.rest(arglist__12573);
      return G__12570__delegate(p1, p2, p3, ps)
    };
    G__12570.cljs$core$IFn$_invoke$arity$variadic = G__12570__delegate;
    return G__12570
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__12580__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__12580 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12580__delegate.call(this, x, y, z, args)
        };
        G__12580.cljs$lang$maxFixedArity = 3;
        G__12580.cljs$lang$applyTo = function(arglist__12581) {
          var x = cljs.core.first(arglist__12581);
          arglist__12581 = cljs.core.next(arglist__12581);
          var y = cljs.core.first(arglist__12581);
          arglist__12581 = cljs.core.next(arglist__12581);
          var z = cljs.core.first(arglist__12581);
          var args = cljs.core.rest(arglist__12581);
          return G__12580__delegate(x, y, z, args)
        };
        G__12580.cljs$core$IFn$_invoke$arity$variadic = G__12580__delegate;
        return G__12580
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__12582__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__12574_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__12574_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__12574_SHARP_)
              }
            }, args)
          }
        };
        var G__12582 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12582__delegate.call(this, x, y, z, args)
        };
        G__12582.cljs$lang$maxFixedArity = 3;
        G__12582.cljs$lang$applyTo = function(arglist__12583) {
          var x = cljs.core.first(arglist__12583);
          arglist__12583 = cljs.core.next(arglist__12583);
          var y = cljs.core.first(arglist__12583);
          arglist__12583 = cljs.core.next(arglist__12583);
          var z = cljs.core.first(arglist__12583);
          var args = cljs.core.rest(arglist__12583);
          return G__12582__delegate(x, y, z, args)
        };
        G__12582.cljs$core$IFn$_invoke$arity$variadic = G__12582__delegate;
        return G__12582
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__12584__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__12575_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__12575_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__12575_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__12575_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__12584 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12584__delegate.call(this, x, y, z, args)
        };
        G__12584.cljs$lang$maxFixedArity = 3;
        G__12584.cljs$lang$applyTo = function(arglist__12585) {
          var x = cljs.core.first(arglist__12585);
          arglist__12585 = cljs.core.next(arglist__12585);
          var y = cljs.core.first(arglist__12585);
          arglist__12585 = cljs.core.next(arglist__12585);
          var z = cljs.core.first(arglist__12585);
          var args = cljs.core.rest(arglist__12585);
          return G__12584__delegate(x, y, z, args)
        };
        G__12584.cljs$core$IFn$_invoke$arity$variadic = G__12584__delegate;
        return G__12584
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__12586__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__12576_SHARP_) {
            return p1__12576_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__12577_SHARP_) {
            var or__3943__auto__ = p1__12577_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__12577_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__12578_SHARP_) {
            var or__3943__auto__ = p1__12578_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__12578_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__12578_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__12587__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__12579_SHARP_) {
                return cljs.core.some.call(null, p1__12579_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__12587 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12587__delegate.call(this, x, y, z, args)
          };
          G__12587.cljs$lang$maxFixedArity = 3;
          G__12587.cljs$lang$applyTo = function(arglist__12588) {
            var x = cljs.core.first(arglist__12588);
            arglist__12588 = cljs.core.next(arglist__12588);
            var y = cljs.core.first(arglist__12588);
            arglist__12588 = cljs.core.next(arglist__12588);
            var z = cljs.core.first(arglist__12588);
            var args = cljs.core.rest(arglist__12588);
            return G__12587__delegate(x, y, z, args)
          };
          G__12587.cljs$core$IFn$_invoke$arity$variadic = G__12587__delegate;
          return G__12587
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__12586 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12586__delegate.call(this, p1, p2, p3, ps)
    };
    G__12586.cljs$lang$maxFixedArity = 3;
    G__12586.cljs$lang$applyTo = function(arglist__12589) {
      var p1 = cljs.core.first(arglist__12589);
      arglist__12589 = cljs.core.next(arglist__12589);
      var p2 = cljs.core.first(arglist__12589);
      arglist__12589 = cljs.core.next(arglist__12589);
      var p3 = cljs.core.first(arglist__12589);
      var ps = cljs.core.rest(arglist__12589);
      return G__12586__delegate(p1, p2, p3, ps)
    };
    G__12586.cljs$core$IFn$_invoke$arity$variadic = G__12586__delegate;
    return G__12586
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___12591 = size;
          var i_12592 = 0;
          while(true) {
            if(i_12592 < n__3548__auto___12591) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_12592)));
              var G__12593 = i_12592 + 1;
              i_12592 = G__12593;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__12594__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__12590_SHARP_) {
        return cljs.core.apply.call(null, f, p1__12590_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__12594 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12594__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12594.cljs$lang$maxFixedArity = 4;
    G__12594.cljs$lang$applyTo = function(arglist__12595) {
      var f = cljs.core.first(arglist__12595);
      arglist__12595 = cljs.core.next(arglist__12595);
      var c1 = cljs.core.first(arglist__12595);
      arglist__12595 = cljs.core.next(arglist__12595);
      var c2 = cljs.core.first(arglist__12595);
      arglist__12595 = cljs.core.next(arglist__12595);
      var c3 = cljs.core.first(arglist__12595);
      var colls = cljs.core.rest(arglist__12595);
      return G__12594__delegate(f, c1, c2, c3, colls)
    };
    G__12594.cljs$core$IFn$_invoke$arity$variadic = G__12594__delegate;
    return G__12594
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12596 = n__$1 - 1;
        var G__12597 = cljs.core.rest.call(null, s);
        n__$1 = G__12596;
        coll__$1 = G__12597;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__12598 = cljs.core.next.call(null, s);
      var G__12599 = cljs.core.next.call(null, lead);
      s = G__12598;
      lead = G__12599;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12600 = pred__$1;
        var G__12601 = cljs.core.rest.call(null, s);
        pred__$1 = G__12600;
        coll__$1 = G__12601;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__12602__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__12602 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12602__delegate.call(this, c1, c2, colls)
    };
    G__12602.cljs$lang$maxFixedArity = 2;
    G__12602.cljs$lang$applyTo = function(arglist__12603) {
      var c1 = cljs.core.first(arglist__12603);
      arglist__12603 = cljs.core.next(arglist__12603);
      var c2 = cljs.core.first(arglist__12603);
      var colls = cljs.core.rest(arglist__12603);
      return G__12602__delegate(c1, c2, colls)
    };
    G__12602.cljs$core$IFn$_invoke$arity$variadic = G__12602__delegate;
    return G__12602
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__12604__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__12604 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12604__delegate.call(this, f, coll, colls)
    };
    G__12604.cljs$lang$maxFixedArity = 2;
    G__12604.cljs$lang$applyTo = function(arglist__12605) {
      var f = cljs.core.first(arglist__12605);
      arglist__12605 = cljs.core.next(arglist__12605);
      var coll = cljs.core.first(arglist__12605);
      var colls = cljs.core.rest(arglist__12605);
      return G__12604__delegate(f, coll, colls)
    };
    G__12604.cljs$core$IFn$_invoke$arity$variadic = G__12604__delegate;
    return G__12604
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3548__auto___12606 = size;
        var i_12607 = 0;
        while(true) {
          if(i_12607 < n__3548__auto___12606) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_12607)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_12607))
            }else {
            }
            var G__12608 = i_12607 + 1;
            i_12607 = G__12608;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__12609_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__12609_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__12611 = to;
      if(G__12611) {
        if(function() {
          var or__3943__auto__ = G__12611.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12611.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__12612__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__12612 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12612__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12612.cljs$lang$maxFixedArity = 4;
    G__12612.cljs$lang$applyTo = function(arglist__12613) {
      var f = cljs.core.first(arglist__12613);
      arglist__12613 = cljs.core.next(arglist__12613);
      var c1 = cljs.core.first(arglist__12613);
      arglist__12613 = cljs.core.next(arglist__12613);
      var c2 = cljs.core.first(arglist__12613);
      arglist__12613 = cljs.core.next(arglist__12613);
      var c3 = cljs.core.first(arglist__12613);
      var colls = cljs.core.rest(arglist__12613);
      return G__12612__delegate(f, c1, c2, c3, colls)
    };
    G__12612.cljs$core$IFn$_invoke$arity$variadic = G__12612__delegate;
    return G__12612
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__12615 = m__$1;
          if(G__12615) {
            if(function() {
              var or__3943__auto__ = G__12615.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__12615.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__12615.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12615)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12615)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__12616 = sentinel;
            var G__12617 = m__$2;
            var G__12618 = cljs.core.next.call(null, ks__$1);
            sentinel = G__12616;
            m__$1 = G__12617;
            ks__$1 = G__12618;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__12619, v) {
  var vec__12621 = p__12619;
  var k = cljs.core.nth.call(null, vec__12621, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__12621, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__12622, f) {
    var vec__12632 = p__12622;
    var k = cljs.core.nth.call(null, vec__12632, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12632, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__12623, f, a) {
    var vec__12633 = p__12623;
    var k = cljs.core.nth.call(null, vec__12633, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12633, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__12624, f, a, b) {
    var vec__12634 = p__12624;
    var k = cljs.core.nth.call(null, vec__12634, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12634, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__12625, f, a, b, c) {
    var vec__12635 = p__12625;
    var k = cljs.core.nth.call(null, vec__12635, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12635, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__12637__delegate = function(m, p__12626, f, a, b, c, args) {
      var vec__12636 = p__12626;
      var k = cljs.core.nth.call(null, vec__12636, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__12636, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__12637 = function(m, p__12626, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__12637__delegate.call(this, m, p__12626, f, a, b, c, args)
    };
    G__12637.cljs$lang$maxFixedArity = 6;
    G__12637.cljs$lang$applyTo = function(arglist__12638) {
      var m = cljs.core.first(arglist__12638);
      arglist__12638 = cljs.core.next(arglist__12638);
      var p__12626 = cljs.core.first(arglist__12638);
      arglist__12638 = cljs.core.next(arglist__12638);
      var f = cljs.core.first(arglist__12638);
      arglist__12638 = cljs.core.next(arglist__12638);
      var a = cljs.core.first(arglist__12638);
      arglist__12638 = cljs.core.next(arglist__12638);
      var b = cljs.core.first(arglist__12638);
      arglist__12638 = cljs.core.next(arglist__12638);
      var c = cljs.core.first(arglist__12638);
      var args = cljs.core.rest(arglist__12638);
      return G__12637__delegate(m, p__12626, f, a, b, c, args)
    };
    G__12637.cljs$core$IFn$_invoke$arity$variadic = G__12637__delegate;
    return G__12637
  }();
  update_in = function(m, p__12626, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__12626, f);
      case 4:
        return update_in__4.call(this, m, p__12626, f, a);
      case 5:
        return update_in__5.call(this, m, p__12626, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__12626, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__12626, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__12639 = ll - 5;
      var G__12640 = r;
      ll = G__12639;
      ret = G__12640;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__12641 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__12642 = level - 5;
          node = G__12641;
          level = G__12642;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__12644 = null;
  var G__12644__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__12644__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__12644 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12644__2.call(this, self__, k);
      case 3:
        return G__12644__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12644
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args12643) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12643.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__12645 = j + 1;
              var G__12646 = init__$2;
              j = G__12645;
              init__$1 = G__12646;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__12647 = i + step_init[0];
        i = G__12647;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if("\ufdd0:else") {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if("\ufdd0:else") {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__12648 = i + 1;
        var G__12649 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__12648;
        out = G__12649;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__12650) {
    var args = cljs.core.seq(arglist__12650);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3092__auto__ = self__.end;
    var y__3093__auto__ = v_pos + 1;
    return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__12652 = null;
  var G__12652__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__12652__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__12652 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12652__2.call(this, self__, k);
      case 3:
        return G__12652__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12652
}();
cljs.core.Subvec.prototype.apply = function(self__, args12651) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12651.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__12653 = meta;
      var G__12654 = v.v;
      var G__12655 = v.start + start;
      var G__12656 = v.start + end;
      var G__12657 = __hash;
      meta = G__12653;
      v = G__12654;
      start = G__12655;
      end = G__12656;
      __hash = G__12657;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__12658 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__12659 = level - 5;
          node = G__12658;
          level = G__12659;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__12661 = null;
  var G__12661__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12661__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12661 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12661__2.call(this, self__, k);
      case 3:
        return G__12661__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12661
}();
cljs.core.TransientVector.prototype.apply = function(self__, args12660) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12660.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0:else") {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__12662 = i + incr;
        i = G__12662;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if("\ufdd0:else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__12663 = i + 1;
      var G__12664 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__12663;
      out = G__12664;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_12665 = 0;
  while(true) {
    if(i_12665 < l) {
      var k_12666 = ks[i_12665];
      new_obj[k_12666] = obj[k_12666];
      var G__12667 = i_12665 + 1;
      i_12665 = G__12667;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__12670 = null;
  var G__12670__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12670__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12670 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12670__2.call(this, self__, k);
      case 3:
        return G__12670__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12670
}();
cljs.core.ObjMap.prototype.apply = function(self__, args12669) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12669.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__12671 = cljs.core.rest.call(null, keys__$1);
        var G__12672 = init__$2;
        keys__$1 = G__12671;
        init__$1 = G__12672;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__12668_SHARP_) {
      return cljs.core.vector.call(null, p1__12668_SHARP_, self__.strobj[p1__12668_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__12673 = i + 2;
          i = G__12673;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__12674 = i + 2;
          i = G__12674;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__12675 = i + 2;
          i = G__12675;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__12676 = i + 2;
          i = G__12676;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(function() {
    var or__3943__auto__ = goog.isString(k);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return typeof k === "number"
    }
  }()) {
    return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
  }else {
    if(k instanceof cljs.core.Symbol) {
      return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
    }else {
      if(k == null) {
        return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
      }else {
        if("\ufdd0:else") {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_12677 = 0;
  while(true) {
    if(i_12677 < l) {
      narr[i_12677] = arr[i_12677];
      var G__12678 = i_12677 + 1;
      i_12677 = G__12678;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if("\ufdd0:else") {
        var arr__$1 = function() {
          var G__12680 = self__.arr.slice();
          G__12680[idx + 1] = v;
          return G__12680
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__12681 = null;
  var G__12681__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12681__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12681 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12681__2.call(this, self__, k);
      case 3:
        return G__12681__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12681
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args12679) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12679.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__12682 = i + 2;
        var G__12683 = init__$2;
        i = G__12682;
        init__$1 = G__12683;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__12684 = s + 2;
            var G__12685 = d;
            s = G__12684;
            d = G__12685;
            continue
          }else {
            if("\ufdd0:else") {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__12686 = s + 2;
              var G__12687 = d + 2;
              s = G__12686;
              d = G__12687;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__12688_12690 = self__.arr;
      G__12688_12690.pop();
      G__12688_12690.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__12689 = o;
      if(G__12689) {
        if(function() {
          var or__3943__auto__ = G__12689.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12689.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__12689.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12689)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12689)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__12691 = cljs.core.next.call(null, es);
          var G__12692 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__12691;
          tcoll__$1 = G__12692;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__12693 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__12694 = i + 2;
      out = G__12693;
      i = G__12694;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__12697 = arr.slice();
    G__12697[i] = a;
    return G__12697
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__12698 = arr.slice();
    G__12698[i] = a;
    G__12698[j] = b;
    return G__12698
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__12699 = i + 2;
        var G__12700 = init__$2;
        i = G__12699;
        init__$1 = G__12700;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_12701 = 0;
        var j_12702 = 0;
        while(true) {
          if(i_12701 < 32) {
            if((self__.bitmap >>> i_12701 & 1) === 0) {
              var G__12703 = i_12701 + 1;
              var G__12704 = j_12702;
              i_12701 = G__12703;
              j_12702 = G__12704;
              continue
            }else {
              nodes[i_12701] = !(self__.arr[j_12702] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_12702]), self__.arr[j_12702], self__.arr[j_12702 + 1], added_leaf_QMARK_) : self__.arr[j_12702 + 1];
              var G__12705 = i_12701 + 1;
              var G__12706 = j_12702 + 2;
              i_12701 = G__12705;
              j_12702 = G__12706;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if("\ufdd0:else") {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_12707 = 0;
      var j_12708 = 0;
      while(true) {
        if(i_12707 < 32) {
          if((self__.bitmap >>> i_12707 & 1) === 0) {
            var G__12709 = i_12707 + 1;
            var G__12710 = j_12708;
            i_12707 = G__12709;
            j_12708 = G__12710;
            continue
          }else {
            nodes[i_12707] = !(self__.arr[j_12708] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_12708]), self__.arr[j_12708], self__.arr[j_12708 + 1], added_leaf_QMARK_) : self__.arr[j_12708 + 1];
            var G__12711 = i_12707 + 1;
            var G__12712 = j_12708 + 2;
            i_12707 = G__12711;
            j_12708 = G__12712;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__12713 = i + 1;
        var G__12714 = j + 2;
        var G__12715 = bitmap | 1 << i;
        i = G__12713;
        j = G__12714;
        bitmap = G__12715;
        continue
      }else {
        var G__12716 = i + 1;
        var G__12717 = j;
        var G__12718 = bitmap;
        i = G__12716;
        j = G__12717;
        bitmap = G__12718;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if("\ufdd0:else") {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__12719 = i + 1;
          var G__12720 = init__$2;
          i = G__12719;
          init__$1 = G__12720;
          continue
        }
      }else {
        var G__12721 = i + 1;
        var G__12722 = init__$1;
        i = G__12721;
        init__$1 = G__12722;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if("\ufdd0:else") {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__12723 = i + 2;
        i = G__12723;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if("\ufdd0:else") {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__12724 = j + 2;
                j = G__12724;
                continue
              }
            }else {
              var G__12725 = j + 2;
              j = G__12725;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__12726 = j + 1;
              j = G__12726;
              continue
            }
          }else {
            var G__12727 = j + 1;
            j = G__12727;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if("\ufdd0:else") {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if("\ufdd0:else") {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__12729 = null;
  var G__12729__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12729__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12729 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12729__2.call(this, self__, k);
      case 3:
        return G__12729__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12729
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args12728) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12728.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if("\ufdd0:else") {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if("\ufdd0:else") {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__12730 = i + 1;
      var G__12731 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__12730;
      out = G__12731;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__12732 = o;
      if(G__12732) {
        if(function() {
          var or__3943__auto__ = G__12732.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12732.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__12732.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12732)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12732)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__12733 = cljs.core.next.call(null, es);
          var G__12734 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__12733;
          tcoll__$1 = G__12734;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__12735 = ascending_QMARK_ ? t.left : t.right;
      var G__12736 = cljs.core.conj.call(null, stack__$1, t);
      t = G__12735;
      stack__$1 = G__12736;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__12738 = null;
  var G__12738__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__12738__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__12738 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12738__2.call(this, self__, k);
      case 3:
        return G__12738__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12738
}();
cljs.core.BlackNode.prototype.apply = function(self__, args12737) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12737.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__12740 = null;
  var G__12740__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__12740__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__12740 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12740__2.call(this, self__, k);
      case 3:
        return G__12740__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12740
}();
cljs.core.RedNode.prototype.apply = function(self__, args12739) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12739.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0:else") {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0:else") {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__12742 = null;
  var G__12742__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12742__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12742 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12742__2.call(this, self__, k);
      case 3:
        return G__12742__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12742
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args12741) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12741.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__12743 = t.left;
          t = G__12743;
          continue
        }else {
          if("\ufdd0:else") {
            var G__12744 = t.right;
            t = G__12744;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__12745 = cljs.core.conj.call(null, stack, t);
              var G__12746 = t.left;
              stack = G__12745;
              t = G__12746;
              continue
            }else {
              var G__12747 = stack;
              var G__12748 = t.right;
              stack = G__12747;
              t = G__12748;
              continue
            }
          }else {
            if("\ufdd0:else") {
              if(c > 0) {
                var G__12749 = cljs.core.conj.call(null, stack, t);
                var G__12750 = t.right;
                stack = G__12749;
                t = G__12750;
                continue
              }else {
                var G__12751 = stack;
                var G__12752 = t.left;
                stack = G__12751;
                t = G__12752;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__12753 = cljs.core.nnext.call(null, in$);
        var G__12754 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__12753;
        out = G__12754;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__12755) {
    var keyvals = cljs.core.seq(arglist__12755);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__12756) {
    var keyvals = cljs.core.seq(arglist__12756);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__12757 = cljs.core.nnext.call(null, kvs);
        kvs = G__12757;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__12758) {
    var keyvals = cljs.core.seq(arglist__12758);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__12759 = cljs.core.nnext.call(null, in$);
        var G__12760 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__12759;
        out = G__12760;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__12761) {
    var keyvals = cljs.core.seq(arglist__12761);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__12762 = cljs.core.nnext.call(null, in$);
        var G__12763 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__12762;
        out = G__12763;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__12764) {
    var comparator = cljs.core.first(arglist__12764);
    var keyvals = cljs.core.rest(arglist__12764);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12765 = self__.mseq;
    if(G__12765) {
      if(function() {
        var or__3943__auto__ = G__12765.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12765.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12765.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12765)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12765)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12766 = self__.mseq;
    if(G__12766) {
      if(function() {
        var or__3943__auto__ = G__12766.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12766.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12766.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12766)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12766)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12767 = self__.mseq;
    if(G__12767) {
      if(function() {
        var or__3943__auto__ = G__12767.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12767.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12767.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12767)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12767)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12768 = self__.mseq;
    if(G__12768) {
      if(function() {
        var or__3943__auto__ = G__12768.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12768.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12768.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12768)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12768)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__12769_SHARP_, p2__12770_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__12769_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__12770_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__12771) {
    var maps = cljs.core.seq(arglist__12771);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__12772) {
    var f = cljs.core.first(arglist__12772);
    var maps = cljs.core.rest(arglist__12772);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, "\ufdd0:cljs.core/not-found");
      var G__12773 = cljs.core.not_EQ_.call(null, entry, "\ufdd0:cljs.core/not-found") ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__12774 = cljs.core.next.call(null, keys);
      ret = G__12773;
      keys = G__12774;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__12777 = null;
  var G__12777__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12777__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12777 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12777__2.call(this, self__, k);
      case 3:
        return G__12777__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12777
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args12776) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12776.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__12775_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12775_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__12778 = i + 2;
        var G__12779 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__12778;
        out = G__12779;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__12781 = null;
  var G__12781__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__12781__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__12781 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12781__2.call(this, self__, k);
      case 3:
        return G__12781__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12781
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args12780) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12780.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__12784 = null;
  var G__12784__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12784__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12784 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12784__2.call(this, self__, k);
      case 3:
        return G__12784__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12784
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args12783) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12783.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__12782_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12782_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__12785__delegate = function(keys) {
      if(function() {
        var and__3941__auto__ = keys instanceof cljs.core.IndexedSeq;
        if(and__3941__auto__) {
          return keys.arr.length < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD
        }else {
          return and__3941__auto__
        }
      }()) {
        var karr = keys.arr;
        var klen = karr.length;
        var alen = 2 * klen;
        var arr = new Array(alen);
        var ki = 0;
        while(true) {
          if(ki < klen) {
            var ai = 2 * ki;
            arr[ai] = karr[ki];
            arr[ai + 1] = null;
            var G__12786 = ki + 1;
            ki = G__12786;
            continue
          }else {
            return cljs.core.PersistentHashSet.fromArray.call(null, arr, true)
          }
          break
        }
      }else {
        var in$ = keys;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$ == null)) {
            var G__12787 = cljs.core._next.call(null, in$);
            var G__12788 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$));
            in$ = G__12787;
            out = G__12788;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }
    };
    var G__12785 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12785__delegate.call(this, keys)
    };
    G__12785.cljs$lang$maxFixedArity = 0;
    G__12785.cljs$lang$applyTo = function(arglist__12789) {
      var keys = cljs.core.seq(arglist__12789);
      return G__12785__delegate(keys)
    };
    G__12785.cljs$core$IFn$_invoke$arity$variadic = G__12785__delegate;
    return G__12785
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__12790) {
    var keys = cljs.core.seq(arglist__12790);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__12791) {
    var comparator = cljs.core.first(arglist__12791);
    var keys = cljs.core.rest(arglist__12791);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__12792_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__12792_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__12792_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__12799, seen__$1) {
        while(true) {
          var vec__12800 = p__12799;
          var f = cljs.core.nth.call(null, vec__12800, 0, null);
          var xs__$1 = vec__12800;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__12801 = cljs.core.rest.call(null, s);
              var G__12802 = seen__$1;
              p__12799 = G__12801;
              seen__$1 = G__12802;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__12803 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__12804 = cljs.core.next.call(null, s__$1);
      ret = G__12803;
      s__$1 = G__12804;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__12806 = x;
    if(G__12806) {
      if(function() {
        var or__3943__auto__ = G__12806.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12806.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var i = x.lastIndexOf("/", x.length - 2);
        if(i < 0) {
          return cljs.core.subs.call(null, x, 2)
        }else {
          return cljs.core.subs.call(null, x, i + 1)
        }
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__12808 = x;
    if(G__12808) {
      if(function() {
        var or__3943__auto__ = G__12808.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12808.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      var i = x.lastIndexOf("/", x.length - 2);
      if(i > -1) {
        return cljs.core.subs.call(null, x, 2, i)
      }else {
        return null
      }
    }else {
      throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__12809 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__12810 = cljs.core.next.call(null, ks);
      var G__12811 = cljs.core.next.call(null, vs);
      map = G__12809;
      ks = G__12810;
      vs = G__12811;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__12814__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12812_SHARP_, p2__12813_SHARP_) {
        return max_key.call(null, k, p1__12812_SHARP_, p2__12813_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__12814 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12814__delegate.call(this, k, x, y, more)
    };
    G__12814.cljs$lang$maxFixedArity = 3;
    G__12814.cljs$lang$applyTo = function(arglist__12815) {
      var k = cljs.core.first(arglist__12815);
      arglist__12815 = cljs.core.next(arglist__12815);
      var x = cljs.core.first(arglist__12815);
      arglist__12815 = cljs.core.next(arglist__12815);
      var y = cljs.core.first(arglist__12815);
      var more = cljs.core.rest(arglist__12815);
      return G__12814__delegate(k, x, y, more)
    };
    G__12814.cljs$core$IFn$_invoke$arity$variadic = G__12814__delegate;
    return G__12814
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__12818__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12816_SHARP_, p2__12817_SHARP_) {
        return min_key.call(null, k, p1__12816_SHARP_, p2__12817_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__12818 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12818__delegate.call(this, k, x, y, more)
    };
    G__12818.cljs$lang$maxFixedArity = 3;
    G__12818.cljs$lang$applyTo = function(arglist__12819) {
      var k = cljs.core.first(arglist__12819);
      arglist__12819 = cljs.core.next(arglist__12819);
      var x = cljs.core.first(arglist__12819);
      arglist__12819 = cljs.core.next(arglist__12819);
      var y = cljs.core.first(arglist__12819);
      var more = cljs.core.rest(arglist__12819);
      return G__12818__delegate(k, x, y, more)
    };
    G__12818.cljs$core$IFn$_invoke$arity$variadic = G__12818__delegate;
    return G__12818
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__12822 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__12822, 0, null);
        var s = vec__12822;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__12823 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__12823, 0, null);
      var s = vec__12823;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__12826 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__12826, 0, null);
        var s = vec__12826;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__12827 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__12827, 0, null);
      var s = vec__12827;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__12828_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__12828_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__12839 = null;
      var G__12839__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__12839__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__12839__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__12839__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__12839__4 = function() {
        var G__12840__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__12840 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12840__delegate.call(this, x, y, z, args)
        };
        G__12840.cljs$lang$maxFixedArity = 3;
        G__12840.cljs$lang$applyTo = function(arglist__12841) {
          var x = cljs.core.first(arglist__12841);
          arglist__12841 = cljs.core.next(arglist__12841);
          var y = cljs.core.first(arglist__12841);
          arglist__12841 = cljs.core.next(arglist__12841);
          var z = cljs.core.first(arglist__12841);
          var args = cljs.core.rest(arglist__12841);
          return G__12840__delegate(x, y, z, args)
        };
        G__12840.cljs$core$IFn$_invoke$arity$variadic = G__12840__delegate;
        return G__12840
      }();
      G__12839 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12839__0.call(this);
          case 1:
            return G__12839__1.call(this, x);
          case 2:
            return G__12839__2.call(this, x, y);
          case 3:
            return G__12839__3.call(this, x, y, z);
          default:
            return G__12839__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12839.cljs$lang$maxFixedArity = 3;
      G__12839.cljs$lang$applyTo = G__12839__4.cljs$lang$applyTo;
      return G__12839
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__12842 = null;
      var G__12842__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__12842__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__12842__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__12842__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__12842__4 = function() {
        var G__12843__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12843 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12843__delegate.call(this, x, y, z, args)
        };
        G__12843.cljs$lang$maxFixedArity = 3;
        G__12843.cljs$lang$applyTo = function(arglist__12844) {
          var x = cljs.core.first(arglist__12844);
          arglist__12844 = cljs.core.next(arglist__12844);
          var y = cljs.core.first(arglist__12844);
          arglist__12844 = cljs.core.next(arglist__12844);
          var z = cljs.core.first(arglist__12844);
          var args = cljs.core.rest(arglist__12844);
          return G__12843__delegate(x, y, z, args)
        };
        G__12843.cljs$core$IFn$_invoke$arity$variadic = G__12843__delegate;
        return G__12843
      }();
      G__12842 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12842__0.call(this);
          case 1:
            return G__12842__1.call(this, x);
          case 2:
            return G__12842__2.call(this, x, y);
          case 3:
            return G__12842__3.call(this, x, y, z);
          default:
            return G__12842__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12842.cljs$lang$maxFixedArity = 3;
      G__12842.cljs$lang$applyTo = G__12842__4.cljs$lang$applyTo;
      return G__12842
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__12845 = null;
      var G__12845__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__12845__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__12845__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__12845__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__12845__4 = function() {
        var G__12846__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__12846 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12846__delegate.call(this, x, y, z, args)
        };
        G__12846.cljs$lang$maxFixedArity = 3;
        G__12846.cljs$lang$applyTo = function(arglist__12847) {
          var x = cljs.core.first(arglist__12847);
          arglist__12847 = cljs.core.next(arglist__12847);
          var y = cljs.core.first(arglist__12847);
          arglist__12847 = cljs.core.next(arglist__12847);
          var z = cljs.core.first(arglist__12847);
          var args = cljs.core.rest(arglist__12847);
          return G__12846__delegate(x, y, z, args)
        };
        G__12846.cljs$core$IFn$_invoke$arity$variadic = G__12846__delegate;
        return G__12846
      }();
      G__12845 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12845__0.call(this);
          case 1:
            return G__12845__1.call(this, x);
          case 2:
            return G__12845__2.call(this, x, y);
          case 3:
            return G__12845__3.call(this, x, y, z);
          default:
            return G__12845__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12845.cljs$lang$maxFixedArity = 3;
      G__12845.cljs$lang$applyTo = G__12845__4.cljs$lang$applyTo;
      return G__12845
    }()
  };
  var juxt__4 = function() {
    var G__12848__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__12849 = null;
        var G__12849__0 = function() {
          return cljs.core.reduce.call(null, function(p1__12829_SHARP_, p2__12830_SHARP_) {
            return cljs.core.conj.call(null, p1__12829_SHARP_, p2__12830_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12849__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__12831_SHARP_, p2__12832_SHARP_) {
            return cljs.core.conj.call(null, p1__12831_SHARP_, p2__12832_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12849__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__12833_SHARP_, p2__12834_SHARP_) {
            return cljs.core.conj.call(null, p1__12833_SHARP_, p2__12834_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12849__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__12835_SHARP_, p2__12836_SHARP_) {
            return cljs.core.conj.call(null, p1__12835_SHARP_, p2__12836_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12849__4 = function() {
          var G__12850__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__12837_SHARP_, p2__12838_SHARP_) {
              return cljs.core.conj.call(null, p1__12837_SHARP_, cljs.core.apply.call(null, p2__12838_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__12850 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12850__delegate.call(this, x, y, z, args)
          };
          G__12850.cljs$lang$maxFixedArity = 3;
          G__12850.cljs$lang$applyTo = function(arglist__12851) {
            var x = cljs.core.first(arglist__12851);
            arglist__12851 = cljs.core.next(arglist__12851);
            var y = cljs.core.first(arglist__12851);
            arglist__12851 = cljs.core.next(arglist__12851);
            var z = cljs.core.first(arglist__12851);
            var args = cljs.core.rest(arglist__12851);
            return G__12850__delegate(x, y, z, args)
          };
          G__12850.cljs$core$IFn$_invoke$arity$variadic = G__12850__delegate;
          return G__12850
        }();
        G__12849 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__12849__0.call(this);
            case 1:
              return G__12849__1.call(this, x);
            case 2:
              return G__12849__2.call(this, x, y);
            case 3:
              return G__12849__3.call(this, x, y, z);
            default:
              return G__12849__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12849.cljs$lang$maxFixedArity = 3;
        G__12849.cljs$lang$applyTo = G__12849__4.cljs$lang$applyTo;
        return G__12849
      }()
    };
    var G__12848 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12848__delegate.call(this, f, g, h, fs)
    };
    G__12848.cljs$lang$maxFixedArity = 3;
    G__12848.cljs$lang$applyTo = function(arglist__12852) {
      var f = cljs.core.first(arglist__12852);
      arglist__12852 = cljs.core.next(arglist__12852);
      var g = cljs.core.first(arglist__12852);
      arglist__12852 = cljs.core.next(arglist__12852);
      var h = cljs.core.first(arglist__12852);
      var fs = cljs.core.rest(arglist__12852);
      return G__12848__delegate(f, g, h, fs)
    };
    G__12848.cljs$core$IFn$_invoke$arity$variadic = G__12848__delegate;
    return G__12848
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__12853 = cljs.core.next.call(null, coll);
        coll = G__12853;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12854 = n - 1;
        var G__12855 = cljs.core.next.call(null, coll);
        n = G__12854;
        coll = G__12855;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__12857 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__12857, 0, null);
  var flags = cljs.core.nth.call(null, vec__12857, 1, null);
  var pattern = cljs.core.nth.call(null, vec__12857, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__12862_12866 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__12863_12867 = null;
  var count__12864_12868 = 0;
  var i__12865_12869 = 0;
  while(true) {
    if(i__12865_12869 < count__12864_12868) {
      var o_12870 = cljs.core._nth.call(null, chunk__12863_12867, i__12865_12869);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_12870, writer, opts);
      var G__12871 = seq__12862_12866;
      var G__12872 = chunk__12863_12867;
      var G__12873 = count__12864_12868;
      var G__12874 = i__12865_12869 + 1;
      seq__12862_12866 = G__12871;
      chunk__12863_12867 = G__12872;
      count__12864_12868 = G__12873;
      i__12865_12869 = G__12874;
      continue
    }else {
      var temp__4092__auto___12875 = cljs.core.seq.call(null, seq__12862_12866);
      if(temp__4092__auto___12875) {
        var seq__12862_12876__$1 = temp__4092__auto___12875;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12862_12876__$1)) {
          var c__3501__auto___12877 = cljs.core.chunk_first.call(null, seq__12862_12876__$1);
          var G__12878 = cljs.core.chunk_rest.call(null, seq__12862_12876__$1);
          var G__12879 = c__3501__auto___12877;
          var G__12880 = cljs.core.count.call(null, c__3501__auto___12877);
          var G__12881 = 0;
          seq__12862_12866 = G__12878;
          chunk__12863_12867 = G__12879;
          count__12864_12868 = G__12880;
          i__12865_12869 = G__12881;
          continue
        }else {
          var o_12882 = cljs.core.first.call(null, seq__12862_12876__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_12882, writer, opts);
          var G__12883 = cljs.core.next.call(null, seq__12862_12876__$1);
          var G__12884 = null;
          var G__12885 = 0;
          var G__12886 = 0;
          seq__12862_12866 = G__12883;
          chunk__12863_12867 = G__12884;
          count__12864_12868 = G__12885;
          i__12865_12869 = G__12886;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__12891 = cljs.core.seq.call(null, ss);
    var chunk__12892 = null;
    var count__12893 = 0;
    var i__12894 = 0;
    while(true) {
      if(i__12894 < count__12893) {
        var s = cljs.core._nth.call(null, chunk__12892, i__12894);
        cljs.core._write.call(null, writer, s);
        var G__12895 = seq__12891;
        var G__12896 = chunk__12892;
        var G__12897 = count__12893;
        var G__12898 = i__12894 + 1;
        seq__12891 = G__12895;
        chunk__12892 = G__12896;
        count__12893 = G__12897;
        i__12894 = G__12898;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__12891);
        if(temp__4092__auto__) {
          var seq__12891__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__12891__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__12891__$1);
            var G__12899 = cljs.core.chunk_rest.call(null, seq__12891__$1);
            var G__12900 = c__3501__auto__;
            var G__12901 = cljs.core.count.call(null, c__3501__auto__);
            var G__12902 = 0;
            seq__12891 = G__12899;
            chunk__12892 = G__12900;
            count__12893 = G__12901;
            i__12894 = G__12902;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__12891__$1);
            cljs.core._write.call(null, writer, s);
            var G__12903 = cljs.core.next.call(null, seq__12891__$1);
            var G__12904 = null;
            var G__12905 = 0;
            var G__12906 = 0;
            seq__12891 = G__12903;
            chunk__12892 = G__12904;
            count__12893 = G__12905;
            i__12894 = G__12906;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__12907) {
    var writer = cljs.core.first(arglist__12907);
    var ss = cljs.core.rest(arglist__12907);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if("\ufdd0:else") {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, "\ufdd0:meta");
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__12911 = obj;
              if(G__12911) {
                if(function() {
                  var or__3943__auto__ = G__12911.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__12911.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__12911.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12911)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12911)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__12912 = obj;
              if(G__12912) {
                if(function() {
                  var or__3943__auto__ = G__12912.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__12912.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.keyword_QMARK_.call(null, obj)) {
                      cljs.core._write.call(null, writer, ":");
                      var temp__4092__auto___12914 = cljs.core.namespace.call(null, obj);
                      if(cljs.core.truth_(temp__4092__auto___12914)) {
                        var nspc_12915 = temp__4092__auto___12914;
                        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_12915)].join(""), "/")
                      }else {
                      }
                      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                    }else {
                      if(obj instanceof cljs.core.Symbol) {
                        var temp__4092__auto___12916 = cljs.core.namespace.call(null, obj);
                        if(cljs.core.truth_(temp__4092__auto___12916)) {
                          var nspc_12917 = temp__4092__auto___12916;
                          cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_12917)].join(""), "/")
                        }else {
                        }
                        return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                      }else {
                        if("\ufdd0:else") {
                          if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:readably")).call(null, opts))) {
                            return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                          }else {
                            return cljs.core._write.call(null, writer, obj)
                          }
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__12918 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__12918;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__12913 = obj;
                            if(G__12913) {
                              if(function() {
                                var or__3943__auto__ = G__12913.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__12913.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__12913.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__12913)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__12913)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if("\ufdd0:else") {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__12923 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__12924 = null;
  var count__12925 = 0;
  var i__12926 = 0;
  while(true) {
    if(i__12926 < count__12925) {
      var obj = cljs.core._nth.call(null, chunk__12924, i__12926);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__12927 = seq__12923;
      var G__12928 = chunk__12924;
      var G__12929 = count__12925;
      var G__12930 = i__12926 + 1;
      seq__12923 = G__12927;
      chunk__12924 = G__12928;
      count__12925 = G__12929;
      i__12926 = G__12930;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__12923);
      if(temp__4092__auto__) {
        var seq__12923__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12923__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__12923__$1);
          var G__12931 = cljs.core.chunk_rest.call(null, seq__12923__$1);
          var G__12932 = c__3501__auto__;
          var G__12933 = cljs.core.count.call(null, c__3501__auto__);
          var G__12934 = 0;
          seq__12923 = G__12931;
          chunk__12924 = G__12932;
          count__12925 = G__12933;
          i__12926 = G__12934;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__12923__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__12935 = cljs.core.next.call(null, seq__12923__$1);
          var G__12936 = null;
          var G__12937 = 0;
          var G__12938 = 0;
          seq__12923 = G__12935;
          chunk__12924 = G__12936;
          count__12925 = G__12937;
          i__12926 = G__12938;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, "\ufdd0:flush-on-newline"))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__12939) {
    var objs = cljs.core.seq(arglist__12939);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__12940) {
    var objs = cljs.core.seq(arglist__12940);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__12941) {
    var objs = cljs.core.seq(arglist__12941);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__12942) {
    var objs = cljs.core.seq(arglist__12942);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__12943) {
    var objs = cljs.core.seq(arglist__12943);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__12944) {
    var objs = cljs.core.seq(arglist__12944);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__12945) {
    var objs = cljs.core.seq(arglist__12945);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__12946) {
    var objs = cljs.core.seq(arglist__12946);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__12947) {
    var fmt = cljs.core.first(arglist__12947);
    var args = cljs.core.rest(arglist__12947);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__12948 = cljs.core.seq.call(null, self__.watches);
  var chunk__12949 = null;
  var count__12950 = 0;
  var i__12951 = 0;
  while(true) {
    if(i__12951 < count__12950) {
      var vec__12952 = cljs.core._nth.call(null, chunk__12949, i__12951);
      var key = cljs.core.nth.call(null, vec__12952, 0, null);
      var f = cljs.core.nth.call(null, vec__12952, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__12954 = seq__12948;
      var G__12955 = chunk__12949;
      var G__12956 = count__12950;
      var G__12957 = i__12951 + 1;
      seq__12948 = G__12954;
      chunk__12949 = G__12955;
      count__12950 = G__12956;
      i__12951 = G__12957;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__12948);
      if(temp__4092__auto__) {
        var seq__12948__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12948__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__12948__$1);
          var G__12958 = cljs.core.chunk_rest.call(null, seq__12948__$1);
          var G__12959 = c__3501__auto__;
          var G__12960 = cljs.core.count.call(null, c__3501__auto__);
          var G__12961 = 0;
          seq__12948 = G__12958;
          chunk__12949 = G__12959;
          count__12950 = G__12960;
          i__12951 = G__12961;
          continue
        }else {
          var vec__12953 = cljs.core.first.call(null, seq__12948__$1);
          var key = cljs.core.nth.call(null, vec__12953, 0, null);
          var f = cljs.core.nth.call(null, vec__12953, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__12962 = cljs.core.next.call(null, seq__12948__$1);
          var G__12963 = null;
          var G__12964 = 0;
          var G__12965 = 0;
          seq__12948 = G__12962;
          chunk__12949 = G__12963;
          count__12950 = G__12964;
          i__12951 = G__12965;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__12969__delegate = function(x, p__12966) {
      var map__12968 = p__12966;
      var map__12968__$1 = cljs.core.seq_QMARK_.call(null, map__12968) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12968) : map__12968;
      var validator = cljs.core.get.call(null, map__12968__$1, "\ufdd0:validator");
      var meta = cljs.core.get.call(null, map__12968__$1, "\ufdd0:meta");
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__12969 = function(x, var_args) {
      var p__12966 = null;
      if(arguments.length > 1) {
        p__12966 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12969__delegate.call(this, x, p__12966)
    };
    G__12969.cljs$lang$maxFixedArity = 1;
    G__12969.cljs$lang$applyTo = function(arglist__12970) {
      var x = cljs.core.first(arglist__12970);
      var p__12966 = cljs.core.rest(arglist__12970);
      return G__12969__delegate(x, p__12966)
    };
    G__12969.cljs$core$IFn$_invoke$arity$variadic = G__12969__delegate;
    return G__12969
  }();
  atom = function(x, var_args) {
    var p__12966 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___12971 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___12971)) {
    var validate_12972 = temp__4092__auto___12971;
    if(cljs.core.truth_(validate_12972.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_12973 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_12973, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__12974__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__12974 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12974__delegate.call(this, a, f, x, y, z, more)
    };
    G__12974.cljs$lang$maxFixedArity = 5;
    G__12974.cljs$lang$applyTo = function(arglist__12975) {
      var a = cljs.core.first(arglist__12975);
      arglist__12975 = cljs.core.next(arglist__12975);
      var f = cljs.core.first(arglist__12975);
      arglist__12975 = cljs.core.next(arglist__12975);
      var x = cljs.core.first(arglist__12975);
      arglist__12975 = cljs.core.next(arglist__12975);
      var y = cljs.core.first(arglist__12975);
      arglist__12975 = cljs.core.next(arglist__12975);
      var z = cljs.core.first(arglist__12975);
      var more = cljs.core.rest(arglist__12975);
      return G__12974__delegate(a, f, x, y, z, more)
    };
    G__12974.cljs$core$IFn$_invoke$arity$variadic = G__12974__delegate;
    return G__12974
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__12976) {
    var iref = cljs.core.first(arglist__12976);
    arglist__12976 = cljs.core.next(arglist__12976);
    var f = cljs.core.first(arglist__12976);
    var args = cljs.core.rest(arglist__12976);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:done")).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:value")).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__12977) {
    var map__12978 = p__12977;
    var map__12978__$1 = cljs.core.seq_QMARK_.call(null, map__12978) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12978) : map__12978;
    var curr_state = map__12978__$1;
    var done = cljs.core.get.call(null, map__12978__$1, "\ufdd0:done");
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:done", true, "\ufdd0:value", self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__12980 = k;
    if(G__12980) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__12980.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__12980.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__12980)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__12980)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = cljs.core.keyword_QMARK_.call(null, k);
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__12988 = x;
      if(G__12988) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__12988.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__12988.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__12988)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__12988)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__12989_12995 = cljs.core.seq.call(null, x);
            var chunk__12990_12996 = null;
            var count__12991_12997 = 0;
            var i__12992_12998 = 0;
            while(true) {
              if(i__12992_12998 < count__12991_12997) {
                var vec__12993_12999 = cljs.core._nth.call(null, chunk__12990_12996, i__12992_12998);
                var k_13000 = cljs.core.nth.call(null, vec__12993_12999, 0, null);
                var v_13001 = cljs.core.nth.call(null, vec__12993_12999, 1, null);
                m[cljs.core.key__GT_js.call(null, k_13000)] = clj__GT_js.call(null, v_13001);
                var G__13002 = seq__12989_12995;
                var G__13003 = chunk__12990_12996;
                var G__13004 = count__12991_12997;
                var G__13005 = i__12992_12998 + 1;
                seq__12989_12995 = G__13002;
                chunk__12990_12996 = G__13003;
                count__12991_12997 = G__13004;
                i__12992_12998 = G__13005;
                continue
              }else {
                var temp__4092__auto___13006 = cljs.core.seq.call(null, seq__12989_12995);
                if(temp__4092__auto___13006) {
                  var seq__12989_13007__$1 = temp__4092__auto___13006;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__12989_13007__$1)) {
                    var c__3501__auto___13008 = cljs.core.chunk_first.call(null, seq__12989_13007__$1);
                    var G__13009 = cljs.core.chunk_rest.call(null, seq__12989_13007__$1);
                    var G__13010 = c__3501__auto___13008;
                    var G__13011 = cljs.core.count.call(null, c__3501__auto___13008);
                    var G__13012 = 0;
                    seq__12989_12995 = G__13009;
                    chunk__12990_12996 = G__13010;
                    count__12991_12997 = G__13011;
                    i__12992_12998 = G__13012;
                    continue
                  }else {
                    var vec__12994_13013 = cljs.core.first.call(null, seq__12989_13007__$1);
                    var k_13014 = cljs.core.nth.call(null, vec__12994_13013, 0, null);
                    var v_13015 = cljs.core.nth.call(null, vec__12994_13013, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_13014)] = clj__GT_js.call(null, v_13015);
                    var G__13016 = cljs.core.next.call(null, seq__12989_13007__$1);
                    var G__13017 = null;
                    var G__13018 = 0;
                    var G__13019 = 0;
                    seq__12989_12995 = G__13016;
                    chunk__12990_12996 = G__13017;
                    count__12991_12997 = G__13018;
                    i__12992_12998 = G__13019;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if("\ufdd0:else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:keywordize-keys", false], true))
  };
  var js__GT_clj__2 = function() {
    var G__13040__delegate = function(x, opts) {
      if(function() {
        var G__13030 = cljs.core.IEncodeClojure;
        if(G__13030) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__13030.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__13030.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__13030)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__13030)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__13031 = opts;
          var map__13031__$1 = cljs.core.seq_QMARK_.call(null, map__13031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13031) : map__13031;
          var keywordize_keys = cljs.core.get.call(null, map__13031__$1, "\ufdd0:keywordize-keys");
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__13031, map__13031__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3470__auto__ = function(map__13031, map__13031__$1, keywordize_keys, keyfn) {
                          return function iter__13036(s__13037) {
                            return new cljs.core.LazySeq(null, false, function(map__13031, map__13031__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__13037__$1 = s__13037;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__13037__$1);
                                  if(temp__4092__auto__) {
                                    var s__13037__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__13037__$2)) {
                                      var c__3468__auto__ = cljs.core.chunk_first.call(null, s__13037__$2);
                                      var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
                                      var b__13039 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
                                      if(function() {
                                        var i__13038 = 0;
                                        while(true) {
                                          if(i__13038 < size__3469__auto__) {
                                            var k = cljs.core._nth.call(null, c__3468__auto__, i__13038);
                                            cljs.core.chunk_append.call(null, b__13039, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__13041 = i__13038 + 1;
                                            i__13038 = G__13041;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13039), iter__13036.call(null, cljs.core.chunk_rest.call(null, s__13037__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13039), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__13037__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__13036.call(null, cljs.core.rest.call(null, s__13037__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__13031, map__13031__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__13031, map__13031__$1, keywordize_keys, keyfn);
                        return iter__3470__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if("\ufdd0:else") {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__13031, map__13031__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__13040 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13040__delegate.call(this, x, opts)
    };
    G__13040.cljs$lang$maxFixedArity = 1;
    G__13040.cljs$lang$applyTo = function(arglist__13042) {
      var x = cljs.core.first(arglist__13042);
      var opts = cljs.core.rest(arglist__13042);
      return G__13040__delegate(x, opts)
    };
    G__13040.cljs$core$IFn$_invoke$arity$variadic = G__13040__delegate;
    return G__13040
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__13043__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__13043 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13043__delegate.call(this, args)
    };
    G__13043.cljs$lang$maxFixedArity = 0;
    G__13043.cljs$lang$applyTo = function(arglist__13044) {
      var args = cljs.core.seq(arglist__13044);
      return G__13043__delegate(args)
    };
    G__13043.cljs$core$IFn$_invoke$arity$variadic = G__13043__delegate;
    return G__13043
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__13045 = ret;
        f = G__13045;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__13046__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__13046 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13046__delegate.call(this, f, args)
    };
    G__13046.cljs$lang$maxFixedArity = 1;
    G__13046.cljs$lang$applyTo = function(arglist__13047) {
      var f = cljs.core.first(arglist__13047);
      var args = cljs.core.rest(arglist__13047);
      return G__13046__delegate(f, args)
    };
    G__13046.cljs$core$IFn$_invoke$arity$variadic = G__13046__delegate;
    return G__13046
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:descendants", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:ancestors", cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__13048) {
    var f = cljs.core.first(arglist__13048);
    var args = cljs.core.rest(arglist__13048);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__13049 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__13050 = i + 1;
                  ret = G__13049;
                  i = G__13050;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var td = (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h);
    var ta = (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0:ancestors", tf.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag, td, parent, ta), "\ufdd0:descendants", tf.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), parent, ta, tag, td)], 
      true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__13051_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__13051_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__13051_SHARP_), cljs.core.second.call(null, p1__13051_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__13052_SHARP_, p2__13053_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__13052_SHARP_, p2__13053_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__13054 = cljs.core.rest.call(null, ps);
          ps = G__13054;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__13055 = cljs.core.rest.call(null, ps);
            ps = G__13055;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__13058) {
    var vec__13059 = p__13058;
    var k = cljs.core.nth.call(null, vec__13059, 0, null);
    var _ = cljs.core.nth.call(null, vec__13059, 1, null);
    var e = vec__13059;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__13060__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__13060 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__13060__delegate.call(this, _, args)
  };
  G__13060.cljs$lang$maxFixedArity = 1;
  G__13060.cljs$lang$applyTo = function(arglist__13061) {
    var _ = cljs.core.first(arglist__13061);
    var args = cljs.core.rest(arglist__13061);
    return G__13060__delegate(_, args)
  };
  G__13060.cljs$core$IFn$_invoke$arity$variadic = G__13060__delegate;
  return G__13060
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if("\ufdd0:else") {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, 
  new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, 
  "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("chatter_box.protocol");
goog.require("cljs.core");
chatter_box.protocol.build_user = function build_user(username, first, last, img_url) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:first", first, "\ufdd0:last", last, "\ufdd0:img-url", img_url], true)
};
chatter_box.protocol.create_message = function create_message(area, key, data) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", key, "\ufdd0:data", data], true)
};
chatter_box.protocol.login_message = function login_message(username, password) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:password", password], true))
};
chatter_box.protocol.login_failure_message = function login_failure_message(username, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login-failure", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:err", error], true))
};
chatter_box.protocol.login_success_message = function login_success_message(user, existing_users) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login-success", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", user, "\ufdd0:existing-users", existing_users], true))
};
chatter_box.protocol.logout_message = function logout_message(username) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:logout", username)
};
chatter_box.protocol.create_user_message = function create_user_message(username, password, first, last, img_url) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:create", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", chatter_box.protocol.build_user.call(null, username, first, last, img_url), "\ufdd0:password", password], true))
};
chatter_box.protocol.user_created_message = function user_created_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:created", user)
};
chatter_box.protocol.update_user_message = function update_user_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:update", user)
};
chatter_box.protocol.user_updated_message = function user_updated_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:updated", user)
};
chatter_box.protocol.user_error_message = function user_error_message(user, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:error", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", user, "\ufdd0:err", error], true))
};
chatter_box.protocol.user_joined_message = function user_joined_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:join", user)
};
chatter_box.protocol.user_left_message = function user_left_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:left", user)
};
chatter_box.protocol.send_chat_message = function send_chat_message(local_uname, remote_uname, msg) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:send-chat", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:local", local_uname, "\ufdd0:remote", remote_uname, "\ufdd0:text", msg], true))
};
chatter_box.protocol.receive_chat_message = function receive_chat_message(local_uname, remote_uname, msg) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:receive-chat", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:local", local_uname, "\ufdd0:remote", remote_uname, "\ufdd0:text", msg], true))
};
chatter_box.protocol.chat_error_message = function chat_error_message(username, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:error", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:err", error], true))
};
chatter_box.protocol.create_filter = function create_filter(msg_set) {
  return function(msg) {
    var area = (new cljs.core.Keyword("\ufdd0:area")).call(null, msg);
    var ky = (new cljs.core.Keyword("\ufdd0:key")).call(null, msg);
    var or__3943__auto__ = msg_set.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", ky], true));
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return msg_set.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", "\ufdd0:all"], true))
    }
  }
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if(obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed()
  }
  return false
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if(!doc || !goog.userAgent.IE) {
    return undefined
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5)
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || goog.userAgent.IE && goog.userAgent.isVersion("8") || goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_])
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    map[type] = {count_:0, remaining_:0}
  }
  map = map[type];
  if(!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if(!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++
  }else {
    listenerArray = map[srcUid];
    for(var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if(listenerObj.removed) {
          break
        }
        if(!callOnce) {
          listenerArray[i].callOnce = false
        }
        return listenerArray[i]
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if(!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = []
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if(src.addEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture)
    }
  }else {
    src.attachEvent(goog.events.getOnString_(type), proxy)
  }
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if(!listener) {
    return false
  }
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key]
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if(!noObj) {
    if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && opt_obj && goog.events.Listenable.isImplementedBy(opt_obj)) {
      return opt_obj.removeAllListeners(opt_type)
    }
    var srcUid = goog.getUid((opt_obj));
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if(noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }else {
    return goog.events.getListeners_(obj, type, capture) || []
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler)
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " \x3d " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject)
  }
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e)
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return true
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if(goog.isFunction(listener)) {
    return listener
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget)
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if(this.reallyDisposed_) {
      return true
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if(ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for(;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
  }else {
    return goog.events.dispatchEvent(this, e)
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true
  }else {
    goog.events.removeAll(this)
  }
  this.parentEventTarget_ = null
};
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      listenerObj = listenerArray[index];
      if(!callOnce) {
        listenerObj.callOnce = false
      }
      return listenerObj
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index)
    }
    return false
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if(removed) {
      goog.events.cleanUp(key);
      key.removed = true
    }
    return removed
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for(var type in this.eventTargetListeners_) {
      if(!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for(var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true
        }
        listenerArray.length = 0
      }
    }
    return count
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if(!(type in this.eventTargetListeners_)) {
      return true
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for(var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if(listener && !listener.removed && listener.capture == capture) {
        if(listener.callOnce) {
          this.unlistenByKey(listener)
        }
        rv = listener.handleEvent(eventObject) !== false && rv
      }
    }
    return rv && eventObject.returnValue_ != false
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if(listenerArray) {
      for(var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if(listenerObj.capture == capture) {
          rv.push(listenerObj)
        }
      }
    }
    return rv
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if(listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope)
    }
    return i > -1 ? listenerArray[i] : null
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for(var i = 0;i < listenersArray.length;++i) {
        if((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true
        }
      }
      return false
    })
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if(goog.isString(e)) {
      e = new goog.events.Event(e, target)
    }else {
      if(!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent)
      }else {
        e.target = e.target || target
      }
    }
    var rv = true, currentTarget;
    if(opt_ancestorsTree) {
      for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv
      }
    }
    if(!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if(!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    if(opt_ancestorsTree) {
      for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    return rv
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
        return i
      }
    }
    return-1
  }
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col))
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear((col))
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable))
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll((opt_map))
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat())
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid((val))
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal
  }
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " \x3d ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]))
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_)
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"))
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"))
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray((object), sb);
        break
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return""
  }
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_)
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if(opt_scheme) {
    out += opt_scheme + ":"
  }
  if(opt_domain) {
    out += "//";
    if(opt_userInfo) {
      out += opt_userInfo + "@"
    }
    out += opt_domain;
    if(opt_port) {
      out += ":" + opt_port
    }
  }
  if(opt_path) {
    out += opt_path
  }
  if(opt_queryData) {
    out += "?" + opt_queryData
  }
  if(opt_fragment) {
    out += "#" + opt_fragment
  }
  return out
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_))
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if(!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1)
  }
  return scheme ? scheme.toLowerCase() : ""
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for(var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs)
    }
  }else {
    if(value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value))
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  if(opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if(this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS)
          }else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_()
          }
        }finally {
          this.cleanUpXhr_()
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY)
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_()
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if(this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"]
    }
  }catch(e) {
    this.logger_.fine("Can not get responseBody: " + e.message)
  }
  return null
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.fx.TransitionBase");
goog.provide("goog.fx.TransitionBase.State");
goog.require("goog.events.EventTarget");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.fx.TransitionBase = function() {
  goog.base(this);
  this.state_ = goog.fx.TransitionBase.State.STOPPED;
  this.startTime = null;
  this.endTime = null
};
goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
goog.fx.TransitionBase.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.TransitionBase.prototype.play = goog.abstractMethod;
goog.fx.TransitionBase.prototype.stop = goog.abstractMethod;
goog.fx.TransitionBase.prototype.pause = goog.abstractMethod;
goog.fx.TransitionBase.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.TransitionBase.prototype.setStatePlaying = function() {
  this.state_ = goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.setStatePaused = function() {
  this.state_ = goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.setStateStopped = function() {
  this.state_ = goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.isPlaying = function() {
  return this.state_ == goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.isPaused = function() {
  return this.state_ == goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.isStopped = function() {
  return this.state_ == goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.onBegin = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)
};
goog.fx.TransitionBase.prototype.onEnd = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)
};
goog.fx.TransitionBase.prototype.onFinish = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)
};
goog.fx.TransitionBase.prototype.onPause = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)
};
goog.fx.TransitionBase.prototype.onPlay = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)
};
goog.fx.TransitionBase.prototype.onResume = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)
};
goog.fx.TransitionBase.prototype.onStop = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)
};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(type)
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs))
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.provide("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.functions");
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.base(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = false;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = false;
  var raf = this.getRaf_();
  var cancelRaf = this.getCancelRaf_();
  if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
    this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_);
    this.win_.mozRequestAnimationFrame(null);
    this.usingListeners_ = true
  }else {
    if(raf && cancelRaf) {
      this.id_ = raf.call(this.win_, this.callback_)
    }else {
      this.id_ = this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT)
    }
  }
};
goog.async.AnimationDelay.prototype.stop = function() {
  if(this.isActive()) {
    var raf = this.getRaf_();
    var cancelRaf = this.getCancelRaf_();
    if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
      goog.events.unlistenByKey(this.id_)
    }else {
      if(raf && cancelRaf) {
        cancelRaf.call(this.win_, (this.id_))
      }else {
        this.win_.clearTimeout((this.id_))
      }
    }
  }
  this.id_ = null
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.AnimationDelay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return this.id_ != null
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  if(this.usingListeners_ && this.id_) {
    goog.events.unlistenByKey(this.id_)
  }
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now())
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.base(this, "disposeInternal")
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || null
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || win.webkitCancelRequestAnimationFrame || win.mozCancelRequestAnimationFrame || win.oCancelRequestAnimationFrame || win.msCancelRequestAnimationFrame || null
};
goog.provide("goog.fx.anim");
goog.provide("goog.fx.anim.Animated");
goog.require("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.object");
goog.fx.anim.Animated = function() {
};
goog.fx.anim.Animated.prototype.onAnimationFrame;
goog.fx.anim.TIMEOUT = goog.async.AnimationDelay.TIMEOUT;
goog.fx.anim.activeAnimations_ = {};
goog.fx.anim.animationWindow_ = null;
goog.fx.anim.animationDelay_ = null;
goog.fx.anim.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.activeAnimations_[uid] = animation
  }
  goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.anim.activeAnimations_[uid];
  if(goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.cancelAnimationFrame_()
  }
};
goog.fx.anim.tearDown = function() {
  goog.fx.anim.animationWindow_ = null;
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.activeAnimations_ = {}
};
goog.fx.anim.setAnimationWindow = function(animationWindow) {
  var hasTimer = goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.isActive();
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.animationWindow_ = animationWindow;
  if(hasTimer) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.fx.anim.requestAnimationFrame_ = function() {
  if(!goog.fx.anim.animationDelay_) {
    if(goog.fx.anim.animationWindow_) {
      goog.fx.anim.animationDelay_ = new goog.async.AnimationDelay(function(now) {
        goog.fx.anim.cycleAnimations_(now)
      }, goog.fx.anim.animationWindow_)
    }else {
      goog.fx.anim.animationDelay_ = new goog.async.Delay(function() {
        goog.fx.anim.cycleAnimations_(goog.now())
      }, goog.fx.anim.TIMEOUT)
    }
  }
  var delay = goog.fx.anim.animationDelay_;
  if(!delay.isActive()) {
    delay.start()
  }
};
goog.fx.anim.cancelAnimationFrame_ = function() {
  if(goog.fx.anim.animationDelay_) {
    goog.fx.anim.animationDelay_.stop()
  }
};
goog.fx.anim.cycleAnimations_ = function(now) {
  goog.object.forEach(goog.fx.anim.activeAnimations_, function(anim) {
    anim.onAnimationFrame(now)
  });
  if(!goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.TransitionBase.State");
goog.require("goog.fx.anim");
goog.require("goog.fx.anim.Animated");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.base(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = [];
  this.useRightPositioningForRtl_ = false
};
goog.inherits(goog.fx.Animation, goog.fx.TransitionBase);
goog.fx.Animation.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Animation.prototype.isRightPositioningForRtlEnabled = function() {
  return this.useRightPositioningForRtl_
};
goog.fx.Animation.EventType = {PLAY:goog.fx.Transition.EventType.PLAY, BEGIN:goog.fx.Transition.EventType.BEGIN, RESUME:goog.fx.Transition.EventType.RESUME, END:goog.fx.Transition.EventType.END, STOP:goog.fx.Transition.EventType.STOP, FINISH:goog.fx.Transition.EventType.FINISH, PAUSE:goog.fx.Transition.EventType.PAUSE, ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.TIMEOUT = goog.fx.anim.TIMEOUT;
goog.fx.Animation.State = goog.fx.TransitionBase.State;
goog.fx.Animation.setAnimationWindow = function(animationWindow) {
  goog.fx.anim.setAnimationWindow(animationWindow)
};
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.isStopped()) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.isPlaying()) {
      return false
    }
  }
  goog.fx.anim.unregisterAnimation(this);
  var now = (goog.now());
  this.startTime = now;
  if(this.isPaused()) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.setStatePlaying();
  goog.fx.anim.registerAnimation(this);
  this.cycle(now);
  return true
};
goog.fx.Animation.prototype.stop = function(opt_gotoEnd) {
  goog.fx.anim.unregisterAnimation(this);
  this.setStateStopped();
  if(!!opt_gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.isPlaying()) {
    goog.fx.anim.unregisterAnimation(this);
    this.setStatePaused();
    this.onPause()
  }
};
goog.fx.Animation.prototype.getProgress = function() {
  return this.progress
};
goog.fx.Animation.prototype.setProgress = function(progress) {
  this.progress = progress;
  if(this.isPlaying()) {
    var now = goog.now();
    this.startTime = now - this.duration * this.progress;
    this.endTime = this.startTime + this.duration
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(!this.isStopped()) {
    this.stop(false)
  }
  this.onDestroy();
  goog.base(this, "disposeInternal")
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.onAnimationFrame = function(now) {
  this.cycle(now)
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  this.updateCoords_(this.progress);
  if(this.progress == 1) {
    this.setStateStopped();
    goog.fx.anim.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.isPlaying()) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  if(goog.isFunction(this.accel_)) {
    t = this.accel_(t)
  }
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.base(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.getProgress();
  this.fps = anim.fps_;
  this.state = anim.getStateInternal();
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.easing");
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "))
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0))
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y
  }else {
    this.x += tx;
    if(goog.isNumber(opt_ty)) {
      this.y += opt_ty
    }
  }
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if(attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e")
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild))
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild))
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return(element.removeNode(false))
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return(goog.dom.removeNode(element))
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return(node).firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return(node).lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return(node).nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return(node).previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return(node)
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document)
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true))
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if("\x3e" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return(query)
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.removeInstanceForWindow = function(opt_window) {
  var uid = goog.getUid(opt_window || window);
  goog.dispose(goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]);
  delete goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_str = function sel_to_str(input) {
  var item = cljs.core.first.call(null, input);
  var rest = cljs.core.rest.call(null, input);
  var end = cljs.core.empty_QMARK_.call(null, rest) ? cljs.core.list(cljs.core.List.EMPTY) : sel_to_str.call(null, rest);
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.map.call(null, function(p1__10580_SHARP_) {
      return cljs.core.conj.call(null, p1__10580_SHARP_, cljs.core.name.call(null, item))
    }, end)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return cljs.core.map.call(null, function(p1__10581_SHARP_) {
        return cljs.core.conj.call(null, p1__10581_SHARP_, item)
      }, end)
    }else {
      if(cljs.core.set_QMARK_.call(null, item)) {
        return cljs.core.reduce.call(null, function(r1, it) {
          return cljs.core.concat.call(null, r1, cljs.core.map.call(null, function(p1__10582_SHARP_) {
            return cljs.core.conj.call(null, p1__10582_SHARP_, it)
          }, end))
        }, cljs.core.PersistentVector.EMPTY, cljs.core.flatten.call(null, sel_to_str.call(null, item)))
      }else {
        if(cljs.core.coll_QMARK_.call(null, item)) {
          var x1 = sel_to_str.call(null, item);
          var sub = cljs.core.map.call(null, function(x1) {
            return function(p1__10583_SHARP_) {
              return cljs.core.apply.call(null, cljs.core.str, p1__10583_SHARP_)
            }
          }(x1), sel_to_str.call(null, item));
          var iter__3470__auto__ = function iter__14101(s__14102) {
            return new cljs.core.LazySeq(null, false, function() {
              var s__14102__$1 = s__14102;
              while(true) {
                var temp__4092__auto__ = cljs.core.seq.call(null, s__14102__$1);
                if(temp__4092__auto__) {
                  var xs__4579__auto__ = temp__4092__auto__;
                  var s = cljs.core.first.call(null, xs__4579__auto__);
                  var iterys__3466__auto__ = function(s__14102__$1, s, xs__4579__auto__, temp__4092__auto__) {
                    return function iter__14103(s__14104) {
                      return new cljs.core.LazySeq(null, false, function(s__14102__$1, s, xs__4579__auto__, temp__4092__auto__) {
                        return function() {
                          var s__14104__$1 = s__14104;
                          while(true) {
                            var temp__4092__auto____$1 = cljs.core.seq.call(null, s__14104__$1);
                            if(temp__4092__auto____$1) {
                              var s__14104__$2 = temp__4092__auto____$1;
                              if(cljs.core.chunked_seq_QMARK_.call(null, s__14104__$2)) {
                                var c__3468__auto__ = cljs.core.chunk_first.call(null, s__14104__$2);
                                var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
                                var b__14106 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
                                if(function() {
                                  var i__14105 = 0;
                                  while(true) {
                                    if(i__14105 < size__3469__auto__) {
                                      var e = cljs.core._nth.call(null, c__3468__auto__, i__14105);
                                      cljs.core.chunk_append.call(null, b__14106, function() {
                                        cljs.core.println.call(null, s, e);
                                        return cljs.core.conj.call(null, e, s)
                                      }());
                                      var G__14107 = i__14105 + 1;
                                      i__14105 = G__14107;
                                      continue
                                    }else {
                                      return true
                                    }
                                    break
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14106), iter__14103.call(null, cljs.core.chunk_rest.call(null, s__14104__$2)))
                                }else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14106), null)
                                }
                              }else {
                                var e = cljs.core.first.call(null, s__14104__$2);
                                return cljs.core.cons.call(null, function() {
                                  cljs.core.println.call(null, s, e);
                                  return cljs.core.conj.call(null, e, s)
                                }(), iter__14103.call(null, cljs.core.rest.call(null, s__14104__$2)))
                              }
                            }else {
                              return null
                            }
                            break
                          }
                        }
                      }(s__14102__$1, s, xs__4579__auto__, temp__4092__auto__), null)
                    }
                  }(s__14102__$1, s, xs__4579__auto__, temp__4092__auto__);
                  var fs__3467__auto__ = cljs.core.seq.call(null, iterys__3466__auto__.call(null, end));
                  if(fs__3467__auto__) {
                    return cljs.core.concat.call(null, fs__3467__auto__, iter__14101.call(null, cljs.core.rest.call(null, s__14102__$1)))
                  }else {
                    var G__14108 = cljs.core.rest.call(null, s__14102__$1);
                    s__14102__$1 = G__14108;
                    continue
                  }
                }else {
                  return null
                }
                break
              }
            }, null)
          };
          return iter__3470__auto__.call(null, sub)
        }else {
          return null
        }
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    var ors = enfocus.enlive.syntax.sel_to_str.call(null, sel);
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.apply.call(null, cljs.core.concat, cljs.core.interpose.call(null, ",", ors))))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts = function(p__14111) {
    var vec__14112 = p__14111;
    var x = cljs.core.nth.call(null, vec__14112, 0, null);
    var y = cljs.core.nth.call(null, vec__14112, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str(op), cljs.core.str("\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__15758_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__15758_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__14113) {
    var elms = cljs.core.seq(arglist__14113);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$core$IFn$_invoke$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__14114) {
    var elms = cljs.core.seq(arglist__14114);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(arguments.length > 1) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__14115) {
    var x = cljs.core.first(arglist__14115);
    var vals = cljs.core.rest(arglist__14115);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$core$IFn$_invoke$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__14116) {
    var elms = cljs.core.seq(arglist__14116);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$core$IFn$_invoke$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__14117) {
    var elms = cljs.core.seq(arglist__14117);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$core$IFn$_invoke$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__14118) {
    var elms = cljs.core.seq(arglist__14118);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$core$IFn$_invoke$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__14119) {
    var elms = cljs.core.seq(arglist__14119);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_op.cljs$core$IFn$_invoke$arity$2 = nth_op__2;
  nth_op.cljs$core$IFn$_invoke$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_child.cljs$core$IFn$_invoke$arity$1 = nth_child__1;
  nth_child.cljs$core$IFn$_invoke$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_child.cljs$core$IFn$_invoke$arity$1 = nth_last_child__1;
  nth_last_child.cljs$core$IFn$_invoke$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_of_type.cljs$core$IFn$_invoke$arity$1 = nth_of_type__1;
  nth_of_type.cljs$core$IFn$_invoke$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_of_type.cljs$core$IFn$_invoke$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$core$IFn$_invoke$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(arguments.length > 0) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__14120) {
    var sel = cljs.core.seq(arglist__14120);
    return but__delegate(sel)
  };
  but.cljs$core$IFn$_invoke$arity$variadic = but__delegate;
  return but
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0:else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__14080 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__14081 = limit__$1 - 1;
            var G__14082 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__14080;
            limit__$1 = G__14081;
            parts = G__14082;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__14083 = index - 1;
        index = G__14083;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___14084 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___14084)) {
        var replacement_14085 = temp__4090__auto___14084;
        buffer.append([cljs.core.str(replacement_14085)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__14086 = index + 1;
      index = G__14086;
      continue
    }
    break
  }
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"Webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"Moz"
    }else {
      if(goog.userAgent.IE) {
        return"ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"O"
        }
      }
    }
  }
  return null
};
goog.dom.vendor.getVendorPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"-webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"-moz"
    }else {
      if(goog.userAgent.IE) {
        return"-ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"-o"
        }
      }
    }
  }
  return null
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y
  }else {
    this.left += tx;
    this.right += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty
    }
  }
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y
  }else {
    this.left += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty
    }
  }
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if(propertyName) {
    element.style[propertyName] = value
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if(typeof styleValue !== "undefined") {
    return styleValue
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return(rect)
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent)
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h))
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div_14078 = document.createElement("div");
var test_html_14079 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_14078.innerHTML = test_html_14079;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_14078.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_14078.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_14078.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_13653 = cljs.core.PersistentVector.fromArray([1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], true);
var table_section_wrapper_13654 = cljs.core.PersistentVector.fromArray([1, "\x3ctable\x3e", "\x3c/table\x3e"], true);
var cell_wrapper_13655 = cljs.core.PersistentVector.fromArray([3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], true);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["col", "\ufdd0:default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], [cljs.core.PersistentVector.fromArray([2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], true), cljs.core.PersistentVector.fromArray([0, "", ""], true), table_section_wrapper_13654, table_section_wrapper_13654, opt_wrapper_13653, cljs.core.PersistentVector.fromArray([1, 
"\x3cfieldset\x3e", "\x3c/fieldset\x3e"], true), cljs.core.PersistentVector.fromArray([1, "\x3cmap\x3e", "\x3c/map\x3e"], true), cell_wrapper_13655, table_section_wrapper_13654, cell_wrapper_13655, opt_wrapper_13653, table_section_wrapper_13654, cljs.core.PersistentVector.fromArray([2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], true), table_section_wrapper_13654]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = function() {
    var and__3941__auto__ = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3941__auto__) {
      return no_tbody_QMARK_
    }else {
      return and__3941__auto__
    }
  }() ? function() {
    var and__3941__auto__ = div.firstChild;
    if(cljs.core.truth_(and__3941__auto__)) {
      return div.firstChild.childNodes
    }else {
      return and__3941__auto__
    }
  }() : function() {
    var and__3941__auto__ = cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e");
    if(and__3941__auto__) {
      return no_tbody_QMARK_
    }else {
      return and__3941__auto__
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var seq__13660 = cljs.core.seq.call(null, tbody);
  var chunk__13661 = null;
  var count__13662 = 0;
  var i__13663 = 0;
  while(true) {
    if(i__13663 < count__13662) {
      var child = cljs.core._nth.call(null, chunk__13661, i__13663);
      if(function() {
        var and__3941__auto__ = cljs.core._EQ_.call(null, child.nodeName, "tbody");
        if(and__3941__auto__) {
          return cljs.core._EQ_.call(null, child.childNodes.length, 0)
        }else {
          return and__3941__auto__
        }
      }()) {
        child.parentNode.removeChild(child)
      }else {
      }
      var G__13664 = seq__13660;
      var G__13665 = chunk__13661;
      var G__13666 = count__13662;
      var G__13667 = i__13663 + 1;
      seq__13660 = G__13664;
      chunk__13661 = G__13665;
      count__13662 = G__13666;
      i__13663 = G__13667;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13660);
      if(temp__4092__auto__) {
        var seq__13660__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13660__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13660__$1);
          var G__13668 = cljs.core.chunk_rest.call(null, seq__13660__$1);
          var G__13669 = c__3501__auto__;
          var G__13670 = cljs.core.count.call(null, c__3501__auto__);
          var G__13671 = 0;
          seq__13660 = G__13668;
          chunk__13661 = G__13669;
          count__13662 = G__13670;
          i__13663 = G__13671;
          continue
        }else {
          var child = cljs.core.first.call(null, seq__13660__$1);
          if(function() {
            var and__3941__auto__ = cljs.core._EQ_.call(null, child.nodeName, "tbody");
            if(and__3941__auto__) {
              return cljs.core._EQ_.call(null, child.childNodes.length, 0)
            }else {
              return and__3941__auto__
            }
          }()) {
            child.parentNode.removeChild(child)
          }else {
          }
          var G__13672 = cljs.core.next.call(null, seq__13660__$1);
          var G__13673 = null;
          var G__13674 = 0;
          var G__13675 = 0;
          seq__13660 = G__13672;
          chunk__13661 = G__13673;
          count__13662 = G__13674;
          i__13663 = G__13675;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__13677 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword("\ufdd0:default")).call(null, domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__13677, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__13677, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__13677, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str(start_wrap), cljs.core.str(html__$1), cljs.core.str(end_wrap)].join("");
      return div
    }();
    var level = depth;
    while(true) {
      if(level > 0) {
        var G__13678 = wrapper.lastChild;
        var G__13679 = level - 1;
        wrapper = G__13678;
        level = G__13679;
        continue
      }else {
        return wrapper
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3941__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1)
    }else {
      return and__3941__auto__
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1)
  }else {
  }
  return div.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3941__auto__ = content;
    if(and__3941__auto__) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__3370__auto__ = content == null ? null : content;
    return function() {
      var or__3943__auto__ = domina.nodes[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.nodes["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3941__auto__ = nodeseq;
    if(and__3941__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__3370__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3943__auto__ = domina.single_node[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.single_node["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3941__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3941__auto__
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__13680) {
    var mesg = cljs.core.seq(arglist__13680);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__13681) {
    var mesg = cljs.core.seq(arglist__13681);
    return log__delegate(mesg)
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(typeof domina.domina.t13685 !== "undefined") {
  }else {
    goog.provide("domina.t13685");
    domina.t13685 = function(class_name, by_class, meta13686) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta13686 = meta13686;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t13685.cljs$lang$type = true;
    domina.t13685.cljs$lang$ctorStr = "domina/t13685";
    domina.t13685.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "domina/t13685")
    };
    domina.t13685.prototype.domina$DomContent$ = true;
    domina.t13685.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var self__ = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, self__.class_name)))
    };
    domina.t13685.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var self__ = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, self__.class_name)))
    };
    domina.t13685.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13687) {
      var self__ = this;
      return self__.meta13686
    };
    domina.t13685.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13687, meta13686__$1) {
      var self__ = this;
      return new domina.t13685(self__.class_name, self__.by_class, meta13686__$1)
    };
    domina.__GT_t13685 = function __GT_t13685(class_name__$1, by_class__$1, meta13686) {
      return new domina.t13685(class_name__$1, by_class__$1, meta13686)
    }
  }
  return new domina.t13685(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__13688) {
    var contents = cljs.core.seq(arglist__13688);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__13689_SHARP_) {
    return p1__13689_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__13690_SHARP_, p2__13691_SHARP_) {
    return goog.dom.insertChildAt(p1__13690_SHARP_, p2__13691_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__13693_SHARP_, p2__13692_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__13692_SHARP_, p1__13693_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__13695_SHARP_, p2__13694_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__13694_SHARP_, p1__13695_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__13697_SHARP_, p2__13696_SHARP_) {
    return goog.dom.replaceNode(p2__13696_SHARP_, p1__13697_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null
  }else {
    return s
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__13702_13706 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__13703_13707 = null;
    var count__13704_13708 = 0;
    var i__13705_13709 = 0;
    while(true) {
      if(i__13705_13709 < count__13704_13708) {
        var n_13710 = cljs.core._nth.call(null, chunk__13703_13707, i__13705_13709);
        goog.style.setStyle(n_13710, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__13711 = seq__13702_13706;
        var G__13712 = chunk__13703_13707;
        var G__13713 = count__13704_13708;
        var G__13714 = i__13705_13709 + 1;
        seq__13702_13706 = G__13711;
        chunk__13703_13707 = G__13712;
        count__13704_13708 = G__13713;
        i__13705_13709 = G__13714;
        continue
      }else {
        var temp__4092__auto___13715 = cljs.core.seq.call(null, seq__13702_13706);
        if(temp__4092__auto___13715) {
          var seq__13702_13716__$1 = temp__4092__auto___13715;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13702_13716__$1)) {
            var c__3501__auto___13717 = cljs.core.chunk_first.call(null, seq__13702_13716__$1);
            var G__13718 = cljs.core.chunk_rest.call(null, seq__13702_13716__$1);
            var G__13719 = c__3501__auto___13717;
            var G__13720 = cljs.core.count.call(null, c__3501__auto___13717);
            var G__13721 = 0;
            seq__13702_13706 = G__13718;
            chunk__13703_13707 = G__13719;
            count__13704_13708 = G__13720;
            i__13705_13709 = G__13721;
            continue
          }else {
            var n_13722 = cljs.core.first.call(null, seq__13702_13716__$1);
            goog.style.setStyle(n_13722, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__13723 = cljs.core.next.call(null, seq__13702_13716__$1);
            var G__13724 = null;
            var G__13725 = 0;
            var G__13726 = 0;
            seq__13702_13706 = G__13723;
            chunk__13703_13707 = G__13724;
            count__13704_13708 = G__13725;
            i__13705_13709 = G__13726;
            continue
          }
        }else {
        }
      }
      break
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__13727) {
    var content = cljs.core.first(arglist__13727);
    arglist__13727 = cljs.core.next(arglist__13727);
    var name = cljs.core.first(arglist__13727);
    var value = cljs.core.rest(arglist__13727);
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__13732_13736 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__13733_13737 = null;
    var count__13734_13738 = 0;
    var i__13735_13739 = 0;
    while(true) {
      if(i__13735_13739 < count__13734_13738) {
        var n_13740 = cljs.core._nth.call(null, chunk__13733_13737, i__13735_13739);
        n_13740.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__13741 = seq__13732_13736;
        var G__13742 = chunk__13733_13737;
        var G__13743 = count__13734_13738;
        var G__13744 = i__13735_13739 + 1;
        seq__13732_13736 = G__13741;
        chunk__13733_13737 = G__13742;
        count__13734_13738 = G__13743;
        i__13735_13739 = G__13744;
        continue
      }else {
        var temp__4092__auto___13745 = cljs.core.seq.call(null, seq__13732_13736);
        if(temp__4092__auto___13745) {
          var seq__13732_13746__$1 = temp__4092__auto___13745;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13732_13746__$1)) {
            var c__3501__auto___13747 = cljs.core.chunk_first.call(null, seq__13732_13746__$1);
            var G__13748 = cljs.core.chunk_rest.call(null, seq__13732_13746__$1);
            var G__13749 = c__3501__auto___13747;
            var G__13750 = cljs.core.count.call(null, c__3501__auto___13747);
            var G__13751 = 0;
            seq__13732_13736 = G__13748;
            chunk__13733_13737 = G__13749;
            count__13734_13738 = G__13750;
            i__13735_13739 = G__13751;
            continue
          }else {
            var n_13752 = cljs.core.first.call(null, seq__13732_13746__$1);
            n_13752.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__13753 = cljs.core.next.call(null, seq__13732_13746__$1);
            var G__13754 = null;
            var G__13755 = 0;
            var G__13756 = 0;
            seq__13732_13736 = G__13753;
            chunk__13733_13737 = G__13754;
            count__13734_13738 = G__13755;
            i__13735_13739 = G__13756;
            continue
          }
        }else {
        }
      }
      break
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__13757) {
    var content = cljs.core.first(arglist__13757);
    arglist__13757 = cljs.core.next(arglist__13757);
    var name = cljs.core.first(arglist__13757);
    var value = cljs.core.rest(arglist__13757);
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__13762_13766 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__13763_13767 = null;
  var count__13764_13768 = 0;
  var i__13765_13769 = 0;
  while(true) {
    if(i__13765_13769 < count__13764_13768) {
      var n_13770 = cljs.core._nth.call(null, chunk__13763_13767, i__13765_13769);
      n_13770.removeAttribute(cljs.core.name.call(null, name));
      var G__13771 = seq__13762_13766;
      var G__13772 = chunk__13763_13767;
      var G__13773 = count__13764_13768;
      var G__13774 = i__13765_13769 + 1;
      seq__13762_13766 = G__13771;
      chunk__13763_13767 = G__13772;
      count__13764_13768 = G__13773;
      i__13765_13769 = G__13774;
      continue
    }else {
      var temp__4092__auto___13775 = cljs.core.seq.call(null, seq__13762_13766);
      if(temp__4092__auto___13775) {
        var seq__13762_13776__$1 = temp__4092__auto___13775;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13762_13776__$1)) {
          var c__3501__auto___13777 = cljs.core.chunk_first.call(null, seq__13762_13776__$1);
          var G__13778 = cljs.core.chunk_rest.call(null, seq__13762_13776__$1);
          var G__13779 = c__3501__auto___13777;
          var G__13780 = cljs.core.count.call(null, c__3501__auto___13777);
          var G__13781 = 0;
          seq__13762_13766 = G__13778;
          chunk__13763_13767 = G__13779;
          count__13764_13768 = G__13780;
          i__13765_13769 = G__13781;
          continue
        }else {
          var n_13782 = cljs.core.first.call(null, seq__13762_13776__$1);
          n_13782.removeAttribute(cljs.core.name.call(null, name));
          var G__13783 = cljs.core.next.call(null, seq__13762_13776__$1);
          var G__13784 = null;
          var G__13785 = 0;
          var G__13786 = 0;
          seq__13762_13766 = G__13783;
          chunk__13763_13767 = G__13784;
          count__13764_13768 = G__13785;
          i__13765_13769 = G__13786;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__13788 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__13788, 0, null);
    var v = cljs.core.nth.call(null, vec__13788, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = k;
      if(cljs.core.truth_(and__3941__auto__)) {
        return v
      }else {
        return and__3941__auto__
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v)
    }else {
      return acc
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style)) {
    return domina.parse_style_attributes.call(null, style)
  }else {
    if(cljs.core.truth_(style.cssText)) {
      return domina.parse_style_attributes.call(null, style.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__13789_SHARP_) {
    var attr = attrs__$1.item(p1__13789_SHARP_);
    var value = attr.nodeValue;
    if(function() {
      var and__3941__auto__ = cljs.core.not_EQ_.call(null, null, value);
      if(and__3941__auto__) {
        return cljs.core.not_EQ_.call(null, "", value)
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true)
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__$1.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__13796_13802 = cljs.core.seq.call(null, styles);
  var chunk__13797_13803 = null;
  var count__13798_13804 = 0;
  var i__13799_13805 = 0;
  while(true) {
    if(i__13799_13805 < count__13798_13804) {
      var vec__13800_13806 = cljs.core._nth.call(null, chunk__13797_13803, i__13799_13805);
      var name_13807 = cljs.core.nth.call(null, vec__13800_13806, 0, null);
      var value_13808 = cljs.core.nth.call(null, vec__13800_13806, 1, null);
      domina.set_style_BANG_.call(null, content, name_13807, value_13808);
      var G__13809 = seq__13796_13802;
      var G__13810 = chunk__13797_13803;
      var G__13811 = count__13798_13804;
      var G__13812 = i__13799_13805 + 1;
      seq__13796_13802 = G__13809;
      chunk__13797_13803 = G__13810;
      count__13798_13804 = G__13811;
      i__13799_13805 = G__13812;
      continue
    }else {
      var temp__4092__auto___13813 = cljs.core.seq.call(null, seq__13796_13802);
      if(temp__4092__auto___13813) {
        var seq__13796_13814__$1 = temp__4092__auto___13813;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13796_13814__$1)) {
          var c__3501__auto___13815 = cljs.core.chunk_first.call(null, seq__13796_13814__$1);
          var G__13816 = cljs.core.chunk_rest.call(null, seq__13796_13814__$1);
          var G__13817 = c__3501__auto___13815;
          var G__13818 = cljs.core.count.call(null, c__3501__auto___13815);
          var G__13819 = 0;
          seq__13796_13802 = G__13816;
          chunk__13797_13803 = G__13817;
          count__13798_13804 = G__13818;
          i__13799_13805 = G__13819;
          continue
        }else {
          var vec__13801_13820 = cljs.core.first.call(null, seq__13796_13814__$1);
          var name_13821 = cljs.core.nth.call(null, vec__13801_13820, 0, null);
          var value_13822 = cljs.core.nth.call(null, vec__13801_13820, 1, null);
          domina.set_style_BANG_.call(null, content, name_13821, value_13822);
          var G__13823 = cljs.core.next.call(null, seq__13796_13814__$1);
          var G__13824 = null;
          var G__13825 = 0;
          var G__13826 = 0;
          seq__13796_13802 = G__13823;
          chunk__13797_13803 = G__13824;
          count__13798_13804 = G__13825;
          i__13799_13805 = G__13826;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__13833_13839 = cljs.core.seq.call(null, attrs);
  var chunk__13834_13840 = null;
  var count__13835_13841 = 0;
  var i__13836_13842 = 0;
  while(true) {
    if(i__13836_13842 < count__13835_13841) {
      var vec__13837_13843 = cljs.core._nth.call(null, chunk__13834_13840, i__13836_13842);
      var name_13844 = cljs.core.nth.call(null, vec__13837_13843, 0, null);
      var value_13845 = cljs.core.nth.call(null, vec__13837_13843, 1, null);
      domina.set_attr_BANG_.call(null, content, name_13844, value_13845);
      var G__13846 = seq__13833_13839;
      var G__13847 = chunk__13834_13840;
      var G__13848 = count__13835_13841;
      var G__13849 = i__13836_13842 + 1;
      seq__13833_13839 = G__13846;
      chunk__13834_13840 = G__13847;
      count__13835_13841 = G__13848;
      i__13836_13842 = G__13849;
      continue
    }else {
      var temp__4092__auto___13850 = cljs.core.seq.call(null, seq__13833_13839);
      if(temp__4092__auto___13850) {
        var seq__13833_13851__$1 = temp__4092__auto___13850;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13833_13851__$1)) {
          var c__3501__auto___13852 = cljs.core.chunk_first.call(null, seq__13833_13851__$1);
          var G__13853 = cljs.core.chunk_rest.call(null, seq__13833_13851__$1);
          var G__13854 = c__3501__auto___13852;
          var G__13855 = cljs.core.count.call(null, c__3501__auto___13852);
          var G__13856 = 0;
          seq__13833_13839 = G__13853;
          chunk__13834_13840 = G__13854;
          count__13835_13841 = G__13855;
          i__13836_13842 = G__13856;
          continue
        }else {
          var vec__13838_13857 = cljs.core.first.call(null, seq__13833_13851__$1);
          var name_13858 = cljs.core.nth.call(null, vec__13838_13857, 0, null);
          var value_13859 = cljs.core.nth.call(null, vec__13838_13857, 1, null);
          domina.set_attr_BANG_.call(null, content, name_13858, value_13859);
          var G__13860 = cljs.core.next.call(null, seq__13833_13851__$1);
          var G__13861 = null;
          var G__13862 = 0;
          var G__13863 = 0;
          seq__13833_13839 = G__13860;
          chunk__13834_13840 = G__13861;
          count__13835_13841 = G__13862;
          i__13836_13842 = G__13863;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__13868_13872 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__13869_13873 = null;
  var count__13870_13874 = 0;
  var i__13871_13875 = 0;
  while(true) {
    if(i__13871_13875 < count__13870_13874) {
      var node_13876 = cljs.core._nth.call(null, chunk__13869_13873, i__13871_13875);
      goog.dom.classes.add(node_13876, class$);
      var G__13877 = seq__13868_13872;
      var G__13878 = chunk__13869_13873;
      var G__13879 = count__13870_13874;
      var G__13880 = i__13871_13875 + 1;
      seq__13868_13872 = G__13877;
      chunk__13869_13873 = G__13878;
      count__13870_13874 = G__13879;
      i__13871_13875 = G__13880;
      continue
    }else {
      var temp__4092__auto___13881 = cljs.core.seq.call(null, seq__13868_13872);
      if(temp__4092__auto___13881) {
        var seq__13868_13882__$1 = temp__4092__auto___13881;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13868_13882__$1)) {
          var c__3501__auto___13883 = cljs.core.chunk_first.call(null, seq__13868_13882__$1);
          var G__13884 = cljs.core.chunk_rest.call(null, seq__13868_13882__$1);
          var G__13885 = c__3501__auto___13883;
          var G__13886 = cljs.core.count.call(null, c__3501__auto___13883);
          var G__13887 = 0;
          seq__13868_13872 = G__13884;
          chunk__13869_13873 = G__13885;
          count__13870_13874 = G__13886;
          i__13871_13875 = G__13887;
          continue
        }else {
          var node_13888 = cljs.core.first.call(null, seq__13868_13882__$1);
          goog.dom.classes.add(node_13888, class$);
          var G__13889 = cljs.core.next.call(null, seq__13868_13882__$1);
          var G__13890 = null;
          var G__13891 = 0;
          var G__13892 = 0;
          seq__13868_13872 = G__13889;
          chunk__13869_13873 = G__13890;
          count__13870_13874 = G__13891;
          i__13871_13875 = G__13892;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__13897_13901 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__13898_13902 = null;
  var count__13899_13903 = 0;
  var i__13900_13904 = 0;
  while(true) {
    if(i__13900_13904 < count__13899_13903) {
      var node_13905 = cljs.core._nth.call(null, chunk__13898_13902, i__13900_13904);
      goog.dom.classes.remove(node_13905, class$);
      var G__13906 = seq__13897_13901;
      var G__13907 = chunk__13898_13902;
      var G__13908 = count__13899_13903;
      var G__13909 = i__13900_13904 + 1;
      seq__13897_13901 = G__13906;
      chunk__13898_13902 = G__13907;
      count__13899_13903 = G__13908;
      i__13900_13904 = G__13909;
      continue
    }else {
      var temp__4092__auto___13910 = cljs.core.seq.call(null, seq__13897_13901);
      if(temp__4092__auto___13910) {
        var seq__13897_13911__$1 = temp__4092__auto___13910;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13897_13911__$1)) {
          var c__3501__auto___13912 = cljs.core.chunk_first.call(null, seq__13897_13911__$1);
          var G__13913 = cljs.core.chunk_rest.call(null, seq__13897_13911__$1);
          var G__13914 = c__3501__auto___13912;
          var G__13915 = cljs.core.count.call(null, c__3501__auto___13912);
          var G__13916 = 0;
          seq__13897_13901 = G__13913;
          chunk__13898_13902 = G__13914;
          count__13899_13903 = G__13915;
          i__13900_13904 = G__13916;
          continue
        }else {
          var node_13917 = cljs.core.first.call(null, seq__13897_13911__$1);
          goog.dom.classes.remove(node_13917, class$);
          var G__13918 = cljs.core.next.call(null, seq__13897_13911__$1);
          var G__13919 = null;
          var G__13920 = 0;
          var G__13921 = 0;
          seq__13897_13901 = G__13918;
          chunk__13898_13902 = G__13919;
          count__13899_13903 = G__13920;
          i__13900_13904 = G__13921;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_13930__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__13926_13931 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__13927_13932 = null;
  var count__13928_13933 = 0;
  var i__13929_13934 = 0;
  while(true) {
    if(i__13929_13934 < count__13928_13933) {
      var node_13935 = cljs.core._nth.call(null, chunk__13927_13932, i__13929_13934);
      goog.dom.classes.set(node_13935, classes_13930__$1);
      var G__13936 = seq__13926_13931;
      var G__13937 = chunk__13927_13932;
      var G__13938 = count__13928_13933;
      var G__13939 = i__13929_13934 + 1;
      seq__13926_13931 = G__13936;
      chunk__13927_13932 = G__13937;
      count__13928_13933 = G__13938;
      i__13929_13934 = G__13939;
      continue
    }else {
      var temp__4092__auto___13940 = cljs.core.seq.call(null, seq__13926_13931);
      if(temp__4092__auto___13940) {
        var seq__13926_13941__$1 = temp__4092__auto___13940;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13926_13941__$1)) {
          var c__3501__auto___13942 = cljs.core.chunk_first.call(null, seq__13926_13941__$1);
          var G__13943 = cljs.core.chunk_rest.call(null, seq__13926_13941__$1);
          var G__13944 = c__3501__auto___13942;
          var G__13945 = cljs.core.count.call(null, c__3501__auto___13942);
          var G__13946 = 0;
          seq__13926_13931 = G__13943;
          chunk__13927_13932 = G__13944;
          count__13928_13933 = G__13945;
          i__13929_13934 = G__13946;
          continue
        }else {
          var node_13947 = cljs.core.first.call(null, seq__13926_13941__$1);
          goog.dom.classes.set(node_13947, classes_13930__$1);
          var G__13948 = cljs.core.next.call(null, seq__13926_13941__$1);
          var G__13949 = null;
          var G__13950 = 0;
          var G__13951 = 0;
          seq__13926_13931 = G__13948;
          chunk__13927_13932 = G__13949;
          count__13928_13933 = G__13950;
          i__13929_13934 = G__13951;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__13956_13960 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__13957_13961 = null;
  var count__13958_13962 = 0;
  var i__13959_13963 = 0;
  while(true) {
    if(i__13959_13963 < count__13958_13962) {
      var node_13964 = cljs.core._nth.call(null, chunk__13957_13961, i__13959_13963);
      goog.dom.setTextContent(node_13964, value);
      var G__13965 = seq__13956_13960;
      var G__13966 = chunk__13957_13961;
      var G__13967 = count__13958_13962;
      var G__13968 = i__13959_13963 + 1;
      seq__13956_13960 = G__13965;
      chunk__13957_13961 = G__13966;
      count__13958_13962 = G__13967;
      i__13959_13963 = G__13968;
      continue
    }else {
      var temp__4092__auto___13969 = cljs.core.seq.call(null, seq__13956_13960);
      if(temp__4092__auto___13969) {
        var seq__13956_13970__$1 = temp__4092__auto___13969;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13956_13970__$1)) {
          var c__3501__auto___13971 = cljs.core.chunk_first.call(null, seq__13956_13970__$1);
          var G__13972 = cljs.core.chunk_rest.call(null, seq__13956_13970__$1);
          var G__13973 = c__3501__auto___13971;
          var G__13974 = cljs.core.count.call(null, c__3501__auto___13971);
          var G__13975 = 0;
          seq__13956_13960 = G__13972;
          chunk__13957_13961 = G__13973;
          count__13958_13962 = G__13974;
          i__13959_13963 = G__13975;
          continue
        }else {
          var node_13976 = cljs.core.first.call(null, seq__13956_13970__$1);
          goog.dom.setTextContent(node_13976, value);
          var G__13977 = cljs.core.next.call(null, seq__13956_13970__$1);
          var G__13978 = null;
          var G__13979 = 0;
          var G__13980 = 0;
          seq__13956_13960 = G__13977;
          chunk__13957_13961 = G__13978;
          count__13958_13962 = G__13979;
          i__13959_13963 = G__13980;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__13985_13989 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__13986_13990 = null;
  var count__13987_13991 = 0;
  var i__13988_13992 = 0;
  while(true) {
    if(i__13988_13992 < count__13987_13991) {
      var node_13993 = cljs.core._nth.call(null, chunk__13986_13990, i__13988_13992);
      goog.dom.forms.setValue(node_13993, value);
      var G__13994 = seq__13985_13989;
      var G__13995 = chunk__13986_13990;
      var G__13996 = count__13987_13991;
      var G__13997 = i__13988_13992 + 1;
      seq__13985_13989 = G__13994;
      chunk__13986_13990 = G__13995;
      count__13987_13991 = G__13996;
      i__13988_13992 = G__13997;
      continue
    }else {
      var temp__4092__auto___13998 = cljs.core.seq.call(null, seq__13985_13989);
      if(temp__4092__auto___13998) {
        var seq__13985_13999__$1 = temp__4092__auto___13998;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13985_13999__$1)) {
          var c__3501__auto___14000 = cljs.core.chunk_first.call(null, seq__13985_13999__$1);
          var G__14001 = cljs.core.chunk_rest.call(null, seq__13985_13999__$1);
          var G__14002 = c__3501__auto___14000;
          var G__14003 = cljs.core.count.call(null, c__3501__auto___14000);
          var G__14004 = 0;
          seq__13985_13989 = G__14001;
          chunk__13986_13990 = G__14002;
          count__13987_13991 = G__14003;
          i__13988_13992 = G__14004;
          continue
        }else {
          var node_14005 = cljs.core.first.call(null, seq__13985_13999__$1);
          goog.dom.forms.setValue(node_14005, value);
          var G__14006 = cljs.core.next.call(null, seq__13985_13999__$1);
          var G__14007 = null;
          var G__14008 = 0;
          var G__14009 = 0;
          seq__13985_13989 = G__14006;
          chunk__13986_13990 = G__14007;
          count__13987_13991 = G__14008;
          i__13988_13992 = G__14009;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = allows_inner_html_QMARK_;
    if(and__3941__auto__) {
      var and__3941__auto____$1 = function() {
        var or__3943__auto__ = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_)
        }
      }();
      if(cljs.core.truth_(and__3941__auto____$1)) {
        return!special_tag_QMARK_
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    var value_14020 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__14016_14021 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__14017_14022 = null;
      var count__14018_14023 = 0;
      var i__14019_14024 = 0;
      while(true) {
        if(i__14019_14024 < count__14018_14023) {
          var node_14025 = cljs.core._nth.call(null, chunk__14017_14022, i__14019_14024);
          goog.events.removeAll(node_14025);
          node_14025.innerHTML = value_14020;
          var G__14026 = seq__14016_14021;
          var G__14027 = chunk__14017_14022;
          var G__14028 = count__14018_14023;
          var G__14029 = i__14019_14024 + 1;
          seq__14016_14021 = G__14026;
          chunk__14017_14022 = G__14027;
          count__14018_14023 = G__14028;
          i__14019_14024 = G__14029;
          continue
        }else {
          var temp__4092__auto___14030 = cljs.core.seq.call(null, seq__14016_14021);
          if(temp__4092__auto___14030) {
            var seq__14016_14031__$1 = temp__4092__auto___14030;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14016_14031__$1)) {
              var c__3501__auto___14032 = cljs.core.chunk_first.call(null, seq__14016_14031__$1);
              var G__14033 = cljs.core.chunk_rest.call(null, seq__14016_14031__$1);
              var G__14034 = c__3501__auto___14032;
              var G__14035 = cljs.core.count.call(null, c__3501__auto___14032);
              var G__14036 = 0;
              seq__14016_14021 = G__14033;
              chunk__14017_14022 = G__14034;
              count__14018_14023 = G__14035;
              i__14019_14024 = G__14036;
              continue
            }else {
              var node_14037 = cljs.core.first.call(null, seq__14016_14031__$1);
              goog.events.removeAll(node_14037);
              node_14037.innerHTML = value_14020;
              var G__14038 = cljs.core.next.call(null, seq__14016_14031__$1);
              var G__14039 = null;
              var G__14040 = 0;
              var G__14041 = 0;
              seq__14016_14021 = G__14038;
              chunk__14017_14022 = G__14039;
              count__14018_14023 = G__14040;
              i__14019_14024 = G__14041;
              continue
            }
          }else {
          }
        }
        break
      }
    }catch(e14015) {
      if(e14015 instanceof Error) {
        var e_14042 = e14015;
        domina.replace_children_BANG_.call(null, content, value_14020)
      }else {
        if("\ufdd0:else") {
          throw e14015;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = bubble;
      if(cljs.core.truth_(and__3941__auto__)) {
        return value == null
      }else {
        return and__3941__auto__
      }
    }())) {
      var temp__4092__auto__ = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__4092__auto__)) {
        var parent = temp__4092__auto__;
        return get_data.call(null, parent, key, true)
      }else {
        return null
      }
    }else {
      return value
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3943__auto__ = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.core.PersistentArrayMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__14049_14053 = cljs.core.seq.call(null, children);
    var chunk__14050_14054 = null;
    var count__14051_14055 = 0;
    var i__14052_14056 = 0;
    while(true) {
      if(i__14052_14056 < count__14051_14055) {
        var child_14057 = cljs.core._nth.call(null, chunk__14050_14054, i__14052_14056);
        frag.appendChild(child_14057);
        var G__14058 = seq__14049_14053;
        var G__14059 = chunk__14050_14054;
        var G__14060 = count__14051_14055;
        var G__14061 = i__14052_14056 + 1;
        seq__14049_14053 = G__14058;
        chunk__14050_14054 = G__14059;
        count__14051_14055 = G__14060;
        i__14052_14056 = G__14061;
        continue
      }else {
        var temp__4092__auto___14062 = cljs.core.seq.call(null, seq__14049_14053);
        if(temp__4092__auto___14062) {
          var seq__14049_14063__$1 = temp__4092__auto___14062;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14049_14063__$1)) {
            var c__3501__auto___14064 = cljs.core.chunk_first.call(null, seq__14049_14063__$1);
            var G__14065 = cljs.core.chunk_rest.call(null, seq__14049_14063__$1);
            var G__14066 = c__3501__auto___14064;
            var G__14067 = cljs.core.count.call(null, c__3501__auto___14064);
            var G__14068 = 0;
            seq__14049_14053 = G__14065;
            chunk__14050_14054 = G__14066;
            count__14051_14055 = G__14067;
            i__14052_14056 = G__14068;
            continue
          }else {
            var child_14069 = cljs.core.first.call(null, seq__14049_14063__$1);
            frag.appendChild(child_14069);
            var G__14070 = cljs.core.next.call(null, seq__14049_14063__$1);
            var G__14071 = null;
            var G__14072 = 0;
            var G__14073 = 0;
            seq__14049_14053 = G__14070;
            chunk__14050_14054 = G__14071;
            count__14051_14055 = G__14072;
            i__14052_14056 = G__14073;
            continue
          }
        }else {
        }
      }
      break
    }
    return frag
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true)
    }
  }(parents, children, first_child)));
  if(cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__14043_SHARP_, p2__14044_SHARP_) {
      return f.call(null, p1__14043_SHARP_, p2__14044_SHARP_)
    }, cljs.core.rest.call(null, parents), other_children))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3941__auto__ = obj;
  if(cljs.core.truth_(and__3941__auto__)) {
    return obj.length
  }else {
    return and__3941__auto__
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__14075 = list_thing;
      if(G__14075) {
        if(function() {
          var or__3943__auto__ = G__14075.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__14075.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__14075.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14075)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14075)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0:default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__14076 = content;
      if(G__14076) {
        if(function() {
          var or__3943__auto__ = G__14076.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__14076.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__14076.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14076)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14076)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0:default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__14077 = content;
      if(G__14077) {
        if(function() {
          var or__3943__auto__ = G__14077.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__14077.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__14077.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14077)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14077)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0:default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = node.selectSingleNode;
    if(cljs.core.truth_(and__3941__auto__)) {
      return doc.setProperty
    }else {
      return and__3941__auto__
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path)
  }else {
    if(cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path)
    }else {
      if("\ufdd0:else") {
        throw new Error("Could not find XPath support in this browser.");
      }else {
        return null
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1)
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue
  })
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1)
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while(true) {
      if(i < num_results) {
        var G__14087 = i + 1;
        var G__14088 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__14087;
        acc = G__14088;
        continue
      }else {
        return acc
      }
      break
    }
  })
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr)
  };
  var xpath__2 = function(base, expr) {
    if(typeof domina.xpath.t14092 !== "undefined") {
    }else {
      goog.provide("domina.xpath.t14092");
      domina.xpath.t14092 = function(expr, base, xpath, meta14093) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta14093 = meta14093;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.xpath.t14092.cljs$lang$type = true;
      domina.xpath.t14092.cljs$lang$ctorStr = "domina.xpath/t14092";
      domina.xpath.t14092.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "domina.xpath/t14092")
      };
      domina.xpath.t14092.prototype.domina$DomContent$ = true;
      domina.xpath.t14092.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base))
      };
      domina.xpath.t14092.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))))
      };
      domina.xpath.t14092.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14094) {
        var self__ = this;
        return self__.meta14093
      };
      domina.xpath.t14092.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14094, meta14093__$1) {
        var self__ = this;
        return new domina.xpath.t14092(self__.expr, self__.base, self__.xpath, meta14093__$1)
      };
      domina.xpath.__GT_t14092 = function __GT_t14092(expr__$1, base__$1, xpath__$1, meta14093) {
        return new domina.xpath.t14092(expr__$1, base__$1, xpath__$1, meta14093)
      }
    }
    return new domina.xpath.t14092(expr, base, xpath, null)
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath
}();
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(typeof domina.css.t13650 !== "undefined") {
    }else {
      goog.provide("domina.css.t13650");
      domina.css.t13650 = function(expr, base, sel, meta13651) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta13651 = meta13651;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t13650.cljs$lang$type = true;
      domina.css.t13650.cljs$lang$ctorStr = "domina.css/t13650";
      domina.css.t13650.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "domina.css/t13650")
      };
      domina.css.t13650.prototype.domina$DomContent$ = true;
      domina.css.t13650.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.mapcat.call(null, function(p1__13645_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__13645_SHARP_))
        }, domina.nodes.call(null, self__.base))
      };
      domina.css.t13650.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__13646_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__13646_SHARP_))
        }, domina.nodes.call(null, self__.base))))
      };
      domina.css.t13650.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13652) {
        var self__ = this;
        return self__.meta13651
      };
      domina.css.t13650.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13652, meta13651__$1) {
        var self__ = this;
        return new domina.css.t13650(self__.expr, self__.base, self__.sel, meta13651__$1)
      };
      domina.css.__GT_t13650 = function __GT_t13650(expr__$1, base__$1, sel__$1, meta13651) {
        return new domina.css.t13650(expr__$1, base__$1, sel__$1, meta13651)
      }
    }
    return new domina.css.t13650(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel
}();
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.xpath");
goog.require("domina.css");
enfocus.core.ISelector = {};
enfocus.core.select = function() {
  var select = null;
  var select__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$1(this$)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var select__2 = function(this$, root) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$2(this$, root)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$, root)
    }
  };
  var select__3 = function(this$, root, id_mask) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$3(this$, root, id_mask)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$, root, id_mask)
    }
  };
  select = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, this$);
      case 2:
        return select__2.call(this, this$, root);
      case 3:
        return select__3.call(this, this$, root, id_mask)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select.cljs$core$IFn$_invoke$arity$1 = select__1;
  select.cljs$core$IFn$_invoke$arity$2 = select__2;
  select.cljs$core$IFn$_invoke$arity$3 = select__3;
  return select
}();
enfocus.core.ITransform = {};
enfocus.core.apply_transform = function() {
  var apply_transform = null;
  var apply_transform__2 = function(this$, nodes) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$2(this$, nodes)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.apply_transform[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.apply_transform["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes)
    }
  };
  var apply_transform__3 = function(this$, nodes, callback) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$3(this$, nodes, callback)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.apply_transform[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.apply_transform["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes, callback)
    }
  };
  apply_transform = function(this$, nodes, callback) {
    switch(arguments.length) {
      case 2:
        return apply_transform__2.call(this, this$, nodes);
      case 3:
        return apply_transform__3.call(this, this$, nodes, callback)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply_transform.cljs$core$IFn$_invoke$arity$2 = apply_transform__2;
  apply_transform.cljs$core$IFn$_invoke$arity$3 = apply_transform__3;
  return apply_transform
}();
enfocus.core.debug = true;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = enfocus.core.debug;
    if(cljs.core.truth_(and__3941__auto__)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3941__auto__
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return tst instanceof NodeList
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if(cljs.core._EQ_.call(null, nl, window)) {
    return cljs.core.PersistentVector.fromArray([nl], true)
  }else {
    return domina.nodes.call(null, nl)
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__13138_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__13138_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__13138_SHARP_)], true)
    }else {
      if("\ufdd0:else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__13138_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var seq__13145_13151 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  var chunk__13146_13152 = null;
  var count__13147_13153 = 0;
  var i__13148_13154 = 0;
  while(true) {
    if(i__13148_13154 < count__13147_13153) {
      var vec__13149_13155 = cljs.core._nth.call(null, chunk__13146_13152, i__13148_13154);
      var attr_13156 = cljs.core.nth.call(null, vec__13149_13155, 0, null);
      var value_13157 = cljs.core.nth.call(null, vec__13149_13155, 1, null);
      goog.style.setStyle(obj, cljs.core.name.call(null, attr_13156), value_13157);
      var G__13158 = seq__13145_13151;
      var G__13159 = chunk__13146_13152;
      var G__13160 = count__13147_13153;
      var G__13161 = i__13148_13154 + 1;
      seq__13145_13151 = G__13158;
      chunk__13146_13152 = G__13159;
      count__13147_13153 = G__13160;
      i__13148_13154 = G__13161;
      continue
    }else {
      var temp__4092__auto___13162 = cljs.core.seq.call(null, seq__13145_13151);
      if(temp__4092__auto___13162) {
        var seq__13145_13163__$1 = temp__4092__auto___13162;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13145_13163__$1)) {
          var c__3501__auto___13164 = cljs.core.chunk_first.call(null, seq__13145_13163__$1);
          var G__13165 = cljs.core.chunk_rest.call(null, seq__13145_13163__$1);
          var G__13166 = c__3501__auto___13164;
          var G__13167 = cljs.core.count.call(null, c__3501__auto___13164);
          var G__13168 = 0;
          seq__13145_13151 = G__13165;
          chunk__13146_13152 = G__13166;
          count__13147_13153 = G__13167;
          i__13148_13154 = G__13168;
          continue
        }else {
          var vec__13150_13169 = cljs.core.first.call(null, seq__13145_13163__$1);
          var attr_13170 = cljs.core.nth.call(null, vec__13150_13169, 0, null);
          var value_13171 = cljs.core.nth.call(null, vec__13150_13169, 1, null);
          goog.style.setStyle(obj, cljs.core.name.call(null, attr_13170), value_13171);
          var G__13172 = cljs.core.next.call(null, seq__13145_13163__$1);
          var G__13173 = null;
          var G__13174 = 0;
          var G__13175 = 0;
          seq__13145_13151 = G__13172;
          chunk__13146_13152 = G__13173;
          count__13147_13153 = G__13174;
          i__13148_13154 = G__13175;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var seq__13180 = cljs.core.seq.call(null, values);
  var chunk__13181 = null;
  var count__13182 = 0;
  var i__13183 = 0;
  while(true) {
    if(i__13183 < count__13182) {
      var attr = cljs.core._nth.call(null, chunk__13181, i__13183);
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr))
      }
      var G__13184 = seq__13180;
      var G__13185 = chunk__13181;
      var G__13186 = count__13182;
      var G__13187 = i__13183 + 1;
      seq__13180 = G__13184;
      chunk__13181 = G__13185;
      count__13182 = G__13186;
      i__13183 = G__13187;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13180);
      if(temp__4092__auto__) {
        var seq__13180__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13180__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13180__$1);
          var G__13188 = cljs.core.chunk_rest.call(null, seq__13180__$1);
          var G__13189 = c__3501__auto__;
          var G__13190 = cljs.core.count.call(null, c__3501__auto__);
          var G__13191 = 0;
          seq__13180 = G__13188;
          chunk__13181 = G__13189;
          count__13182 = G__13190;
          i__13183 = G__13191;
          continue
        }else {
          var attr = cljs.core.first.call(null, seq__13180__$1);
          if(cljs.core.truth_(goog.userAgent.IE)) {
            goog.style.setStyle(obj, cljs.core.name.call(null, attr), "")
          }else {
            obj.style.removeProperty(cljs.core.name.call(null, attr))
          }
          var G__13192 = cljs.core.next.call(null, seq__13180__$1);
          var G__13193 = null;
          var G__13194 = 0;
          var G__13195 = 0;
          seq__13180 = G__13192;
          chunk__13181 = G__13193;
          count__13182 = G__13194;
          i__13183 = G__13195;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var seq__13202_13208 = cljs.core.seq.call(null, ats);
        var chunk__13203_13209 = null;
        var count__13204_13210 = 0;
        var i__13205_13211 = 0;
        while(true) {
          if(i__13205_13211 < count__13204_13210) {
            var vec__13206_13212 = cljs.core._nth.call(null, chunk__13203_13209, i__13205_13211);
            var k_13213 = cljs.core.nth.call(null, vec__13206_13212, 0, null);
            var v_13214 = cljs.core.nth.call(null, vec__13206_13212, 1, null);
            add_map_attrs.call(null, elem, k_13213, v_13214);
            var G__13215 = seq__13202_13208;
            var G__13216 = chunk__13203_13209;
            var G__13217 = count__13204_13210;
            var G__13218 = i__13205_13211 + 1;
            seq__13202_13208 = G__13215;
            chunk__13203_13209 = G__13216;
            count__13204_13210 = G__13217;
            i__13205_13211 = G__13218;
            continue
          }else {
            var temp__4092__auto___13219 = cljs.core.seq.call(null, seq__13202_13208);
            if(temp__4092__auto___13219) {
              var seq__13202_13220__$1 = temp__4092__auto___13219;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13202_13220__$1)) {
                var c__3501__auto___13221 = cljs.core.chunk_first.call(null, seq__13202_13220__$1);
                var G__13222 = cljs.core.chunk_rest.call(null, seq__13202_13220__$1);
                var G__13223 = c__3501__auto___13221;
                var G__13224 = cljs.core.count.call(null, c__3501__auto___13221);
                var G__13225 = 0;
                seq__13202_13208 = G__13222;
                chunk__13203_13209 = G__13223;
                count__13204_13210 = G__13224;
                i__13205_13211 = G__13225;
                continue
              }else {
                var vec__13207_13226 = cljs.core.first.call(null, seq__13202_13220__$1);
                var k_13227 = cljs.core.nth.call(null, vec__13207_13226, 0, null);
                var v_13228 = cljs.core.nth.call(null, vec__13207_13226, 1, null);
                add_map_attrs.call(null, elem, k_13227, v_13228);
                var G__13229 = cljs.core.next.call(null, seq__13202_13220__$1);
                var G__13230 = null;
                var G__13231 = 0;
                var G__13232 = 0;
                seq__13202_13208 = G__13229;
                chunk__13203_13209 = G__13230;
                count__13204_13210 = G__13231;
                i__13205_13211 = G__13232;
                continue
              }
            }else {
            }
          }
          break
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_map_attrs.cljs$core$IFn$_invoke$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$core$IFn$_invoke$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.hide_style = cljs.core.PersistentArrayMap.fromArray(["style", "display: none; width: 0px; height: 0px"], true).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core._EQ_.call(null, child.nodeType, 11)) {
    goog.dom.appendChild(div, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var seq__13237_13241 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    var chunk__13238_13242 = null;
    var count__13239_13243 = 0;
    var i__13240_13244 = 0;
    while(true) {
      if(i__13240_13244 < count__13239_13243) {
        var node_13245 = cljs.core._nth.call(null, chunk__13238_13242, i__13240_13244);
        goog.dom.appendChild(div, node_13245);
        var G__13246 = seq__13237_13241;
        var G__13247 = chunk__13238_13242;
        var G__13248 = count__13239_13243;
        var G__13249 = i__13240_13244 + 1;
        seq__13237_13241 = G__13246;
        chunk__13238_13242 = G__13247;
        count__13239_13243 = G__13248;
        i__13240_13244 = G__13249;
        continue
      }else {
        var temp__4092__auto___13250 = cljs.core.seq.call(null, seq__13237_13241);
        if(temp__4092__auto___13250) {
          var seq__13237_13251__$1 = temp__4092__auto___13250;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13237_13251__$1)) {
            var c__3501__auto___13252 = cljs.core.chunk_first.call(null, seq__13237_13251__$1);
            var G__13253 = cljs.core.chunk_rest.call(null, seq__13237_13251__$1);
            var G__13254 = c__3501__auto___13252;
            var G__13255 = cljs.core.count.call(null, c__3501__auto___13252);
            var G__13256 = 0;
            seq__13237_13241 = G__13253;
            chunk__13238_13242 = G__13254;
            count__13239_13243 = G__13255;
            i__13240_13244 = G__13256;
            continue
          }else {
            var node_13257 = cljs.core.first.call(null, seq__13237_13251__$1);
            goog.dom.appendChild(div, node_13257);
            var G__13258 = cljs.core.next.call(null, seq__13237_13251__$1);
            var G__13259 = null;
            var G__13260 = 0;
            var G__13261 = 0;
            seq__13237_13241 = G__13258;
            chunk__13238_13242 = G__13259;
            count__13239_13243 = G__13260;
            i__13240_13244 = G__13261;
            continue
          }
        }else {
        }
      }
      break
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().documentElement, div);
  return div
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child = div.childNodes;
  var frag = document.createDocumentFragment();
  goog.dom.append(frag, child);
  goog.dom.removeNode(div);
  return frag
};
enfocus.core.replace_ids = function() {
  var replace_ids = null;
  var replace_ids__1 = function(text) {
    return replace_ids.call(null, [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join(""), text)
  };
  var replace_ids__2 = function(id_mask, text) {
    var re = new RegExp("(\x3c.*?\\sid\x3d['\"])(.*?)(['\"].*?\x3e)", "g");
    return cljs.core.PersistentVector.fromArray([id_mask, text.replace(re, function(a, b, c, d) {
      return[cljs.core.str(b), cljs.core.str(id_mask), cljs.core.str(c), cljs.core.str(d)].join("")
    })], true)
  };
  replace_ids = function(id_mask, text) {
    switch(arguments.length) {
      case 1:
        return replace_ids__1.call(this, id_mask);
      case 2:
        return replace_ids__2.call(this, id_mask, text)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace_ids.cljs$core$IFn$_invoke$arity$1 = replace_ids__1;
  replace_ids.cljs$core$IFn$_invoke$arity$2 = replace_ids__2;
  return replace_ids
}();
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col = enfocus.core.nodes__GT_coll.call(null, id_nodes);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__13262_SHARP_) {
    var id = p1__13262_SHARP_.getAttribute("id");
    var rid = id.replace(sym, "");
    return p1__13262_SHARP_.setAttribute("id", rid)
  }, nod_col))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key, id_mask) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, dom_key) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req = new goog.net.XhrIo;
    var callback = function(req) {
      return function(req__$1) {
        var text = req__$1.getResponseText();
        var vec__13264 = enfocus.core.replace_ids.call(null, id_mask, text);
        var sym = cljs.core.nth.call(null, vec__13264, 0, null);
        var txt = cljs.core.nth.call(null, vec__13264, 1, null);
        return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, cljs.core.PersistentVector.fromArray([sym, txt], true))
      }
    }(req);
    goog.events.listen(req, goog.net.EventType.COMPLETE, function() {
      callback.call(null, req);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.html_to_dom = function html_to_dom(html) {
  var dfa = enfocus.core.nodes__GT_coll.call(null, domina.html_to_dom.call(null, html));
  var frag = document.createDocumentFragment();
  enfocus.core.log_debug.call(null, cljs.core.count.call(null, dfa));
  var seq__13269_13273 = cljs.core.seq.call(null, dfa);
  var chunk__13270_13274 = null;
  var count__13271_13275 = 0;
  var i__13272_13276 = 0;
  while(true) {
    if(i__13272_13276 < count__13271_13275) {
      var df_13277 = cljs.core._nth.call(null, chunk__13270_13274, i__13272_13276);
      goog.dom.append(frag, df_13277);
      var G__13278 = seq__13269_13273;
      var G__13279 = chunk__13270_13274;
      var G__13280 = count__13271_13275;
      var G__13281 = i__13272_13276 + 1;
      seq__13269_13273 = G__13278;
      chunk__13270_13274 = G__13279;
      count__13271_13275 = G__13280;
      i__13272_13276 = G__13281;
      continue
    }else {
      var temp__4092__auto___13282 = cljs.core.seq.call(null, seq__13269_13273);
      if(temp__4092__auto___13282) {
        var seq__13269_13283__$1 = temp__4092__auto___13282;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13269_13283__$1)) {
          var c__3501__auto___13284 = cljs.core.chunk_first.call(null, seq__13269_13283__$1);
          var G__13285 = cljs.core.chunk_rest.call(null, seq__13269_13283__$1);
          var G__13286 = c__3501__auto___13284;
          var G__13287 = cljs.core.count.call(null, c__3501__auto___13284);
          var G__13288 = 0;
          seq__13269_13273 = G__13285;
          chunk__13270_13274 = G__13286;
          count__13271_13275 = G__13287;
          i__13272_13276 = G__13288;
          continue
        }else {
          var df_13289 = cljs.core.first.call(null, seq__13269_13283__$1);
          goog.dom.append(frag, df_13289);
          var G__13290 = cljs.core.next.call(null, seq__13269_13283__$1);
          var G__13291 = null;
          var G__13292 = 0;
          var G__13293 = 0;
          seq__13269_13273 = G__13290;
          chunk__13270_13274 = G__13291;
          count__13271_13275 = G__13292;
          i__13272_13276 = G__13293;
          continue
        }
      }else {
      }
    }
    break
  }
  return frag
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, nod))], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str = enfocus.core.create_sel_str.call(null, sel);
  var cache = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""));
  if(cljs.core.truth_(cache)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, cache))], true)
  }else {
    var vec__13296 = enfocus.core.get_cached_dom.call(null, uri);
    var sym = cljs.core.nth.call(null, vec__13296, 0, null);
    var tdom = cljs.core.nth.call(null, vec__13296, 1, null);
    var dom = enfocus.core.create_hidden_dom.call(null, tdom);
    var tsnip = domina.nodes.call(null, enfocus.core.css_select.call(null, sym, dom, sel));
    var html_snip = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(vec__13296, sym, tdom, dom, tsnip) {
      return function(p1__13294_SHARP_) {
        return p1__13294_SHARP_.outerHTML
      }
    }(vec__13296, sym, tdom, dom, tsnip), tsnip));
    enfocus.core.remove_node_return_child.call(null, dom);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""), cljs.core.PersistentVector.fromArray([sym, html_snip], true));
    return cljs.core.PersistentVector.fromArray([sym, enfocus.core.html_to_dom.call(null, html_snip)], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  var trans = function trans(pnodes) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result = cljs.core.map.call(null, func, pnod_col);
    if(cljs.core.count.call(null, result) <= 1) {
      return cljs.core.first.call(null, result)
    }else {
      return result
    }
  };
  if(typeof enfocus.core.t13300 !== "undefined") {
  }else {
    goog.provide("enfocus.core.t13300");
    enfocus.core.t13300 = function(trans, func, extr_multi_node, meta13301) {
      this.trans = trans;
      this.func = func;
      this.extr_multi_node = extr_multi_node;
      this.meta13301 = meta13301;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    enfocus.core.t13300.cljs$lang$type = true;
    enfocus.core.t13300.cljs$lang$ctorStr = "enfocus.core/t13300";
    enfocus.core.t13300.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t13300")
    };
    enfocus.core.t13300.prototype.enfocus$core$ITransform$ = true;
    enfocus.core.t13300.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
      var self__ = this;
      return self__.trans.call(null, nodes, null)
    };
    enfocus.core.t13300.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
      var self__ = this;
      return self__.trans.call(null, nodes, chain)
    };
    enfocus.core.t13300.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13302) {
      var self__ = this;
      return self__.meta13301
    };
    enfocus.core.t13300.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13302, meta13301__$1) {
      var self__ = this;
      return new enfocus.core.t13300(self__.trans, self__.func, self__.extr_multi_node, meta13301__$1)
    };
    enfocus.core.__GT_t13300 = function __GT_t13300(trans__$1, func__$1, extr_multi_node__$1, meta13301) {
      return new enfocus.core.t13300(trans__$1, func__$1, extr_multi_node__$1, meta13301)
    }
  }
  return new enfocus.core.t13300(trans, func, extr_multi_node, null)
};
enfocus.core.multi_node_chain = function() {
  var multi_node_chain = null;
  var multi_node_chain__1 = function(func) {
    var trans = function(nodes, chain) {
      var val = func.call(null, nodes);
      if(cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.call(null, chain, nodes)
      }else {
        return val
      }
    };
    if(typeof enfocus.core.t13310 !== "undefined") {
    }else {
      goog.provide("enfocus.core.t13310");
      enfocus.core.t13310 = function(trans, func, multi_node_chain, meta13311) {
        this.trans = trans;
        this.func = func;
        this.multi_node_chain = multi_node_chain;
        this.meta13311 = meta13311;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      enfocus.core.t13310.cljs$lang$type = true;
      enfocus.core.t13310.cljs$lang$ctorStr = "enfocus.core/t13310";
      enfocus.core.t13310.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t13310")
      };
      enfocus.core.t13310.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t13310.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
        var self__ = this;
        return self__.trans.call(null, nodes, null)
      };
      enfocus.core.t13310.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
        var self__ = this;
        return self__.trans.call(null, nodes, chain)
      };
      enfocus.core.t13310.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13312) {
        var self__ = this;
        return self__.meta13311
      };
      enfocus.core.t13310.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13312, meta13311__$1) {
        var self__ = this;
        return new enfocus.core.t13310(self__.trans, self__.func, self__.multi_node_chain, meta13311__$1)
      };
      enfocus.core.__GT_t13310 = function __GT_t13310(trans__$1, func__$1, multi_node_chain__$1, meta13311) {
        return new enfocus.core.t13310(trans__$1, func__$1, multi_node_chain__$1, meta13311)
      }
    }
    return new enfocus.core.t13310(trans, func, multi_node_chain, null)
  };
  var multi_node_chain__2 = function(values, func) {
    var trans = function(nodes, chain) {
      var vnodes = cljs.core.mapcat.call(null, function(p1__13303_SHARP_) {
        return domina.nodes.call(null, p1__13303_SHARP_)
      }, values);
      var val = func.call(null, nodes, vnodes);
      if(cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.call(null, chain, nodes)
      }else {
        return val
      }
    };
    if(typeof enfocus.core.t13313 !== "undefined") {
    }else {
      goog.provide("enfocus.core.t13313");
      enfocus.core.t13313 = function(trans, func, values, multi_node_chain, meta13314) {
        this.trans = trans;
        this.func = func;
        this.values = values;
        this.multi_node_chain = multi_node_chain;
        this.meta13314 = meta13314;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      enfocus.core.t13313.cljs$lang$type = true;
      enfocus.core.t13313.cljs$lang$ctorStr = "enfocus.core/t13313";
      enfocus.core.t13313.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t13313")
      };
      enfocus.core.t13313.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t13313.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
        var self__ = this;
        return self__.trans.call(null, nodes, null)
      };
      enfocus.core.t13313.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
        var self__ = this;
        return self__.trans.call(null, nodes, chain)
      };
      enfocus.core.t13313.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13315) {
        var self__ = this;
        return self__.meta13314
      };
      enfocus.core.t13313.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13315, meta13314__$1) {
        var self__ = this;
        return new enfocus.core.t13313(self__.trans, self__.func, self__.values, self__.multi_node_chain, meta13314__$1)
      };
      enfocus.core.__GT_t13313 = function __GT_t13313(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta13314) {
        return new enfocus.core.t13313(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta13314)
      }
    }
    return new enfocus.core.t13313(trans, func, values, multi_node_chain, null)
  };
  multi_node_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return multi_node_chain__1.call(this, values);
      case 2:
        return multi_node_chain__2.call(this, values, func)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_node_chain.cljs$core$IFn$_invoke$arity$1 = multi_node_chain__1;
  multi_node_chain.cljs$core$IFn$_invoke$arity$2 = multi_node_chain__2;
  return multi_node_chain
}();
enfocus.core.content = function() {
  var content__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__13316_SHARP_, p2__13317_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__13316_SHARP_);
      return domina.append_BANG_.call(null, p1__13316_SHARP_, p2__13317_SHARP_)
    })
  };
  var content = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return content__delegate.call(this, values)
  };
  content.cljs$lang$maxFixedArity = 0;
  content.cljs$lang$applyTo = function(arglist__13318) {
    var values = cljs.core.seq(arglist__13318);
    return content__delegate(values)
  };
  content.cljs$core$IFn$_invoke$arity$variadic = content__delegate;
  return content
}();
enfocus.core.html_content = function html_content(txt) {
  return enfocus.core.multi_node_chain.call(null, function(p1__13319_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__13319_SHARP_, txt)
  })
};
enfocus.core.set_attr = function() {
  var set_attr__delegate = function(values) {
    var pairs = cljs.core.partition.call(null, 2, values);
    return enfocus.core.multi_node_chain.call(null, function(p1__13320_SHARP_) {
      var seq__13327 = cljs.core.seq.call(null, pairs);
      var chunk__13328 = null;
      var count__13329 = 0;
      var i__13330 = 0;
      while(true) {
        if(i__13330 < count__13329) {
          var vec__13331 = cljs.core._nth.call(null, chunk__13328, i__13330);
          var name = cljs.core.nth.call(null, vec__13331, 0, null);
          var value = cljs.core.nth.call(null, vec__13331, 1, null);
          domina.set_attr_BANG_.call(null, p1__13320_SHARP_, name, value);
          var G__13333 = seq__13327;
          var G__13334 = chunk__13328;
          var G__13335 = count__13329;
          var G__13336 = i__13330 + 1;
          seq__13327 = G__13333;
          chunk__13328 = G__13334;
          count__13329 = G__13335;
          i__13330 = G__13336;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13327);
          if(temp__4092__auto__) {
            var seq__13327__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13327__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13327__$1);
              var G__13337 = cljs.core.chunk_rest.call(null, seq__13327__$1);
              var G__13338 = c__3501__auto__;
              var G__13339 = cljs.core.count.call(null, c__3501__auto__);
              var G__13340 = 0;
              seq__13327 = G__13337;
              chunk__13328 = G__13338;
              count__13329 = G__13339;
              i__13330 = G__13340;
              continue
            }else {
              var vec__13332 = cljs.core.first.call(null, seq__13327__$1);
              var name = cljs.core.nth.call(null, vec__13332, 0, null);
              var value = cljs.core.nth.call(null, vec__13332, 1, null);
              domina.set_attr_BANG_.call(null, p1__13320_SHARP_, name, value);
              var G__13341 = cljs.core.next.call(null, seq__13327__$1);
              var G__13342 = null;
              var G__13343 = 0;
              var G__13344 = 0;
              seq__13327 = G__13341;
              chunk__13328 = G__13342;
              count__13329 = G__13343;
              i__13330 = G__13344;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var set_attr = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_attr__delegate.call(this, values)
  };
  set_attr.cljs$lang$maxFixedArity = 0;
  set_attr.cljs$lang$applyTo = function(arglist__13345) {
    var values = cljs.core.seq(arglist__13345);
    return set_attr__delegate(values)
  };
  set_attr.cljs$core$IFn$_invoke$arity$variadic = set_attr__delegate;
  return set_attr
}();
enfocus.core.remove_attr = function() {
  var remove_attr__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__13346_SHARP_) {
      var seq__13351 = cljs.core.seq.call(null, values);
      var chunk__13352 = null;
      var count__13353 = 0;
      var i__13354 = 0;
      while(true) {
        if(i__13354 < count__13353) {
          var name = cljs.core._nth.call(null, chunk__13352, i__13354);
          domina.remove_attr_BANG_.call(null, p1__13346_SHARP_, name);
          var G__13355 = seq__13351;
          var G__13356 = chunk__13352;
          var G__13357 = count__13353;
          var G__13358 = i__13354 + 1;
          seq__13351 = G__13355;
          chunk__13352 = G__13356;
          count__13353 = G__13357;
          i__13354 = G__13358;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13351);
          if(temp__4092__auto__) {
            var seq__13351__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13351__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13351__$1);
              var G__13359 = cljs.core.chunk_rest.call(null, seq__13351__$1);
              var G__13360 = c__3501__auto__;
              var G__13361 = cljs.core.count.call(null, c__3501__auto__);
              var G__13362 = 0;
              seq__13351 = G__13359;
              chunk__13352 = G__13360;
              count__13353 = G__13361;
              i__13354 = G__13362;
              continue
            }else {
              var name = cljs.core.first.call(null, seq__13351__$1);
              domina.remove_attr_BANG_.call(null, p1__13346_SHARP_, name);
              var G__13363 = cljs.core.next.call(null, seq__13351__$1);
              var G__13364 = null;
              var G__13365 = 0;
              var G__13366 = 0;
              seq__13351 = G__13363;
              chunk__13352 = G__13364;
              count__13353 = G__13365;
              i__13354 = G__13366;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var remove_attr = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_attr__delegate.call(this, values)
  };
  remove_attr.cljs$lang$maxFixedArity = 0;
  remove_attr.cljs$lang$applyTo = function(arglist__13367) {
    var values = cljs.core.seq(arglist__13367);
    return remove_attr__delegate(values)
  };
  remove_attr.cljs$core$IFn$_invoke$arity$variadic = remove_attr__delegate;
  return remove_attr
}();
enfocus.core.set_prop = function() {
  var set_prop__delegate = function(forms) {
    return function(node) {
      var h = cljs.core.mapcat.call(null, function(p__13370) {
        var vec__13371 = p__13370;
        var n = cljs.core.nth.call(null, vec__13371, 0, null);
        var v = cljs.core.nth.call(null, vec__13371, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n), v)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h))
    }
  };
  var set_prop = function(var_args) {
    var forms = null;
    if(arguments.length > 0) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_prop__delegate.call(this, forms)
  };
  set_prop.cljs$lang$maxFixedArity = 0;
  set_prop.cljs$lang$applyTo = function(arglist__13372) {
    var forms = cljs.core.seq(arglist__13372);
    return set_prop__delegate(forms)
  };
  set_prop.cljs$core$IFn$_invoke$arity$variadic = set_prop__delegate;
  return set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.add_class = function() {
  var add_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__13373_SHARP_) {
      var seq__13378 = cljs.core.seq.call(null, values);
      var chunk__13379 = null;
      var count__13380 = 0;
      var i__13381 = 0;
      while(true) {
        if(i__13381 < count__13380) {
          var val = cljs.core._nth.call(null, chunk__13379, i__13381);
          domina.add_class_BANG_.call(null, p1__13373_SHARP_, val);
          var G__13382 = seq__13378;
          var G__13383 = chunk__13379;
          var G__13384 = count__13380;
          var G__13385 = i__13381 + 1;
          seq__13378 = G__13382;
          chunk__13379 = G__13383;
          count__13380 = G__13384;
          i__13381 = G__13385;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13378);
          if(temp__4092__auto__) {
            var seq__13378__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13378__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13378__$1);
              var G__13386 = cljs.core.chunk_rest.call(null, seq__13378__$1);
              var G__13387 = c__3501__auto__;
              var G__13388 = cljs.core.count.call(null, c__3501__auto__);
              var G__13389 = 0;
              seq__13378 = G__13386;
              chunk__13379 = G__13387;
              count__13380 = G__13388;
              i__13381 = G__13389;
              continue
            }else {
              var val = cljs.core.first.call(null, seq__13378__$1);
              domina.add_class_BANG_.call(null, p1__13373_SHARP_, val);
              var G__13390 = cljs.core.next.call(null, seq__13378__$1);
              var G__13391 = null;
              var G__13392 = 0;
              var G__13393 = 0;
              seq__13378 = G__13390;
              chunk__13379 = G__13391;
              count__13380 = G__13392;
              i__13381 = G__13393;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var add_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add_class__delegate.call(this, values)
  };
  add_class.cljs$lang$maxFixedArity = 0;
  add_class.cljs$lang$applyTo = function(arglist__13394) {
    var values = cljs.core.seq(arglist__13394);
    return add_class__delegate(values)
  };
  add_class.cljs$core$IFn$_invoke$arity$variadic = add_class__delegate;
  return add_class
}();
enfocus.core.remove_class = function() {
  var remove_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__13395_SHARP_) {
      var seq__13400 = cljs.core.seq.call(null, values);
      var chunk__13401 = null;
      var count__13402 = 0;
      var i__13403 = 0;
      while(true) {
        if(i__13403 < count__13402) {
          var val = cljs.core._nth.call(null, chunk__13401, i__13403);
          domina.remove_class_BANG_.call(null, p1__13395_SHARP_, val);
          var G__13404 = seq__13400;
          var G__13405 = chunk__13401;
          var G__13406 = count__13402;
          var G__13407 = i__13403 + 1;
          seq__13400 = G__13404;
          chunk__13401 = G__13405;
          count__13402 = G__13406;
          i__13403 = G__13407;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13400);
          if(temp__4092__auto__) {
            var seq__13400__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13400__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13400__$1);
              var G__13408 = cljs.core.chunk_rest.call(null, seq__13400__$1);
              var G__13409 = c__3501__auto__;
              var G__13410 = cljs.core.count.call(null, c__3501__auto__);
              var G__13411 = 0;
              seq__13400 = G__13408;
              chunk__13401 = G__13409;
              count__13402 = G__13410;
              i__13403 = G__13411;
              continue
            }else {
              var val = cljs.core.first.call(null, seq__13400__$1);
              domina.remove_class_BANG_.call(null, p1__13395_SHARP_, val);
              var G__13412 = cljs.core.next.call(null, seq__13400__$1);
              var G__13413 = null;
              var G__13414 = 0;
              var G__13415 = 0;
              seq__13400 = G__13412;
              chunk__13401 = G__13413;
              count__13402 = G__13414;
              i__13403 = G__13415;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var remove_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_class__delegate.call(this, values)
  };
  remove_class.cljs$lang$maxFixedArity = 0;
  remove_class.cljs$lang$applyTo = function(arglist__13416) {
    var values = cljs.core.seq(arglist__13416);
    return remove_class__delegate(values)
  };
  remove_class.cljs$core$IFn$_invoke$arity$variadic = remove_class__delegate;
  return remove_class
}();
enfocus.core.set_class = function() {
  var set_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__13417_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__13417_SHARP_, values)
    })
  };
  var set_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_class__delegate.call(this, values)
  };
  set_class.cljs$lang$maxFixedArity = 0;
  set_class.cljs$lang$applyTo = function(arglist__13418) {
    var values = cljs.core.seq(arglist__13418);
    return set_class__delegate(values)
  };
  set_class.cljs$core$IFn$_invoke$arity$variadic = set_class__delegate;
  return set_class
}();
enfocus.core.do__GT_ = function() {
  var do__GT___delegate = function(forms) {
    return function(pnod) {
      var seq__13423 = cljs.core.seq.call(null, forms);
      var chunk__13424 = null;
      var count__13425 = 0;
      var i__13426 = 0;
      while(true) {
        if(i__13426 < count__13425) {
          var fun = cljs.core._nth.call(null, chunk__13424, i__13426);
          enfocus.core.apply_transform.call(null, fun, pnod);
          var G__13427 = seq__13423;
          var G__13428 = chunk__13424;
          var G__13429 = count__13425;
          var G__13430 = i__13426 + 1;
          seq__13423 = G__13427;
          chunk__13424 = G__13428;
          count__13425 = G__13429;
          i__13426 = G__13430;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13423);
          if(temp__4092__auto__) {
            var seq__13423__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13423__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13423__$1);
              var G__13431 = cljs.core.chunk_rest.call(null, seq__13423__$1);
              var G__13432 = c__3501__auto__;
              var G__13433 = cljs.core.count.call(null, c__3501__auto__);
              var G__13434 = 0;
              seq__13423 = G__13431;
              chunk__13424 = G__13432;
              count__13425 = G__13433;
              i__13426 = G__13434;
              continue
            }else {
              var fun = cljs.core.first.call(null, seq__13423__$1);
              enfocus.core.apply_transform.call(null, fun, pnod);
              var G__13435 = cljs.core.next.call(null, seq__13423__$1);
              var G__13436 = null;
              var G__13437 = 0;
              var G__13438 = 0;
              seq__13423 = G__13435;
              chunk__13424 = G__13436;
              count__13425 = G__13437;
              i__13426 = G__13438;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var do__GT_ = function(var_args) {
    var forms = null;
    if(arguments.length > 0) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return do__GT___delegate.call(this, forms)
  };
  do__GT_.cljs$lang$maxFixedArity = 0;
  do__GT_.cljs$lang$applyTo = function(arglist__13439) {
    var forms = cljs.core.seq(arglist__13439);
    return do__GT___delegate(forms)
  };
  do__GT_.cljs$core$IFn$_invoke$arity$variadic = do__GT___delegate;
  return do__GT_
}();
enfocus.core.append = function() {
  var append__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__13440_SHARP_, p2__13441_SHARP_) {
      return domina.append_BANG_.call(null, p1__13440_SHARP_, p2__13441_SHARP_)
    })
  };
  var append = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return append__delegate.call(this, values)
  };
  append.cljs$lang$maxFixedArity = 0;
  append.cljs$lang$applyTo = function(arglist__13442) {
    var values = cljs.core.seq(arglist__13442);
    return append__delegate(values)
  };
  append.cljs$core$IFn$_invoke$arity$variadic = append__delegate;
  return append
}();
enfocus.core.prepend = function() {
  var prepend__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__13443_SHARP_, p2__13444_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__13443_SHARP_, p2__13444_SHARP_)
    })
  };
  var prepend = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prepend__delegate.call(this, values)
  };
  prepend.cljs$lang$maxFixedArity = 0;
  prepend.cljs$lang$applyTo = function(arglist__13445) {
    var values = cljs.core.seq(arglist__13445);
    return prepend__delegate(values)
  };
  prepend.cljs$core$IFn$_invoke$arity$variadic = prepend__delegate;
  return prepend
}();
enfocus.core.before = function() {
  var before__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__13446_SHARP_, p2__13447_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__13446_SHARP_, p2__13447_SHARP_)
    })
  };
  var before = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return before__delegate.call(this, values)
  };
  before.cljs$lang$maxFixedArity = 0;
  before.cljs$lang$applyTo = function(arglist__13448) {
    var values = cljs.core.seq(arglist__13448);
    return before__delegate(values)
  };
  before.cljs$core$IFn$_invoke$arity$variadic = before__delegate;
  return before
}();
enfocus.core.after = function() {
  var after__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__13449_SHARP_, p2__13450_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__13449_SHARP_, p2__13450_SHARP_)
    })
  };
  var after = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return after__delegate.call(this, values)
  };
  after.cljs$lang$maxFixedArity = 0;
  after.cljs$lang$applyTo = function(arglist__13451) {
    var values = cljs.core.seq(arglist__13451);
    return after__delegate(values)
  };
  after.cljs$core$IFn$_invoke$arity$variadic = after__delegate;
  return after
}();
enfocus.core.substitute = function() {
  var substitute__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__13452_SHARP_, p2__13453_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__13452_SHARP_, p2__13453_SHARP_)
    })
  };
  var substitute = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return substitute__delegate.call(this, values)
  };
  substitute.cljs$lang$maxFixedArity = 0;
  substitute.cljs$lang$applyTo = function(arglist__13454) {
    var values = cljs.core.seq(arglist__13454);
    return substitute__delegate(values)
  };
  substitute.cljs$core$IFn$_invoke$arity$variadic = substitute__delegate;
  return substitute
}();
enfocus.core.remove_node = function remove_node() {
  return enfocus.core.multi_node_chain.call(null, function(p1__13455_SHARP_) {
    return domina.detach_BANG_.call(null, p1__13455_SHARP_)
  })
};
enfocus.core.wrap = function wrap(elm, mattr) {
  return function(pnod) {
    var elem = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem, mattr);
    enfocus.core.at.call(null, elem, enfocus.core.content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.do__GT_.call(null, enfocus.core.after.call(null, elem), enfocus.core.remove_node.call(null)))
  }
};
enfocus.core.unwrap = function unwrap() {
  return function(pnod) {
    var frag = document.createDocumentFragment();
    goog.dom.append(frag, pnod.childNodes);
    return goog.dom.replaceNode(frag, pnod)
  }
};
enfocus.core.set_style = function() {
  var set_style__delegate = function(values) {
    var pairs = cljs.core.partition.call(null, 2, values);
    return enfocus.core.multi_node_chain.call(null, function(p1__13456_SHARP_) {
      var seq__13463 = cljs.core.seq.call(null, pairs);
      var chunk__13464 = null;
      var count__13465 = 0;
      var i__13466 = 0;
      while(true) {
        if(i__13466 < count__13465) {
          var vec__13467 = cljs.core._nth.call(null, chunk__13464, i__13466);
          var name = cljs.core.nth.call(null, vec__13467, 0, null);
          var value = cljs.core.nth.call(null, vec__13467, 1, null);
          domina.set_style_BANG_.call(null, p1__13456_SHARP_, name, value);
          var G__13469 = seq__13463;
          var G__13470 = chunk__13464;
          var G__13471 = count__13465;
          var G__13472 = i__13466 + 1;
          seq__13463 = G__13469;
          chunk__13464 = G__13470;
          count__13465 = G__13471;
          i__13466 = G__13472;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13463);
          if(temp__4092__auto__) {
            var seq__13463__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13463__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13463__$1);
              var G__13473 = cljs.core.chunk_rest.call(null, seq__13463__$1);
              var G__13474 = c__3501__auto__;
              var G__13475 = cljs.core.count.call(null, c__3501__auto__);
              var G__13476 = 0;
              seq__13463 = G__13473;
              chunk__13464 = G__13474;
              count__13465 = G__13475;
              i__13466 = G__13476;
              continue
            }else {
              var vec__13468 = cljs.core.first.call(null, seq__13463__$1);
              var name = cljs.core.nth.call(null, vec__13468, 0, null);
              var value = cljs.core.nth.call(null, vec__13468, 1, null);
              domina.set_style_BANG_.call(null, p1__13456_SHARP_, name, value);
              var G__13477 = cljs.core.next.call(null, seq__13463__$1);
              var G__13478 = null;
              var G__13479 = 0;
              var G__13480 = 0;
              seq__13463 = G__13477;
              chunk__13464 = G__13478;
              count__13465 = G__13479;
              i__13466 = G__13480;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var set_style = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_style__delegate.call(this, values)
  };
  set_style.cljs$lang$maxFixedArity = 0;
  set_style.cljs$lang$applyTo = function(arglist__13481) {
    var values = cljs.core.seq(arglist__13481);
    return set_style__delegate(values)
  };
  set_style.cljs$core$IFn$_invoke$arity$variadic = set_style__delegate;
  return set_style
}();
enfocus.core.remove_style = function() {
  var remove_style__delegate = function(values) {
    return function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    }
  };
  var remove_style = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_style__delegate.call(this, values)
  };
  remove_style.cljs$lang$maxFixedArity = 0;
  remove_style.cljs$lang$applyTo = function(arglist__13482) {
    var values = cljs.core.seq(arglist__13482);
    return remove_style__delegate(values)
  };
  remove_style.cljs$core$IFn$_invoke$arity$variadic = remove_style__delegate;
  return remove_style
}();
enfocus.core.focus = function focus() {
  return function(node) {
    return node.focus()
  }
};
enfocus.core.blur = function blur() {
  return function(node) {
    return node.blur()
  }
};
enfocus.core.set_data = function set_data(ky, val) {
  return enfocus.core.multi_node_chain.call(null, function(p1__13483_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__13483_SHARP_, ky, val)
  })
};
enfocus.core.delay = function() {
  var delay__delegate = function(ttime, funcs) {
    return function(pnod) {
      return enfocus.core.setTimeout.call(null, function() {
        return cljs.core.apply.call(null, enfocus.core.at, pnod, funcs)
      }, ttime)
    }
  };
  var delay = function(ttime, var_args) {
    var funcs = null;
    if(arguments.length > 1) {
      funcs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return delay__delegate.call(this, ttime, funcs)
  };
  delay.cljs$lang$maxFixedArity = 1;
  delay.cljs$lang$applyTo = function(arglist__13484) {
    var ttime = cljs.core.first(arglist__13484);
    var funcs = cljs.core.rest(arglist__13484);
    return delay__delegate(ttime, funcs)
  };
  delay.cljs$core$IFn$_invoke$arity$variadic = delay__delegate;
  return delay
}();
enfocus.core.replace_vars = function replace_vars(vars) {
  var rep_str = function rep_str(text) {
    return clojure.string.replace.call(null, text, /\$\{\s*(\S+)\s*}/, function(p1__13486_SHARP_, p2__13485_SHARP_) {
      return vars.call(null, cljs.core.keyword.call(null, p2__13485_SHARP_))
    })
  };
  return function rep_node(pnod) {
    if(cljs.core.truth_(pnod.attributes)) {
      var seq__13511_13519 = cljs.core.seq.call(null, cljs.core.range.call(null, pnod.attributes.length));
      var chunk__13512_13520 = null;
      var count__13513_13521 = 0;
      var i__13514_13522 = 0;
      while(true) {
        if(i__13514_13522 < count__13513_13521) {
          var idx_13523 = cljs.core._nth.call(null, chunk__13512_13520, i__13514_13522);
          var attr_13524 = pnod.attributes.item(idx_13523);
          if(cljs.core.truth_(attr_13524.specified)) {
            attr_13524.value = rep_str.call(null, attr_13524.value)
          }else {
          }
          var G__13525 = seq__13511_13519;
          var G__13526 = chunk__13512_13520;
          var G__13527 = count__13513_13521;
          var G__13528 = i__13514_13522 + 1;
          seq__13511_13519 = G__13525;
          chunk__13512_13520 = G__13526;
          count__13513_13521 = G__13527;
          i__13514_13522 = G__13528;
          continue
        }else {
          var temp__4092__auto___13529 = cljs.core.seq.call(null, seq__13511_13519);
          if(temp__4092__auto___13529) {
            var seq__13511_13530__$1 = temp__4092__auto___13529;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13511_13530__$1)) {
              var c__3501__auto___13531 = cljs.core.chunk_first.call(null, seq__13511_13530__$1);
              var G__13532 = cljs.core.chunk_rest.call(null, seq__13511_13530__$1);
              var G__13533 = c__3501__auto___13531;
              var G__13534 = cljs.core.count.call(null, c__3501__auto___13531);
              var G__13535 = 0;
              seq__13511_13519 = G__13532;
              chunk__13512_13520 = G__13533;
              count__13513_13521 = G__13534;
              i__13514_13522 = G__13535;
              continue
            }else {
              var idx_13536 = cljs.core.first.call(null, seq__13511_13530__$1);
              var attr_13537 = pnod.attributes.item(idx_13536);
              if(cljs.core.truth_(attr_13537.specified)) {
                attr_13537.value = rep_str.call(null, attr_13537.value)
              }else {
              }
              var G__13538 = cljs.core.next.call(null, seq__13511_13530__$1);
              var G__13539 = null;
              var G__13540 = 0;
              var G__13541 = 0;
              seq__13511_13519 = G__13538;
              chunk__13512_13520 = G__13539;
              count__13513_13521 = G__13540;
              i__13514_13522 = G__13541;
              continue
            }
          }else {
          }
        }
        break
      }
    }else {
    }
    if(cljs.core._EQ_.call(null, pnod.nodeType, 3)) {
      return pnod.nodeValue = rep_str.call(null, pnod.nodeValue)
    }else {
      var seq__13515 = cljs.core.seq.call(null, enfocus.core.nodes__GT_coll.call(null, pnod.childNodes));
      var chunk__13516 = null;
      var count__13517 = 0;
      var i__13518 = 0;
      while(true) {
        if(i__13518 < count__13517) {
          var cnode = cljs.core._nth.call(null, chunk__13516, i__13518);
          rep_node.call(null, cnode);
          var G__13542 = seq__13515;
          var G__13543 = chunk__13516;
          var G__13544 = count__13517;
          var G__13545 = i__13518 + 1;
          seq__13515 = G__13542;
          chunk__13516 = G__13543;
          count__13517 = G__13544;
          i__13518 = G__13545;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13515);
          if(temp__4092__auto__) {
            var seq__13515__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13515__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13515__$1);
              var G__13546 = cljs.core.chunk_rest.call(null, seq__13515__$1);
              var G__13547 = c__3501__auto__;
              var G__13548 = cljs.core.count.call(null, c__3501__auto__);
              var G__13549 = 0;
              seq__13515 = G__13546;
              chunk__13516 = G__13547;
              count__13517 = G__13548;
              i__13518 = G__13549;
              continue
            }else {
              var cnode = cljs.core.first.call(null, seq__13515__$1);
              rep_node.call(null, cnode);
              var G__13550 = cljs.core.next.call(null, seq__13515__$1);
              var G__13551 = null;
              var G__13552 = 0;
              var G__13553 = 0;
              seq__13515 = G__13550;
              chunk__13516 = G__13551;
              count__13517 = G__13552;
              i__13518 = G__13553;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  }
};
enfocus.core.html = function html(node_spec) {
  if(cljs.core.string_QMARK_.call(null, node_spec)) {
    return document.createTextNode(node_spec)
  }else {
    if(cljs.core.vector_QMARK_.call(null, node_spec)) {
      var vec__13563 = node_spec;
      var tag = cljs.core.nth.call(null, vec__13563, 0, null);
      var vec__13564 = cljs.core.nthnext.call(null, vec__13563, 1);
      var m = cljs.core.nth.call(null, vec__13564, 0, null);
      var ms = cljs.core.nthnext.call(null, vec__13564, 1);
      var more = vec__13564;
      var _ = enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, tag, m, ms));
      var vec__13565 = cljs.core.name.call(null, tag).split(/(?=[#.])/);
      var tag_name = cljs.core.nth.call(null, vec__13565, 0, null);
      var segments = cljs.core.nthnext.call(null, vec__13565, 1);
      var id = cljs.core.some.call(null, function(vec__13563, tag, vec__13564, m, ms, more, _, vec__13565, tag_name, segments) {
        return function(seg) {
          if(cljs.core._EQ_.call(null, "#", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1)
          }else {
            return null
          }
        }
      }(vec__13563, tag, vec__13564, m, ms, more, _, vec__13565, tag_name, segments), segments);
      var classes = cljs.core.keep.call(null, function(vec__13563, tag, vec__13564, m, ms, more, _, vec__13565, tag_name, segments, id) {
        return function(seg) {
          if(cljs.core._EQ_.call(null, ".", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1)
          }else {
            return null
          }
        }
      }(vec__13563, tag, vec__13564, m, ms, more, _, vec__13565, tag_name, segments, id), segments);
      var attrs = cljs.core.map_QMARK_.call(null, m) ? m : cljs.core.PersistentArrayMap.EMPTY;
      var attrs__$1 = cljs.core.truth_(id) ? cljs.core.assoc.call(null, attrs, "\ufdd0:id", id) : attrs;
      var attrs__$2 = !cljs.core.empty_QMARK_.call(null, classes) ? cljs.core.assoc.call(null, attrs__$1, "\ufdd0:class", cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", classes))) : attrs__$1;
      var content = cljs.core.flatten.call(null, cljs.core.map.call(null, html, cljs.core.map_QMARK_.call(null, m) ? ms : more));
      var node = document.createElement(tag_name);
      var seq__13566_13572 = cljs.core.seq.call(null, attrs__$2);
      var chunk__13567_13573 = null;
      var count__13568_13574 = 0;
      var i__13569_13575 = 0;
      while(true) {
        if(i__13569_13575 < count__13568_13574) {
          var vec__13570_13576 = cljs.core._nth.call(null, chunk__13567_13573, i__13569_13575);
          var key_13577 = cljs.core.nth.call(null, vec__13570_13576, 0, null);
          var val_13578 = cljs.core.nth.call(null, vec__13570_13576, 1, null);
          node.setAttribute(cljs.core.name.call(null, key_13577), val_13578);
          var G__13579 = seq__13566_13572;
          var G__13580 = chunk__13567_13573;
          var G__13581 = count__13568_13574;
          var G__13582 = i__13569_13575 + 1;
          seq__13566_13572 = G__13579;
          chunk__13567_13573 = G__13580;
          count__13568_13574 = G__13581;
          i__13569_13575 = G__13582;
          continue
        }else {
          var temp__4092__auto___13583 = cljs.core.seq.call(null, seq__13566_13572);
          if(temp__4092__auto___13583) {
            var seq__13566_13584__$1 = temp__4092__auto___13583;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13566_13584__$1)) {
              var c__3501__auto___13585 = cljs.core.chunk_first.call(null, seq__13566_13584__$1);
              var G__13586 = cljs.core.chunk_rest.call(null, seq__13566_13584__$1);
              var G__13587 = c__3501__auto___13585;
              var G__13588 = cljs.core.count.call(null, c__3501__auto___13585);
              var G__13589 = 0;
              seq__13566_13572 = G__13586;
              chunk__13567_13573 = G__13587;
              count__13568_13574 = G__13588;
              i__13569_13575 = G__13589;
              continue
            }else {
              var vec__13571_13590 = cljs.core.first.call(null, seq__13566_13584__$1);
              var key_13591 = cljs.core.nth.call(null, vec__13571_13590, 0, null);
              var val_13592 = cljs.core.nth.call(null, vec__13571_13590, 1, null);
              node.setAttribute(cljs.core.name.call(null, key_13591), val_13592);
              var G__13593 = cljs.core.next.call(null, seq__13566_13584__$1);
              var G__13594 = null;
              var G__13595 = 0;
              var G__13596 = 0;
              seq__13566_13572 = G__13593;
              chunk__13567_13573 = G__13594;
              count__13568_13574 = G__13595;
              i__13569_13575 = G__13596;
              continue
            }
          }else {
          }
        }
        break
      }
      if(cljs.core.truth_(content)) {
        return domina.append_BANG_.call(null, node, content)
      }else {
        return null
      }
    }else {
      if(cljs.core.sequential_QMARK_.call(null, node_spec)) {
        return cljs.core.flatten.call(null, cljs.core.map.call(null, html, node_spec))
      }else {
        if("\ufdd0:else") {
          return document.createTextNode([cljs.core.str(node_spec)].join(""))
        }else {
          return null
        }
      }
    }
  }
};
enfocus.core.get_attr = function get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.get_text = function get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.get_data = function() {
  var get_data = null;
  var get_data__1 = function(ky) {
    return get_data.call(null, ky, false)
  };
  var get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, node, ky, bubble)
    })
  };
  get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return get_data__1.call(this, ky);
      case 2:
        return get_data__2.call(this, ky, bubble)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$1 = get_data__1;
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  return get_data
}();
enfocus.core.get_prop = function get_prop(prop) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod[cljs.core.name.call(null, prop)]
  })
};
enfocus.core.merge_form_val = function merge_form_val(form_map, ky, val) {
  var mval = form_map.call(null, ky);
  if(cljs.core.coll_QMARK_.call(null, mval)) {
    return cljs.core.assoc.call(null, form_map, ky, cljs.core.conj.call(null, mval, val))
  }else {
    if(cljs.core.truth_(mval)) {
      return cljs.core.assoc.call(null, form_map, ky, cljs.core.list.call(null, val, mval))
    }else {
      if("\ufdd0:else") {
        return cljs.core.assoc.call(null, form_map, ky, val)
      }else {
        return null
      }
    }
  }
};
enfocus.core.read_simple_input = function read_simple_input(el, col) {
  return enfocus.core.merge_form_val.call(null, col, cljs.core.keyword.call(null, el.name), el.value)
};
enfocus.core.read_checked_input = function read_checked_input(el, col) {
  if(cljs.core.truth_(el.checked)) {
    return enfocus.core.merge_form_val.call(null, col, cljs.core.keyword.call(null, el.name), el.value)
  }else {
    return col
  }
};
enfocus.core.read_select_input = function read_select_input(el, col) {
  var nm = cljs.core.keyword.call(null, el.name);
  var onodes = domina.nodes.call(null, el.options);
  var opts = cljs.core.filter.call(null, function(nm, onodes) {
    return function(p1__13597_SHARP_) {
      return p1__13597_SHARP_.selected
    }
  }(nm, onodes), onodes);
  return enfocus.core.merge_form_val.call(null, col, nm, cljs.core.map.call(null, function(p1__13598_SHARP_) {
    return p1__13598_SHARP_.value
  }, opts))
};
enfocus.core.read_form = function read_form() {
  return enfocus.core.extr_multi_node.call(null, function(node) {
    var inputs = node.elements;
    return cljs.core.reduce.call(null, function(p1__13600_SHARP_, p2__13599_SHARP_) {
      var G__13603 = p2__13599_SHARP_.nodeName;
      if(cljs.core._EQ_.call(null, "BUTTON", G__13603)) {
        return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
      }else {
        if(cljs.core._EQ_.call(null, "SELECT", G__13603)) {
          return enfocus.core.read_select_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
        }else {
          if(cljs.core._EQ_.call(null, "TEXTAREA", G__13603)) {
            return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
          }else {
            if(cljs.core._EQ_.call(null, "INPUT", G__13603)) {
              var G__13604 = p2__13599_SHARP_.type;
              if(cljs.core._EQ_.call(null, "radio", G__13604)) {
                return enfocus.core.read_checked_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
              }else {
                if(cljs.core._EQ_.call(null, "checkbox", G__13604)) {
                  return enfocus.core.read_checked_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                }else {
                  if(cljs.core._EQ_.call(null, "submit", G__13604)) {
                    return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                  }else {
                    if(cljs.core._EQ_.call(null, "reset", G__13604)) {
                      return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                    }else {
                      if(cljs.core._EQ_.call(null, "button", G__13604)) {
                        return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                      }else {
                        if(cljs.core._EQ_.call(null, "password", G__13604)) {
                          return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                        }else {
                          if(cljs.core._EQ_.call(null, "hidden", G__13604)) {
                            return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                          }else {
                            if(cljs.core._EQ_.call(null, "text", G__13604)) {
                              return enfocus.core.read_simple_input.call(null, p2__13599_SHARP_, p1__13600_SHARP_)
                            }else {
                              if("\ufdd0:else") {
                                return p1__13600_SHARP_
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }else {
              if("\ufdd0:else") {
                return p1__13600_SHARP_
              }else {
                return null
              }
            }
          }
        }
      }
    }, cljs.core.PersistentArrayMap.EMPTY, inputs)
  })
};
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.filter = function filter(tst, trans) {
  return enfocus.core.multi_node_chain.call(null, function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res = cljs.core.filter.call(null, ttest, pnod_col);
      if(chain == null) {
        return enfocus.core.apply_transform.call(null, trans, res)
      }else {
        return enfocus.core.apply_transform.call(null, trans, res, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    filt.cljs$core$IFn$_invoke$arity$1 = filt__1;
    filt.cljs$core$IFn$_invoke$arity$2 = filt__2;
    return filt
  }())
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0:selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0:checked", enfocus.core.checked_radio_checkbox);
enfocus.core.match_QMARK_ = function match_QMARK_(selector) {
  return function(node) {
    if(cljs.core.truth_(node["matches"])) {
      return node.matches(selector)
    }else {
      if(cljs.core.truth_(node["matchesSelector"])) {
        return node.matchesSelector(selector)
      }else {
        if(cljs.core.truth_(node["msMatchesSelector"])) {
          return node.msMatchesSelector(selector)
        }else {
          if(cljs.core.truth_(node["mozMatchesSelector"])) {
            return node.mozMatchesSelector(selector)
          }else {
            if(cljs.core.truth_(node["webkitMatchesSelector"])) {
              return node.webkitMatchesSelector(selector)
            }else {
              if("\ufdd0:else") {
                return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([node, null], true), enfocus.core.nodes__GT_coll.call(null, enfocus.core.select.call(null, node)))
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__13605_SHARP_) {
      if(p1__13605_SHARP_ instanceof cljs.core.Symbol) {
        return enfocus.core.css_syms.call(null, p1__13605_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__13605_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__13605_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__13605_SHARP_)) {
            return create_sel_str.call(null, p1__13605_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__13605_SHARP_)) {
              return p1__13605_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_sel_str.cljs$core$IFn$_invoke$arity$1 = create_sel_str__1;
  create_sel_str.cljs$core$IFn$_invoke$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    var sel = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret = domina.css.sel.call(null, dom_node, sel);
    return ret
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css_select.cljs$core$IFn$_invoke$arity$1 = css_select__1;
  css_select.cljs$core$IFn$_invoke$arity$2 = css_select__2;
  css_select.cljs$core$IFn$_invoke$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3943__auto__ = func;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return enfocus.core.remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    var cnt = cljs.core.count.call(null, trans);
    var sel_QMARK_ = function() {
      var G__13614 = node;
      if(G__13614) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__13614.enfocus$core$ISelector$
          }
        }())) {
          return true
        }else {
          if(!G__13614.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__13614)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__13614)
      }
    }();
    if(function() {
      var and__3941__auto__ = cljs.core.not.call(null, sel_QMARK_);
      if(and__3941__auto__) {
        return cljs.core._EQ_.call(null, 1, cnt)
      }else {
        return and__3941__auto__
      }
    }()) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node)
    }else {
      var vec__13615 = cljs.core.truth_(sel_QMARK_) ? cljs.core.list.call(null, document, cljs.core.conj.call(null, trans, node)) : cljs.core.list.call(null, node, trans);
      var node__$1 = cljs.core.nth.call(null, vec__13615, 0, null);
      var trans__$1 = cljs.core.nth.call(null, vec__13615, 1, null);
      var seq__13616 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans__$1));
      var chunk__13617 = null;
      var count__13618 = 0;
      var i__13619 = 0;
      while(true) {
        if(i__13619 < count__13618) {
          var vec__13620 = cljs.core._nth.call(null, chunk__13617, i__13619);
          var sel = cljs.core.nth.call(null, vec__13620, 0, null);
          var t = cljs.core.nth.call(null, vec__13620, 1, null);
          enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
          var G__13622 = seq__13616;
          var G__13623 = chunk__13617;
          var G__13624 = count__13618;
          var G__13625 = i__13619 + 1;
          seq__13616 = G__13622;
          chunk__13617 = G__13623;
          count__13618 = G__13624;
          i__13619 = G__13625;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13616);
          if(temp__4092__auto__) {
            var seq__13616__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13616__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13616__$1);
              var G__13626 = cljs.core.chunk_rest.call(null, seq__13616__$1);
              var G__13627 = c__3501__auto__;
              var G__13628 = cljs.core.count.call(null, c__3501__auto__);
              var G__13629 = 0;
              seq__13616 = G__13626;
              chunk__13617 = G__13627;
              count__13618 = G__13628;
              i__13619 = G__13629;
              continue
            }else {
              var vec__13621 = cljs.core.first.call(null, seq__13616__$1);
              var sel = cljs.core.nth.call(null, vec__13621, 0, null);
              var t = cljs.core.nth.call(null, vec__13621, 1, null);
              enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
              var G__13630 = cljs.core.next.call(null, seq__13616__$1);
              var G__13631 = null;
              var G__13632 = 0;
              var G__13633 = 0;
              seq__13616 = G__13630;
              chunk__13617 = G__13631;
              count__13618 = G__13632;
              i__13619 = G__13633;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(arguments.length > 2) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__13634) {
    var id_mask = cljs.core.first(arglist__13634);
    arglist__13634 = cljs.core.next(arglist__13634);
    var node = cljs.core.first(arglist__13634);
    var trans = cljs.core.rest(arglist__13634);
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$core$IFn$_invoke$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(arguments.length > 1) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__13635) {
    var node = cljs.core.first(arglist__13635);
    var trans = cljs.core.rest(arglist__13635);
    return at__delegate(node, trans)
  };
  at.cljs$core$IFn$_invoke$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    var cnt = cljs.core.count.call(null, trans);
    var sel_QMARK_ = function() {
      var G__13640 = node;
      if(G__13640) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__13640.enfocus$core$ISelector$
          }
        }())) {
          return true
        }else {
          if(!G__13640.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__13640)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__13640)
      }
    }();
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = sel_QMARK_;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core._EQ_.call(null, 1, cnt)
      }else {
        return and__3941__auto__
      }
    }())) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), enfocus.core.select.call(null, node))
    }else {
      if(cljs.core._EQ_.call(null, 1, cnt)) {
        return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node)
      }else {
        if("\ufdd0:else") {
          var vec__13641 = cljs.core.truth_(sel_QMARK_) ? cljs.core.list.call(null, document, cljs.core.conj.call(null, trans, node)) : cljs.core.list.call(null, node, trans);
          var node__$1 = cljs.core.nth.call(null, vec__13641, 0, null);
          var trans__$1 = cljs.core.nth.call(null, vec__13641, 1, null);
          return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__13642) {
            var vec__13643 = p__13642;
            var ky = cljs.core.nth.call(null, vec__13643, 0, null);
            var sel = cljs.core.nth.call(null, vec__13643, 1, null);
            var ext = cljs.core.nth.call(null, vec__13643, 2, null);
            return cljs.core.PersistentVector.fromArray([ky, enfocus.core.apply_transform.call(null, ext, enfocus.core.select.call(null, sel, node__$1, ""))], true)
          }, cljs.core.partition.call(null, 3, trans__$1)))
        }else {
          return null
        }
      }
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(arguments.length > 1) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__13644) {
    var node = cljs.core.first(arglist__13644);
    var trans = cljs.core.rest(arglist__13644);
    return from__delegate(node, trans)
  };
  from.cljs$core$IFn$_invoke$arity$variadic = from__delegate;
  return from
}();
enfocus.core.xpath = function xpath(path) {
  return function(root, id_mask) {
    if(cljs.core.empty_QMARK_.call(null, id_mask)) {
      return domina.xpath.xpath.call(null, root, path)
    }else {
      var tmp = path.replace("@ID\x3d'", [cljs.core.str("@ID\x3d'"), cljs.core.str(id_mask)].join(""));
      var mpath = path.replace("@id\x3d'", [cljs.core.str("@id\x3d'"), cljs.core.str(id_mask)].join(""));
      return domina.xpath.xpath.call(null, root, mpath)
    }
  }
};
enfocus.core.this_node = function this_node(root, id_mask) {
  return root
};
if(cljs.core.truth_(typeof Text != "undefined")) {
  Text.prototype.domina$DomContent$ = true;
  Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
    return cljs.core.PersistentVector.fromArray([content], true)
  };
  Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
    return content
  }
}else {
}
String.prototype.enfocus$core$ISelector$ = true;
String.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
String.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
String.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  return enfocus.core.css_select.call(null, id_mask, root, cljs.core.PersistentVector.fromArray([this$], true))
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$ = true;
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  return enfocus.core.css_select.call(null, id_mask, root, this$)
};
enfocus.core.ISelector["function"] = true;
enfocus.core.select["function"] = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
enfocus.core.select["function"] = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
enfocus.core.select["function"] = function(this$, root, id_mask) {
  return this$.call(null, root, id_mask)
};
enfocus.core.ITransform["function"] = true;
enfocus.core.apply_transform["function"] = function(trans, nodes) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, trans, enfocus.core.nodes__GT_coll.call(null, nodes)))
};
enfocus.core.apply_transform["function"] = function(trans, nodes, chain) {
  var pnod_col = enfocus.core.nodes__GT_coll.call(null, nodes);
  var val = cljs.core.doall.call(null, cljs.core.map.call(null, trans, pnod_col));
  if(cljs.core.truth_(chain)) {
    return enfocus.core.apply_transform.call(null, chain, nodes)
  }else {
    return val
  }
};
goog.provide("enfocus.events");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("goog.dom");
goog.require("goog.events");
enfocus.events.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.events.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.events.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.events.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.events.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.events.view_port_monitor)
  }
};
enfocus.events.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj = new Object;
  obj.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback = enfocus.events.mouse_enter_leave.call(null, func);
    callback.listen = func;
    callback.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback)
    }
  };
  obj.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var seq__13066_13070 = cljs.core.seq.call(null, listeners);
    var chunk__13067_13071 = null;
    var count__13068_13072 = 0;
    var i__13069_13073 = 0;
    while(true) {
      if(i__13069_13073 < count__13068_13072) {
        var obj_13074__$1 = cljs.core._nth.call(null, chunk__13067_13071, i__13069_13073);
        var listener_13075 = obj_13074__$1.listener;
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = function() {
            var or__3943__auto__ = cljs.core.not.call(null, func);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return cljs.core._EQ_.call(null, listener_13075.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3941__auto__)) {
            var or__3943__auto__ = cljs.core.not.call(null, opt_scope);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return cljs.core._EQ_.call(null, listener_13075.scope, opt_scope)
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener_13075)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener_13075)
          }
        }else {
        }
        var G__13076 = seq__13066_13070;
        var G__13077 = chunk__13067_13071;
        var G__13078 = count__13068_13072;
        var G__13079 = i__13069_13073 + 1;
        seq__13066_13070 = G__13076;
        chunk__13067_13071 = G__13077;
        count__13068_13072 = G__13078;
        i__13069_13073 = G__13079;
        continue
      }else {
        var temp__4092__auto___13080 = cljs.core.seq.call(null, seq__13066_13070);
        if(temp__4092__auto___13080) {
          var seq__13066_13081__$1 = temp__4092__auto___13080;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13066_13081__$1)) {
            var c__3501__auto___13082 = cljs.core.chunk_first.call(null, seq__13066_13081__$1);
            var G__13083 = cljs.core.chunk_rest.call(null, seq__13066_13081__$1);
            var G__13084 = c__3501__auto___13082;
            var G__13085 = cljs.core.count.call(null, c__3501__auto___13082);
            var G__13086 = 0;
            seq__13066_13070 = G__13083;
            chunk__13067_13071 = G__13084;
            count__13068_13072 = G__13085;
            i__13069_13073 = G__13086;
            continue
          }else {
            var obj_13087__$1 = cljs.core.first.call(null, seq__13066_13081__$1);
            var listener_13088 = obj_13087__$1.listener;
            if(cljs.core.truth_(function() {
              var and__3941__auto__ = function() {
                var or__3943__auto__ = cljs.core.not.call(null, func);
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return cljs.core._EQ_.call(null, listener_13088.listen, func)
                }
              }();
              if(cljs.core.truth_(and__3941__auto__)) {
                var or__3943__auto__ = cljs.core.not.call(null, opt_scope);
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return cljs.core._EQ_.call(null, listener_13088.scope, opt_scope)
                }
              }else {
                return and__3941__auto__
              }
            }())) {
              if(cljs.core.truth_(opt_handler)) {
                opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener_13088)
              }else {
                goog.events.unlisten(elm, cljs.core.name.call(null, event), listener_13088)
              }
            }else {
            }
            var G__13089 = cljs.core.next.call(null, seq__13066_13081__$1);
            var G__13090 = null;
            var G__13091 = 0;
            var G__13092 = 0;
            seq__13066_13070 = G__13089;
            chunk__13067_13071 = G__13090;
            count__13068_13072 = G__13091;
            i__13069_13073 = G__13092;
            continue
          }
        }else {
        }
      }
      break
    }
    return listeners
  };
  return obj
};
enfocus.events.wrapper_register = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:mouseenter", enfocus.events.gen_enter_leave_wrapper.call(null, "\ufdd0:mouseover"), "\ufdd0:mouseleave", enfocus.events.gen_enter_leave_wrapper.call(null, "\ufdd0:mouseout")], true);
enfocus.events.listen = function listen(event, func) {
  var wrapper = enfocus.events.wrapper_register.call(null, event);
  return function(pnod) {
    if(function() {
      var and__3941__auto__ = cljs.core._EQ_.call(null, "\ufdd0:resize", event);
      if(and__3941__auto__) {
        return window === pnod
      }else {
        return and__3941__auto__
      }
    }()) {
      return goog.events.listen(enfocus.events.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper, func)
      }
    }
  }
};
enfocus.events.remove_listeners = function() {
  var remove_listeners__delegate = function(event_list) {
    var get_name = function(p1__13093_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__13093_SHARP_, "\ufdd0:mouseenter") ? "\ufdd0:mouseover" : cljs.core._EQ_.call(null, p1__13093_SHARP_, "\ufdd0:mouseleave") ? "\ufdd0:mouseout" : "\ufdd0:else" ? p1__13093_SHARP_ : null)
    };
    return function(pnod) {
      var seq__13098 = cljs.core.seq.call(null, event_list);
      var chunk__13099 = null;
      var count__13100 = 0;
      var i__13101 = 0;
      while(true) {
        if(i__13101 < count__13100) {
          var ev = cljs.core._nth.call(null, chunk__13099, i__13101);
          goog.events.removeAll(pnod, get_name.call(null, ev));
          var G__13102 = seq__13098;
          var G__13103 = chunk__13099;
          var G__13104 = count__13100;
          var G__13105 = i__13101 + 1;
          seq__13098 = G__13102;
          chunk__13099 = G__13103;
          count__13100 = G__13104;
          i__13101 = G__13105;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13098);
          if(temp__4092__auto__) {
            var seq__13098__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13098__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13098__$1);
              var G__13106 = cljs.core.chunk_rest.call(null, seq__13098__$1);
              var G__13107 = c__3501__auto__;
              var G__13108 = cljs.core.count.call(null, c__3501__auto__);
              var G__13109 = 0;
              seq__13098 = G__13106;
              chunk__13099 = G__13107;
              count__13100 = G__13108;
              i__13101 = G__13109;
              continue
            }else {
              var ev = cljs.core.first.call(null, seq__13098__$1);
              goog.events.removeAll(pnod, get_name.call(null, ev));
              var G__13110 = cljs.core.next.call(null, seq__13098__$1);
              var G__13111 = null;
              var G__13112 = 0;
              var G__13113 = 0;
              seq__13098 = G__13110;
              chunk__13099 = G__13111;
              count__13100 = G__13112;
              i__13101 = G__13113;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var remove_listeners = function(var_args) {
    var event_list = null;
    if(arguments.length > 0) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_listeners__delegate.call(this, event_list)
  };
  remove_listeners.cljs$lang$maxFixedArity = 0;
  remove_listeners.cljs$lang$applyTo = function(arglist__13114) {
    var event_list = cljs.core.seq(arglist__13114);
    return remove_listeners__delegate(event_list)
  };
  remove_listeners.cljs$core$IFn$_invoke$arity$variadic = remove_listeners__delegate;
  return remove_listeners
}();
enfocus.events.unlisten = function() {
  var unlisten = null;
  var unlisten__1 = function(event) {
    return enfocus.events.remove_listeners.call(null, event)
  };
  var unlisten__2 = function(event, func) {
    var wrapper = enfocus.events.wrapper_register.call(null, event);
    return function(pnod) {
      if(wrapper == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper, func)
      }
    }
  };
  unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return unlisten__1.call(this, event);
      case 2:
        return unlisten__2.call(this, event, func)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$1 = unlisten__1;
  unlisten.cljs$core$IFn$_invoke$arity$2 = unlisten__2;
  return unlisten
}();
enfocus.events.get_node_chain = function get_node_chain(top, node) {
  if(function() {
    var or__3943__auto__ = node == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._EQ_.call(null, node, top)
    }
  }()) {
    return cljs.core.List.EMPTY
  }else {
    return cljs.core.conj.call(null, get_node_chain.call(null, top, node.parentNode), node)
  }
};
enfocus.events.create_event = function create_event(type, cur, tar) {
  var event = new goog.events.Event(type);
  event.currentTarget = cur;
  event.target = tar;
  return event
};
enfocus.events.listen_live = function listen_live(event, selector, func) {
  return function(node) {
    return enfocus.core.at.call(null, node, enfocus.events.listen.call(null, event, function(p1__13115_SHARP_) {
      var seq__13120 = cljs.core.seq.call(null, enfocus.events.get_node_chain.call(null, node, p1__13115_SHARP_.target));
      var chunk__13121 = null;
      var count__13122 = 0;
      var i__13123 = 0;
      while(true) {
        if(i__13123 < count__13122) {
          var el = cljs.core._nth.call(null, chunk__13121, i__13123);
          enfocus.core.at.call(null, el, enfocus.core.filter.call(null, enfocus.core.match_QMARK_.call(null, selector), function(seq__13120, chunk__13121, count__13122, i__13123, el) {
            return function(node__$1) {
              return func.call(null, enfocus.events.create_event.call(null, event, el, p1__13115_SHARP_.target))
            }
          }(seq__13120, chunk__13121, count__13122, i__13123, el)));
          var G__13124 = seq__13120;
          var G__13125 = chunk__13121;
          var G__13126 = count__13122;
          var G__13127 = i__13123 + 1;
          seq__13120 = G__13124;
          chunk__13121 = G__13125;
          count__13122 = G__13126;
          i__13123 = G__13127;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13120);
          if(temp__4092__auto__) {
            var seq__13120__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13120__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13120__$1);
              var G__13128 = cljs.core.chunk_rest.call(null, seq__13120__$1);
              var G__13129 = c__3501__auto__;
              var G__13130 = cljs.core.count.call(null, c__3501__auto__);
              var G__13131 = 0;
              seq__13120 = G__13128;
              chunk__13121 = G__13129;
              count__13122 = G__13130;
              i__13123 = G__13131;
              continue
            }else {
              var el = cljs.core.first.call(null, seq__13120__$1);
              enfocus.core.at.call(null, el, enfocus.core.filter.call(null, enfocus.core.match_QMARK_.call(null, selector), function(seq__13120, chunk__13121, count__13122, i__13123, el, seq__13120__$1, temp__4092__auto__) {
                return function(node__$1) {
                  return func.call(null, enfocus.events.create_event.call(null, event, el, p1__13115_SHARP_.target))
                }
              }(seq__13120, chunk__13121, count__13122, i__13123, el, seq__13120__$1, temp__4092__auto__)));
              var G__13132 = cljs.core.next.call(null, seq__13120__$1);
              var G__13133 = null;
              var G__13134 = 0;
              var G__13135 = 0;
              seq__13120 = G__13132;
              chunk__13121 = G__13133;
              count__13122 = G__13134;
              i__13123 = G__13135;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }))
  }
};
enfocus.events.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0:else") {
            var G__13136 = parent;
            var G__13137 = child.parentNode;
            parent = G__13136;
            child = G__13137;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.events.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re = e.relatedTarget;
    var this$ = e.currentTarget;
    if(function() {
      var and__3941__auto__ = !(re === this$);
      if(and__3941__auto__) {
        return cljs.core.not.call(null, enfocus.events.child_of_QMARK_.call(null, this$, re))
      }else {
        return and__3941__auto__
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370db", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#db7093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.Rgb;
goog.color.Hsv;
goog.color.Hsl;
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }else {
    if(isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if(overflowX == "visible") {
        return element.scrollLeft
      }else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft
      }
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if(!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement
  }
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left
  }else {
    if(goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left
    }
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if(!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart
  }else {
    if(goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart
    }else {
      if(!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth
      }else {
        element.scrollLeft = offsetStart
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if(!goog.isNull(top)) {
    elem.style.top = top + "px"
  }
  if(isRtl) {
    elem.style.right = left + "px";
    elem.style.left = ""
  }else {
    elem.style.left = left + "px";
    elem.style.right = ""
  }
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element;
  this.rightToLeft_
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.rightToLeft_;
goog.fx.dom.PredefinedEffect.prototype.isRightToLeft = function() {
  if(!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.element)
  }
  return this.rightToLeft_
};
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  var pos = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "right" : "left";
  this.element.style[pos] = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft;
  var start = [offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(this.element) : this.element.offsetLeft;
  this.startPoint = [offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  var marginX = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "marginRight" : "marginLeft";
  this.element.style[marginX] = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  if(this.isRightPositioningForRtlEnabled()) {
    goog.style.bidi.setScrollOffset(this.element, Math.round(this.coords[0]))
  }else {
    this.element.scrollLeft = Math.round(this.coords[0])
  }
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor && computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("enfocus.effects");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.events");
goog.require("goog.dom.query");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("enfocus.core");
enfocus.effects.chainable_effect = function chainable_effect(func, callback) {
  var trans = function(pnodes, chain) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var cnt = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col));
    var partial_cback = function(pnod_col, cnt) {
      return function() {
        cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt))) {
          if(cljs.core.truth_(callback)) {
            enfocus.core.apply_transform.call(null, callback, pnodes)
          }else {
          }
          if(cljs.core.truth_(chain)) {
            return enfocus.core.apply_transform.call(null, chain, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }(pnod_col, cnt);
    var seq__14128 = cljs.core.seq.call(null, pnod_col);
    var chunk__14129 = null;
    var count__14130 = 0;
    var i__14131 = 0;
    while(true) {
      if(i__14131 < count__14130) {
        var pnod = cljs.core._nth.call(null, chunk__14129, i__14131);
        func.call(null, pnod, partial_cback);
        var G__14135 = seq__14128;
        var G__14136 = chunk__14129;
        var G__14137 = count__14130;
        var G__14138 = i__14131 + 1;
        seq__14128 = G__14135;
        chunk__14129 = G__14136;
        count__14130 = G__14137;
        i__14131 = G__14138;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__14128);
        if(temp__4092__auto__) {
          var seq__14128__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14128__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14128__$1);
            var G__14139 = cljs.core.chunk_rest.call(null, seq__14128__$1);
            var G__14140 = c__3501__auto__;
            var G__14141 = cljs.core.count.call(null, c__3501__auto__);
            var G__14142 = 0;
            seq__14128 = G__14139;
            chunk__14129 = G__14140;
            count__14130 = G__14141;
            i__14131 = G__14142;
            continue
          }else {
            var pnod = cljs.core.first.call(null, seq__14128__$1);
            func.call(null, pnod, partial_cback);
            var G__14143 = cljs.core.next.call(null, seq__14128__$1);
            var G__14144 = null;
            var G__14145 = 0;
            var G__14146 = 0;
            seq__14128 = G__14143;
            chunk__14129 = G__14144;
            count__14130 = G__14145;
            i__14131 = G__14146;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  if(typeof enfocus.effects.t14132 !== "undefined") {
  }else {
    goog.provide("enfocus.effects.t14132");
    enfocus.effects.t14132 = function(trans, callback, func, chainable_effect, meta14133) {
      this.trans = trans;
      this.callback = callback;
      this.func = func;
      this.chainable_effect = chainable_effect;
      this.meta14133 = meta14133;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    enfocus.effects.t14132.cljs$lang$type = true;
    enfocus.effects.t14132.cljs$lang$ctorStr = "enfocus.effects/t14132";
    enfocus.effects.t14132.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "enfocus.effects/t14132")
    };
    enfocus.effects.t14132.prototype.enfocus$core$ITransform$ = true;
    enfocus.effects.t14132.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
      var self__ = this;
      return self__.trans.call(null, nodes, null)
    };
    enfocus.effects.t14132.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
      var self__ = this;
      return self__.trans.call(null, nodes, chain)
    };
    enfocus.effects.t14132.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14134) {
      var self__ = this;
      return self__.meta14133
    };
    enfocus.effects.t14132.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14134, meta14133__$1) {
      var self__ = this;
      return new enfocus.effects.t14132(self__.trans, self__.callback, self__.func, self__.chainable_effect, meta14133__$1)
    };
    enfocus.effects.__GT_t14132 = function __GT_t14132(trans__$1, callback__$1, func__$1, chainable_effect__$1, meta14133) {
      return new enfocus.effects.t14132(trans__$1, callback__$1, func__$1, chainable_effect__$1, meta14133)
    }
  }
  return new enfocus.effects.t14132(trans, callback, func, chainable_effect, null)
};
enfocus.effects.chain = function() {
  var chain__delegate = function(func, chains) {
    if(cljs.core.empty_QMARK_.call(null, chains)) {
      return function(pnod) {
        return enfocus.core.apply_transform.call(null, func, pnod)
      }
    }else {
      return function(pnod) {
        return enfocus.core.apply_transform.call(null, func, pnod, cljs.core.apply.call(null, chain, chains))
      }
    }
  };
  var chain = function(func, var_args) {
    var chains = null;
    if(arguments.length > 1) {
      chains = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return chain__delegate.call(this, func, chains)
  };
  chain.cljs$lang$maxFixedArity = 1;
  chain.cljs$lang$applyTo = function(arglist__14147) {
    var func = cljs.core.first(arglist__14147);
    var chains = cljs.core.rest(arglist__14147);
    return chain__delegate(func, chains)
  };
  chain.cljs$core$IFn$_invoke$arity$variadic = chain__delegate;
  return chain
}();
enfocus.effects.fade_out = function() {
  var fade_out = null;
  var fade_out__1 = function(ttime) {
    return fade_out.call(null, ttime, null, null)
  };
  var fade_out__2 = function(ttime, callback) {
    return fade_out.call(null, ttime, callback, null)
  };
  var fade_out__3 = function(ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var anim = new goog.fx.dom.FadeOut(pnod, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  fade_out = function(ttime, callback, accel) {
    switch(arguments.length) {
      case 1:
        return fade_out__1.call(this, ttime);
      case 2:
        return fade_out__2.call(this, ttime, callback);
      case 3:
        return fade_out__3.call(this, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fade_out.cljs$core$IFn$_invoke$arity$1 = fade_out__1;
  fade_out.cljs$core$IFn$_invoke$arity$2 = fade_out__2;
  fade_out.cljs$core$IFn$_invoke$arity$3 = fade_out__3;
  return fade_out
}();
enfocus.effects.fade_in = function() {
  var fade_in = null;
  var fade_in__1 = function(ttime) {
    return fade_in.call(null, ttime, null, null)
  };
  var fade_in__2 = function(ttime, callback) {
    return fade_in.call(null, ttime, callback, null)
  };
  var fade_in__3 = function(ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var anim = new goog.fx.dom.FadeIn(pnod, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  fade_in = function(ttime, callback, accel) {
    switch(arguments.length) {
      case 1:
        return fade_in__1.call(this, ttime);
      case 2:
        return fade_in__2.call(this, ttime, callback);
      case 3:
        return fade_in__3.call(this, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fade_in.cljs$core$IFn$_invoke$arity$1 = fade_in__1;
  fade_in.cljs$core$IFn$_invoke$arity$2 = fade_in__2;
  fade_in.cljs$core$IFn$_invoke$arity$3 = fade_in__3;
  return fade_in
}();
enfocus.effects.resize = function() {
  var resize = null;
  var resize__2 = function(wth, hgt) {
    return resize.call(null, wth, hgt, 0, null, null)
  };
  var resize__3 = function(wth, hgt, ttime) {
    return resize.call(null, wth, hgt, ttime, null, null)
  };
  var resize__4 = function(wth, hgt, ttime, callback) {
    return resize.call(null, wth, hgt, ttime, callback, null)
  };
  var resize__5 = function(wth, hgt, ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var csize = goog.style.getContentBoxSize(pnod);
      var start = [csize.width, csize.height];
      var wth__$1 = cljs.core._EQ_.call(null, "\ufdd0:curwidth", wth) ? csize.width : wth;
      var hgt__$1 = cljs.core._EQ_.call(null, "\ufdd0:curheight", hgt) ? csize.height : hgt;
      var end = [wth__$1, hgt__$1];
      var anim = new goog.fx.dom.Resize(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  resize = function(wth, hgt, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return resize__2.call(this, wth, hgt);
      case 3:
        return resize__3.call(this, wth, hgt, ttime);
      case 4:
        return resize__4.call(this, wth, hgt, ttime, callback);
      case 5:
        return resize__5.call(this, wth, hgt, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  resize.cljs$core$IFn$_invoke$arity$2 = resize__2;
  resize.cljs$core$IFn$_invoke$arity$3 = resize__3;
  resize.cljs$core$IFn$_invoke$arity$4 = resize__4;
  resize.cljs$core$IFn$_invoke$arity$5 = resize__5;
  return resize
}();
enfocus.effects.move = function() {
  var move = null;
  var move__2 = function(xpos, ypos) {
    return move.call(null, xpos, ypos, 0, null, null)
  };
  var move__3 = function(xpos, ypos, ttime) {
    return move.call(null, xpos, ypos, ttime, null, null)
  };
  var move__4 = function(xpos, ypos, ttime, callback) {
    return move.call(null, xpos, ypos, ttime, callback, null)
  };
  var move__5 = function(xpos, ypos, ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var cpos = goog.style.getPosition(pnod);
      var start = [cpos.x, cpos.y];
      var xpos__$1 = cljs.core._EQ_.call(null, "\ufdd0:curx", xpos) ? cpos.x : xpos;
      var ypos__$1 = cljs.core._EQ_.call(null, "\ufdd0:cury", ypos) ? cpos.y : ypos;
      var end = [xpos__$1, ypos__$1];
      var anim = new goog.fx.dom.Slide(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  move = function(xpos, ypos, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return move__2.call(this, xpos, ypos);
      case 3:
        return move__3.call(this, xpos, ypos, ttime);
      case 4:
        return move__4.call(this, xpos, ypos, ttime, callback);
      case 5:
        return move__5.call(this, xpos, ypos, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  move.cljs$core$IFn$_invoke$arity$2 = move__2;
  move.cljs$core$IFn$_invoke$arity$3 = move__3;
  move.cljs$core$IFn$_invoke$arity$4 = move__4;
  move.cljs$core$IFn$_invoke$arity$5 = move__5;
  return move
}();
enfocus.effects.scroll = function() {
  var scroll = null;
  var scroll__2 = function(xpos, ypos) {
    return scroll.call(null, xpos, ypos, 0, null, null)
  };
  var scroll__3 = function(xpos, ypos, ttime) {
    return scroll.call(null, xpos, ypos, ttime, null, null)
  };
  var scroll__4 = function(xpos, ypos, ttime, callback) {
    return scroll.call(null, xpos, ypos, ttime, callback, null)
  };
  var scroll__5 = function(xpos, ypos, ttime, callback, accel) {
    return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
      var start = [pnod.scrollLeft, pnod.scrollTop];
      var xpos__$1 = cljs.core._EQ_.call(null, "\ufdd0:curx", xpos) ? pnod.scrollLeft : xpos;
      var ypos__$1 = cljs.core._EQ_.call(null, "\ufdd0:cury", ypos) ? pnod.scrollTop : ypos;
      var end = [xpos__$1, ypos__$1];
      var anim = new goog.fx.dom.Scroll(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  scroll = function(xpos, ypos, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return scroll__2.call(this, xpos, ypos);
      case 3:
        return scroll__3.call(this, xpos, ypos, ttime);
      case 4:
        return scroll__4.call(this, xpos, ypos, ttime, callback);
      case 5:
        return scroll__5.call(this, xpos, ypos, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll.cljs$core$IFn$_invoke$arity$2 = scroll__2;
  scroll.cljs$core$IFn$_invoke$arity$3 = scroll__3;
  scroll.cljs$core$IFn$_invoke$arity$4 = scroll__4;
  scroll.cljs$core$IFn$_invoke$arity$5 = scroll__5;
  return scroll
}();
enfocus.effects.liner = function liner(t) {
  return t
};
enfocus.effects.ease_in_quad = function ease_in_quad(t) {
  return t * t
};
enfocus.effects.ease_out_quad = function ease_out_quad(t) {
  return-1 * t * (t - 2)
};
enfocus.effects.ease_in_out_quad = function ease_in_out_quad(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt
  }else {
    return-0.5 * ((nt - 1) * (nt - 2) - 1)
  }
};
enfocus.effects.ease_in_cubic = function ease_in_cubic(t) {
  return t * t * t
};
enfocus.effects.ease_out_cubic = function ease_out_cubic(t) {
  var nt = t - 1;
  return nt * nt * nt + 1
};
enfocus.effects.ease_in_out_cubic = function ease_in_out_cubic(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt)
  }
};
enfocus.effects.ease_in_quart = function ease_in_quart(t) {
  return t * t * t * t
};
enfocus.effects.ease_out_quart = function ease_out_quart(t) {
  var nt = t - 1;
  return-1 * (nt * nt * nt * nt - 1)
};
enfocus.effects.ease_in_out_quart = function ease_in_out_quart(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt * mt)
  }
};
enfocus.effects.ease_in_quint = function ease_in_quint(t) {
  return t * t * t * t
};
enfocus.effects.ease_out_quint = function ease_out_quint(t) {
  var nt = t - 1;
  return nt * nt * nt * nt + 1
};
enfocus.effects.ease_in_out_quint = function ease_in_out_quint(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt * mt * mt)
  }
};
enfocus.effects.sign_in = function sign_in(t) {
  return-1 * Math.cos(0.5 * Math.PI * t) + 1
};
enfocus.effects.sign_out = function sign_out(t) {
  return Math.sin(t * Math.PI * 0.5)
};
enfocus.effects.sign_in_out = function sign_in_out(t) {
  return-0.5 * (Math.cos(Math.PI * t) - 1)
};
enfocus.effects.expo_in = function expo_in(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 0
  }else {
    return Math.pow(2, 10 * (t - 1))
  }
};
enfocus.effects.expo_out = function expo_out(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 1
  }else {
    return-1 * Math.pow(2, -10 * t) + 1
  }
};
enfocus.effects.expo_in_out = function expo_in_out(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 0
  }else {
    if(cljs.core._EQ_.call(null, t, 1)) {
      return 1
    }else {
      if(t < 1) {
        return 0.5 * Math.pow(2, 10 * (t - 1))
      }else {
        if("\ufdd0:else") {
          return 0.5 * (-1 * Math.pow(2, -10 * (t - 1)) + 2)
        }else {
          return null
        }
      }
    }
  }
};
enfocus.effects.circular_in = function circular_in(t) {
  return-1 * (Math.sqrt(1 - Math.pow(t, 2)) - 1)
};
enfocus.effects.circular_out = function circular_out(t) {
  var nt = t - 1;
  return Math.sqrt(1 - Math.pow(nt, 2))
};
enfocus.effects.circular_in_out = function circular_in_out(t) {
  var nt = t * 2;
  if(t < 1) {
    return-0.5 * (Math.sqrt(1 - Math.pow(nt, 2)) - 1)
  }else {
    var mt = nt - 2;
    return-0.5 * (Math.sqrt(1 - Math.pow(nt, 2)) + 1)
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3370__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3370__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3370__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3370__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3370__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX] === "\ufdd0:finished"
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t14218 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.ioc_helpers.t14218");
    cljs.core.async.impl.ioc_helpers.t14218 = function(f, fn_handler, meta14219) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14219 = meta14219;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t14218.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t14218.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t14218";
    cljs.core.async.impl.ioc_helpers.t14218.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.ioc-helpers/t14218")
    };
    cljs.core.async.impl.ioc_helpers.t14218.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t14218.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t14218.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t14218.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14220) {
      var self__ = this;
      return self__.meta14219
    };
    cljs.core.async.impl.ioc_helpers.t14218.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14220, meta14219__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t14218(self__.f, self__.fn_handler, meta14219__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t14218 = function __GT_t14218(f__$1, fn_handler__$1, meta14219) {
      return new cljs.core.async.impl.ioc_helpers.t14218(f__$1, fn_handler__$1, meta14219)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t14218(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e14222) {
    if(e14222 instanceof Object) {
      var ex = e14222;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if("\ufdd0:else") {
        throw e14222;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_14225_14227 = state;
    statearr_14225_14227[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_14225_14227[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_14226_14228 = state;
    statearr_14226_14228[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14226_14228[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_14231_14233 = state;
    statearr_14231_14233[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_14231_14233[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_14232_14234 = state;
    statearr_14232_14234[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14232_14234[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__14235) {
    var map__14240 = p__14235;
    var map__14240__$1 = cljs.core.seq_QMARK_.call(null, map__14240) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14240) : map__14240;
    var opts = map__14240__$1;
    var statearr_14241_14244 = state;
    statearr_14241_14244[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_14242_14245 = state;
      statearr_14242_14245[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_14243_14246 = state;
      statearr_14243_14246[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return"\ufdd0:recur"
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__14235 = null;
    if(arguments.length > 3) {
      p__14235 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__14235)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__14247) {
    var state = cljs.core.first(arglist__14247);
    arglist__14247 = cljs.core.next(arglist__14247);
    var cont_block = cljs.core.first(arglist__14247);
    arglist__14247 = cljs.core.next(arglist__14247);
    var ports = cljs.core.first(arglist__14247);
    var p__14235 = cljs.core.rest(arglist__14247);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__14235)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__14212 = cnt + 1;
      cnt = G__14212;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3548__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3548__auto__) {
      var v_14213 = this$.pop();
      if(keep_QMARK_.call(null, v_14213)) {
        this$.unshift(v_14213)
      }else {
      }
      var G__14214 = x + 1;
      x = G__14214;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_14201 = 0;
  while(true) {
    var m_14202 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_14202 == null) {
    }else {
      m_14202.call(null);
      if(count_14201 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__14203 = count_14201 + 1;
        count_14201 = G__14203;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if("\ufdd0:else") {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t14207 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.channels.t14207");
    cljs.core.async.impl.channels.t14207 = function(val, box, meta14208) {
      this.val = val;
      this.box = box;
      this.meta14208 = meta14208;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t14207.cljs$lang$type = true;
    cljs.core.async.impl.channels.t14207.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t14207";
    cljs.core.async.impl.channels.t14207.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.channels/t14207")
    };
    cljs.core.async.impl.channels.t14207.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t14207.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14209) {
      var self__ = this;
      return self__.meta14208
    };
    cljs.core.async.impl.channels.t14207.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14209, meta14208__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t14207(self__.val, self__.box, meta14208__$1)
    };
    cljs.core.async.impl.channels.__GT_t14207 = function __GT_t14207(val__$1, box__$1, meta14208) {
      return new cljs.core.async.impl.channels.t14207(val__$1, box__$1, meta14208)
    }
  }
  return new cljs.core.async.impl.channels.t14207(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_14210 = self__.takes.pop();
      if(taker_14210 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_14210)) {
          var take_cb_14211 = cljs.core.async.impl.protocols.commit.call(null, taker_14210);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_14211, taker_14210) {
            return function() {
              return take_cb_14211.call(null, null)
            }
          }(take_cb_14211, taker_14210))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__14177 = level + 1;
        level = G__14177;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_14178 = 0;
    while(true) {
      if(i_14178 < arr.length) {
        arr[i_14178] = null;
        var G__14179 = i_14178 + 1;
        i_14178 = G__14179;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__14180 = x_SINGLEQUOTE_;
                x__$1 = G__14180;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__14181 = x__$1;
        var G__14182 = k;
        var G__14183 = level - 1;
        var G__14184 = update;
        x = G__14181;
        k = G__14182;
        level = G__14183;
        update = G__14184;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_14185 = self__.level + 1;
      while(true) {
        if(i_14185 <= new_level + 1) {
          update[i_14185] = self__.header;
          var G__14186 = i_14185 + 1;
          i_14185 = G__14186;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_14187 = 0;
    while(true) {
      if(i_14187 <= self__.level) {
        var links_14188 = update[i_14187].forward;
        if(links_14188[i_14187] === x__$1) {
          links_14188[i_14187] = x__$1.forward[i_14187];
          var G__14189 = i_14187 + 1;
          i_14187 = G__14189;
          continue
        }else {
          var G__14190 = i_14187 + 1;
          i_14187 = G__14190;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__14191 = x_SINGLEQUOTE_;
              x__$1 = G__14191;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__14192 = nx;
        var G__14193 = level__$1 - 1;
        x = G__14192;
        level__$1 = G__14193;
        continue
      }else {
        var G__14194 = x;
        var G__14195 = level__$1 - 1;
        x = G__14194;
        level__$1 = G__14195;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__14196 = x_SINGLEQUOTE_;
              x__$1 = G__14196;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__14197 = nx;
        var G__14198 = level__$1 - 1;
        x = G__14197;
        level__$1 = G__14198;
        continue
      }else {
        var G__14199 = x;
        var G__14200 = level__$1 - 1;
        x = G__14199;
        level__$1 = G__14200;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t14151 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14151");
    cljs.core.async.t14151 = function(f, fn_handler, meta14152) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14152 = meta14152;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14151.cljs$lang$type = true;
    cljs.core.async.t14151.cljs$lang$ctorStr = "cljs.core.async/t14151";
    cljs.core.async.t14151.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t14151")
    };
    cljs.core.async.t14151.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14151.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t14151.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t14151.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14153) {
      var self__ = this;
      return self__.meta14152
    };
    cljs.core.async.t14151.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14153, meta14152__$1) {
      var self__ = this;
      return new cljs.core.async.t14151(self__.f, self__.fn_handler, meta14152__$1)
    };
    cljs.core.async.__GT_t14151 = function __GT_t14151(f__$1, fn_handler__$1, meta14152) {
      return new cljs.core.async.t14151(f__$1, fn_handler__$1, meta14152)
    }
  }
  return new cljs.core.async.t14151(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n === "number" ? cljs.core.async.buffer.call(null, buf_or_n) : buf_or_n)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_14154 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_14154)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_14154)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3548__auto___14155 = n;
  var x_14156 = 0;
  while(true) {
    if(x_14156 < n__3548__auto___14155) {
      a[x_14156] = 0;
      var G__14157 = x_14156 + 1;
      x_14156 = G__14157;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14158 = i + 1;
      i = G__14158;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t14162 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14162");
    cljs.core.async.t14162 = function(flag, alt_flag, meta14163) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14163 = meta14163;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14162.cljs$lang$type = true;
    cljs.core.async.t14162.cljs$lang$ctorStr = "cljs.core.async/t14162";
    cljs.core.async.t14162.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t14162")
    };
    cljs.core.async.t14162.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14162.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t14162.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t14162.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14164) {
      var self__ = this;
      return self__.meta14163
    };
    cljs.core.async.t14162.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14164, meta14163__$1) {
      var self__ = this;
      return new cljs.core.async.t14162(self__.flag, self__.alt_flag, meta14163__$1)
    };
    cljs.core.async.__GT_t14162 = function __GT_t14162(flag__$1, alt_flag__$1, meta14163) {
      return new cljs.core.async.t14162(flag__$1, alt_flag__$1, meta14163)
    }
  }
  return new cljs.core.async.t14162(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t14168 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14168");
    cljs.core.async.t14168 = function(cb, flag, alt_handler, meta14169) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14169 = meta14169;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14168.cljs$lang$type = true;
    cljs.core.async.t14168.cljs$lang$ctorStr = "cljs.core.async/t14168";
    cljs.core.async.t14168.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t14168")
    };
    cljs.core.async.t14168.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14168.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t14168.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t14168.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14170) {
      var self__ = this;
      return self__.meta14169
    };
    cljs.core.async.t14168.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14170, meta14169__$1) {
      var self__ = this;
      return new cljs.core.async.t14168(self__.cb, self__.flag, self__.alt_handler, meta14169__$1)
    };
    cljs.core.async.__GT_t14168 = function __GT_t14168(cb__$1, flag__$1, alt_handler__$1, meta14169) {
      return new cljs.core.async.t14168(cb__$1, flag__$1, alt_handler__$1, meta14169)
    }
  }
  return new cljs.core.async.t14168(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword("\ufdd0:priority")).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14171_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__14171_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__14172 = i + 1;
          i = G__14172;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, "\ufdd0:default")) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:default")).call(null, opts), "\ufdd0:default"], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__14173) {
    var map__14175 = p__14173;
    var map__14175__$1 = cljs.core.seq_QMARK_.call(null, map__14175) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14175) : map__14175;
    var opts = map__14175__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__14173 = null;
    if(arguments.length > 1) {
      p__14173 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__14173)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__14176) {
    var ports = cljs.core.first(arglist__14176);
    var p__14173 = cljs.core.rest(arglist__14176);
    return alts_BANG___delegate(ports, p__14173)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
goog.provide("chatter_box.event_bus");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
chatter_box.event_bus.Component = {};
chatter_box.event_bus.init = function init(this$, out_channel) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$init$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$init$arity$2(this$, out_channel)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.init[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.init["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.init", this$);
        }
      }
    }().call(null, this$, out_channel)
  }
};
chatter_box.event_bus.accept_message_QMARK_ = function accept_message_QMARK_(this$, message) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2(this$, message)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.accept_message_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.accept_message_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.accept-message?", this$);
        }
      }
    }().call(null, this$, message)
  }
};
chatter_box.event_bus.get_channel = function get_channel(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$get_channel$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$get_channel$arity$1(this$)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.get_channel[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.get_channel["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.get-channel", this$);
        }
      }
    }().call(null, this$)
  }
};
chatter_box.event_bus.create_bus = function() {
  var create_bus__delegate = function(components) {
    var ch = cljs.core.async.chan.call(null);
    var seq__12034_12152 = cljs.core.seq.call(null, components);
    var chunk__12035_12153 = null;
    var count__12036_12154 = 0;
    var i__12037_12155 = 0;
    while(true) {
      if(i__12037_12155 < count__12036_12154) {
        var co_12156 = cljs.core._nth.call(null, chunk__12035_12153, i__12037_12155);
        chatter_box.event_bus.init.call(null, co_12156, ch);
        var G__12157 = seq__12034_12152;
        var G__12158 = chunk__12035_12153;
        var G__12159 = count__12036_12154;
        var G__12160 = i__12037_12155 + 1;
        seq__12034_12152 = G__12157;
        chunk__12035_12153 = G__12158;
        count__12036_12154 = G__12159;
        i__12037_12155 = G__12160;
        continue
      }else {
        var temp__4092__auto___12161 = cljs.core.seq.call(null, seq__12034_12152);
        if(temp__4092__auto___12161) {
          var seq__12034_12162__$1 = temp__4092__auto___12161;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__12034_12162__$1)) {
            var c__3501__auto___12163 = cljs.core.chunk_first.call(null, seq__12034_12162__$1);
            var G__12164 = cljs.core.chunk_rest.call(null, seq__12034_12162__$1);
            var G__12165 = c__3501__auto___12163;
            var G__12166 = cljs.core.count.call(null, c__3501__auto___12163);
            var G__12167 = 0;
            seq__12034_12152 = G__12164;
            chunk__12035_12153 = G__12165;
            count__12036_12154 = G__12166;
            i__12037_12155 = G__12167;
            continue
          }else {
            var co_12168 = cljs.core.first.call(null, seq__12034_12162__$1);
            chatter_box.event_bus.init.call(null, co_12168, ch);
            var G__12169 = cljs.core.next.call(null, seq__12034_12162__$1);
            var G__12170 = null;
            var G__12171 = 0;
            var G__12172 = 0;
            seq__12034_12152 = G__12169;
            chunk__12035_12153 = G__12170;
            count__12036_12154 = G__12171;
            i__12037_12155 = G__12172;
            continue
          }
        }else {
        }
      }
      break
    }
    var c__5653__auto___12173 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5654__auto__ = function() {
        var switch__5581__auto__ = function(state_12106) {
          var state_val_12107 = state_12106[1];
          if(state_val_12107 === 1) {
            var state_12106__$1 = state_12106;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12106__$1, 2, ch)
          }else {
            if(state_val_12107 === 2) {
              var inst_12039 = state_12106[2];
              var inst_12040 = inst_12039;
              var state_12106__$1 = function() {
                var statearr_12108 = state_12106;
                statearr_12108[5] = inst_12040;
                return statearr_12108
              }();
              var statearr_12109_12174 = state_12106__$1;
              statearr_12109_12174[2] = null;
              statearr_12109_12174[1] = 3;
              return"\ufdd0:recur"
            }else {
              if(state_val_12107 === 3) {
                var inst_12040 = state_12106[5];
                var state_12106__$1 = state_12106;
                if(cljs.core.truth_(inst_12040)) {
                  var statearr_12110_12175 = state_12106__$1;
                  statearr_12110_12175[1] = 5
                }else {
                  var statearr_12111_12176 = state_12106__$1;
                  statearr_12111_12176[1] = 6
                }
                return"\ufdd0:recur"
              }else {
                if(state_val_12107 === 4) {
                  var inst_12104 = state_12106[2];
                  var state_12106__$1 = state_12106;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12106__$1, inst_12104)
                }else {
                  if(state_val_12107 === 5) {
                    var inst_12047 = cljs.core.seq.call(null, components);
                    var inst_12048 = inst_12047;
                    var inst_12049 = null;
                    var inst_12050 = 0;
                    var inst_12051 = 0;
                    var state_12106__$1 = function() {
                      var statearr_12112 = state_12106;
                      statearr_12112[6] = inst_12049;
                      statearr_12112[7] = inst_12050;
                      statearr_12112[8] = inst_12048;
                      statearr_12112[9] = inst_12051;
                      return statearr_12112
                    }();
                    var statearr_12113_12177 = state_12106__$1;
                    statearr_12113_12177[2] = null;
                    statearr_12113_12177[1] = 8;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_12107 === 6) {
                      var state_12106__$1 = state_12106;
                      var statearr_12114_12178 = state_12106__$1;
                      statearr_12114_12178[2] = null;
                      statearr_12114_12178[1] = 7;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_12107 === 7) {
                        var inst_12102 = state_12106[2];
                        var state_12106__$1 = state_12106;
                        var statearr_12115_12179 = state_12106__$1;
                        statearr_12115_12179[2] = inst_12102;
                        statearr_12115_12179[1] = 4;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_12107 === 8) {
                          var inst_12050 = state_12106[7];
                          var inst_12051 = state_12106[9];
                          var inst_12053 = inst_12051 < inst_12050;
                          var inst_12054 = inst_12053;
                          var state_12106__$1 = state_12106;
                          if(cljs.core.truth_(inst_12054)) {
                            var statearr_12116_12180 = state_12106__$1;
                            statearr_12116_12180[1] = 10
                          }else {
                            var statearr_12117_12181 = state_12106__$1;
                            statearr_12117_12181[1] = 11
                          }
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_12107 === 9) {
                            var inst_12096 = state_12106[2];
                            var state_12106__$1 = function() {
                              var statearr_12118 = state_12106;
                              statearr_12118[10] = inst_12096;
                              return statearr_12118
                            }();
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12106__$1, 27, ch)
                          }else {
                            if(state_val_12107 === 10) {
                              var inst_12040 = state_12106[5];
                              var inst_12056 = state_12106[11];
                              var inst_12049 = state_12106[6];
                              var inst_12051 = state_12106[9];
                              var inst_12056__$1 = cljs.core._nth.call(null, inst_12049, inst_12051);
                              var inst_12057 = chatter_box.event_bus.accept_message_QMARK_.call(null, inst_12056__$1, inst_12040);
                              var state_12106__$1 = function() {
                                var statearr_12119 = state_12106;
                                statearr_12119[11] = inst_12056__$1;
                                return statearr_12119
                              }();
                              if(cljs.core.truth_(inst_12057)) {
                                var statearr_12120_12182 = state_12106__$1;
                                statearr_12120_12182[1] = 13
                              }else {
                                var statearr_12121_12183 = state_12106__$1;
                                statearr_12121_12183[1] = 14
                              }
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_12107 === 11) {
                                var inst_12068 = state_12106[12];
                                var inst_12048 = state_12106[8];
                                var inst_12068__$1 = cljs.core.seq.call(null, inst_12048);
                                var state_12106__$1 = function() {
                                  var statearr_12122 = state_12106;
                                  statearr_12122[12] = inst_12068__$1;
                                  return statearr_12122
                                }();
                                if(inst_12068__$1) {
                                  var statearr_12123_12184 = state_12106__$1;
                                  statearr_12123_12184[1] = 17
                                }else {
                                  var statearr_12124_12185 = state_12106__$1;
                                  statearr_12124_12185[1] = 18
                                }
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_12107 === 12) {
                                  var inst_12094 = state_12106[2];
                                  var state_12106__$1 = state_12106;
                                  var statearr_12125_12186 = state_12106__$1;
                                  statearr_12125_12186[2] = inst_12094;
                                  statearr_12125_12186[1] = 9;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_12107 === 13) {
                                    var inst_12040 = state_12106[5];
                                    var inst_12056 = state_12106[11];
                                    var inst_12059 = chatter_box.event_bus.get_channel.call(null, inst_12056);
                                    var state_12106__$1 = state_12106;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12106__$1, 16, inst_12059, inst_12040)
                                  }else {
                                    if(state_val_12107 === 14) {
                                      var state_12106__$1 = state_12106;
                                      var statearr_12129_12187 = state_12106__$1;
                                      statearr_12129_12187[2] = null;
                                      statearr_12129_12187[1] = 15;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_12107 === 15) {
                                        var inst_12049 = state_12106[6];
                                        var inst_12050 = state_12106[7];
                                        var inst_12048 = state_12106[8];
                                        var inst_12051 = state_12106[9];
                                        var inst_12064 = state_12106[2];
                                        var inst_12065 = inst_12051 + 1;
                                        var tmp12126 = inst_12049;
                                        var tmp12127 = inst_12050;
                                        var tmp12128 = inst_12048;
                                        var inst_12048__$1 = tmp12128;
                                        var inst_12049__$1 = tmp12126;
                                        var inst_12050__$1 = tmp12127;
                                        var inst_12051__$1 = inst_12065;
                                        var state_12106__$1 = function() {
                                          var statearr_12130 = state_12106;
                                          statearr_12130[13] = inst_12064;
                                          statearr_12130[6] = inst_12049__$1;
                                          statearr_12130[7] = inst_12050__$1;
                                          statearr_12130[8] = inst_12048__$1;
                                          statearr_12130[9] = inst_12051__$1;
                                          return statearr_12130
                                        }();
                                        var statearr_12131_12188 = state_12106__$1;
                                        statearr_12131_12188[2] = null;
                                        statearr_12131_12188[1] = 8;
                                        return"\ufdd0:recur"
                                      }else {
                                        if(state_val_12107 === 16) {
                                          var inst_12061 = state_12106[2];
                                          var state_12106__$1 = state_12106;
                                          var statearr_12132_12189 = state_12106__$1;
                                          statearr_12132_12189[2] = inst_12061;
                                          statearr_12132_12189[1] = 15;
                                          return"\ufdd0:recur"
                                        }else {
                                          if(state_val_12107 === 17) {
                                            var inst_12068 = state_12106[12];
                                            var inst_12070 = cljs.core.chunked_seq_QMARK_.call(null, inst_12068);
                                            var state_12106__$1 = state_12106;
                                            if(inst_12070) {
                                              var statearr_12133_12190 = state_12106__$1;
                                              statearr_12133_12190[1] = 20
                                            }else {
                                              var statearr_12134_12191 = state_12106__$1;
                                              statearr_12134_12191[1] = 21
                                            }
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_12107 === 18) {
                                              var state_12106__$1 = state_12106;
                                              var statearr_12135_12192 = state_12106__$1;
                                              statearr_12135_12192[2] = null;
                                              statearr_12135_12192[1] = 19;
                                              return"\ufdd0:recur"
                                            }else {
                                              if(state_val_12107 === 19) {
                                                var inst_12092 = state_12106[2];
                                                var state_12106__$1 = state_12106;
                                                var statearr_12136_12193 = state_12106__$1;
                                                statearr_12136_12193[2] = inst_12092;
                                                statearr_12136_12193[1] = 12;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_12107 === 20) {
                                                  var inst_12068 = state_12106[12];
                                                  var inst_12072 = cljs.core.chunk_first.call(null, inst_12068);
                                                  var inst_12073 = cljs.core.chunk_rest.call(null, inst_12068);
                                                  var inst_12074 = cljs.core.count.call(null, inst_12072);
                                                  var inst_12048 = inst_12073;
                                                  var inst_12049 = inst_12072;
                                                  var inst_12050 = inst_12074;
                                                  var inst_12051 = 0;
                                                  var state_12106__$1 = function() {
                                                    var statearr_12137 = state_12106;
                                                    statearr_12137[6] = inst_12049;
                                                    statearr_12137[7] = inst_12050;
                                                    statearr_12137[8] = inst_12048;
                                                    statearr_12137[9] = inst_12051;
                                                    return statearr_12137
                                                  }();
                                                  var statearr_12138_12194 = state_12106__$1;
                                                  statearr_12138_12194[2] = null;
                                                  statearr_12138_12194[1] = 8;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_12107 === 21) {
                                                    var inst_12077 = state_12106[14];
                                                    var inst_12068 = state_12106[12];
                                                    var inst_12040 = state_12106[5];
                                                    var inst_12077__$1 = cljs.core.first.call(null, inst_12068);
                                                    var inst_12078 = chatter_box.event_bus.accept_message_QMARK_.call(null, inst_12077__$1, inst_12040);
                                                    var state_12106__$1 = function() {
                                                      var statearr_12139 = state_12106;
                                                      statearr_12139[14] = inst_12077__$1;
                                                      return statearr_12139
                                                    }();
                                                    if(cljs.core.truth_(inst_12078)) {
                                                      var statearr_12140_12195 = state_12106__$1;
                                                      statearr_12140_12195[1] = 23
                                                    }else {
                                                      var statearr_12141_12196 = state_12106__$1;
                                                      statearr_12141_12196[1] = 24
                                                    }
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if(state_val_12107 === 22) {
                                                      var inst_12089 = state_12106[2];
                                                      var state_12106__$1 = state_12106;
                                                      var statearr_12142_12197 = state_12106__$1;
                                                      statearr_12142_12197[2] = inst_12089;
                                                      statearr_12142_12197[1] = 19;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if(state_val_12107 === 23) {
                                                        var inst_12077 = state_12106[14];
                                                        var inst_12040 = state_12106[5];
                                                        var inst_12080 = chatter_box.event_bus.get_channel.call(null, inst_12077);
                                                        var state_12106__$1 = state_12106;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12106__$1, 26, inst_12080, inst_12040)
                                                      }else {
                                                        if(state_val_12107 === 24) {
                                                          var state_12106__$1 = state_12106;
                                                          var statearr_12143_12198 = state_12106__$1;
                                                          statearr_12143_12198[2] = null;
                                                          statearr_12143_12198[1] = 25;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if(state_val_12107 === 25) {
                                                            var inst_12068 = state_12106[12];
                                                            var inst_12085 = state_12106[2];
                                                            var inst_12086 = cljs.core.next.call(null, inst_12068);
                                                            var inst_12048 = inst_12086;
                                                            var inst_12049 = null;
                                                            var inst_12050 = 0;
                                                            var inst_12051 = 0;
                                                            var state_12106__$1 = function() {
                                                              var statearr_12144 = state_12106;
                                                              statearr_12144[15] = inst_12085;
                                                              statearr_12144[6] = inst_12049;
                                                              statearr_12144[7] = inst_12050;
                                                              statearr_12144[8] = inst_12048;
                                                              statearr_12144[9] = inst_12051;
                                                              return statearr_12144
                                                            }();
                                                            var statearr_12145_12199 = state_12106__$1;
                                                            statearr_12145_12199[2] = null;
                                                            statearr_12145_12199[1] = 8;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if(state_val_12107 === 26) {
                                                              var inst_12082 = state_12106[2];
                                                              var state_12106__$1 = state_12106;
                                                              var statearr_12146_12200 = state_12106__$1;
                                                              statearr_12146_12200[2] = inst_12082;
                                                              statearr_12146_12200[1] = 25;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_12107 === 27) {
                                                                var inst_12098 = state_12106[2];
                                                                var inst_12040 = inst_12098;
                                                                var state_12106__$1 = function() {
                                                                  var statearr_12147 = state_12106;
                                                                  statearr_12147[5] = inst_12040;
                                                                  return statearr_12147
                                                                }();
                                                                var statearr_12148_12201 = state_12106__$1;
                                                                statearr_12148_12201[2] = null;
                                                                statearr_12148_12201[1] = 3;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5581__auto__) {
          return function() {
            var state_machine__5582__auto__ = null;
            var state_machine__5582__auto____0 = function() {
              var statearr_12150 = new Array(16);
              statearr_12150[0] = state_machine__5582__auto__;
              statearr_12150[1] = 1;
              return statearr_12150
            };
            var state_machine__5582__auto____1 = function(state_12106) {
              while(true) {
                var result__5583__auto__ = switch__5581__auto__.call(null, state_12106);
                if(result__5583__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__5583__auto__
                }
                break
              }
            };
            state_machine__5582__auto__ = function(state_12106) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5582__auto____0.call(this);
                case 1:
                  return state_machine__5582__auto____1.call(this, state_12106)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
            return state_machine__5582__auto__
          }()
        }(switch__5581__auto__)
      }();
      var state__5655__auto__ = function() {
        var statearr_12151 = f__5654__auto__.call(null);
        statearr_12151[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto___12173;
        return statearr_12151
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
    });
    return ch
  };
  var create_bus = function(var_args) {
    var components = null;
    if(arguments.length > 0) {
      components = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return create_bus__delegate.call(this, components)
  };
  create_bus.cljs$lang$maxFixedArity = 0;
  create_bus.cljs$lang$applyTo = function(arglist__12202) {
    var components = cljs.core.seq(arglist__12202);
    return create_bus__delegate(components)
  };
  create_bus.cljs$core$IFn$_invoke$arity$variadic = create_bus__delegate;
  return create_bus
}();
goog.provide("cljs.core.match");
goog.require("cljs.core");
cljs.core.match.backtrack = new Error;
goog.provide("chatter_box.login_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.login_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-success"], true), null], true);
chatter_box.login_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.login_view_component.user = cljs.core.atom.call(null, null);
chatter_box.login_view_component.create_login_view_component = function create_login_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.login_view_component.t58885 !== "undefined") {
  }else {
    goog.provide("chatter_box.login_view_component.t58885");
    chatter_box.login_view_component.t58885 = function(in_ch, create_login_view_component, meta58886) {
      this.in_ch = in_ch;
      this.create_login_view_component = create_login_view_component;
      this.meta58886 = meta58886;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.login_view_component.t58885.cljs$lang$type = true;
    chatter_box.login_view_component.t58885.cljs$lang$ctorStr = "chatter-box.login-view-component/t58885";
    chatter_box.login_view_component.t58885.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.login-view-component/t58885")
    };
    chatter_box.login_view_component.t58885.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.login_view_component.t58885.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.out_chan, out_ch);
      return chatter_box.login_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.login_view_component.t58885.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.login_view_component.valid_types).call(null, msg)
    };
    chatter_box.login_view_component.t58885.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.login_view_component.t58885.prototype.cljs$core$IMeta$_meta$arity$1 = function(_58887) {
      var self__ = this;
      return self__.meta58886
    };
    chatter_box.login_view_component.t58885.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_58887, meta58886__$1) {
      var self__ = this;
      return new chatter_box.login_view_component.t58885(self__.in_ch, self__.create_login_view_component, meta58886__$1)
    };
    chatter_box.login_view_component.__GT_t58885 = function __GT_t58885(in_ch__$1, create_login_view_component__$1, meta58886) {
      return new chatter_box.login_view_component.t58885(in_ch__$1, create_login_view_component__$1, meta58886)
    }
  }
  return new chatter_box.login_view_component.t58885(in_ch, create_login_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/login.html[".container"]') == null) {
  var vec__58889_58894 = enfocus.core.replace_ids.call(null, "en58888_", '\x3cdiv id\x3d"login-container" class\x3d"container"\x3e \n \x3cform id\x3d"login-form" name\x3d"login-form" class\x3d"form-signin"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3ePlease sign in\x3c/h2\x3e \n  \x3cinput id\x3d"login-username" name\x3d"username" type\x3d"text" class\x3d"form-control" placeholder\x3d"Email address" autofocus\x3d"" /\x3e \n  \x3cinput id\x3d"login-password" name\x3d"password" type\x3d"password" class\x3d"form-control" placeholder\x3d"Password" /\x3e \n  \x3ca id\x3d"login-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"chat_window.html" type\x3d"submit"\x3eSign in \x3c/a\x3e\n  \x3ca id\x3d"user-nav-btn" class\x3d"btn btn-block" href\x3d"create_user.html" type\x3d"submit"\x3eNew User  \x3c/a\x3e\n \x3c/form\x3e\n\x3c/div\x3e');
  var sym__4174__auto___58895 = cljs.core.nth.call(null, vec__58889_58894, 0, null);
  var txt__4175__auto___58896 = cljs.core.nth.call(null, vec__58889_58894, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/login.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___58895, txt__4175__auto___58896], true))
}else {
}
chatter_box.login_view_component.login_page = function login_page() {
  var vec__58893 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/login.html[".container"]')
  }.call(null);
  var id_sym58890 = cljs.core.nth.call(null, vec__58893, 0, null);
  var pnod58891 = cljs.core.nth.call(null, vec__58893, 1, null);
  var pnod58891__$1 = enfocus.core.create_hidden_dom.call(null, pnod58891);
  enfocus.core.i_at.call(null, id_sym58890, pnod58891__$1);
  enfocus.core.reset_ids.call(null, id_sym58890, pnod58891__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod58891__$1)
};
chatter_box.login_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, "body", enfocus.core.append.call(null, chatter_box.login_view_component.login_page.call(null)), "#login-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.login_view_component.login)), "#user-nav-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.login_view_component.nav_create_user)))
};
chatter_box.login_view_component.navigate = function navigate(p__58897) {
  var map__58899 = p__58897;
  var map__58899__$1 = cljs.core.seq_QMARK_.call(null, map__58899) ? cljs.core.apply.call(null, cljs.core.hash_map, map__58899) : map__58899;
  var page = cljs.core.get.call(null, map__58899__$1, "\ufdd0:key");
  if(cljs.core._EQ_.call(null, page, "\ufdd0:login")) {
    return enfocus.core.at.call(null, "#login-container", enfocus.core.set_style.call(null, "\ufdd0:display", ""))
  }else {
    return enfocus.core.at.call(null, "#login-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"))
  }
};
chatter_box.login_view_component.login = function login() {
  var form = enfocus.core.from.call(null, "#login-form", enfocus.core.read_form.call(null));
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.login_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form), (new cljs.core.Keyword("\ufdd0:password")).call(null, form)))
};
chatter_box.login_view_component.logout = function logout() {
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:login", null));
  return cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.user, null)
};
chatter_box.login_view_component.login_successfull = function login_successfull(usr) {
  cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.user, usr);
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", null))
};
chatter_box.login_view_component.nav_create_user = function nav_create_user() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:create-user", null))
};
chatter_box.login_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_59456) {
        var state_val_59457 = state_59456[1];
        if(state_val_59457 === 32) {
          try {
            try {
              var state_59456__$1 = state_59456;
              if("\ufdd0:else") {
                var statearr_59462_59716 = state_59456__$1;
                statearr_59462_59716[1] = 34
              }else {
                var statearr_59463_59717 = state_59456__$1;
                statearr_59463_59717[1] = 35
              }
              return"\ufdd0:recur"
            }catch(e59460) {
              if(e59460 instanceof Error) {
                var ex__5575__auto__ = e59460;
                var statearr_59461_59718 = state_59456;
                statearr_59461_59718[1] = 17;
                statearr_59461_59718[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e59460;
                }else {
                  return null
                }
              }
            }
          }catch(e59458) {
            if(e59458 instanceof Error) {
              var ex__5575__auto__ = e59458;
              var statearr_59459_59719 = state_59456;
              statearr_59459_59719[1] = 26;
              statearr_59459_59719[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e59458;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_59457 === 64) {
            try {
              var inst_59417 = function() {
                throw cljs.core.match.backtrack;
              }();
              var state_59456__$1 = state_59456;
              var statearr_59466_59720 = state_59456__$1;
              statearr_59466_59720[2] = inst_59417;
              statearr_59466_59720[1] = 66;
              return"\ufdd0:recur"
            }catch(e59464) {
              if(e59464 instanceof Error) {
                var ex__5575__auto__ = e59464;
                var statearr_59465_59721 = state_59456;
                statearr_59465_59721[1] = 12;
                statearr_59465_59721[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e59464;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_59457 === 1) {
              var state_59456__$1 = state_59456;
              var statearr_59467_59722 = state_59456__$1;
              statearr_59467_59722[2] = null;
              statearr_59467_59722[1] = 2;
              return"\ufdd0:recur"
            }else {
              if(state_val_59457 === 33) {
                try {
                  try {
                    var inst_59361 = state_59456[2];
                    var state_59456__$1 = state_59456;
                    var statearr_59472_59723 = state_59456__$1;
                    statearr_59472_59723[2] = inst_59361;
                    statearr_59472_59723[1] = 25;
                    return"\ufdd0:recur"
                  }catch(e59470) {
                    if(e59470 instanceof Error) {
                      var ex__5575__auto__ = e59470;
                      var statearr_59471_59724 = state_59456;
                      statearr_59471_59724[1] = 17;
                      statearr_59471_59724[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e59470;
                      }else {
                        return null
                      }
                    }
                  }
                }catch(e59468) {
                  if(e59468 instanceof Error) {
                    var ex__5575__auto__ = e59468;
                    var statearr_59469_59725 = state_59456;
                    statearr_59469_59725[1] = 26;
                    statearr_59469_59725[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e59468;
                    }else {
                      return null
                    }
                  }
                }
              }else {
                if(state_val_59457 === 65) {
                  try {
                    var inst_59414 = state_59456[5];
                    var inst_59419 = function() {
                      throw inst_59414;
                    }();
                    var state_59456__$1 = state_59456;
                    var statearr_59475_59726 = state_59456__$1;
                    statearr_59475_59726[2] = inst_59419;
                    statearr_59475_59726[1] = 66;
                    return"\ufdd0:recur"
                  }catch(e59473) {
                    if(e59473 instanceof Error) {
                      var ex__5575__auto__ = e59473;
                      var statearr_59474_59727 = state_59456;
                      statearr_59474_59727[1] = 12;
                      statearr_59474_59727[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e59473;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_59457 === 2) {
                    var state_59456__$1 = state_59456;
                    if(true) {
                      var statearr_59476_59728 = state_59456__$1;
                      statearr_59476_59728[1] = 4
                    }else {
                      var statearr_59477_59729 = state_59456__$1;
                      statearr_59477_59729[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_59457 === 34) {
                      try {
                        try {
                          var inst_59356 = function() {
                            throw cljs.core.match.backtrack;
                          }();
                          var state_59456__$1 = state_59456;
                          var statearr_59482_59730 = state_59456__$1;
                          statearr_59482_59730[2] = inst_59356;
                          statearr_59482_59730[1] = 36;
                          return"\ufdd0:recur"
                        }catch(e59480) {
                          if(e59480 instanceof Error) {
                            var ex__5575__auto__ = e59480;
                            var statearr_59481_59731 = state_59456;
                            statearr_59481_59731[1] = 17;
                            statearr_59481_59731[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e59480;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e59478) {
                        if(e59478 instanceof Error) {
                          var ex__5575__auto__ = e59478;
                          var statearr_59479_59732 = state_59456;
                          statearr_59479_59732[1] = 26;
                          statearr_59479_59732[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e59478;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_59457 === 66) {
                        try {
                          var inst_59421 = state_59456[2];
                          var state_59456__$1 = state_59456;
                          var statearr_59485_59733 = state_59456__$1;
                          statearr_59485_59733[2] = inst_59421;
                          statearr_59485_59733[1] = 62;
                          return"\ufdd0:recur"
                        }catch(e59483) {
                          if(e59483 instanceof Error) {
                            var ex__5575__auto__ = e59483;
                            var statearr_59484_59734 = state_59456;
                            statearr_59484_59734[1] = 12;
                            statearr_59484_59734[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e59483;
                            }else {
                              return null
                            }
                          }
                        }
                      }else {
                        if(state_val_59457 === 3) {
                          var inst_59454 = state_59456[2];
                          var state_59456__$1 = state_59456;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_59456__$1, inst_59454)
                        }else {
                          if(state_val_59457 === 35) {
                            try {
                              try {
                                var state_59456__$1 = state_59456;
                                var statearr_59490_59735 = state_59456__$1;
                                statearr_59490_59735[2] = null;
                                statearr_59490_59735[1] = 36;
                                return"\ufdd0:recur"
                              }catch(e59488) {
                                if(e59488 instanceof Error) {
                                  var ex__5575__auto__ = e59488;
                                  var statearr_59489_59736 = state_59456;
                                  statearr_59489_59736[1] = 17;
                                  statearr_59489_59736[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e59488;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }catch(e59486) {
                              if(e59486 instanceof Error) {
                                var ex__5575__auto__ = e59486;
                                var statearr_59487_59737 = state_59456;
                                statearr_59487_59737[1] = 26;
                                statearr_59487_59737[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e59486;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_59457 === 67) {
                              try {
                                try {
                                  var inst_59320 = state_59456[6];
                                  var inst_59424 = cljs.core._EQ_.call(null, inst_59320, "\ufdd0:init");
                                  var state_59456__$1 = state_59456;
                                  if(inst_59424) {
                                    var statearr_59495_59738 = state_59456__$1;
                                    statearr_59495_59738[1] = 68
                                  }else {
                                    var statearr_59496_59739 = state_59456__$1;
                                    statearr_59496_59739[1] = 69
                                  }
                                  return"\ufdd0:recur"
                                }catch(e59493) {
                                  if(e59493 instanceof Error) {
                                    var ex__5575__auto__ = e59493;
                                    var statearr_59494_59740 = state_59456;
                                    statearr_59494_59740[1] = 12;
                                    statearr_59494_59740[2] = ex__5575__auto__;
                                    return"\ufdd0:recur"
                                  }else {
                                    if("\ufdd0:else") {
                                      throw e59493;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }catch(e59491) {
                                if(e59491 instanceof Error) {
                                  var ex__5575__auto__ = e59491;
                                  var statearr_59492_59741 = state_59456;
                                  statearr_59492_59741[1] = 63;
                                  statearr_59492_59741[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e59491;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_59457 === 4) {
                                var state_59456__$1 = state_59456;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_59456__$1, 7, in_ch)
                              }else {
                                if(state_val_59457 === 36) {
                                  try {
                                    try {
                                      var inst_59359 = state_59456[2];
                                      var state_59456__$1 = state_59456;
                                      var statearr_59501_59742 = state_59456__$1;
                                      statearr_59501_59742[2] = inst_59359;
                                      statearr_59501_59742[1] = 33;
                                      return"\ufdd0:recur"
                                    }catch(e59499) {
                                      if(e59499 instanceof Error) {
                                        var ex__5575__auto__ = e59499;
                                        var statearr_59500_59743 = state_59456;
                                        statearr_59500_59743[1] = 17;
                                        statearr_59500_59743[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e59499;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e59497) {
                                    if(e59497 instanceof Error) {
                                      var ex__5575__auto__ = e59497;
                                      var statearr_59498_59744 = state_59456;
                                      statearr_59498_59744[1] = 26;
                                      statearr_59498_59744[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e59497;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_59457 === 68) {
                                    try {
                                      try {
                                        var inst_59426 = chatter_box.login_view_component.initialize.call(null);
                                        var state_59456__$1 = state_59456;
                                        var statearr_59506_59745 = state_59456__$1;
                                        statearr_59506_59745[2] = inst_59426;
                                        statearr_59506_59745[1] = 70;
                                        return"\ufdd0:recur"
                                      }catch(e59504) {
                                        if(e59504 instanceof Error) {
                                          var ex__5575__auto__ = e59504;
                                          var statearr_59505_59746 = state_59456;
                                          statearr_59505_59746[1] = 12;
                                          statearr_59505_59746[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e59504;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }catch(e59502) {
                                      if(e59502 instanceof Error) {
                                        var ex__5575__auto__ = e59502;
                                        var statearr_59503_59747 = state_59456;
                                        statearr_59503_59747[1] = 63;
                                        statearr_59503_59747[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e59502;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_59457 === 5) {
                                      var state_59456__$1 = state_59456;
                                      var statearr_59507_59748 = state_59456__$1;
                                      statearr_59507_59748[2] = null;
                                      statearr_59507_59748[1] = 6;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_59457 === 37) {
                                        try {
                                          var inst_59318 = state_59456[7];
                                          var inst_59367 = chatter_box.login_view_component.navigate.call(null, inst_59318);
                                          var state_59456__$1 = state_59456;
                                          var statearr_59510_59749 = state_59456__$1;
                                          statearr_59510_59749[2] = inst_59367;
                                          statearr_59510_59749[1] = 39;
                                          return"\ufdd0:recur"
                                        }catch(e59508) {
                                          if(e59508 instanceof Error) {
                                            var ex__5575__auto__ = e59508;
                                            var statearr_59509_59750 = state_59456;
                                            statearr_59509_59750[1] = 17;
                                            statearr_59509_59750[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e59508;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_59457 === 69) {
                                          try {
                                            try {
                                              var state_59456__$1 = state_59456;
                                              if("\ufdd0:else") {
                                                var statearr_59515_59751 = state_59456__$1;
                                                statearr_59515_59751[1] = 71
                                              }else {
                                                var statearr_59516_59752 = state_59456__$1;
                                                statearr_59516_59752[1] = 72
                                              }
                                              return"\ufdd0:recur"
                                            }catch(e59513) {
                                              if(e59513 instanceof Error) {
                                                var ex__5575__auto__ = e59513;
                                                var statearr_59514_59753 = state_59456;
                                                statearr_59514_59753[1] = 12;
                                                statearr_59514_59753[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e59513;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e59511) {
                                            if(e59511 instanceof Error) {
                                              var ex__5575__auto__ = e59511;
                                              var statearr_59512_59754 = state_59456;
                                              statearr_59512_59754[1] = 63;
                                              statearr_59512_59754[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e59511;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_59457 === 6) {
                                            var inst_59452 = state_59456[2];
                                            var state_59456__$1 = state_59456;
                                            var statearr_59517_59755 = state_59456__$1;
                                            statearr_59517_59755[2] = inst_59452;
                                            statearr_59517_59755[1] = 3;
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_59457 === 38) {
                                              try {
                                                var state_59456__$1 = state_59456;
                                                if("\ufdd0:else") {
                                                  var statearr_59520_59756 = state_59456__$1;
                                                  statearr_59520_59756[1] = 40
                                                }else {
                                                  var statearr_59521_59757 = state_59456__$1;
                                                  statearr_59521_59757[1] = 41
                                                }
                                                return"\ufdd0:recur"
                                              }catch(e59518) {
                                                if(e59518 instanceof Error) {
                                                  var ex__5575__auto__ = e59518;
                                                  var statearr_59519_59758 = state_59456;
                                                  statearr_59519_59758[1] = 17;
                                                  statearr_59519_59758[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e59518;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_59457 === 70) {
                                                try {
                                                  try {
                                                    var inst_59434 = state_59456[2];
                                                    var state_59456__$1 = state_59456;
                                                    var statearr_59526_59759 = state_59456__$1;
                                                    statearr_59526_59759[2] = inst_59434;
                                                    statearr_59526_59759[1] = 62;
                                                    return"\ufdd0:recur"
                                                  }catch(e59524) {
                                                    if(e59524 instanceof Error) {
                                                      var ex__5575__auto__ = e59524;
                                                      var statearr_59525_59760 = state_59456;
                                                      statearr_59525_59760[1] = 12;
                                                      statearr_59525_59760[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e59524;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }catch(e59522) {
                                                  if(e59522 instanceof Error) {
                                                    var ex__5575__auto__ = e59522;
                                                    var statearr_59523_59761 = state_59456;
                                                    statearr_59523_59761[1] = 63;
                                                    statearr_59523_59761[2] = ex__5575__auto__;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if("\ufdd0:else") {
                                                      throw e59522;
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }else {
                                                if(state_val_59457 === 7) {
                                                  var inst_59312 = state_59456[8];
                                                  var inst_59312__$1 = state_59456[2];
                                                  var inst_59313 = cljs.core.seq_QMARK_.call(null, inst_59312__$1);
                                                  var state_59456__$1 = function() {
                                                    var statearr_59527 = state_59456;
                                                    statearr_59527[8] = inst_59312__$1;
                                                    return statearr_59527
                                                  }();
                                                  if(inst_59313) {
                                                    var statearr_59528_59762 = state_59456__$1;
                                                    statearr_59528_59762[1] = 8
                                                  }else {
                                                    var statearr_59529_59763 = state_59456__$1;
                                                    statearr_59529_59763[1] = 9
                                                  }
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_59457 === 39) {
                                                    try {
                                                      var inst_59375 = state_59456[2];
                                                      var state_59456__$1 = state_59456;
                                                      var statearr_59532_59764 = state_59456__$1;
                                                      statearr_59532_59764[2] = inst_59375;
                                                      statearr_59532_59764[1] = 24;
                                                      return"\ufdd0:recur"
                                                    }catch(e59530) {
                                                      if(e59530 instanceof Error) {
                                                        var ex__5575__auto__ = e59530;
                                                        var statearr_59531_59765 = state_59456;
                                                        statearr_59531_59765[1] = 17;
                                                        statearr_59531_59765[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e59530;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_59457 === 71) {
                                                      try {
                                                        try {
                                                          var inst_59429 = function() {
                                                            throw cljs.core.match.backtrack;
                                                          }();
                                                          var state_59456__$1 = state_59456;
                                                          var statearr_59537_59766 = state_59456__$1;
                                                          statearr_59537_59766[2] = inst_59429;
                                                          statearr_59537_59766[1] = 73;
                                                          return"\ufdd0:recur"
                                                        }catch(e59535) {
                                                          if(e59535 instanceof Error) {
                                                            var ex__5575__auto__ = e59535;
                                                            var statearr_59536_59767 = state_59456;
                                                            statearr_59536_59767[1] = 12;
                                                            statearr_59536_59767[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e59535;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }catch(e59533) {
                                                        if(e59533 instanceof Error) {
                                                          var ex__5575__auto__ = e59533;
                                                          var statearr_59534_59768 = state_59456;
                                                          statearr_59534_59768[1] = 63;
                                                          statearr_59534_59768[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e59533;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_59457 === 8) {
                                                        var inst_59312 = state_59456[8];
                                                        var inst_59315 = cljs.core.apply.call(null, cljs.core.hash_map, inst_59312);
                                                        var state_59456__$1 = state_59456;
                                                        var statearr_59538_59769 = state_59456__$1;
                                                        statearr_59538_59769[2] = inst_59315;
                                                        statearr_59538_59769[1] = 10;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_59457 === 40) {
                                                          try {
                                                            var inst_59370 = function() {
                                                              throw cljs.core.match.backtrack;
                                                            }();
                                                            var state_59456__$1 = state_59456;
                                                            var statearr_59541_59770 = state_59456__$1;
                                                            statearr_59541_59770[2] = inst_59370;
                                                            statearr_59541_59770[1] = 42;
                                                            return"\ufdd0:recur"
                                                          }catch(e59539) {
                                                            if(e59539 instanceof Error) {
                                                              var ex__5575__auto__ = e59539;
                                                              var statearr_59540_59771 = state_59456;
                                                              statearr_59540_59771[1] = 17;
                                                              statearr_59540_59771[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e59539;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_59457 === 72) {
                                                            try {
                                                              try {
                                                                var state_59456__$1 = state_59456;
                                                                var statearr_59546_59772 = state_59456__$1;
                                                                statearr_59546_59772[2] = null;
                                                                statearr_59546_59772[1] = 73;
                                                                return"\ufdd0:recur"
                                                              }catch(e59544) {
                                                                if(e59544 instanceof Error) {
                                                                  var ex__5575__auto__ = e59544;
                                                                  var statearr_59545_59773 = state_59456;
                                                                  statearr_59545_59773[1] = 12;
                                                                  statearr_59545_59773[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e59544;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }catch(e59542) {
                                                              if(e59542 instanceof Error) {
                                                                var ex__5575__auto__ = e59542;
                                                                var statearr_59543_59774 = state_59456;
                                                                statearr_59543_59774[1] = 63;
                                                                statearr_59543_59774[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e59542;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_59457 === 9) {
                                                              var inst_59312 = state_59456[8];
                                                              var state_59456__$1 = state_59456;
                                                              var statearr_59547_59775 = state_59456__$1;
                                                              statearr_59547_59775[2] = inst_59312;
                                                              statearr_59547_59775[1] = 10;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_59457 === 41) {
                                                                try {
                                                                  var state_59456__$1 = state_59456;
                                                                  var statearr_59550_59776 = state_59456__$1;
                                                                  statearr_59550_59776[2] = null;
                                                                  statearr_59550_59776[1] = 42;
                                                                  return"\ufdd0:recur"
                                                                }catch(e59548) {
                                                                  if(e59548 instanceof Error) {
                                                                    var ex__5575__auto__ = e59548;
                                                                    var statearr_59549_59777 = state_59456;
                                                                    statearr_59549_59777[1] = 17;
                                                                    statearr_59549_59777[2] = ex__5575__auto__;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if("\ufdd0:else") {
                                                                      throw e59548;
                                                                    }else {
                                                                      return null
                                                                    }
                                                                  }
                                                                }
                                                              }else {
                                                                if(state_val_59457 === 73) {
                                                                  try {
                                                                    try {
                                                                      var inst_59432 = state_59456[2];
                                                                      var state_59456__$1 = state_59456;
                                                                      var statearr_59555_59778 = state_59456__$1;
                                                                      statearr_59555_59778[2] = inst_59432;
                                                                      statearr_59555_59778[1] = 70;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e59553) {
                                                                      if(e59553 instanceof Error) {
                                                                        var ex__5575__auto__ = e59553;
                                                                        var statearr_59554_59779 = state_59456;
                                                                        statearr_59554_59779[1] = 12;
                                                                        statearr_59554_59779[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e59553;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e59551) {
                                                                    if(e59551 instanceof Error) {
                                                                      var ex__5575__auto__ = e59551;
                                                                      var statearr_59552_59780 = state_59456;
                                                                      statearr_59552_59780[1] = 63;
                                                                      statearr_59552_59780[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e59551;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_59457 === 10) {
                                                                    var inst_59318 = state_59456[7];
                                                                    var inst_59318__$1 = state_59456[2];
                                                                    var inst_59319 = cljs.core.get.call(null, inst_59318__$1, "\ufdd0:area");
                                                                    var inst_59320 = cljs.core.get.call(null, inst_59318__$1, "\ufdd0:key");
                                                                    var inst_59321 = cljs.core.get.call(null, inst_59318__$1, "\ufdd0:data");
                                                                    var state_59456__$1 = function() {
                                                                      var statearr_59556 = state_59456;
                                                                      statearr_59556[7] = inst_59318__$1;
                                                                      statearr_59556[9] = inst_59319;
                                                                      statearr_59556[6] = inst_59320;
                                                                      statearr_59556[10] = inst_59321;
                                                                      return statearr_59556
                                                                    }();
                                                                    var statearr_59557_59781 = state_59456__$1;
                                                                    statearr_59557_59781[2] = null;
                                                                    statearr_59557_59781[1] = 43;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if(state_val_59457 === 42) {
                                                                      try {
                                                                        var inst_59373 = state_59456[2];
                                                                        var state_59456__$1 = state_59456;
                                                                        var statearr_59560_59782 = state_59456__$1;
                                                                        statearr_59560_59782[2] = inst_59373;
                                                                        statearr_59560_59782[1] = 39;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e59558) {
                                                                        if(e59558 instanceof Error) {
                                                                          var ex__5575__auto__ = e59558;
                                                                          var statearr_59559_59783 = state_59456;
                                                                          statearr_59559_59783[1] = 17;
                                                                          statearr_59559_59783[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e59558;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_59457 === 74) {
                                                                        try {
                                                                          var inst_59439 = function() {
                                                                            throw cljs.core.match.backtrack;
                                                                          }();
                                                                          var state_59456__$1 = state_59456;
                                                                          var statearr_59563_59784 = state_59456__$1;
                                                                          statearr_59563_59784[2] = inst_59439;
                                                                          statearr_59563_59784[1] = 76;
                                                                          return"\ufdd0:recur"
                                                                        }catch(e59561) {
                                                                          if(e59561 instanceof Error) {
                                                                            var ex__5575__auto__ = e59561;
                                                                            var statearr_59562_59785 = state_59456;
                                                                            statearr_59562_59785[1] = 12;
                                                                            statearr_59562_59785[2] = ex__5575__auto__;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if("\ufdd0:else") {
                                                                              throw e59561;
                                                                            }else {
                                                                              return null
                                                                            }
                                                                          }
                                                                        }
                                                                      }else {
                                                                        if(state_val_59457 === 11) {
                                                                          var inst_59448 = state_59456[2];
                                                                          var state_59456__$1 = function() {
                                                                            var statearr_59564 = state_59456;
                                                                            statearr_59564[11] = inst_59448;
                                                                            return statearr_59564
                                                                          }();
                                                                          var statearr_59565_59786 = state_59456__$1;
                                                                          statearr_59565_59786[2] = null;
                                                                          statearr_59565_59786[1] = 2;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if(state_val_59457 === 43) {
                                                                            try {
                                                                              var inst_59319 = state_59456[9];
                                                                              var inst_59386 = cljs.core._EQ_.call(null, inst_59319, "\ufdd0:security");
                                                                              var state_59456__$1 = state_59456;
                                                                              if(inst_59386) {
                                                                                var statearr_59568_59787 = state_59456__$1;
                                                                                statearr_59568_59787[1] = 44
                                                                              }else {
                                                                                var statearr_59569_59788 = state_59456__$1;
                                                                                statearr_59569_59788[1] = 45
                                                                              }
                                                                              return"\ufdd0:recur"
                                                                            }catch(e59566) {
                                                                              if(e59566 instanceof Error) {
                                                                                var ex__5575__auto__ = e59566;
                                                                                var statearr_59567_59789 = state_59456;
                                                                                statearr_59567_59789[1] = 12;
                                                                                statearr_59567_59789[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e59566;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_59457 === 75) {
                                                                              try {
                                                                                var state_59456__$1 = state_59456;
                                                                                var statearr_59572_59790 = state_59456__$1;
                                                                                statearr_59572_59790[2] = null;
                                                                                statearr_59572_59790[1] = 76;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e59570) {
                                                                                if(e59570 instanceof Error) {
                                                                                  var ex__5575__auto__ = e59570;
                                                                                  var statearr_59571_59791 = state_59456;
                                                                                  statearr_59571_59791[1] = 12;
                                                                                  statearr_59571_59791[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e59570;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_59457 === 12) {
                                                                                var inst_59325 = state_59456[12];
                                                                                var inst_59325__$1 = state_59456[2];
                                                                                var inst_59326 = inst_59325__$1 === cljs.core.match.backtrack;
                                                                                var state_59456__$1 = function() {
                                                                                  var statearr_59573 = state_59456;
                                                                                  statearr_59573[12] = inst_59325__$1;
                                                                                  return statearr_59573
                                                                                }();
                                                                                if(cljs.core.truth_(inst_59326)) {
                                                                                  var statearr_59574_59792 = state_59456__$1;
                                                                                  statearr_59574_59792[1] = 13
                                                                                }else {
                                                                                  var statearr_59575_59793 = state_59456__$1;
                                                                                  statearr_59575_59793[1] = 14
                                                                                }
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_59457 === 44) {
                                                                                  try {
                                                                                    var state_59456__$1 = state_59456;
                                                                                    var statearr_59578_59794 = state_59456__$1;
                                                                                    statearr_59578_59794[2] = null;
                                                                                    statearr_59578_59794[1] = 52;
                                                                                    return"\ufdd0:recur"
                                                                                  }catch(e59576) {
                                                                                    if(e59576 instanceof Error) {
                                                                                      var ex__5575__auto__ = e59576;
                                                                                      var statearr_59577_59795 = state_59456;
                                                                                      statearr_59577_59795[1] = 12;
                                                                                      statearr_59577_59795[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e59576;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_59457 === 76) {
                                                                                    try {
                                                                                      var inst_59442 = state_59456[2];
                                                                                      var state_59456__$1 = state_59456;
                                                                                      var statearr_59581_59796 = state_59456__$1;
                                                                                      statearr_59581_59796[2] = inst_59442;
                                                                                      statearr_59581_59796[1] = 61;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e59579) {
                                                                                      if(e59579 instanceof Error) {
                                                                                        var ex__5575__auto__ = e59579;
                                                                                        var statearr_59580_59797 = state_59456;
                                                                                        statearr_59580_59797[1] = 12;
                                                                                        statearr_59580_59797[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e59579;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_59457 === 13) {
                                                                                      var state_59456__$1 = state_59456;
                                                                                      var statearr_59582_59798 = state_59456__$1;
                                                                                      statearr_59582_59798[2] = null;
                                                                                      statearr_59582_59798[1] = 21;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if(state_val_59457 === 45) {
                                                                                        try {
                                                                                          var inst_59319 = state_59456[9];
                                                                                          var inst_59412 = cljs.core._EQ_.call(null, inst_59319, "\ufdd0:view");
                                                                                          var state_59456__$1 = state_59456;
                                                                                          if(inst_59412) {
                                                                                            var statearr_59585_59799 = state_59456__$1;
                                                                                            statearr_59585_59799[1] = 59
                                                                                          }else {
                                                                                            var statearr_59586_59800 = state_59456__$1;
                                                                                            statearr_59586_59800[1] = 60
                                                                                          }
                                                                                          return"\ufdd0:recur"
                                                                                        }catch(e59583) {
                                                                                          if(e59583 instanceof Error) {
                                                                                            var ex__5575__auto__ = e59583;
                                                                                            var statearr_59584_59801 = state_59456;
                                                                                            statearr_59584_59801[1] = 12;
                                                                                            statearr_59584_59801[2] = ex__5575__auto__;
                                                                                            return"\ufdd0:recur"
                                                                                          }else {
                                                                                            if("\ufdd0:else") {
                                                                                              throw e59583;
                                                                                            }else {
                                                                                              return null
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }else {
                                                                                        if(state_val_59457 === 14) {
                                                                                          var inst_59325 = state_59456[12];
                                                                                          var inst_59381 = function() {
                                                                                            throw inst_59325;
                                                                                          }();
                                                                                          var state_59456__$1 = state_59456;
                                                                                          var statearr_59587_59802 = state_59456__$1;
                                                                                          statearr_59587_59802[2] = inst_59381;
                                                                                          statearr_59587_59802[1] = 15;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if(state_val_59457 === 46) {
                                                                                            try {
                                                                                              var inst_59446 = state_59456[2];
                                                                                              var state_59456__$1 = state_59456;
                                                                                              var statearr_59590_59803 = state_59456__$1;
                                                                                              statearr_59590_59803[2] = inst_59446;
                                                                                              statearr_59590_59803[1] = 11;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e59588) {
                                                                                              if(e59588 instanceof Error) {
                                                                                                var ex__5575__auto__ = e59588;
                                                                                                var statearr_59589_59804 = state_59456;
                                                                                                statearr_59589_59804[1] = 12;
                                                                                                statearr_59589_59804[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e59588;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_59457 === 15) {
                                                                                              var inst_59383 = state_59456[2];
                                                                                              var state_59456__$1 = state_59456;
                                                                                              var statearr_59591_59805 = state_59456__$1;
                                                                                              statearr_59591_59805[2] = inst_59383;
                                                                                              statearr_59591_59805[1] = 11;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if(state_val_59457 === 47) {
                                                                                                try {
                                                                                                  var inst_59410 = state_59456[2];
                                                                                                  var state_59456__$1 = state_59456;
                                                                                                  var statearr_59594_59806 = state_59456__$1;
                                                                                                  statearr_59594_59806[2] = inst_59410;
                                                                                                  statearr_59594_59806[1] = 46;
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e59592) {
                                                                                                  if(e59592 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e59592;
                                                                                                    var statearr_59593_59807 = state_59456;
                                                                                                    statearr_59593_59807[1] = 12;
                                                                                                    statearr_59593_59807[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e59592;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }else {
                                                                                                if(state_val_59457 === 16) {
                                                                                                  var inst_59379 = state_59456[2];
                                                                                                  var state_59456__$1 = state_59456;
                                                                                                  var statearr_59595_59808 = state_59456__$1;
                                                                                                  statearr_59595_59808[2] = inst_59379;
                                                                                                  statearr_59595_59808[1] = 15;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if(state_val_59457 === 48) {
                                                                                                    try {
                                                                                                      var inst_59388 = state_59456[13];
                                                                                                      var inst_59388__$1 = state_59456[2];
                                                                                                      var inst_59389 = inst_59388__$1 === cljs.core.match.backtrack;
                                                                                                      var state_59456__$1 = function() {
                                                                                                        var statearr_59598 = state_59456;
                                                                                                        statearr_59598[13] = inst_59388__$1;
                                                                                                        return statearr_59598
                                                                                                      }();
                                                                                                      if(cljs.core.truth_(inst_59389)) {
                                                                                                        var statearr_59599_59809 = state_59456__$1;
                                                                                                        statearr_59599_59809[1] = 49
                                                                                                      }else {
                                                                                                        var statearr_59600_59810 = state_59456__$1;
                                                                                                        statearr_59600_59810[1] = 50
                                                                                                      }
                                                                                                      return"\ufdd0:recur"
                                                                                                    }catch(e59596) {
                                                                                                      if(e59596 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e59596;
                                                                                                        var statearr_59597_59811 = state_59456;
                                                                                                        statearr_59597_59811[1] = 12;
                                                                                                        statearr_59597_59811[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e59596;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_59457 === 17) {
                                                                                                      var inst_59328 = state_59456[14];
                                                                                                      var inst_59328__$1 = state_59456[2];
                                                                                                      var inst_59329 = inst_59328__$1 === cljs.core.match.backtrack;
                                                                                                      var state_59456__$1 = function() {
                                                                                                        var statearr_59601 = state_59456;
                                                                                                        statearr_59601[14] = inst_59328__$1;
                                                                                                        return statearr_59601
                                                                                                      }();
                                                                                                      if(cljs.core.truth_(inst_59329)) {
                                                                                                        var statearr_59602_59812 = state_59456__$1;
                                                                                                        statearr_59602_59812[1] = 18
                                                                                                      }else {
                                                                                                        var statearr_59603_59813 = state_59456__$1;
                                                                                                        statearr_59603_59813[1] = 19
                                                                                                      }
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if(state_val_59457 === 49) {
                                                                                                        try {
                                                                                                          var inst_59391 = function() {
                                                                                                            throw cljs.core.match.backtrack;
                                                                                                          }();
                                                                                                          var state_59456__$1 = state_59456;
                                                                                                          var statearr_59606_59814 = state_59456__$1;
                                                                                                          statearr_59606_59814[2] = inst_59391;
                                                                                                          statearr_59606_59814[1] = 51;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e59604) {
                                                                                                          if(e59604 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e59604;
                                                                                                            var statearr_59605_59815 = state_59456;
                                                                                                            statearr_59605_59815[1] = 12;
                                                                                                            statearr_59605_59815[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e59604;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }else {
                                                                                                        if(state_val_59457 === 18) {
                                                                                                          var inst_59318 = state_59456[7];
                                                                                                          var inst_59331 = cljs.core.pr_str.call(null, "NO MATCH FOR:", inst_59318);
                                                                                                          var inst_59332 = chatter_box.login_view_component.log_debug.call(null, inst_59331);
                                                                                                          var state_59456__$1 = state_59456;
                                                                                                          var statearr_59607_59816 = state_59456__$1;
                                                                                                          statearr_59607_59816[2] = inst_59332;
                                                                                                          statearr_59607_59816[1] = 20;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if(state_val_59457 === 50) {
                                                                                                            try {
                                                                                                              var inst_59388 = state_59456[13];
                                                                                                              var inst_59393 = function() {
                                                                                                                throw inst_59388;
                                                                                                              }();
                                                                                                              var state_59456__$1 = state_59456;
                                                                                                              var statearr_59610_59817 = state_59456__$1;
                                                                                                              statearr_59610_59817[2] = inst_59393;
                                                                                                              statearr_59610_59817[1] = 51;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e59608) {
                                                                                                              if(e59608 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e59608;
                                                                                                                var statearr_59609_59818 = state_59456;
                                                                                                                statearr_59609_59818[1] = 12;
                                                                                                                statearr_59609_59818[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e59608;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_59457 === 19) {
                                                                                                              var inst_59328 = state_59456[14];
                                                                                                              var inst_59334 = function() {
                                                                                                                throw inst_59328;
                                                                                                              }();
                                                                                                              var state_59456__$1 = state_59456;
                                                                                                              var statearr_59611_59819 = state_59456__$1;
                                                                                                              statearr_59611_59819[2] = inst_59334;
                                                                                                              statearr_59611_59819[1] = 20;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if(state_val_59457 === 51) {
                                                                                                                try {
                                                                                                                  var inst_59395 = state_59456[2];
                                                                                                                  var state_59456__$1 = state_59456;
                                                                                                                  var statearr_59614_59820 = state_59456__$1;
                                                                                                                  statearr_59614_59820[2] = inst_59395;
                                                                                                                  statearr_59614_59820[1] = 47;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e59612) {
                                                                                                                  if(e59612 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e59612;
                                                                                                                    var statearr_59613_59821 = state_59456;
                                                                                                                    statearr_59613_59821[1] = 12;
                                                                                                                    statearr_59613_59821[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e59612;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }else {
                                                                                                                if(state_val_59457 === 20) {
                                                                                                                  var inst_59336 = state_59456[2];
                                                                                                                  var state_59456__$1 = state_59456;
                                                                                                                  var statearr_59615_59822 = state_59456__$1;
                                                                                                                  statearr_59615_59822[2] = inst_59336;
                                                                                                                  statearr_59615_59822[1] = 16;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if(state_val_59457 === 52) {
                                                                                                                    try {
                                                                                                                      try {
                                                                                                                        var inst_59320 = state_59456[6];
                                                                                                                        var inst_59398 = cljs.core._EQ_.call(null, inst_59320, "\ufdd0:logout");
                                                                                                                        var state_59456__$1 = state_59456;
                                                                                                                        if(inst_59398) {
                                                                                                                          var statearr_59620_59823 = state_59456__$1;
                                                                                                                          statearr_59620_59823[1] = 53
                                                                                                                        }else {
                                                                                                                          var statearr_59621_59824 = state_59456__$1;
                                                                                                                          statearr_59621_59824[1] = 54
                                                                                                                        }
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e59618) {
                                                                                                                        if(e59618 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e59618;
                                                                                                                          var statearr_59619_59825 = state_59456;
                                                                                                                          statearr_59619_59825[1] = 12;
                                                                                                                          statearr_59619_59825[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e59618;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }catch(e59616) {
                                                                                                                      if(e59616 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e59616;
                                                                                                                        var statearr_59617_59826 = state_59456;
                                                                                                                        statearr_59617_59826[1] = 48;
                                                                                                                        statearr_59617_59826[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e59616;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_59457 === 21) {
                                                                                                                      try {
                                                                                                                        var inst_59319 = state_59456[9];
                                                                                                                        var inst_59339 = cljs.core._EQ_.call(null, inst_59319, "\ufdd0:security");
                                                                                                                        var state_59456__$1 = state_59456;
                                                                                                                        if(inst_59339) {
                                                                                                                          var statearr_59624_59827 = state_59456__$1;
                                                                                                                          statearr_59624_59827[1] = 22
                                                                                                                        }else {
                                                                                                                          var statearr_59625_59828 = state_59456__$1;
                                                                                                                          statearr_59625_59828[1] = 23
                                                                                                                        }
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e59622) {
                                                                                                                        if(e59622 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e59622;
                                                                                                                          var statearr_59623_59829 = state_59456;
                                                                                                                          statearr_59623_59829[1] = 17;
                                                                                                                          statearr_59623_59829[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e59622;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_59457 === 53) {
                                                                                                                        try {
                                                                                                                          try {
                                                                                                                            var inst_59400 = chatter_box.login_view_component.logout.call(null);
                                                                                                                            var state_59456__$1 = state_59456;
                                                                                                                            var statearr_59630_59830 = state_59456__$1;
                                                                                                                            statearr_59630_59830[2] = inst_59400;
                                                                                                                            statearr_59630_59830[1] = 55;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e59628) {
                                                                                                                            if(e59628 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e59628;
                                                                                                                              var statearr_59629_59831 = state_59456;
                                                                                                                              statearr_59629_59831[1] = 12;
                                                                                                                              statearr_59629_59831[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e59628;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }catch(e59626) {
                                                                                                                          if(e59626 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e59626;
                                                                                                                            var statearr_59627_59832 = state_59456;
                                                                                                                            statearr_59627_59832[1] = 48;
                                                                                                                            statearr_59627_59832[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e59626;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }else {
                                                                                                                        if(state_val_59457 === 22) {
                                                                                                                          try {
                                                                                                                            var state_59456__$1 = state_59456;
                                                                                                                            var statearr_59633_59833 = state_59456__$1;
                                                                                                                            statearr_59633_59833[2] = null;
                                                                                                                            statearr_59633_59833[1] = 30;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e59631) {
                                                                                                                            if(e59631 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e59631;
                                                                                                                              var statearr_59632_59834 = state_59456;
                                                                                                                              statearr_59632_59834[1] = 17;
                                                                                                                              statearr_59632_59834[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e59631;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_59457 === 54) {
                                                                                                                            try {
                                                                                                                              try {
                                                                                                                                var state_59456__$1 = state_59456;
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  var statearr_59638_59835 = state_59456__$1;
                                                                                                                                  statearr_59638_59835[1] = 56
                                                                                                                                }else {
                                                                                                                                  var statearr_59639_59836 = state_59456__$1;
                                                                                                                                  statearr_59639_59836[1] = 57
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e59636) {
                                                                                                                                if(e59636 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e59636;
                                                                                                                                  var statearr_59637_59837 = state_59456;
                                                                                                                                  statearr_59637_59837[1] = 12;
                                                                                                                                  statearr_59637_59837[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e59636;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }catch(e59634) {
                                                                                                                              if(e59634 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e59634;
                                                                                                                                var statearr_59635_59838 = state_59456;
                                                                                                                                statearr_59635_59838[1] = 48;
                                                                                                                                statearr_59635_59838[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e59634;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_59457 === 23) {
                                                                                                                              try {
                                                                                                                                var inst_59319 = state_59456[9];
                                                                                                                                var inst_59365 = cljs.core._EQ_.call(null, inst_59319, "\ufdd0:nav");
                                                                                                                                var state_59456__$1 = state_59456;
                                                                                                                                if(inst_59365) {
                                                                                                                                  var statearr_59642_59839 = state_59456__$1;
                                                                                                                                  statearr_59642_59839[1] = 37
                                                                                                                                }else {
                                                                                                                                  var statearr_59643_59840 = state_59456__$1;
                                                                                                                                  statearr_59643_59840[1] = 38
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e59640) {
                                                                                                                                if(e59640 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e59640;
                                                                                                                                  var statearr_59641_59841 = state_59456;
                                                                                                                                  statearr_59641_59841[1] = 17;
                                                                                                                                  statearr_59641_59841[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e59640;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_59457 === 55) {
                                                                                                                                try {
                                                                                                                                  try {
                                                                                                                                    var inst_59408 = state_59456[2];
                                                                                                                                    var state_59456__$1 = state_59456;
                                                                                                                                    var statearr_59648_59842 = state_59456__$1;
                                                                                                                                    statearr_59648_59842[2] = inst_59408;
                                                                                                                                    statearr_59648_59842[1] = 47;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e59646) {
                                                                                                                                    if(e59646 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e59646;
                                                                                                                                      var statearr_59647_59843 = state_59456;
                                                                                                                                      statearr_59647_59843[1] = 12;
                                                                                                                                      statearr_59647_59843[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e59646;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }catch(e59644) {
                                                                                                                                  if(e59644 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e59644;
                                                                                                                                    var statearr_59645_59844 = state_59456;
                                                                                                                                    statearr_59645_59844[1] = 48;
                                                                                                                                    statearr_59645_59844[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e59644;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }else {
                                                                                                                                if(state_val_59457 === 24) {
                                                                                                                                  try {
                                                                                                                                    var inst_59377 = state_59456[2];
                                                                                                                                    var state_59456__$1 = state_59456;
                                                                                                                                    var statearr_59651_59845 = state_59456__$1;
                                                                                                                                    statearr_59651_59845[2] = inst_59377;
                                                                                                                                    statearr_59651_59845[1] = 16;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e59649) {
                                                                                                                                    if(e59649 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e59649;
                                                                                                                                      var statearr_59650_59846 = state_59456;
                                                                                                                                      statearr_59650_59846[1] = 17;
                                                                                                                                      statearr_59650_59846[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e59649;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_59457 === 56) {
                                                                                                                                    try {
                                                                                                                                      try {
                                                                                                                                        var inst_59403 = function() {
                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                        }();
                                                                                                                                        var state_59456__$1 = state_59456;
                                                                                                                                        var statearr_59656_59847 = state_59456__$1;
                                                                                                                                        statearr_59656_59847[2] = inst_59403;
                                                                                                                                        statearr_59656_59847[1] = 58;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e59654) {
                                                                                                                                        if(e59654 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e59654;
                                                                                                                                          var statearr_59655_59848 = state_59456;
                                                                                                                                          statearr_59655_59848[1] = 12;
                                                                                                                                          statearr_59655_59848[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e59654;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }catch(e59652) {
                                                                                                                                      if(e59652 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e59652;
                                                                                                                                        var statearr_59653_59849 = state_59456;
                                                                                                                                        statearr_59653_59849[1] = 48;
                                                                                                                                        statearr_59653_59849[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e59652;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_59457 === 25) {
                                                                                                                                      try {
                                                                                                                                        var inst_59363 = state_59456[2];
                                                                                                                                        var state_59456__$1 = state_59456;
                                                                                                                                        var statearr_59659_59850 = state_59456__$1;
                                                                                                                                        statearr_59659_59850[2] = inst_59363;
                                                                                                                                        statearr_59659_59850[1] = 24;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e59657) {
                                                                                                                                        if(e59657 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e59657;
                                                                                                                                          var statearr_59658_59851 = state_59456;
                                                                                                                                          statearr_59658_59851[1] = 17;
                                                                                                                                          statearr_59658_59851[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e59657;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_59457 === 57) {
                                                                                                                                        try {
                                                                                                                                          try {
                                                                                                                                            var state_59456__$1 = state_59456;
                                                                                                                                            var statearr_59664_59852 = state_59456__$1;
                                                                                                                                            statearr_59664_59852[2] = null;
                                                                                                                                            statearr_59664_59852[1] = 58;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e59662) {
                                                                                                                                            if(e59662 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e59662;
                                                                                                                                              var statearr_59663_59853 = state_59456;
                                                                                                                                              statearr_59663_59853[1] = 12;
                                                                                                                                              statearr_59663_59853[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e59662;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }catch(e59660) {
                                                                                                                                          if(e59660 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e59660;
                                                                                                                                            var statearr_59661_59854 = state_59456;
                                                                                                                                            statearr_59661_59854[1] = 48;
                                                                                                                                            statearr_59661_59854[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e59660;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }else {
                                                                                                                                        if(state_val_59457 === 26) {
                                                                                                                                          try {
                                                                                                                                            var inst_59341 = state_59456[15];
                                                                                                                                            var inst_59341__$1 = state_59456[2];
                                                                                                                                            var inst_59342 = inst_59341__$1 === cljs.core.match.backtrack;
                                                                                                                                            var state_59456__$1 = function() {
                                                                                                                                              var statearr_59667 = state_59456;
                                                                                                                                              statearr_59667[15] = inst_59341__$1;
                                                                                                                                              return statearr_59667
                                                                                                                                            }();
                                                                                                                                            if(cljs.core.truth_(inst_59342)) {
                                                                                                                                              var statearr_59668_59855 = state_59456__$1;
                                                                                                                                              statearr_59668_59855[1] = 27
                                                                                                                                            }else {
                                                                                                                                              var statearr_59669_59856 = state_59456__$1;
                                                                                                                                              statearr_59669_59856[1] = 28
                                                                                                                                            }
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e59665) {
                                                                                                                                            if(e59665 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e59665;
                                                                                                                                              var statearr_59666_59857 = state_59456;
                                                                                                                                              statearr_59666_59857[1] = 17;
                                                                                                                                              statearr_59666_59857[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e59665;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_59457 === 58) {
                                                                                                                                            try {
                                                                                                                                              try {
                                                                                                                                                var inst_59406 = state_59456[2];
                                                                                                                                                var state_59456__$1 = state_59456;
                                                                                                                                                var statearr_59674_59858 = state_59456__$1;
                                                                                                                                                statearr_59674_59858[2] = inst_59406;
                                                                                                                                                statearr_59674_59858[1] = 55;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e59672) {
                                                                                                                                                if(e59672 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e59672;
                                                                                                                                                  var statearr_59673_59859 = state_59456;
                                                                                                                                                  statearr_59673_59859[1] = 12;
                                                                                                                                                  statearr_59673_59859[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e59672;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }catch(e59670) {
                                                                                                                                              if(e59670 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e59670;
                                                                                                                                                var statearr_59671_59860 = state_59456;
                                                                                                                                                statearr_59671_59860[1] = 48;
                                                                                                                                                statearr_59671_59860[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e59670;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_59457 === 27) {
                                                                                                                                              try {
                                                                                                                                                var inst_59344 = function() {
                                                                                                                                                  throw cljs.core.match.backtrack;
                                                                                                                                                }();
                                                                                                                                                var state_59456__$1 = state_59456;
                                                                                                                                                var statearr_59677_59861 = state_59456__$1;
                                                                                                                                                statearr_59677_59861[2] = inst_59344;
                                                                                                                                                statearr_59677_59861[1] = 29;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e59675) {
                                                                                                                                                if(e59675 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e59675;
                                                                                                                                                  var statearr_59676_59862 = state_59456;
                                                                                                                                                  statearr_59676_59862[1] = 17;
                                                                                                                                                  statearr_59676_59862[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e59675;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_59457 === 59) {
                                                                                                                                                try {
                                                                                                                                                  var state_59456__$1 = state_59456;
                                                                                                                                                  var statearr_59680_59863 = state_59456__$1;
                                                                                                                                                  statearr_59680_59863[2] = null;
                                                                                                                                                  statearr_59680_59863[1] = 67;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e59678) {
                                                                                                                                                  if(e59678 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e59678;
                                                                                                                                                    var statearr_59679_59864 = state_59456;
                                                                                                                                                    statearr_59679_59864[1] = 12;
                                                                                                                                                    statearr_59679_59864[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e59678;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }else {
                                                                                                                                                if(state_val_59457 === 28) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_59341 = state_59456[15];
                                                                                                                                                    var inst_59346 = function() {
                                                                                                                                                      throw inst_59341;
                                                                                                                                                    }();
                                                                                                                                                    var state_59456__$1 = state_59456;
                                                                                                                                                    var statearr_59683_59865 = state_59456__$1;
                                                                                                                                                    statearr_59683_59865[2] = inst_59346;
                                                                                                                                                    statearr_59683_59865[1] = 29;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e59681) {
                                                                                                                                                    if(e59681 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e59681;
                                                                                                                                                      var statearr_59682_59866 = state_59456;
                                                                                                                                                      statearr_59682_59866[1] = 17;
                                                                                                                                                      statearr_59682_59866[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e59681;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_59457 === 60) {
                                                                                                                                                    try {
                                                                                                                                                      var state_59456__$1 = state_59456;
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        var statearr_59686_59867 = state_59456__$1;
                                                                                                                                                        statearr_59686_59867[1] = 74
                                                                                                                                                      }else {
                                                                                                                                                        var statearr_59687_59868 = state_59456__$1;
                                                                                                                                                        statearr_59687_59868[1] = 75
                                                                                                                                                      }
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e59684) {
                                                                                                                                                      if(e59684 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e59684;
                                                                                                                                                        var statearr_59685_59869 = state_59456;
                                                                                                                                                        statearr_59685_59869[1] = 12;
                                                                                                                                                        statearr_59685_59869[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e59684;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_59457 === 29) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_59348 = state_59456[2];
                                                                                                                                                        var state_59456__$1 = state_59456;
                                                                                                                                                        var statearr_59690_59870 = state_59456__$1;
                                                                                                                                                        statearr_59690_59870[2] = inst_59348;
                                                                                                                                                        statearr_59690_59870[1] = 25;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e59688) {
                                                                                                                                                        if(e59688 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e59688;
                                                                                                                                                          var statearr_59689_59871 = state_59456;
                                                                                                                                                          statearr_59689_59871[1] = 17;
                                                                                                                                                          statearr_59689_59871[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e59688;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_59457 === 61) {
                                                                                                                                                        try {
                                                                                                                                                          var inst_59444 = state_59456[2];
                                                                                                                                                          var state_59456__$1 = state_59456;
                                                                                                                                                          var statearr_59693_59872 = state_59456__$1;
                                                                                                                                                          statearr_59693_59872[2] = inst_59444;
                                                                                                                                                          statearr_59693_59872[1] = 46;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }catch(e59691) {
                                                                                                                                                          if(e59691 instanceof Error) {
                                                                                                                                                            var ex__5575__auto__ = e59691;
                                                                                                                                                            var statearr_59692_59873 = state_59456;
                                                                                                                                                            statearr_59692_59873[1] = 12;
                                                                                                                                                            statearr_59692_59873[2] = ex__5575__auto__;
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }else {
                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                              throw e59691;
                                                                                                                                                            }else {
                                                                                                                                                              return null
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_59457 === 30) {
                                                                                                                                                          try {
                                                                                                                                                            try {
                                                                                                                                                              var inst_59320 = state_59456[6];
                                                                                                                                                              var inst_59351 = cljs.core._EQ_.call(null, inst_59320, "\ufdd0:login-success");
                                                                                                                                                              var state_59456__$1 = state_59456;
                                                                                                                                                              if(inst_59351) {
                                                                                                                                                                var statearr_59698_59874 = state_59456__$1;
                                                                                                                                                                statearr_59698_59874[1] = 31
                                                                                                                                                              }else {
                                                                                                                                                                var statearr_59699_59875 = state_59456__$1;
                                                                                                                                                                statearr_59699_59875[1] = 32
                                                                                                                                                              }
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e59696) {
                                                                                                                                                              if(e59696 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e59696;
                                                                                                                                                                var statearr_59697_59876 = state_59456;
                                                                                                                                                                statearr_59697_59876[1] = 17;
                                                                                                                                                                statearr_59697_59876[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e59696;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }catch(e59694) {
                                                                                                                                                            if(e59694 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e59694;
                                                                                                                                                              var statearr_59695_59877 = state_59456;
                                                                                                                                                              statearr_59695_59877[1] = 26;
                                                                                                                                                              statearr_59695_59877[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e59694;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_59457 === 62) {
                                                                                                                                                            try {
                                                                                                                                                              var inst_59436 = state_59456[2];
                                                                                                                                                              var state_59456__$1 = state_59456;
                                                                                                                                                              var statearr_59702_59878 = state_59456__$1;
                                                                                                                                                              statearr_59702_59878[2] = inst_59436;
                                                                                                                                                              statearr_59702_59878[1] = 61;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e59700) {
                                                                                                                                                              if(e59700 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e59700;
                                                                                                                                                                var statearr_59701_59879 = state_59456;
                                                                                                                                                                statearr_59701_59879[1] = 12;
                                                                                                                                                                statearr_59701_59879[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e59700;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_59457 === 31) {
                                                                                                                                                              try {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_59321 = state_59456[10];
                                                                                                                                                                  var inst_59353 = chatter_box.login_view_component.login_successfull.call(null, inst_59321);
                                                                                                                                                                  var state_59456__$1 = state_59456;
                                                                                                                                                                  var statearr_59707_59880 = state_59456__$1;
                                                                                                                                                                  statearr_59707_59880[2] = inst_59353;
                                                                                                                                                                  statearr_59707_59880[1] = 33;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e59705) {
                                                                                                                                                                  if(e59705 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e59705;
                                                                                                                                                                    var statearr_59706_59881 = state_59456;
                                                                                                                                                                    statearr_59706_59881[1] = 17;
                                                                                                                                                                    statearr_59706_59881[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e59705;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }catch(e59703) {
                                                                                                                                                                if(e59703 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e59703;
                                                                                                                                                                  var statearr_59704_59882 = state_59456;
                                                                                                                                                                  statearr_59704_59882[1] = 26;
                                                                                                                                                                  statearr_59704_59882[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e59703;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_59457 === 63) {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_59414 = state_59456[5];
                                                                                                                                                                  var inst_59414__$1 = state_59456[2];
                                                                                                                                                                  var inst_59415 = inst_59414__$1 === cljs.core.match.backtrack;
                                                                                                                                                                  var state_59456__$1 = function() {
                                                                                                                                                                    var statearr_59710 = state_59456;
                                                                                                                                                                    statearr_59710[5] = inst_59414__$1;
                                                                                                                                                                    return statearr_59710
                                                                                                                                                                  }();
                                                                                                                                                                  if(cljs.core.truth_(inst_59415)) {
                                                                                                                                                                    var statearr_59711_59883 = state_59456__$1;
                                                                                                                                                                    statearr_59711_59883[1] = 64
                                                                                                                                                                  }else {
                                                                                                                                                                    var statearr_59712_59884 = state_59456__$1;
                                                                                                                                                                    statearr_59712_59884[1] = 65
                                                                                                                                                                  }
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e59708) {
                                                                                                                                                                  if(e59708 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e59708;
                                                                                                                                                                    var statearr_59709_59885 = state_59456;
                                                                                                                                                                    statearr_59709_59885[1] = 12;
                                                                                                                                                                    statearr_59709_59885[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e59708;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_59714 = new Array(16);
            statearr_59714[0] = state_machine__5582__auto__;
            statearr_59714[1] = 1;
            return statearr_59714
          };
          var state_machine__5582__auto____1 = function(state_59456) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_59456);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_59456) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_59456)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_59715 = f__5654__auto__.call(null);
      statearr_59715[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_59715
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.user_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.user_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:created"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", 
"\ufdd0:key", "\ufdd0:updated"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null], true);
chatter_box.user_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.user_view_component.user = cljs.core.atom.call(null, null);
chatter_box.user_view_component.create_user_view_component = function create_user_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.user_view_component.t17690 !== "undefined") {
  }else {
    goog.provide("chatter_box.user_view_component.t17690");
    chatter_box.user_view_component.t17690 = function(in_ch, create_user_view_component, meta17691) {
      this.in_ch = in_ch;
      this.create_user_view_component = create_user_view_component;
      this.meta17691 = meta17691;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.user_view_component.t17690.cljs$lang$type = true;
    chatter_box.user_view_component.t17690.cljs$lang$ctorStr = "chatter-box.user-view-component/t17690";
    chatter_box.user_view_component.t17690.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.user-view-component/t17690")
    };
    chatter_box.user_view_component.t17690.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.user_view_component.t17690.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.out_chan, out_ch);
      return chatter_box.user_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.user_view_component.t17690.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.user_view_component.valid_types).call(null, msg)
    };
    chatter_box.user_view_component.t17690.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.user_view_component.t17690.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17692) {
      var self__ = this;
      return self__.meta17691
    };
    chatter_box.user_view_component.t17690.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17692, meta17691__$1) {
      var self__ = this;
      return new chatter_box.user_view_component.t17690(self__.in_ch, self__.create_user_view_component, meta17691__$1)
    };
    chatter_box.user_view_component.__GT_t17690 = function __GT_t17690(in_ch__$1, create_user_view_component__$1, meta17691) {
      return new chatter_box.user_view_component.t17690(in_ch__$1, create_user_view_component__$1, meta17691)
    }
  }
  return new chatter_box.user_view_component.t17690(in_ch, create_user_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/update_user.html[".container"]') == null) {
  var vec__17693_17698 = enfocus.core.replace_ids.call(null, "en12992_", '\x3cdiv id\x3d"update-user-container" class\x3d"container"\x3e \n \x3cform id\x3d"update-user-form" name\x3d"create-user-form" class\x3d"form-create-user"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3eUpdate Profile\x3c/h2\x3e \n  \x3cinput id\x3d"up-first" name\x3d"first" type\x3d"text" class\x3d"form-control" placeholder\x3d"First Name" /\x3e \n  \x3cinput id\x3d"up-last" name\x3d"last" type\x3d"text" class\x3d"form-control" placeholder\x3d"Last Name" /\x3e \n  \x3cinput id\x3d"up-img-url" name\x3d"img-url" type\x3d"text" class\x3d"form-control" placeholder\x3d"Photo Url" /\x3e \n  \x3cbr /\x3e \n  \x3ca id\x3d"update-user-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"login.html" type\x3d"submit"\x3eSave\x3c/a\x3e \n \x3c/form\x3e \n\x3c/div\x3e');
  var sym__4174__auto___17699 = cljs.core.nth.call(null, vec__17693_17698, 0, null);
  var txt__4175__auto___17700 = cljs.core.nth.call(null, vec__17693_17698, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/update_user.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___17699, txt__4175__auto___17700], true))
}else {
}
chatter_box.user_view_component.update_user_page = function update_user_page() {
  var vec__17697 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/update_user.html[".container"]')
  }.call(null);
  var id_sym17694 = cljs.core.nth.call(null, vec__17697, 0, null);
  var pnod17695 = cljs.core.nth.call(null, vec__17697, 1, null);
  var pnod17695__$1 = enfocus.core.create_hidden_dom.call(null, pnod17695);
  enfocus.core.i_at.call(null, id_sym17694, pnod17695__$1, "#update-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym17694, pnod17695__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod17695__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/create_user.html[".container"]') == null) {
  var vec__17701_17706 = enfocus.core.replace_ids.call(null, "en13001_", '\x3cdiv id\x3d"create-user-container" class\x3d"container"\x3e \n \x3cform id\x3d"create-user-form" name\x3d"create-user-form" class\x3d"form-create-user"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3eCreate a User\x3c/h2\x3e \n  \x3cinput id\x3d"cr-username" name\x3d"username" type\x3d"text" class\x3d"form-control" placeholder\x3d"Username" autofocus\x3d"" /\x3e \n  \x3cinput id\x3d"cr-password" name\x3d"password" type\x3d"text" class\x3d"form-control" placeholder\x3d"Password" /\x3e \n  \x3cinput id\x3d"cr-password2" name\x3d"password2" type\x3d"text" class\x3d"form-control" placeholder\x3d"Repeat Password" /\x3e \n  \x3cbr /\x3e \n  \x3cinput id\x3d"cr-first" name\x3d"first" type\x3d"text" class\x3d"form-control" placeholder\x3d"First Name" /\x3e \n  \x3cinput id\x3d"cr-last" name\x3d"last" type\x3d"text" class\x3d"form-control" placeholder\x3d"Last Name" /\x3e \n  \x3cinput id\x3d"cr-img-url" name\x3d"img-url" type\x3d"text" class\x3d"form-control" placeholder\x3d"Photo Url" /\x3e \n  \x3cbr /\x3e \n  \x3ca id\x3d"create-user-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"login.html" type\x3d"submit"\x3eCreate User\x3c/a\x3e \n \x3c/form\x3e \n\x3c/div\x3e');
  var sym__4174__auto___17707 = cljs.core.nth.call(null, vec__17701_17706, 0, null);
  var txt__4175__auto___17708 = cljs.core.nth.call(null, vec__17701_17706, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/create_user.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___17707, txt__4175__auto___17708], true))
}else {
}
chatter_box.user_view_component.create_user_page = function create_user_page() {
  var vec__17705 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/create_user.html[".container"]')
  }.call(null);
  var id_sym17702 = cljs.core.nth.call(null, vec__17705, 0, null);
  var pnod17703 = cljs.core.nth.call(null, vec__17705, 1, null);
  var pnod17703__$1 = enfocus.core.create_hidden_dom.call(null, pnod17703);
  enfocus.core.i_at.call(null, id_sym17702, pnod17703__$1, "#create-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym17702, pnod17703__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod17703__$1)
};
chatter_box.user_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, document, "body", enfocus.core.append.call(null, chatter_box.user_view_component.create_user_page.call(null), chatter_box.user_view_component.update_user_page.call(null)), "#create-user-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.user_view_component.create_user)), "#update-user-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), 
  enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.user_view_component.update_user)))
};
chatter_box.user_view_component.navigate = function navigate(p__17709) {
  var map__17712 = p__17709;
  var map__17712__$1 = cljs.core.seq_QMARK_.call(null, map__17712) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17712) : map__17712;
  var page = cljs.core.get.call(null, map__17712__$1, "\ufdd0:key");
  var vec__17713 = cljs.core._EQ_.call(null, page, "\ufdd0:create-user") ? cljs.core.PersistentVector.fromArray(["", "none"], true) : cljs.core._EQ_.call(null, page, "\ufdd0:update-user") ? cljs.core.PersistentVector.fromArray(["none", ""], true) : "\ufdd0:else" ? cljs.core.PersistentVector.fromArray(["none", "none"], true) : null;
  var create_dis = cljs.core.nth.call(null, vec__17713, 0, null);
  var update_dis = cljs.core.nth.call(null, vec__17713, 1, null);
  enfocus.core.at.call(null, "#create-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", create_dis), "#update-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", update_dis));
  if(cljs.core.empty_QMARK_.call(null, update_dis)) {
    return enfocus.core.at.call(null, "#up-first", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:first")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user))), "#up-last", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:last")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user))), "#up-img-url", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, 
    cljs.core.deref.call(null, chatter_box.user_view_component.user))))
  }else {
    return null
  }
};
chatter_box.user_view_component.user_error = function user_error(msg) {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.user_error_message.call(null, null, msg))
};
chatter_box.user_view_component.validate_create_user_form = function validate_create_user_form(form) {
  if(cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("\ufdd0:password")).call(null, form), (new cljs.core.Keyword("\ufdd0:password2")).call(null, form))) {
    return"passwords need to match"
  }else {
    if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form))) {
      return"username required"
    }else {
      if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:password")).call(null, form))) {
        return"password required"
      }else {
        if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:first")).call(null, form))) {
          return"first name required"
        }else {
          if("\ufdd0:else") {
            return"\ufdd0:valid"
          }else {
            return null
          }
        }
      }
    }
  }
};
chatter_box.user_view_component.validate_update_user_form = function validate_update_user_form(form) {
  if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:first")).call(null, form))) {
  }else {
  }
  return"\ufdd0:valid"
};
chatter_box.user_view_component.create_user = function create_user() {
  var form = enfocus.core.from.call(null, "#create-user-form", enfocus.core.read_form.call(null));
  var val = chatter_box.user_view_component.validate_create_user_form.call(null, form);
  if(cljs.core._EQ_.call(null, val, "\ufdd0:valid")) {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_user_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form), (new cljs.core.Keyword("\ufdd0:password")).call(null, form), (new cljs.core.Keyword("\ufdd0:first")).call(null, form), (new cljs.core.Keyword("\ufdd0:last")).call(null, form), (new cljs.core.Keyword("\ufdd0:img-url")).call(null, form)))
  }else {
    return chatter_box.user_view_component.user_error.call(null, val)
  }
};
chatter_box.user_view_component.update_user = function update_user() {
  var form = enfocus.core.from.call(null, "#update-user-form", enfocus.core.read_form.call(null));
  var val = chatter_box.user_view_component.validate_update_user_form.call(null, form);
  if(cljs.core._EQ_.call(null, val, "\ufdd0:valid")) {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.update_user_message.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user), "\ufdd0:first", (new cljs.core.Keyword("\ufdd0:first")).call(null, form), "\ufdd0:last", (new cljs.core.Keyword("\ufdd0:last")).call(null, form), "\ufdd0:img-url", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, form))))
  }else {
    return chatter_box.user_view_component.user_error.call(null, val)
  }
};
chatter_box.user_view_component.user_created = function user_created() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:login", "user created"))
};
chatter_box.user_view_component.user_updated = function user_updated(usr) {
  if(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, usr), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user)))) {
    cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, usr);
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", "user updated"))
  }else {
    return null
  }
};
chatter_box.user_view_component.login_success = function login_success(msg) {
  return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, (new cljs.core.Keyword("\ufdd0:user")).call(null, msg))
};
chatter_box.user_view_component.logout = function logout() {
  return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, null)
};
chatter_box.user_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_18564) {
        var state_val_18565 = state_18564[1];
        if(state_val_18565 === 32) {
          try {
            var inst_18383 = function() {
              throw cljs.core.match.backtrack;
            }();
            var state_18564__$1 = state_18564;
            var statearr_18568_18972 = state_18564__$1;
            statearr_18568_18972[2] = inst_18383;
            statearr_18568_18972[1] = 34;
            return"\ufdd0:recur"
          }catch(e18566) {
            if(e18566 instanceof Error) {
              var ex__5575__auto__ = e18566;
              var statearr_18567_18973 = state_18564;
              statearr_18567_18973[1] = 22;
              statearr_18567_18973[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e18566;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_18565 === 64) {
            try {
              var inst_18469 = state_18564[2];
              var state_18564__$1 = state_18564;
              var statearr_18571_18974 = state_18564__$1;
              statearr_18571_18974[2] = inst_18469;
              statearr_18571_18974[1] = 63;
              return"\ufdd0:recur"
            }catch(e18569) {
              if(e18569 instanceof Error) {
                var ex__5575__auto__ = e18569;
                var statearr_18570_18975 = state_18564;
                statearr_18570_18975[1] = 17;
                statearr_18570_18975[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e18569;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_18565 === 96) {
              try {
                try {
                  var state_18564__$1 = state_18564;
                  var statearr_18576_18976 = state_18564__$1;
                  statearr_18576_18976[2] = null;
                  statearr_18576_18976[1] = 97;
                  return"\ufdd0:recur"
                }catch(e18574) {
                  if(e18574 instanceof Error) {
                    var ex__5575__auto__ = e18574;
                    var statearr_18575_18977 = state_18564;
                    statearr_18575_18977[1] = 12;
                    statearr_18575_18977[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e18574;
                    }else {
                      return null
                    }
                  }
                }
              }catch(e18572) {
                if(e18572 instanceof Error) {
                  var ex__5575__auto__ = e18572;
                  var statearr_18573_18978 = state_18564;
                  statearr_18573_18978[1] = 87;
                  statearr_18573_18978[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e18572;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_18565 === 1) {
                var state_18564__$1 = state_18564;
                var statearr_18577_18979 = state_18564__$1;
                statearr_18577_18979[2] = null;
                statearr_18577_18979[1] = 2;
                return"\ufdd0:recur"
              }else {
                if(state_val_18565 === 33) {
                  try {
                    var inst_18380 = state_18564[5];
                    var inst_18385 = function() {
                      throw inst_18380;
                    }();
                    var state_18564__$1 = state_18564;
                    var statearr_18580_18980 = state_18564__$1;
                    statearr_18580_18980[2] = inst_18385;
                    statearr_18580_18980[1] = 34;
                    return"\ufdd0:recur"
                  }catch(e18578) {
                    if(e18578 instanceof Error) {
                      var ex__5575__auto__ = e18578;
                      var statearr_18579_18981 = state_18564;
                      statearr_18579_18981[1] = 22;
                      statearr_18579_18981[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e18578;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_18565 === 65) {
                    try {
                      var inst_18447 = state_18564[6];
                      var inst_18447__$1 = state_18564[2];
                      var inst_18448 = inst_18447__$1 === cljs.core.match.backtrack;
                      var state_18564__$1 = function() {
                        var statearr_18583 = state_18564;
                        statearr_18583[6] = inst_18447__$1;
                        return statearr_18583
                      }();
                      if(cljs.core.truth_(inst_18448)) {
                        var statearr_18584_18982 = state_18564__$1;
                        statearr_18584_18982[1] = 66
                      }else {
                        var statearr_18585_18983 = state_18564__$1;
                        statearr_18585_18983[1] = 67
                      }
                      return"\ufdd0:recur"
                    }catch(e18581) {
                      if(e18581 instanceof Error) {
                        var ex__5575__auto__ = e18581;
                        var statearr_18582_18984 = state_18564;
                        statearr_18582_18984[1] = 17;
                        statearr_18582_18984[2] = ex__5575__auto__;
                        return"\ufdd0:recur"
                      }else {
                        if("\ufdd0:else") {
                          throw e18581;
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(state_val_18565 === 97) {
                      try {
                        try {
                          var inst_18512 = state_18564[2];
                          var state_18564__$1 = state_18564;
                          var statearr_18590_18985 = state_18564__$1;
                          statearr_18590_18985[2] = inst_18512;
                          statearr_18590_18985[1] = 94;
                          return"\ufdd0:recur"
                        }catch(e18588) {
                          if(e18588 instanceof Error) {
                            var ex__5575__auto__ = e18588;
                            var statearr_18589_18986 = state_18564;
                            statearr_18589_18986[1] = 12;
                            statearr_18589_18986[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e18588;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e18586) {
                        if(e18586 instanceof Error) {
                          var ex__5575__auto__ = e18586;
                          var statearr_18587_18987 = state_18564;
                          statearr_18587_18987[1] = 87;
                          statearr_18587_18987[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e18586;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_18565 === 2) {
                        var state_18564__$1 = state_18564;
                        if(true) {
                          var statearr_18591_18988 = state_18564__$1;
                          statearr_18591_18988[1] = 4
                        }else {
                          var statearr_18592_18989 = state_18564__$1;
                          statearr_18592_18989[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_18565 === 34) {
                          try {
                            var inst_18387 = state_18564[2];
                            var state_18564__$1 = state_18564;
                            var statearr_18595_18990 = state_18564__$1;
                            statearr_18595_18990[2] = inst_18387;
                            statearr_18595_18990[1] = 30;
                            return"\ufdd0:recur"
                          }catch(e18593) {
                            if(e18593 instanceof Error) {
                              var ex__5575__auto__ = e18593;
                              var statearr_18594_18991 = state_18564;
                              statearr_18594_18991[1] = 22;
                              statearr_18594_18991[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e18593;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_18565 === 66) {
                            try {
                              var inst_18450 = function() {
                                throw cljs.core.match.backtrack;
                              }();
                              var state_18564__$1 = state_18564;
                              var statearr_18598_18992 = state_18564__$1;
                              statearr_18598_18992[2] = inst_18450;
                              statearr_18598_18992[1] = 68;
                              return"\ufdd0:recur"
                            }catch(e18596) {
                              if(e18596 instanceof Error) {
                                var ex__5575__auto__ = e18596;
                                var statearr_18597_18993 = state_18564;
                                statearr_18597_18993[1] = 17;
                                statearr_18597_18993[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e18596;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_18565 === 98) {
                              try {
                                var state_18564__$1 = state_18564;
                                var statearr_18601_18994 = state_18564__$1;
                                statearr_18601_18994[2] = null;
                                statearr_18601_18994[1] = 106;
                                return"\ufdd0:recur"
                              }catch(e18599) {
                                if(e18599 instanceof Error) {
                                  var ex__5575__auto__ = e18599;
                                  var statearr_18600_18995 = state_18564;
                                  statearr_18600_18995[1] = 12;
                                  statearr_18600_18995[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e18599;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_18565 === 3) {
                                var inst_18562 = state_18564[2];
                                var state_18564__$1 = state_18564;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18564__$1, inst_18562)
                              }else {
                                if(state_val_18565 === 35) {
                                  try {
                                    try {
                                      var inst_18355 = state_18564[7];
                                      var inst_18390 = cljs.core._EQ_.call(null, inst_18355, "\ufdd0:updated");
                                      var state_18564__$1 = state_18564;
                                      if(inst_18390) {
                                        var statearr_18606_18996 = state_18564__$1;
                                        statearr_18606_18996[1] = 36
                                      }else {
                                        var statearr_18607_18997 = state_18564__$1;
                                        statearr_18607_18997[1] = 37
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e18604) {
                                      if(e18604 instanceof Error) {
                                        var ex__5575__auto__ = e18604;
                                        var statearr_18605_18998 = state_18564;
                                        statearr_18605_18998[1] = 22;
                                        statearr_18605_18998[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e18604;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e18602) {
                                    if(e18602 instanceof Error) {
                                      var ex__5575__auto__ = e18602;
                                      var statearr_18603_18999 = state_18564;
                                      statearr_18603_18999[1] = 31;
                                      statearr_18603_18999[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e18602;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_18565 === 67) {
                                    try {
                                      var inst_18447 = state_18564[6];
                                      var inst_18452 = function() {
                                        throw inst_18447;
                                      }();
                                      var state_18564__$1 = state_18564;
                                      var statearr_18610_19000 = state_18564__$1;
                                      statearr_18610_19000[2] = inst_18452;
                                      statearr_18610_19000[1] = 68;
                                      return"\ufdd0:recur"
                                    }catch(e18608) {
                                      if(e18608 instanceof Error) {
                                        var ex__5575__auto__ = e18608;
                                        var statearr_18609_19001 = state_18564;
                                        statearr_18609_19001[1] = 17;
                                        statearr_18609_19001[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e18608;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_18565 === 99) {
                                      try {
                                        var state_18564__$1 = state_18564;
                                        if("\ufdd0:else") {
                                          var statearr_18613_19002 = state_18564__$1;
                                          statearr_18613_19002[1] = 113
                                        }else {
                                          var statearr_18614_19003 = state_18564__$1;
                                          statearr_18614_19003[1] = 114
                                        }
                                        return"\ufdd0:recur"
                                      }catch(e18611) {
                                        if(e18611 instanceof Error) {
                                          var ex__5575__auto__ = e18611;
                                          var statearr_18612_19004 = state_18564;
                                          statearr_18612_19004[1] = 12;
                                          statearr_18612_19004[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e18611;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_18565 === 4) {
                                        var state_18564__$1 = state_18564;
                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18564__$1, 7, in_ch)
                                      }else {
                                        if(state_val_18565 === 36) {
                                          try {
                                            try {
                                              var inst_18356 = state_18564[8];
                                              var inst_18392 = chatter_box.user_view_component.user_updated.call(null, inst_18356);
                                              var state_18564__$1 = state_18564;
                                              var statearr_18619_19005 = state_18564__$1;
                                              statearr_18619_19005[2] = inst_18392;
                                              statearr_18619_19005[1] = 38;
                                              return"\ufdd0:recur"
                                            }catch(e18617) {
                                              if(e18617 instanceof Error) {
                                                var ex__5575__auto__ = e18617;
                                                var statearr_18618_19006 = state_18564;
                                                statearr_18618_19006[1] = 22;
                                                statearr_18618_19006[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e18617;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e18615) {
                                            if(e18615 instanceof Error) {
                                              var ex__5575__auto__ = e18615;
                                              var statearr_18616_19007 = state_18564;
                                              statearr_18616_19007[1] = 31;
                                              statearr_18616_19007[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e18615;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_18565 === 68) {
                                            try {
                                              var inst_18454 = state_18564[2];
                                              var state_18564__$1 = state_18564;
                                              var statearr_18622_19008 = state_18564__$1;
                                              statearr_18622_19008[2] = inst_18454;
                                              statearr_18622_19008[1] = 64;
                                              return"\ufdd0:recur"
                                            }catch(e18620) {
                                              if(e18620 instanceof Error) {
                                                var ex__5575__auto__ = e18620;
                                                var statearr_18621_19009 = state_18564;
                                                statearr_18621_19009[1] = 17;
                                                statearr_18621_19009[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e18620;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_18565 === 100) {
                                              try {
                                                var inst_18550 = state_18564[2];
                                                var state_18564__$1 = state_18564;
                                                var statearr_18625_19010 = state_18564__$1;
                                                statearr_18625_19010[2] = inst_18550;
                                                statearr_18625_19010[1] = 85;
                                                return"\ufdd0:recur"
                                              }catch(e18623) {
                                                if(e18623 instanceof Error) {
                                                  var ex__5575__auto__ = e18623;
                                                  var statearr_18624_19011 = state_18564;
                                                  statearr_18624_19011[1] = 12;
                                                  statearr_18624_19011[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e18623;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_18565 === 5) {
                                                var state_18564__$1 = state_18564;
                                                var statearr_18626_19012 = state_18564__$1;
                                                statearr_18626_19012[2] = null;
                                                statearr_18626_19012[1] = 6;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_18565 === 37) {
                                                  try {
                                                    try {
                                                      var state_18564__$1 = state_18564;
                                                      if("\ufdd0:else") {
                                                        var statearr_18631_19013 = state_18564__$1;
                                                        statearr_18631_19013[1] = 39
                                                      }else {
                                                        var statearr_18632_19014 = state_18564__$1;
                                                        statearr_18632_19014[1] = 40
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e18629) {
                                                      if(e18629 instanceof Error) {
                                                        var ex__5575__auto__ = e18629;
                                                        var statearr_18630_19015 = state_18564;
                                                        statearr_18630_19015[1] = 22;
                                                        statearr_18630_19015[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e18629;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }catch(e18627) {
                                                    if(e18627 instanceof Error) {
                                                      var ex__5575__auto__ = e18627;
                                                      var statearr_18628_19016 = state_18564;
                                                      statearr_18628_19016[1] = 31;
                                                      statearr_18628_19016[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e18627;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_18565 === 69) {
                                                    try {
                                                      try {
                                                        var inst_18355 = state_18564[7];
                                                        var inst_18457 = cljs.core._EQ_.call(null, inst_18355, "\ufdd0:created");
                                                        var state_18564__$1 = state_18564;
                                                        if(inst_18457) {
                                                          var statearr_18637_19017 = state_18564__$1;
                                                          statearr_18637_19017[1] = 70
                                                        }else {
                                                          var statearr_18638_19018 = state_18564__$1;
                                                          statearr_18638_19018[1] = 71
                                                        }
                                                        return"\ufdd0:recur"
                                                      }catch(e18635) {
                                                        if(e18635 instanceof Error) {
                                                          var ex__5575__auto__ = e18635;
                                                          var statearr_18636_19019 = state_18564;
                                                          statearr_18636_19019[1] = 17;
                                                          statearr_18636_19019[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e18635;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }catch(e18633) {
                                                      if(e18633 instanceof Error) {
                                                        var ex__5575__auto__ = e18633;
                                                        var statearr_18634_19020 = state_18564;
                                                        statearr_18634_19020[1] = 65;
                                                        statearr_18634_19020[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e18633;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_18565 === 101) {
                                                      try {
                                                        var inst_18542 = state_18564[2];
                                                        var state_18564__$1 = state_18564;
                                                        var statearr_18641_19021 = state_18564__$1;
                                                        statearr_18641_19021[2] = inst_18542;
                                                        statearr_18641_19021[1] = 100;
                                                        return"\ufdd0:recur"
                                                      }catch(e18639) {
                                                        if(e18639 instanceof Error) {
                                                          var ex__5575__auto__ = e18639;
                                                          var statearr_18640_19022 = state_18564;
                                                          statearr_18640_19022[1] = 12;
                                                          statearr_18640_19022[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e18639;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_18565 === 6) {
                                                        var inst_18560 = state_18564[2];
                                                        var state_18564__$1 = state_18564;
                                                        var statearr_18642_19023 = state_18564__$1;
                                                        statearr_18642_19023[2] = inst_18560;
                                                        statearr_18642_19023[1] = 3;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_18565 === 38) {
                                                          try {
                                                            try {
                                                              var inst_18400 = state_18564[2];
                                                              var state_18564__$1 = state_18564;
                                                              var statearr_18647_19024 = state_18564__$1;
                                                              statearr_18647_19024[2] = inst_18400;
                                                              statearr_18647_19024[1] = 30;
                                                              return"\ufdd0:recur"
                                                            }catch(e18645) {
                                                              if(e18645 instanceof Error) {
                                                                var ex__5575__auto__ = e18645;
                                                                var statearr_18646_19025 = state_18564;
                                                                statearr_18646_19025[1] = 22;
                                                                statearr_18646_19025[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e18645;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }catch(e18643) {
                                                            if(e18643 instanceof Error) {
                                                              var ex__5575__auto__ = e18643;
                                                              var statearr_18644_19026 = state_18564;
                                                              statearr_18644_19026[1] = 31;
                                                              statearr_18644_19026[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e18643;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_18565 === 70) {
                                                            try {
                                                              try {
                                                                var inst_18459 = chatter_box.user_view_component.user_created.call(null);
                                                                var state_18564__$1 = state_18564;
                                                                var statearr_18652_19027 = state_18564__$1;
                                                                statearr_18652_19027[2] = inst_18459;
                                                                statearr_18652_19027[1] = 72;
                                                                return"\ufdd0:recur"
                                                              }catch(e18650) {
                                                                if(e18650 instanceof Error) {
                                                                  var ex__5575__auto__ = e18650;
                                                                  var statearr_18651_19028 = state_18564;
                                                                  statearr_18651_19028[1] = 17;
                                                                  statearr_18651_19028[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e18650;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }catch(e18648) {
                                                              if(e18648 instanceof Error) {
                                                                var ex__5575__auto__ = e18648;
                                                                var statearr_18649_19029 = state_18564;
                                                                statearr_18649_19029[1] = 65;
                                                                statearr_18649_19029[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e18648;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_18565 === 102) {
                                                              try {
                                                                var inst_18520 = state_18564[9];
                                                                var inst_18520__$1 = state_18564[2];
                                                                var inst_18521 = inst_18520__$1 === cljs.core.match.backtrack;
                                                                var state_18564__$1 = function() {
                                                                  var statearr_18655 = state_18564;
                                                                  statearr_18655[9] = inst_18520__$1;
                                                                  return statearr_18655
                                                                }();
                                                                if(cljs.core.truth_(inst_18521)) {
                                                                  var statearr_18656_19030 = state_18564__$1;
                                                                  statearr_18656_19030[1] = 103
                                                                }else {
                                                                  var statearr_18657_19031 = state_18564__$1;
                                                                  statearr_18657_19031[1] = 104
                                                                }
                                                                return"\ufdd0:recur"
                                                              }catch(e18653) {
                                                                if(e18653 instanceof Error) {
                                                                  var ex__5575__auto__ = e18653;
                                                                  var statearr_18654_19032 = state_18564;
                                                                  statearr_18654_19032[1] = 12;
                                                                  statearr_18654_19032[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e18653;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_18565 === 7) {
                                                                var inst_18347 = state_18564[10];
                                                                var inst_18347__$1 = state_18564[2];
                                                                var inst_18348 = cljs.core.seq_QMARK_.call(null, inst_18347__$1);
                                                                var state_18564__$1 = function() {
                                                                  var statearr_18658 = state_18564;
                                                                  statearr_18658[10] = inst_18347__$1;
                                                                  return statearr_18658
                                                                }();
                                                                if(inst_18348) {
                                                                  var statearr_18659_19033 = state_18564__$1;
                                                                  statearr_18659_19033[1] = 8
                                                                }else {
                                                                  var statearr_18660_19034 = state_18564__$1;
                                                                  statearr_18660_19034[1] = 9
                                                                }
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if(state_val_18565 === 39) {
                                                                  try {
                                                                    try {
                                                                      var inst_18395 = function() {
                                                                        throw cljs.core.match.backtrack;
                                                                      }();
                                                                      var state_18564__$1 = state_18564;
                                                                      var statearr_18665_19035 = state_18564__$1;
                                                                      statearr_18665_19035[2] = inst_18395;
                                                                      statearr_18665_19035[1] = 41;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e18663) {
                                                                      if(e18663 instanceof Error) {
                                                                        var ex__5575__auto__ = e18663;
                                                                        var statearr_18664_19036 = state_18564;
                                                                        statearr_18664_19036[1] = 22;
                                                                        statearr_18664_19036[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e18663;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e18661) {
                                                                    if(e18661 instanceof Error) {
                                                                      var ex__5575__auto__ = e18661;
                                                                      var statearr_18662_19037 = state_18564;
                                                                      statearr_18662_19037[1] = 31;
                                                                      statearr_18662_19037[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e18661;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_18565 === 71) {
                                                                    try {
                                                                      try {
                                                                        var state_18564__$1 = state_18564;
                                                                        if("\ufdd0:else") {
                                                                          var statearr_18670_19038 = state_18564__$1;
                                                                          statearr_18670_19038[1] = 73
                                                                        }else {
                                                                          var statearr_18671_19039 = state_18564__$1;
                                                                          statearr_18671_19039[1] = 74
                                                                        }
                                                                        return"\ufdd0:recur"
                                                                      }catch(e18668) {
                                                                        if(e18668 instanceof Error) {
                                                                          var ex__5575__auto__ = e18668;
                                                                          var statearr_18669_19040 = state_18564;
                                                                          statearr_18669_19040[1] = 17;
                                                                          statearr_18669_19040[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e18668;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }catch(e18666) {
                                                                      if(e18666 instanceof Error) {
                                                                        var ex__5575__auto__ = e18666;
                                                                        var statearr_18667_19041 = state_18564;
                                                                        statearr_18667_19041[1] = 65;
                                                                        statearr_18667_19041[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e18666;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_18565 === 103) {
                                                                      try {
                                                                        var inst_18523 = function() {
                                                                          throw cljs.core.match.backtrack;
                                                                        }();
                                                                        var state_18564__$1 = state_18564;
                                                                        var statearr_18674_19042 = state_18564__$1;
                                                                        statearr_18674_19042[2] = inst_18523;
                                                                        statearr_18674_19042[1] = 105;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e18672) {
                                                                        if(e18672 instanceof Error) {
                                                                          var ex__5575__auto__ = e18672;
                                                                          var statearr_18673_19043 = state_18564;
                                                                          statearr_18673_19043[1] = 12;
                                                                          statearr_18673_19043[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e18672;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_18565 === 8) {
                                                                        var inst_18347 = state_18564[10];
                                                                        var inst_18350 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18347);
                                                                        var state_18564__$1 = state_18564;
                                                                        var statearr_18675_19044 = state_18564__$1;
                                                                        statearr_18675_19044[2] = inst_18350;
                                                                        statearr_18675_19044[1] = 10;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if(state_val_18565 === 40) {
                                                                          try {
                                                                            try {
                                                                              var state_18564__$1 = state_18564;
                                                                              var statearr_18680_19045 = state_18564__$1;
                                                                              statearr_18680_19045[2] = null;
                                                                              statearr_18680_19045[1] = 41;
                                                                              return"\ufdd0:recur"
                                                                            }catch(e18678) {
                                                                              if(e18678 instanceof Error) {
                                                                                var ex__5575__auto__ = e18678;
                                                                                var statearr_18679_19046 = state_18564;
                                                                                statearr_18679_19046[1] = 22;
                                                                                statearr_18679_19046[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e18678;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }catch(e18676) {
                                                                            if(e18676 instanceof Error) {
                                                                              var ex__5575__auto__ = e18676;
                                                                              var statearr_18677_19047 = state_18564;
                                                                              statearr_18677_19047[1] = 31;
                                                                              statearr_18677_19047[2] = ex__5575__auto__;
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if("\ufdd0:else") {
                                                                                throw e18676;
                                                                              }else {
                                                                                return null
                                                                              }
                                                                            }
                                                                          }
                                                                        }else {
                                                                          if(state_val_18565 === 72) {
                                                                            try {
                                                                              try {
                                                                                var inst_18467 = state_18564[2];
                                                                                var state_18564__$1 = state_18564;
                                                                                var statearr_18685_19048 = state_18564__$1;
                                                                                statearr_18685_19048[2] = inst_18467;
                                                                                statearr_18685_19048[1] = 64;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e18683) {
                                                                                if(e18683 instanceof Error) {
                                                                                  var ex__5575__auto__ = e18683;
                                                                                  var statearr_18684_19049 = state_18564;
                                                                                  statearr_18684_19049[1] = 17;
                                                                                  statearr_18684_19049[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e18683;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }catch(e18681) {
                                                                              if(e18681 instanceof Error) {
                                                                                var ex__5575__auto__ = e18681;
                                                                                var statearr_18682_19050 = state_18564;
                                                                                statearr_18682_19050[1] = 65;
                                                                                statearr_18682_19050[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e18681;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_18565 === 104) {
                                                                              try {
                                                                                var inst_18520 = state_18564[9];
                                                                                var inst_18525 = function() {
                                                                                  throw inst_18520;
                                                                                }();
                                                                                var state_18564__$1 = state_18564;
                                                                                var statearr_18688_19051 = state_18564__$1;
                                                                                statearr_18688_19051[2] = inst_18525;
                                                                                statearr_18688_19051[1] = 105;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e18686) {
                                                                                if(e18686 instanceof Error) {
                                                                                  var ex__5575__auto__ = e18686;
                                                                                  var statearr_18687_19052 = state_18564;
                                                                                  statearr_18687_19052[1] = 12;
                                                                                  statearr_18687_19052[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e18686;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_18565 === 9) {
                                                                                var inst_18347 = state_18564[10];
                                                                                var state_18564__$1 = state_18564;
                                                                                var statearr_18689_19053 = state_18564__$1;
                                                                                statearr_18689_19053[2] = inst_18347;
                                                                                statearr_18689_19053[1] = 10;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_18565 === 41) {
                                                                                  try {
                                                                                    try {
                                                                                      var inst_18398 = state_18564[2];
                                                                                      var state_18564__$1 = state_18564;
                                                                                      var statearr_18694_19054 = state_18564__$1;
                                                                                      statearr_18694_19054[2] = inst_18398;
                                                                                      statearr_18694_19054[1] = 38;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e18692) {
                                                                                      if(e18692 instanceof Error) {
                                                                                        var ex__5575__auto__ = e18692;
                                                                                        var statearr_18693_19055 = state_18564;
                                                                                        statearr_18693_19055[1] = 22;
                                                                                        statearr_18693_19055[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e18692;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }catch(e18690) {
                                                                                    if(e18690 instanceof Error) {
                                                                                      var ex__5575__auto__ = e18690;
                                                                                      var statearr_18691_19056 = state_18564;
                                                                                      statearr_18691_19056[1] = 31;
                                                                                      statearr_18691_19056[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e18690;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_18565 === 73) {
                                                                                    try {
                                                                                      try {
                                                                                        var inst_18462 = function() {
                                                                                          throw cljs.core.match.backtrack;
                                                                                        }();
                                                                                        var state_18564__$1 = state_18564;
                                                                                        var statearr_18699_19057 = state_18564__$1;
                                                                                        statearr_18699_19057[2] = inst_18462;
                                                                                        statearr_18699_19057[1] = 75;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e18697) {
                                                                                        if(e18697 instanceof Error) {
                                                                                          var ex__5575__auto__ = e18697;
                                                                                          var statearr_18698_19058 = state_18564;
                                                                                          statearr_18698_19058[1] = 17;
                                                                                          statearr_18698_19058[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e18697;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }catch(e18695) {
                                                                                      if(e18695 instanceof Error) {
                                                                                        var ex__5575__auto__ = e18695;
                                                                                        var statearr_18696_19059 = state_18564;
                                                                                        statearr_18696_19059[1] = 65;
                                                                                        statearr_18696_19059[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e18695;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_18565 === 105) {
                                                                                      try {
                                                                                        var inst_18527 = state_18564[2];
                                                                                        var state_18564__$1 = state_18564;
                                                                                        var statearr_18702_19060 = state_18564__$1;
                                                                                        statearr_18702_19060[2] = inst_18527;
                                                                                        statearr_18702_19060[1] = 101;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e18700) {
                                                                                        if(e18700 instanceof Error) {
                                                                                          var ex__5575__auto__ = e18700;
                                                                                          var statearr_18701_19061 = state_18564;
                                                                                          statearr_18701_19061[1] = 12;
                                                                                          statearr_18701_19061[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e18700;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_18565 === 10) {
                                                                                        var inst_18353 = state_18564[11];
                                                                                        var inst_18353__$1 = state_18564[2];
                                                                                        var inst_18354 = cljs.core.get.call(null, inst_18353__$1, "\ufdd0:area");
                                                                                        var inst_18355 = cljs.core.get.call(null, inst_18353__$1, "\ufdd0:key");
                                                                                        var inst_18356 = cljs.core.get.call(null, inst_18353__$1, "\ufdd0:data");
                                                                                        var state_18564__$1 = function() {
                                                                                          var statearr_18703 = state_18564;
                                                                                          statearr_18703[8] = inst_18356;
                                                                                          statearr_18703[11] = inst_18353__$1;
                                                                                          statearr_18703[7] = inst_18355;
                                                                                          statearr_18703[12] = inst_18354;
                                                                                          return statearr_18703
                                                                                        }();
                                                                                        var statearr_18704_19062 = state_18564__$1;
                                                                                        statearr_18704_19062[2] = null;
                                                                                        statearr_18704_19062[1] = 79;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_18565 === 42) {
                                                                                          try {
                                                                                            var inst_18405 = function() {
                                                                                              throw cljs.core.match.backtrack;
                                                                                            }();
                                                                                            var state_18564__$1 = state_18564;
                                                                                            var statearr_18707_19063 = state_18564__$1;
                                                                                            statearr_18707_19063[2] = inst_18405;
                                                                                            statearr_18707_19063[1] = 44;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e18705) {
                                                                                            if(e18705 instanceof Error) {
                                                                                              var ex__5575__auto__ = e18705;
                                                                                              var statearr_18706_19064 = state_18564;
                                                                                              statearr_18706_19064[1] = 22;
                                                                                              statearr_18706_19064[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e18705;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_18565 === 74) {
                                                                                            try {
                                                                                              try {
                                                                                                var state_18564__$1 = state_18564;
                                                                                                var statearr_18712_19065 = state_18564__$1;
                                                                                                statearr_18712_19065[2] = null;
                                                                                                statearr_18712_19065[1] = 75;
                                                                                                return"\ufdd0:recur"
                                                                                              }catch(e18710) {
                                                                                                if(e18710 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e18710;
                                                                                                  var statearr_18711_19066 = state_18564;
                                                                                                  statearr_18711_19066[1] = 17;
                                                                                                  statearr_18711_19066[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e18710;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }catch(e18708) {
                                                                                              if(e18708 instanceof Error) {
                                                                                                var ex__5575__auto__ = e18708;
                                                                                                var statearr_18709_19067 = state_18564;
                                                                                                statearr_18709_19067[1] = 65;
                                                                                                statearr_18709_19067[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e18708;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_18565 === 106) {
                                                                                              try {
                                                                                                try {
                                                                                                  var inst_18355 = state_18564[7];
                                                                                                  var inst_18530 = cljs.core._EQ_.call(null, inst_18355, "\ufdd0:logout");
                                                                                                  var state_18564__$1 = state_18564;
                                                                                                  if(inst_18530) {
                                                                                                    var statearr_18717_19068 = state_18564__$1;
                                                                                                    statearr_18717_19068[1] = 107
                                                                                                  }else {
                                                                                                    var statearr_18718_19069 = state_18564__$1;
                                                                                                    statearr_18718_19069[1] = 108
                                                                                                  }
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e18715) {
                                                                                                  if(e18715 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e18715;
                                                                                                    var statearr_18716_19070 = state_18564;
                                                                                                    statearr_18716_19070[1] = 12;
                                                                                                    statearr_18716_19070[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e18715;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }catch(e18713) {
                                                                                                if(e18713 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e18713;
                                                                                                  var statearr_18714_19071 = state_18564;
                                                                                                  statearr_18714_19071[1] = 102;
                                                                                                  statearr_18714_19071[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e18713;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_18565 === 11) {
                                                                                                var inst_18556 = state_18564[2];
                                                                                                var state_18564__$1 = function() {
                                                                                                  var statearr_18719 = state_18564;
                                                                                                  statearr_18719[13] = inst_18556;
                                                                                                  return statearr_18719
                                                                                                }();
                                                                                                var statearr_18720_19072 = state_18564__$1;
                                                                                                statearr_18720_19072[2] = null;
                                                                                                statearr_18720_19072[1] = 2;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if(state_val_18565 === 43) {
                                                                                                  try {
                                                                                                    var state_18564__$1 = state_18564;
                                                                                                    var statearr_18723_19073 = state_18564__$1;
                                                                                                    statearr_18723_19073[2] = null;
                                                                                                    statearr_18723_19073[1] = 44;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e18721) {
                                                                                                    if(e18721 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e18721;
                                                                                                      var statearr_18722_19074 = state_18564;
                                                                                                      statearr_18722_19074[1] = 22;
                                                                                                      statearr_18722_19074[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e18721;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }else {
                                                                                                  if(state_val_18565 === 75) {
                                                                                                    try {
                                                                                                      try {
                                                                                                        var inst_18465 = state_18564[2];
                                                                                                        var state_18564__$1 = state_18564;
                                                                                                        var statearr_18728_19075 = state_18564__$1;
                                                                                                        statearr_18728_19075[2] = inst_18465;
                                                                                                        statearr_18728_19075[1] = 72;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }catch(e18726) {
                                                                                                        if(e18726 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e18726;
                                                                                                          var statearr_18727_19076 = state_18564;
                                                                                                          statearr_18727_19076[1] = 17;
                                                                                                          statearr_18727_19076[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e18726;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }catch(e18724) {
                                                                                                      if(e18724 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e18724;
                                                                                                        var statearr_18725_19077 = state_18564;
                                                                                                        statearr_18725_19077[1] = 65;
                                                                                                        statearr_18725_19077[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e18724;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_18565 === 107) {
                                                                                                      try {
                                                                                                        try {
                                                                                                          var inst_18532 = chatter_box.user_view_component.logout.call(null);
                                                                                                          var state_18564__$1 = state_18564;
                                                                                                          var statearr_18733_19078 = state_18564__$1;
                                                                                                          statearr_18733_19078[2] = inst_18532;
                                                                                                          statearr_18733_19078[1] = 109;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e18731) {
                                                                                                          if(e18731 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e18731;
                                                                                                            var statearr_18732_19079 = state_18564;
                                                                                                            statearr_18732_19079[1] = 12;
                                                                                                            statearr_18732_19079[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e18731;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }catch(e18729) {
                                                                                                        if(e18729 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e18729;
                                                                                                          var statearr_18730_19080 = state_18564;
                                                                                                          statearr_18730_19080[1] = 102;
                                                                                                          statearr_18730_19080[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e18729;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }else {
                                                                                                      if(state_val_18565 === 12) {
                                                                                                        var inst_18360 = state_18564[14];
                                                                                                        var inst_18360__$1 = state_18564[2];
                                                                                                        var inst_18361 = inst_18360__$1 === cljs.core.match.backtrack;
                                                                                                        var state_18564__$1 = function() {
                                                                                                          var statearr_18734 = state_18564;
                                                                                                          statearr_18734[14] = inst_18360__$1;
                                                                                                          return statearr_18734
                                                                                                        }();
                                                                                                        if(cljs.core.truth_(inst_18361)) {
                                                                                                          var statearr_18735_19081 = state_18564__$1;
                                                                                                          statearr_18735_19081[1] = 13
                                                                                                        }else {
                                                                                                          var statearr_18736_19082 = state_18564__$1;
                                                                                                          statearr_18736_19082[1] = 14
                                                                                                        }
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if(state_val_18565 === 44) {
                                                                                                          try {
                                                                                                            var inst_18408 = state_18564[2];
                                                                                                            var state_18564__$1 = state_18564;
                                                                                                            var statearr_18739_19083 = state_18564__$1;
                                                                                                            statearr_18739_19083[2] = inst_18408;
                                                                                                            statearr_18739_19083[1] = 29;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e18737) {
                                                                                                            if(e18737 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e18737;
                                                                                                              var statearr_18738_19084 = state_18564;
                                                                                                              statearr_18738_19084[1] = 22;
                                                                                                              statearr_18738_19084[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e18737;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_18565 === 76) {
                                                                                                            try {
                                                                                                              var inst_18472 = function() {
                                                                                                                throw cljs.core.match.backtrack;
                                                                                                              }();
                                                                                                              var state_18564__$1 = state_18564;
                                                                                                              var statearr_18742_19085 = state_18564__$1;
                                                                                                              statearr_18742_19085[2] = inst_18472;
                                                                                                              statearr_18742_19085[1] = 78;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e18740) {
                                                                                                              if(e18740 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e18740;
                                                                                                                var statearr_18741_19086 = state_18564;
                                                                                                                statearr_18741_19086[1] = 17;
                                                                                                                statearr_18741_19086[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e18740;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_18565 === 108) {
                                                                                                              try {
                                                                                                                try {
                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    var statearr_18747_19087 = state_18564__$1;
                                                                                                                    statearr_18747_19087[1] = 110
                                                                                                                  }else {
                                                                                                                    var statearr_18748_19088 = state_18564__$1;
                                                                                                                    statearr_18748_19088[1] = 111
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e18745) {
                                                                                                                  if(e18745 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e18745;
                                                                                                                    var statearr_18746_19089 = state_18564;
                                                                                                                    statearr_18746_19089[1] = 12;
                                                                                                                    statearr_18746_19089[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e18745;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }catch(e18743) {
                                                                                                                if(e18743 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e18743;
                                                                                                                  var statearr_18744_19090 = state_18564;
                                                                                                                  statearr_18744_19090[1] = 102;
                                                                                                                  statearr_18744_19090[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e18743;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_18565 === 13) {
                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                var statearr_18749_19091 = state_18564__$1;
                                                                                                                statearr_18749_19091[2] = null;
                                                                                                                statearr_18749_19091[1] = 45;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if(state_val_18565 === 45) {
                                                                                                                  try {
                                                                                                                    var inst_18354 = state_18564[12];
                                                                                                                    var inst_18419 = cljs.core._EQ_.call(null, inst_18354, "\ufdd0:security");
                                                                                                                    var state_18564__$1 = state_18564;
                                                                                                                    if(inst_18419) {
                                                                                                                      var statearr_18752_19092 = state_18564__$1;
                                                                                                                      statearr_18752_19092[1] = 46
                                                                                                                    }else {
                                                                                                                      var statearr_18753_19093 = state_18564__$1;
                                                                                                                      statearr_18753_19093[1] = 47
                                                                                                                    }
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e18750) {
                                                                                                                    if(e18750 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e18750;
                                                                                                                      var statearr_18751_19094 = state_18564;
                                                                                                                      statearr_18751_19094[1] = 17;
                                                                                                                      statearr_18751_19094[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e18750;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_18565 === 77) {
                                                                                                                    try {
                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                      var statearr_18756_19095 = state_18564__$1;
                                                                                                                      statearr_18756_19095[2] = null;
                                                                                                                      statearr_18756_19095[1] = 78;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }catch(e18754) {
                                                                                                                      if(e18754 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e18754;
                                                                                                                        var statearr_18755_19096 = state_18564;
                                                                                                                        statearr_18755_19096[1] = 17;
                                                                                                                        statearr_18755_19096[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e18754;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_18565 === 109) {
                                                                                                                      try {
                                                                                                                        try {
                                                                                                                          var inst_18540 = state_18564[2];
                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                          var statearr_18761_19097 = state_18564__$1;
                                                                                                                          statearr_18761_19097[2] = inst_18540;
                                                                                                                          statearr_18761_19097[1] = 101;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e18759) {
                                                                                                                          if(e18759 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e18759;
                                                                                                                            var statearr_18760_19098 = state_18564;
                                                                                                                            statearr_18760_19098[1] = 12;
                                                                                                                            statearr_18760_19098[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e18759;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }catch(e18757) {
                                                                                                                        if(e18757 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e18757;
                                                                                                                          var statearr_18758_19099 = state_18564;
                                                                                                                          statearr_18758_19099[1] = 102;
                                                                                                                          statearr_18758_19099[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e18757;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_18565 === 14) {
                                                                                                                        var inst_18360 = state_18564[14];
                                                                                                                        var inst_18483 = function() {
                                                                                                                          throw inst_18360;
                                                                                                                        }();
                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                        var statearr_18762_19100 = state_18564__$1;
                                                                                                                        statearr_18762_19100[2] = inst_18483;
                                                                                                                        statearr_18762_19100[1] = 15;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if(state_val_18565 === 46) {
                                                                                                                          try {
                                                                                                                            var state_18564__$1 = state_18564;
                                                                                                                            var statearr_18765_19101 = state_18564__$1;
                                                                                                                            statearr_18765_19101[2] = null;
                                                                                                                            statearr_18765_19101[1] = 54;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e18763) {
                                                                                                                            if(e18763 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e18763;
                                                                                                                              var statearr_18764_19102 = state_18564;
                                                                                                                              statearr_18764_19102[1] = 17;
                                                                                                                              statearr_18764_19102[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e18763;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_18565 === 78) {
                                                                                                                            try {
                                                                                                                              var inst_18475 = state_18564[2];
                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                              var statearr_18768_19103 = state_18564__$1;
                                                                                                                              statearr_18768_19103[2] = inst_18475;
                                                                                                                              statearr_18768_19103[1] = 63;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }catch(e18766) {
                                                                                                                              if(e18766 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e18766;
                                                                                                                                var statearr_18767_19104 = state_18564;
                                                                                                                                statearr_18767_19104[1] = 17;
                                                                                                                                statearr_18767_19104[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e18766;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_18565 === 110) {
                                                                                                                              try {
                                                                                                                                try {
                                                                                                                                  var inst_18535 = function() {
                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                  }();
                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                  var statearr_18773_19105 = state_18564__$1;
                                                                                                                                  statearr_18773_19105[2] = inst_18535;
                                                                                                                                  statearr_18773_19105[1] = 112;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e18771) {
                                                                                                                                  if(e18771 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e18771;
                                                                                                                                    var statearr_18772_19106 = state_18564;
                                                                                                                                    statearr_18772_19106[1] = 12;
                                                                                                                                    statearr_18772_19106[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e18771;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }catch(e18769) {
                                                                                                                                if(e18769 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e18769;
                                                                                                                                  var statearr_18770_19107 = state_18564;
                                                                                                                                  statearr_18770_19107[1] = 102;
                                                                                                                                  statearr_18770_19107[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e18769;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_18565 === 15) {
                                                                                                                                var inst_18485 = state_18564[2];
                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                var statearr_18774_19108 = state_18564__$1;
                                                                                                                                statearr_18774_19108[2] = inst_18485;
                                                                                                                                statearr_18774_19108[1] = 11;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if(state_val_18565 === 47) {
                                                                                                                                  try {
                                                                                                                                    var inst_18354 = state_18564[12];
                                                                                                                                    var inst_18445 = cljs.core._EQ_.call(null, inst_18354, "\ufdd0:user");
                                                                                                                                    var state_18564__$1 = state_18564;
                                                                                                                                    if(inst_18445) {
                                                                                                                                      var statearr_18777_19109 = state_18564__$1;
                                                                                                                                      statearr_18777_19109[1] = 61
                                                                                                                                    }else {
                                                                                                                                      var statearr_18778_19110 = state_18564__$1;
                                                                                                                                      statearr_18778_19110[1] = 62
                                                                                                                                    }
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e18775) {
                                                                                                                                    if(e18775 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e18775;
                                                                                                                                      var statearr_18776_19111 = state_18564;
                                                                                                                                      statearr_18776_19111[1] = 17;
                                                                                                                                      statearr_18776_19111[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e18775;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_18565 === 79) {
                                                                                                                                    try {
                                                                                                                                      var inst_18354 = state_18564[12];
                                                                                                                                      var inst_18488 = cljs.core._EQ_.call(null, inst_18354, "\ufdd0:nav");
                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                      if(inst_18488) {
                                                                                                                                        var statearr_18781_19112 = state_18564__$1;
                                                                                                                                        statearr_18781_19112[1] = 80
                                                                                                                                      }else {
                                                                                                                                        var statearr_18782_19113 = state_18564__$1;
                                                                                                                                        statearr_18782_19113[1] = 81
                                                                                                                                      }
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }catch(e18779) {
                                                                                                                                      if(e18779 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e18779;
                                                                                                                                        var statearr_18780_19114 = state_18564;
                                                                                                                                        statearr_18780_19114[1] = 12;
                                                                                                                                        statearr_18780_19114[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e18779;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_18565 === 111) {
                                                                                                                                      try {
                                                                                                                                        try {
                                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                                          var statearr_18787_19115 = state_18564__$1;
                                                                                                                                          statearr_18787_19115[2] = null;
                                                                                                                                          statearr_18787_19115[1] = 112;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }catch(e18785) {
                                                                                                                                          if(e18785 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e18785;
                                                                                                                                            var statearr_18786_19116 = state_18564;
                                                                                                                                            statearr_18786_19116[1] = 12;
                                                                                                                                            statearr_18786_19116[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e18785;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }catch(e18783) {
                                                                                                                                        if(e18783 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e18783;
                                                                                                                                          var statearr_18784_19117 = state_18564;
                                                                                                                                          statearr_18784_19117[1] = 102;
                                                                                                                                          statearr_18784_19117[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e18783;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_18565 === 16) {
                                                                                                                                        var inst_18481 = state_18564[2];
                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                        var statearr_18788_19118 = state_18564__$1;
                                                                                                                                        statearr_18788_19118[2] = inst_18481;
                                                                                                                                        statearr_18788_19118[1] = 15;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if(state_val_18565 === 48) {
                                                                                                                                          try {
                                                                                                                                            var inst_18479 = state_18564[2];
                                                                                                                                            var state_18564__$1 = state_18564;
                                                                                                                                            var statearr_18791_19119 = state_18564__$1;
                                                                                                                                            statearr_18791_19119[2] = inst_18479;
                                                                                                                                            statearr_18791_19119[1] = 16;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e18789) {
                                                                                                                                            if(e18789 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e18789;
                                                                                                                                              var statearr_18790_19120 = state_18564;
                                                                                                                                              statearr_18790_19120[1] = 17;
                                                                                                                                              statearr_18790_19120[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e18789;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_18565 === 80) {
                                                                                                                                            try {
                                                                                                                                              var inst_18353 = state_18564[11];
                                                                                                                                              var inst_18490 = chatter_box.user_view_component.navigate.call(null, inst_18353);
                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                              var statearr_18794_19121 = state_18564__$1;
                                                                                                                                              statearr_18794_19121[2] = inst_18490;
                                                                                                                                              statearr_18794_19121[1] = 82;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }catch(e18792) {
                                                                                                                                              if(e18792 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e18792;
                                                                                                                                                var statearr_18793_19122 = state_18564;
                                                                                                                                                statearr_18793_19122[1] = 12;
                                                                                                                                                statearr_18793_19122[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e18792;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_18565 === 112) {
                                                                                                                                              try {
                                                                                                                                                try {
                                                                                                                                                  var inst_18538 = state_18564[2];
                                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                                  var statearr_18799_19123 = state_18564__$1;
                                                                                                                                                  statearr_18799_19123[2] = inst_18538;
                                                                                                                                                  statearr_18799_19123[1] = 109;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e18797) {
                                                                                                                                                  if(e18797 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e18797;
                                                                                                                                                    var statearr_18798_19124 = state_18564;
                                                                                                                                                    statearr_18798_19124[1] = 12;
                                                                                                                                                    statearr_18798_19124[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e18797;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }catch(e18795) {
                                                                                                                                                if(e18795 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e18795;
                                                                                                                                                  var statearr_18796_19125 = state_18564;
                                                                                                                                                  statearr_18796_19125[1] = 102;
                                                                                                                                                  statearr_18796_19125[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e18795;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_18565 === 17) {
                                                                                                                                                var inst_18363 = state_18564[15];
                                                                                                                                                var inst_18363__$1 = state_18564[2];
                                                                                                                                                var inst_18364 = inst_18363__$1 === cljs.core.match.backtrack;
                                                                                                                                                var state_18564__$1 = function() {
                                                                                                                                                  var statearr_18800 = state_18564;
                                                                                                                                                  statearr_18800[15] = inst_18363__$1;
                                                                                                                                                  return statearr_18800
                                                                                                                                                }();
                                                                                                                                                if(cljs.core.truth_(inst_18364)) {
                                                                                                                                                  var statearr_18801_19126 = state_18564__$1;
                                                                                                                                                  statearr_18801_19126[1] = 18
                                                                                                                                                }else {
                                                                                                                                                  var statearr_18802_19127 = state_18564__$1;
                                                                                                                                                  statearr_18802_19127[1] = 19
                                                                                                                                                }
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if(state_val_18565 === 49) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_18443 = state_18564[2];
                                                                                                                                                    var state_18564__$1 = state_18564;
                                                                                                                                                    var statearr_18805_19128 = state_18564__$1;
                                                                                                                                                    statearr_18805_19128[2] = inst_18443;
                                                                                                                                                    statearr_18805_19128[1] = 48;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e18803) {
                                                                                                                                                    if(e18803 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e18803;
                                                                                                                                                      var statearr_18804_19129 = state_18564;
                                                                                                                                                      statearr_18804_19129[1] = 17;
                                                                                                                                                      statearr_18804_19129[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e18803;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_18565 === 81) {
                                                                                                                                                    try {
                                                                                                                                                      var inst_18354 = state_18564[12];
                                                                                                                                                      var inst_18492 = cljs.core._EQ_.call(null, inst_18354, "\ufdd0:view");
                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                      if(inst_18492) {
                                                                                                                                                        var statearr_18808_19130 = state_18564__$1;
                                                                                                                                                        statearr_18808_19130[1] = 83
                                                                                                                                                      }else {
                                                                                                                                                        var statearr_18809_19131 = state_18564__$1;
                                                                                                                                                        statearr_18809_19131[1] = 84
                                                                                                                                                      }
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e18806) {
                                                                                                                                                      if(e18806 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e18806;
                                                                                                                                                        var statearr_18807_19132 = state_18564;
                                                                                                                                                        statearr_18807_19132[1] = 12;
                                                                                                                                                        statearr_18807_19132[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e18806;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_18565 === 113) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_18545 = function() {
                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                        }();
                                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                                        var statearr_18812_19133 = state_18564__$1;
                                                                                                                                                        statearr_18812_19133[2] = inst_18545;
                                                                                                                                                        statearr_18812_19133[1] = 115;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e18810) {
                                                                                                                                                        if(e18810 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e18810;
                                                                                                                                                          var statearr_18811_19134 = state_18564;
                                                                                                                                                          statearr_18811_19134[1] = 12;
                                                                                                                                                          statearr_18811_19134[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e18810;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_18565 === 18) {
                                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                                        var statearr_18813_19135 = state_18564__$1;
                                                                                                                                                        statearr_18813_19135[2] = null;
                                                                                                                                                        statearr_18813_19135[1] = 26;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_18565 === 50) {
                                                                                                                                                          try {
                                                                                                                                                            var inst_18421 = state_18564[16];
                                                                                                                                                            var inst_18421__$1 = state_18564[2];
                                                                                                                                                            var inst_18422 = inst_18421__$1 === cljs.core.match.backtrack;
                                                                                                                                                            var state_18564__$1 = function() {
                                                                                                                                                              var statearr_18816 = state_18564;
                                                                                                                                                              statearr_18816[16] = inst_18421__$1;
                                                                                                                                                              return statearr_18816
                                                                                                                                                            }();
                                                                                                                                                            if(cljs.core.truth_(inst_18422)) {
                                                                                                                                                              var statearr_18817_19136 = state_18564__$1;
                                                                                                                                                              statearr_18817_19136[1] = 51
                                                                                                                                                            }else {
                                                                                                                                                              var statearr_18818_19137 = state_18564__$1;
                                                                                                                                                              statearr_18818_19137[1] = 52
                                                                                                                                                            }
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }catch(e18814) {
                                                                                                                                                            if(e18814 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e18814;
                                                                                                                                                              var statearr_18815_19138 = state_18564;
                                                                                                                                                              statearr_18815_19138[1] = 17;
                                                                                                                                                              statearr_18815_19138[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e18814;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_18565 === 82) {
                                                                                                                                                            try {
                                                                                                                                                              var inst_18554 = state_18564[2];
                                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                                              var statearr_18821_19139 = state_18564__$1;
                                                                                                                                                              statearr_18821_19139[2] = inst_18554;
                                                                                                                                                              statearr_18821_19139[1] = 11;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e18819) {
                                                                                                                                                              if(e18819 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e18819;
                                                                                                                                                                var statearr_18820_19140 = state_18564;
                                                                                                                                                                statearr_18820_19140[1] = 12;
                                                                                                                                                                statearr_18820_19140[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e18819;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_18565 === 114) {
                                                                                                                                                              try {
                                                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                                                var statearr_18824_19141 = state_18564__$1;
                                                                                                                                                                statearr_18824_19141[2] = null;
                                                                                                                                                                statearr_18824_19141[1] = 115;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e18822) {
                                                                                                                                                                if(e18822 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e18822;
                                                                                                                                                                  var statearr_18823_19142 = state_18564;
                                                                                                                                                                  statearr_18823_19142[1] = 12;
                                                                                                                                                                  statearr_18823_19142[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e18822;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_18565 === 19) {
                                                                                                                                                                var inst_18363 = state_18564[15];
                                                                                                                                                                var inst_18414 = function() {
                                                                                                                                                                  throw inst_18363;
                                                                                                                                                                }();
                                                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                                                var statearr_18825_19143 = state_18564__$1;
                                                                                                                                                                statearr_18825_19143[2] = inst_18414;
                                                                                                                                                                statearr_18825_19143[1] = 20;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_18565 === 51) {
                                                                                                                                                                  try {
                                                                                                                                                                    var inst_18424 = function() {
                                                                                                                                                                      throw cljs.core.match.backtrack;
                                                                                                                                                                    }();
                                                                                                                                                                    var state_18564__$1 = state_18564;
                                                                                                                                                                    var statearr_18828_19144 = state_18564__$1;
                                                                                                                                                                    statearr_18828_19144[2] = inst_18424;
                                                                                                                                                                    statearr_18828_19144[1] = 53;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e18826) {
                                                                                                                                                                    if(e18826 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e18826;
                                                                                                                                                                      var statearr_18827_19145 = state_18564;
                                                                                                                                                                      statearr_18827_19145[1] = 17;
                                                                                                                                                                      statearr_18827_19145[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e18826;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_18565 === 83) {
                                                                                                                                                                    try {
                                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                                      var statearr_18831_19146 = state_18564__$1;
                                                                                                                                                                      statearr_18831_19146[2] = null;
                                                                                                                                                                      statearr_18831_19146[1] = 91;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }catch(e18829) {
                                                                                                                                                                      if(e18829 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e18829;
                                                                                                                                                                        var statearr_18830_19147 = state_18564;
                                                                                                                                                                        statearr_18830_19147[1] = 12;
                                                                                                                                                                        statearr_18830_19147[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e18829;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_18565 === 115) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_18548 = state_18564[2];
                                                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                                                        var statearr_18834_19148 = state_18564__$1;
                                                                                                                                                                        statearr_18834_19148[2] = inst_18548;
                                                                                                                                                                        statearr_18834_19148[1] = 100;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e18832) {
                                                                                                                                                                        if(e18832 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e18832;
                                                                                                                                                                          var statearr_18833_19149 = state_18564;
                                                                                                                                                                          statearr_18833_19149[1] = 12;
                                                                                                                                                                          statearr_18833_19149[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e18832;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_18565 === 20) {
                                                                                                                                                                        var inst_18416 = state_18564[2];
                                                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                                                        var statearr_18835_19150 = state_18564__$1;
                                                                                                                                                                        statearr_18835_19150[2] = inst_18416;
                                                                                                                                                                        statearr_18835_19150[1] = 16;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_18565 === 52) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_18421 = state_18564[16];
                                                                                                                                                                            var inst_18426 = function() {
                                                                                                                                                                              throw inst_18421;
                                                                                                                                                                            }();
                                                                                                                                                                            var state_18564__$1 = state_18564;
                                                                                                                                                                            var statearr_18838_19151 = state_18564__$1;
                                                                                                                                                                            statearr_18838_19151[2] = inst_18426;
                                                                                                                                                                            statearr_18838_19151[1] = 53;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e18836) {
                                                                                                                                                                            if(e18836 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e18836;
                                                                                                                                                                              var statearr_18837_19152 = state_18564;
                                                                                                                                                                              statearr_18837_19152[1] = 17;
                                                                                                                                                                              statearr_18837_19152[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e18836;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_18565 === 84) {
                                                                                                                                                                            try {
                                                                                                                                                                              var inst_18354 = state_18564[12];
                                                                                                                                                                              var inst_18518 = cljs.core._EQ_.call(null, inst_18354, "\ufdd0:security");
                                                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                                                              if(inst_18518) {
                                                                                                                                                                                var statearr_18841_19153 = state_18564__$1;
                                                                                                                                                                                statearr_18841_19153[1] = 98
                                                                                                                                                                              }else {
                                                                                                                                                                                var statearr_18842_19154 = state_18564__$1;
                                                                                                                                                                                statearr_18842_19154[1] = 99
                                                                                                                                                                              }
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }catch(e18839) {
                                                                                                                                                                              if(e18839 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e18839;
                                                                                                                                                                                var statearr_18840_19155 = state_18564;
                                                                                                                                                                                statearr_18840_19155[1] = 12;
                                                                                                                                                                                statearr_18840_19155[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e18839;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_18565 === 21) {
                                                                                                                                                                              var inst_18412 = state_18564[2];
                                                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                                                              var statearr_18843_19156 = state_18564__$1;
                                                                                                                                                                              statearr_18843_19156[2] = inst_18412;
                                                                                                                                                                              statearr_18843_19156[1] = 20;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if(state_val_18565 === 53) {
                                                                                                                                                                                try {
                                                                                                                                                                                  var inst_18428 = state_18564[2];
                                                                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                                                                  var statearr_18846_19157 = state_18564__$1;
                                                                                                                                                                                  statearr_18846_19157[2] = inst_18428;
                                                                                                                                                                                  statearr_18846_19157[1] = 49;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }catch(e18844) {
                                                                                                                                                                                  if(e18844 instanceof Error) {
                                                                                                                                                                                    var ex__5575__auto__ = e18844;
                                                                                                                                                                                    var statearr_18845_19158 = state_18564;
                                                                                                                                                                                    statearr_18845_19158[1] = 17;
                                                                                                                                                                                    statearr_18845_19158[2] = ex__5575__auto__;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                      throw e18844;
                                                                                                                                                                                    }else {
                                                                                                                                                                                      return null
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }else {
                                                                                                                                                                                if(state_val_18565 === 85) {
                                                                                                                                                                                  try {
                                                                                                                                                                                    var inst_18552 = state_18564[2];
                                                                                                                                                                                    var state_18564__$1 = state_18564;
                                                                                                                                                                                    var statearr_18849_19159 = state_18564__$1;
                                                                                                                                                                                    statearr_18849_19159[2] = inst_18552;
                                                                                                                                                                                    statearr_18849_19159[1] = 82;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }catch(e18847) {
                                                                                                                                                                                    if(e18847 instanceof Error) {
                                                                                                                                                                                      var ex__5575__auto__ = e18847;
                                                                                                                                                                                      var statearr_18848_19160 = state_18564;
                                                                                                                                                                                      statearr_18848_19160[1] = 12;
                                                                                                                                                                                      statearr_18848_19160[2] = ex__5575__auto__;
                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                        throw e18847;
                                                                                                                                                                                      }else {
                                                                                                                                                                                        return null
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }else {
                                                                                                                                                                                  if(state_val_18565 === 22) {
                                                                                                                                                                                    var inst_18366 = state_18564[17];
                                                                                                                                                                                    var inst_18366__$1 = state_18564[2];
                                                                                                                                                                                    var inst_18367 = inst_18366__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                    var state_18564__$1 = function() {
                                                                                                                                                                                      var statearr_18850 = state_18564;
                                                                                                                                                                                      statearr_18850[17] = inst_18366__$1;
                                                                                                                                                                                      return statearr_18850
                                                                                                                                                                                    }();
                                                                                                                                                                                    if(cljs.core.truth_(inst_18367)) {
                                                                                                                                                                                      var statearr_18851_19161 = state_18564__$1;
                                                                                                                                                                                      statearr_18851_19161[1] = 23
                                                                                                                                                                                    }else {
                                                                                                                                                                                      var statearr_18852_19162 = state_18564__$1;
                                                                                                                                                                                      statearr_18852_19162[1] = 24
                                                                                                                                                                                    }
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if(state_val_18565 === 54) {
                                                                                                                                                                                      try {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_18355 = state_18564[7];
                                                                                                                                                                                          var inst_18431 = cljs.core._EQ_.call(null, inst_18355, "\ufdd0:login-success");
                                                                                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                                                                                          if(inst_18431) {
                                                                                                                                                                                            var statearr_18857_19163 = state_18564__$1;
                                                                                                                                                                                            statearr_18857_19163[1] = 55
                                                                                                                                                                                          }else {
                                                                                                                                                                                            var statearr_18858_19164 = state_18564__$1;
                                                                                                                                                                                            statearr_18858_19164[1] = 56
                                                                                                                                                                                          }
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e18855) {
                                                                                                                                                                                          if(e18855 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e18855;
                                                                                                                                                                                            var statearr_18856_19165 = state_18564;
                                                                                                                                                                                            statearr_18856_19165[1] = 17;
                                                                                                                                                                                            statearr_18856_19165[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e18855;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }catch(e18853) {
                                                                                                                                                                                        if(e18853 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e18853;
                                                                                                                                                                                          var statearr_18854_19166 = state_18564;
                                                                                                                                                                                          statearr_18854_19166[1] = 50;
                                                                                                                                                                                          statearr_18854_19166[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e18853;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if(state_val_18565 === 86) {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_18516 = state_18564[2];
                                                                                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                                                                                          var statearr_18861_19167 = state_18564__$1;
                                                                                                                                                                                          statearr_18861_19167[2] = inst_18516;
                                                                                                                                                                                          statearr_18861_19167[1] = 85;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e18859) {
                                                                                                                                                                                          if(e18859 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e18859;
                                                                                                                                                                                            var statearr_18860_19168 = state_18564;
                                                                                                                                                                                            statearr_18860_19168[1] = 12;
                                                                                                                                                                                            statearr_18860_19168[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e18859;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if(state_val_18565 === 23) {
                                                                                                                                                                                          var inst_18355 = state_18564[7];
                                                                                                                                                                                          var inst_18354 = state_18564[12];
                                                                                                                                                                                          var inst_18369 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_18354), cljs.core.str(" "), cljs.core.str(inst_18355)].join("");
                                                                                                                                                                                          var inst_18370 = new Error(inst_18369);
                                                                                                                                                                                          var inst_18371 = function() {
                                                                                                                                                                                            throw inst_18370;
                                                                                                                                                                                          }();
                                                                                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                                                                                          var statearr_18862_19169 = state_18564__$1;
                                                                                                                                                                                          statearr_18862_19169[2] = inst_18371;
                                                                                                                                                                                          statearr_18862_19169[1] = 25;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if(state_val_18565 === 55) {
                                                                                                                                                                                            try {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_18356 = state_18564[8];
                                                                                                                                                                                                var inst_18433 = chatter_box.user_view_component.login_success.call(null, inst_18356);
                                                                                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                                                                                var statearr_18867_19170 = state_18564__$1;
                                                                                                                                                                                                statearr_18867_19170[2] = inst_18433;
                                                                                                                                                                                                statearr_18867_19170[1] = 57;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e18865) {
                                                                                                                                                                                                if(e18865 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e18865;
                                                                                                                                                                                                  var statearr_18866_19171 = state_18564;
                                                                                                                                                                                                  statearr_18866_19171[1] = 17;
                                                                                                                                                                                                  statearr_18866_19171[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e18865;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }catch(e18863) {
                                                                                                                                                                                              if(e18863 instanceof Error) {
                                                                                                                                                                                                var ex__5575__auto__ = e18863;
                                                                                                                                                                                                var statearr_18864_19172 = state_18564;
                                                                                                                                                                                                statearr_18864_19172[1] = 50;
                                                                                                                                                                                                statearr_18864_19172[2] = ex__5575__auto__;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                  throw e18863;
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  return null
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if(state_val_18565 === 87) {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_18494 = state_18564[18];
                                                                                                                                                                                                var inst_18494__$1 = state_18564[2];
                                                                                                                                                                                                var inst_18495 = inst_18494__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                var state_18564__$1 = function() {
                                                                                                                                                                                                  var statearr_18870 = state_18564;
                                                                                                                                                                                                  statearr_18870[18] = inst_18494__$1;
                                                                                                                                                                                                  return statearr_18870
                                                                                                                                                                                                }();
                                                                                                                                                                                                if(cljs.core.truth_(inst_18495)) {
                                                                                                                                                                                                  var statearr_18871_19173 = state_18564__$1;
                                                                                                                                                                                                  statearr_18871_19173[1] = 88
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  var statearr_18872_19174 = state_18564__$1;
                                                                                                                                                                                                  statearr_18872_19174[1] = 89
                                                                                                                                                                                                }
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e18868) {
                                                                                                                                                                                                if(e18868 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e18868;
                                                                                                                                                                                                  var statearr_18869_19175 = state_18564;
                                                                                                                                                                                                  statearr_18869_19175[1] = 12;
                                                                                                                                                                                                  statearr_18869_19175[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e18868;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if(state_val_18565 === 24) {
                                                                                                                                                                                                var inst_18366 = state_18564[17];
                                                                                                                                                                                                var inst_18373 = function() {
                                                                                                                                                                                                  throw inst_18366;
                                                                                                                                                                                                }();
                                                                                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                                                                                var statearr_18873_19176 = state_18564__$1;
                                                                                                                                                                                                statearr_18873_19176[2] = inst_18373;
                                                                                                                                                                                                statearr_18873_19176[1] = 25;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if(state_val_18565 === 56) {
                                                                                                                                                                                                  try {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        var statearr_18878_19177 = state_18564__$1;
                                                                                                                                                                                                        statearr_18878_19177[1] = 58
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        var statearr_18879_19178 = state_18564__$1;
                                                                                                                                                                                                        statearr_18879_19178[1] = 59
                                                                                                                                                                                                      }
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e18876) {
                                                                                                                                                                                                      if(e18876 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e18876;
                                                                                                                                                                                                        var statearr_18877_19179 = state_18564;
                                                                                                                                                                                                        statearr_18877_19179[1] = 17;
                                                                                                                                                                                                        statearr_18877_19179[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e18876;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }catch(e18874) {
                                                                                                                                                                                                    if(e18874 instanceof Error) {
                                                                                                                                                                                                      var ex__5575__auto__ = e18874;
                                                                                                                                                                                                      var statearr_18875_19180 = state_18564;
                                                                                                                                                                                                      statearr_18875_19180[1] = 50;
                                                                                                                                                                                                      statearr_18875_19180[2] = ex__5575__auto__;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        throw e18874;
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        return null
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if(state_val_18565 === 88) {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var inst_18497 = function() {
                                                                                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                                                                                      }();
                                                                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                                                                      var statearr_18882_19181 = state_18564__$1;
                                                                                                                                                                                                      statearr_18882_19181[2] = inst_18497;
                                                                                                                                                                                                      statearr_18882_19181[1] = 90;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e18880) {
                                                                                                                                                                                                      if(e18880 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e18880;
                                                                                                                                                                                                        var statearr_18881_19182 = state_18564;
                                                                                                                                                                                                        statearr_18881_19182[1] = 12;
                                                                                                                                                                                                        statearr_18881_19182[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e18880;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if(state_val_18565 === 25) {
                                                                                                                                                                                                      var inst_18375 = state_18564[2];
                                                                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                                                                      var statearr_18883_19183 = state_18564__$1;
                                                                                                                                                                                                      statearr_18883_19183[2] = inst_18375;
                                                                                                                                                                                                      statearr_18883_19183[1] = 21;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if(state_val_18565 === 57) {
                                                                                                                                                                                                        try {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_18441 = state_18564[2];
                                                                                                                                                                                                            var state_18564__$1 = state_18564;
                                                                                                                                                                                                            var statearr_18888_19184 = state_18564__$1;
                                                                                                                                                                                                            statearr_18888_19184[2] = inst_18441;
                                                                                                                                                                                                            statearr_18888_19184[1] = 49;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e18886) {
                                                                                                                                                                                                            if(e18886 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e18886;
                                                                                                                                                                                                              var statearr_18887_19185 = state_18564;
                                                                                                                                                                                                              statearr_18887_19185[1] = 17;
                                                                                                                                                                                                              statearr_18887_19185[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e18886;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }catch(e18884) {
                                                                                                                                                                                                          if(e18884 instanceof Error) {
                                                                                                                                                                                                            var ex__5575__auto__ = e18884;
                                                                                                                                                                                                            var statearr_18885_19186 = state_18564;
                                                                                                                                                                                                            statearr_18885_19186[1] = 50;
                                                                                                                                                                                                            statearr_18885_19186[2] = ex__5575__auto__;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                              throw e18884;
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              return null
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if(state_val_18565 === 89) {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_18494 = state_18564[18];
                                                                                                                                                                                                            var inst_18499 = function() {
                                                                                                                                                                                                              throw inst_18494;
                                                                                                                                                                                                            }();
                                                                                                                                                                                                            var state_18564__$1 = state_18564;
                                                                                                                                                                                                            var statearr_18891_19187 = state_18564__$1;
                                                                                                                                                                                                            statearr_18891_19187[2] = inst_18499;
                                                                                                                                                                                                            statearr_18891_19187[1] = 90;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e18889) {
                                                                                                                                                                                                            if(e18889 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e18889;
                                                                                                                                                                                                              var statearr_18890_19188 = state_18564;
                                                                                                                                                                                                              statearr_18890_19188[1] = 12;
                                                                                                                                                                                                              statearr_18890_19188[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e18889;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if(state_val_18565 === 26) {
                                                                                                                                                                                                            try {
                                                                                                                                                                                                              var inst_18354 = state_18564[12];
                                                                                                                                                                                                              var inst_18378 = cljs.core._EQ_.call(null, inst_18354, "\ufdd0:user");
                                                                                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                                                                                              if(inst_18378) {
                                                                                                                                                                                                                var statearr_18894_19189 = state_18564__$1;
                                                                                                                                                                                                                statearr_18894_19189[1] = 27
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                var statearr_18895_19190 = state_18564__$1;
                                                                                                                                                                                                                statearr_18895_19190[1] = 28
                                                                                                                                                                                                              }
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }catch(e18892) {
                                                                                                                                                                                                              if(e18892 instanceof Error) {
                                                                                                                                                                                                                var ex__5575__auto__ = e18892;
                                                                                                                                                                                                                var statearr_18893_19191 = state_18564;
                                                                                                                                                                                                                statearr_18893_19191[1] = 22;
                                                                                                                                                                                                                statearr_18893_19191[2] = ex__5575__auto__;
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                  throw e18892;
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if(state_val_18565 === 58) {
                                                                                                                                                                                                              try {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_18436 = function() {
                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                                                                                                  var statearr_18900_19192 = state_18564__$1;
                                                                                                                                                                                                                  statearr_18900_19192[2] = inst_18436;
                                                                                                                                                                                                                  statearr_18900_19192[1] = 60;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e18898) {
                                                                                                                                                                                                                  if(e18898 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e18898;
                                                                                                                                                                                                                    var statearr_18899_19193 = state_18564;
                                                                                                                                                                                                                    statearr_18899_19193[1] = 17;
                                                                                                                                                                                                                    statearr_18899_19193[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e18898;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }catch(e18896) {
                                                                                                                                                                                                                if(e18896 instanceof Error) {
                                                                                                                                                                                                                  var ex__5575__auto__ = e18896;
                                                                                                                                                                                                                  var statearr_18897_19194 = state_18564;
                                                                                                                                                                                                                  statearr_18897_19194[1] = 50;
                                                                                                                                                                                                                  statearr_18897_19194[2] = ex__5575__auto__;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    throw e18896;
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if(state_val_18565 === 90) {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_18501 = state_18564[2];
                                                                                                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                                                                                                  var statearr_18903_19195 = state_18564__$1;
                                                                                                                                                                                                                  statearr_18903_19195[2] = inst_18501;
                                                                                                                                                                                                                  statearr_18903_19195[1] = 86;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e18901) {
                                                                                                                                                                                                                  if(e18901 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e18901;
                                                                                                                                                                                                                    var statearr_18902_19196 = state_18564;
                                                                                                                                                                                                                    statearr_18902_19196[1] = 12;
                                                                                                                                                                                                                    statearr_18902_19196[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e18901;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if(state_val_18565 === 27) {
                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                    var state_18564__$1 = state_18564;
                                                                                                                                                                                                                    var statearr_18906_19197 = state_18564__$1;
                                                                                                                                                                                                                    statearr_18906_19197[2] = null;
                                                                                                                                                                                                                    statearr_18906_19197[1] = 35;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }catch(e18904) {
                                                                                                                                                                                                                    if(e18904 instanceof Error) {
                                                                                                                                                                                                                      var ex__5575__auto__ = e18904;
                                                                                                                                                                                                                      var statearr_18905_19198 = state_18564;
                                                                                                                                                                                                                      statearr_18905_19198[1] = 22;
                                                                                                                                                                                                                      statearr_18905_19198[2] = ex__5575__auto__;
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        throw e18904;
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if(state_val_18565 === 59) {
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                                                                                                        var statearr_18911_19199 = state_18564__$1;
                                                                                                                                                                                                                        statearr_18911_19199[2] = null;
                                                                                                                                                                                                                        statearr_18911_19199[1] = 60;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }catch(e18909) {
                                                                                                                                                                                                                        if(e18909 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e18909;
                                                                                                                                                                                                                          var statearr_18910_19200 = state_18564;
                                                                                                                                                                                                                          statearr_18910_19200[1] = 17;
                                                                                                                                                                                                                          statearr_18910_19200[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e18909;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }catch(e18907) {
                                                                                                                                                                                                                      if(e18907 instanceof Error) {
                                                                                                                                                                                                                        var ex__5575__auto__ = e18907;
                                                                                                                                                                                                                        var statearr_18908_19201 = state_18564;
                                                                                                                                                                                                                        statearr_18908_19201[1] = 50;
                                                                                                                                                                                                                        statearr_18908_19201[2] = ex__5575__auto__;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                          throw e18907;
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if(state_val_18565 === 91) {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var inst_18355 = state_18564[7];
                                                                                                                                                                                                                          var inst_18504 = cljs.core._EQ_.call(null, inst_18355, "\ufdd0:init");
                                                                                                                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                                                                                                                          if(inst_18504) {
                                                                                                                                                                                                                            var statearr_18916_19202 = state_18564__$1;
                                                                                                                                                                                                                            statearr_18916_19202[1] = 92
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_18917_19203 = state_18564__$1;
                                                                                                                                                                                                                            statearr_18917_19203[1] = 93
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e18914) {
                                                                                                                                                                                                                          if(e18914 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e18914;
                                                                                                                                                                                                                            var statearr_18915_19204 = state_18564;
                                                                                                                                                                                                                            statearr_18915_19204[1] = 12;
                                                                                                                                                                                                                            statearr_18915_19204[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e18914;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }catch(e18912) {
                                                                                                                                                                                                                        if(e18912 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e18912;
                                                                                                                                                                                                                          var statearr_18913_19205 = state_18564;
                                                                                                                                                                                                                          statearr_18913_19205[1] = 87;
                                                                                                                                                                                                                          statearr_18913_19205[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e18912;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if(state_val_18565 === 28) {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var state_18564__$1 = state_18564;
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            var statearr_18920_19206 = state_18564__$1;
                                                                                                                                                                                                                            statearr_18920_19206[1] = 42
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_18921_19207 = state_18564__$1;
                                                                                                                                                                                                                            statearr_18921_19207[1] = 43
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e18918) {
                                                                                                                                                                                                                          if(e18918 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e18918;
                                                                                                                                                                                                                            var statearr_18919_19208 = state_18564;
                                                                                                                                                                                                                            statearr_18919_19208[1] = 22;
                                                                                                                                                                                                                            statearr_18919_19208[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e18918;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if(state_val_18565 === 60) {
                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              var inst_18439 = state_18564[2];
                                                                                                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                                                                                                              var statearr_18926_19209 = state_18564__$1;
                                                                                                                                                                                                                              statearr_18926_19209[2] = inst_18439;
                                                                                                                                                                                                                              statearr_18926_19209[1] = 57;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }catch(e18924) {
                                                                                                                                                                                                                              if(e18924 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e18924;
                                                                                                                                                                                                                                var statearr_18925_19210 = state_18564;
                                                                                                                                                                                                                                statearr_18925_19210[1] = 17;
                                                                                                                                                                                                                                statearr_18925_19210[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e18924;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }catch(e18922) {
                                                                                                                                                                                                                            if(e18922 instanceof Error) {
                                                                                                                                                                                                                              var ex__5575__auto__ = e18922;
                                                                                                                                                                                                                              var statearr_18923_19211 = state_18564;
                                                                                                                                                                                                                              statearr_18923_19211[1] = 50;
                                                                                                                                                                                                                              statearr_18923_19211[2] = ex__5575__auto__;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                throw e18922;
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if(state_val_18565 === 92) {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_18506 = chatter_box.user_view_component.initialize.call(null);
                                                                                                                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                var statearr_18931_19212 = state_18564__$1;
                                                                                                                                                                                                                                statearr_18931_19212[2] = inst_18506;
                                                                                                                                                                                                                                statearr_18931_19212[1] = 94;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e18929) {
                                                                                                                                                                                                                                if(e18929 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e18929;
                                                                                                                                                                                                                                  var statearr_18930_19213 = state_18564;
                                                                                                                                                                                                                                  statearr_18930_19213[1] = 12;
                                                                                                                                                                                                                                  statearr_18930_19213[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e18929;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }catch(e18927) {
                                                                                                                                                                                                                              if(e18927 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e18927;
                                                                                                                                                                                                                                var statearr_18928_19214 = state_18564;
                                                                                                                                                                                                                                statearr_18928_19214[1] = 87;
                                                                                                                                                                                                                                statearr_18928_19214[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e18927;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if(state_val_18565 === 29) {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_18410 = state_18564[2];
                                                                                                                                                                                                                                var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                var statearr_18934_19215 = state_18564__$1;
                                                                                                                                                                                                                                statearr_18934_19215[2] = inst_18410;
                                                                                                                                                                                                                                statearr_18934_19215[1] = 21;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e18932) {
                                                                                                                                                                                                                                if(e18932 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e18932;
                                                                                                                                                                                                                                  var statearr_18933_19216 = state_18564;
                                                                                                                                                                                                                                  statearr_18933_19216[1] = 22;
                                                                                                                                                                                                                                  statearr_18933_19216[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e18932;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if(state_val_18565 === 61) {
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                  var statearr_18937_19217 = state_18564__$1;
                                                                                                                                                                                                                                  statearr_18937_19217[2] = null;
                                                                                                                                                                                                                                  statearr_18937_19217[1] = 69;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }catch(e18935) {
                                                                                                                                                                                                                                  if(e18935 instanceof Error) {
                                                                                                                                                                                                                                    var ex__5575__auto__ = e18935;
                                                                                                                                                                                                                                    var statearr_18936_19218 = state_18564;
                                                                                                                                                                                                                                    statearr_18936_19218[1] = 17;
                                                                                                                                                                                                                                    statearr_18936_19218[2] = ex__5575__auto__;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                      throw e18935;
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if(state_val_18565 === 93) {
                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        var statearr_18942_19219 = state_18564__$1;
                                                                                                                                                                                                                                        statearr_18942_19219[1] = 95
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        var statearr_18943_19220 = state_18564__$1;
                                                                                                                                                                                                                                        statearr_18943_19220[1] = 96
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e18940) {
                                                                                                                                                                                                                                      if(e18940 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e18940;
                                                                                                                                                                                                                                        var statearr_18941_19221 = state_18564;
                                                                                                                                                                                                                                        statearr_18941_19221[1] = 12;
                                                                                                                                                                                                                                        statearr_18941_19221[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e18940;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }catch(e18938) {
                                                                                                                                                                                                                                    if(e18938 instanceof Error) {
                                                                                                                                                                                                                                      var ex__5575__auto__ = e18938;
                                                                                                                                                                                                                                      var statearr_18939_19222 = state_18564;
                                                                                                                                                                                                                                      statearr_18939_19222[1] = 87;
                                                                                                                                                                                                                                      statearr_18939_19222[2] = ex__5575__auto__;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        throw e18938;
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if(state_val_18565 === 30) {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var inst_18402 = state_18564[2];
                                                                                                                                                                                                                                      var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                      var statearr_18946_19223 = state_18564__$1;
                                                                                                                                                                                                                                      statearr_18946_19223[2] = inst_18402;
                                                                                                                                                                                                                                      statearr_18946_19223[1] = 29;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e18944) {
                                                                                                                                                                                                                                      if(e18944 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e18944;
                                                                                                                                                                                                                                        var statearr_18945_19224 = state_18564;
                                                                                                                                                                                                                                        statearr_18945_19224[1] = 22;
                                                                                                                                                                                                                                        statearr_18945_19224[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e18944;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if(state_val_18565 === 62) {
                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                        var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          var statearr_18949_19225 = state_18564__$1;
                                                                                                                                                                                                                                          statearr_18949_19225[1] = 76
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          var statearr_18950_19226 = state_18564__$1;
                                                                                                                                                                                                                                          statearr_18950_19226[1] = 77
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }catch(e18947) {
                                                                                                                                                                                                                                        if(e18947 instanceof Error) {
                                                                                                                                                                                                                                          var ex__5575__auto__ = e18947;
                                                                                                                                                                                                                                          var statearr_18948_19227 = state_18564;
                                                                                                                                                                                                                                          statearr_18948_19227[1] = 17;
                                                                                                                                                                                                                                          statearr_18948_19227[2] = ex__5575__auto__;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                            throw e18947;
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if(state_val_18565 === 94) {
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_18514 = state_18564[2];
                                                                                                                                                                                                                                            var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                            var statearr_18955_19228 = state_18564__$1;
                                                                                                                                                                                                                                            statearr_18955_19228[2] = inst_18514;
                                                                                                                                                                                                                                            statearr_18955_19228[1] = 86;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e18953) {
                                                                                                                                                                                                                                            if(e18953 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e18953;
                                                                                                                                                                                                                                              var statearr_18954_19229 = state_18564;
                                                                                                                                                                                                                                              statearr_18954_19229[1] = 12;
                                                                                                                                                                                                                                              statearr_18954_19229[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e18953;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }catch(e18951) {
                                                                                                                                                                                                                                          if(e18951 instanceof Error) {
                                                                                                                                                                                                                                            var ex__5575__auto__ = e18951;
                                                                                                                                                                                                                                            var statearr_18952_19230 = state_18564;
                                                                                                                                                                                                                                            statearr_18952_19230[1] = 87;
                                                                                                                                                                                                                                            statearr_18952_19230[2] = ex__5575__auto__;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                              throw e18951;
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if(state_val_18565 === 31) {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_18380 = state_18564[5];
                                                                                                                                                                                                                                            var inst_18380__$1 = state_18564[2];
                                                                                                                                                                                                                                            var inst_18381 = inst_18380__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                            var state_18564__$1 = function() {
                                                                                                                                                                                                                                              var statearr_18958 = state_18564;
                                                                                                                                                                                                                                              statearr_18958[5] = inst_18380__$1;
                                                                                                                                                                                                                                              return statearr_18958
                                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                                            if(cljs.core.truth_(inst_18381)) {
                                                                                                                                                                                                                                              var statearr_18959_19231 = state_18564__$1;
                                                                                                                                                                                                                                              statearr_18959_19231[1] = 32
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              var statearr_18960_19232 = state_18564__$1;
                                                                                                                                                                                                                                              statearr_18960_19232[1] = 33
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e18956) {
                                                                                                                                                                                                                                            if(e18956 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e18956;
                                                                                                                                                                                                                                              var statearr_18957_19233 = state_18564;
                                                                                                                                                                                                                                              statearr_18957_19233[1] = 22;
                                                                                                                                                                                                                                              statearr_18957_19233[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e18956;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if(state_val_18565 === 63) {
                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                              var inst_18477 = state_18564[2];
                                                                                                                                                                                                                                              var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                              var statearr_18963_19234 = state_18564__$1;
                                                                                                                                                                                                                                              statearr_18963_19234[2] = inst_18477;
                                                                                                                                                                                                                                              statearr_18963_19234[1] = 48;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }catch(e18961) {
                                                                                                                                                                                                                                              if(e18961 instanceof Error) {
                                                                                                                                                                                                                                                var ex__5575__auto__ = e18961;
                                                                                                                                                                                                                                                var statearr_18962_19235 = state_18564;
                                                                                                                                                                                                                                                statearr_18962_19235[1] = 17;
                                                                                                                                                                                                                                                statearr_18962_19235[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                  throw e18961;
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if(state_val_18565 === 95) {
                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                  var inst_18509 = function() {
                                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                                  var state_18564__$1 = state_18564;
                                                                                                                                                                                                                                                  var statearr_18968_19236 = state_18564__$1;
                                                                                                                                                                                                                                                  statearr_18968_19236[2] = inst_18509;
                                                                                                                                                                                                                                                  statearr_18968_19236[1] = 97;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }catch(e18966) {
                                                                                                                                                                                                                                                  if(e18966 instanceof Error) {
                                                                                                                                                                                                                                                    var ex__5575__auto__ = e18966;
                                                                                                                                                                                                                                                    var statearr_18967_19237 = state_18564;
                                                                                                                                                                                                                                                    statearr_18967_19237[1] = 12;
                                                                                                                                                                                                                                                    statearr_18967_19237[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                                      throw e18966;
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }catch(e18964) {
                                                                                                                                                                                                                                                if(e18964 instanceof Error) {
                                                                                                                                                                                                                                                  var ex__5575__auto__ = e18964;
                                                                                                                                                                                                                                                  var statearr_18965_19238 = state_18564;
                                                                                                                                                                                                                                                  statearr_18965_19238[1] = 87;
                                                                                                                                                                                                                                                  statearr_18965_19238[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                    throw e18964;
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_18970 = new Array(19);
            statearr_18970[0] = state_machine__5582__auto__;
            statearr_18970[1] = 1;
            return statearr_18970
          };
          var state_machine__5582__auto____1 = function(state_18564) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_18564);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_18564) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_18564)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_18971 = f__5654__auto__.call(null);
      statearr_18971[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_18971
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.chat_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.chat_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:join"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-success"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:receive-chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:left"], true), null], true);
chatter_box.chat_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.user = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.active_conv = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.create_chat_view_component = function create_chat_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.chat_view_component.t26896 !== "undefined") {
  }else {
    goog.provide("chatter_box.chat_view_component.t26896");
    chatter_box.chat_view_component.t26896 = function(in_ch, create_chat_view_component, meta26897) {
      this.in_ch = in_ch;
      this.create_chat_view_component = create_chat_view_component;
      this.meta26897 = meta26897;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.chat_view_component.t26896.cljs$lang$type = true;
    chatter_box.chat_view_component.t26896.cljs$lang$ctorStr = "chatter-box.chat-view-component/t26896";
    chatter_box.chat_view_component.t26896.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-view-component/t26896")
    };
    chatter_box.chat_view_component.t26896.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.chat_view_component.t26896.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.out_chan, out_ch);
      return chatter_box.chat_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.chat_view_component.t26896.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.chat_view_component.valid_types).call(null, msg)
    };
    chatter_box.chat_view_component.t26896.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.chat_view_component.t26896.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26898) {
      var self__ = this;
      return self__.meta26897
    };
    chatter_box.chat_view_component.t26896.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26898, meta26897__$1) {
      var self__ = this;
      return new chatter_box.chat_view_component.t26896(self__.in_ch, self__.create_chat_view_component, meta26897__$1)
    };
    chatter_box.chat_view_component.__GT_t26896 = function __GT_t26896(in_ch__$1, create_chat_view_component__$1, meta26897) {
      return new chatter_box.chat_view_component.t26896(in_ch__$1, create_chat_view_component__$1, meta26897)
    }
  }
  return new chatter_box.chat_view_component.t26896(in_ch, create_chat_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html[".container"]') == null) {
  var vec__26899_26904 = enfocus.core.replace_ids.call(null, "en8152_", '\x3cdiv id\x3d"chat-container" class\x3d"container"\x3e \n \x3cdiv class\x3d"header"\x3e \n  \x3cul class\x3d"nav nav-pills pull-right"\x3e \n   \x3cli\x3e\x3ca id\x3d"profile-btn" href\x3d"create_user.html"\x3eProfile\x3c/a\x3e\x3c/li\x3e \n   \x3cli\x3e\x3ca id\x3d"logout-btn" href\x3d"login.html"\x3eLogout\x3c/a\x3e\x3c/li\x3e \n  \x3c/ul\x3e \n  \x3ch3 class\x3d"text-muted"\x3eChatter Box\x3c/h3\x3e \n \x3c/div\x3e \n \x3cdiv class\x3d"row marketing"\x3e \n  \x3cdiv class\x3d"col-lg-6"\x3e \n   \x3ch4\x3eLogin Users\x3c/h4\x3e \n   \x3cdiv id\x3d"user-list" style\x3d"height: 300px; overflow: auto"\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"https://1.gravatar.com/avatar/c29cd3a5f182e6de85cbd172fb9b5ab8?d\x3dhttps%3A%2F%2Fidenticons.github.com%2Fcd0f7919b441e9bb94c2308a8a5cfaea.png\x26amp;s\x3d420" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n   \x3c/div\x3e \n  \x3c/div\x3e \n  \x3cdiv class\x3d"col-lg-6"\x3e \n   \x3ch4 id\x3d"conv-name"\x3eCreighton Kirkendall\x3c/h4\x3e \n   \x3cdiv id\x3d"chat-list" style\x3d"height: 300px; overflow: auto"\x3e \n    \x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"remote btn  btn-default btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"right" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"remote btn btn-default btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"right" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n   \x3c/div\x3e \n   \x3cdiv id\x3d"chat-form-div"\x3e \n    \x3cform name\x3d"chat-form" id\x3d"chat-form"\x3e \n     \x3cinput id\x3d"chat-msg" name\x3d"chat-msg" type\x3d"text" class\x3d"form-control" placeholder\x3d"Enter Text" autofocus\x3d"" /\x3e \n     \x3cbutton id\x3d"chat-btn" type\x3d"button" class\x3d"btn"\x3e send \x3c/button\x3e \n    \x3c/form\x3e \n   \x3c/div\x3e \n  \x3c/div\x3e \n \x3c/div\x3e \n \x3cdiv class\x3d"footer"\x3e \n  \x3cp\x3e\x26copy; Creighton Kirkendall 2013\x3c/p\x3e \n \x3c/div\x3e \n\x3c/div\x3e');
  var sym__4174__auto___26905 = cljs.core.nth.call(null, vec__26899_26904, 0, null);
  var txt__4175__auto___26906 = cljs.core.nth.call(null, vec__26899_26904, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___26905, txt__4175__auto___26906], true))
}else {
}
chatter_box.chat_view_component.chat_window_page = function chat_window_page() {
  var vec__26903 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html[".container"]')
  }.call(null);
  var id_sym26900 = cljs.core.nth.call(null, vec__26903, 0, null);
  var pnod26901 = cljs.core.nth.call(null, vec__26903, 1, null);
  var pnod26901__$1 = enfocus.core.create_hidden_dom.call(null, pnod26901);
  enfocus.core.i_at.call(null, id_sym26900, pnod26901__$1, "#chat-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"), "#user-list *", enfocus.core.remove_node.call(null), "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a User"), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym26900, pnod26901__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod26901__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]') == null) {
  var vec__26907_26912 = enfocus.core.replace_ids.call(null, "en8161_", '\x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"https://1.gravatar.com/avatar/c29cd3a5f182e6de85cbd172fb9b5ab8?d\x3dhttps%3A%2F%2Fidenticons.github.com%2Fcd0f7919b441e9bb94c2308a8a5cfaea.png\x26amp;s\x3d420" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e');
  var sym__4174__auto___26913 = cljs.core.nth.call(null, vec__26907_26912, 0, null);
  var txt__4175__auto___26914 = cljs.core.nth.call(null, vec__26907_26912, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___26913, txt__4175__auto___26914], true))
}else {
}
chatter_box.chat_view_component.chat_user_element = function chat_user_element(usr) {
  var vec__26911 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]')
  }.call(null);
  var id_sym26908 = cljs.core.nth.call(null, vec__26911, 0, null);
  var pnod26909 = cljs.core.nth.call(null, vec__26911, 1, null);
  var pnod26909__$1 = enfocus.core.create_hidden_dom.call(null, pnod26909);
  enfocus.core.i_at.call(null, id_sym26908, pnod26909__$1, "button", enfocus.core.do__GT_.call(null, enfocus.core.set_attr.call(null, "\ufdd0:id", [cljs.core.str("id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, usr))].join("")), enfocus.core.set_data.call(null, "\ufdd0:user", usr), enfocus.events.listen.call(null, "\ufdd0:click", function() {
    return chatter_box.chat_view_component.load_conversation.call(null, usr)
  })), "img", enfocus.core.set_attr.call(null, "\ufdd0:src", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, usr)), ".full_name", enfocus.core.content.call(null, [cljs.core.str((new cljs.core.Keyword("\ufdd0:first")).call(null, usr)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0:last")).call(null, usr))].join("")));
  enfocus.core.reset_ids.call(null, id_sym26908, pnod26909__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod26909__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]') == null) {
  var vec__26915_26920 = enfocus.core.replace_ids.call(null, "en8170_", '\x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e');
  var sym__4174__auto___26921 = cljs.core.nth.call(null, vec__26915_26920, 0, null);
  var txt__4175__auto___26922 = cljs.core.nth.call(null, vec__26915_26920, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___26921, txt__4175__auto___26922], true))
}else {
}
chatter_box.chat_view_component.chat_message_element = function chat_message_element(usr, text) {
  var vec__26919 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]')
  }.call(null);
  var id_sym26916 = cljs.core.nth.call(null, vec__26919, 0, null);
  var pnod26917 = cljs.core.nth.call(null, vec__26919, 1, null);
  var pnod26917__$1 = enfocus.core.create_hidden_dom.call(null, pnod26917);
  enfocus.core.i_at.call(null, id_sym26916, pnod26917__$1, "button", enfocus.core.do__GT_.call(null, enfocus.core.remove_class.call(null, "\ufdd0:remote"), enfocus.core.remove_class.call(null, "\ufdd0:local"), enfocus.core.add_class.call(null, cljs.core._EQ_.call(null, usr, cljs.core.deref.call(null, chatter_box.chat_view_component.user)) ? "local" : "remote")), "img", enfocus.core.set_attr.call(null, "\ufdd0:src", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, usr)), ".message", enfocus.core.content.call(null, 
  text));
  enfocus.core.reset_ids.call(null, id_sym26916, pnod26917__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod26917__$1)
};
chatter_box.chat_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, document, "body", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_window_page.call(null)), "#profile-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.nav_update_user)), "#logout-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.logout)), 
  "#chat-btn", enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.send_chat))
};
chatter_box.chat_view_component.navigate = function navigate(p__26923) {
  var map__26925 = p__26923;
  var map__26925__$1 = cljs.core.seq_QMARK_.call(null, map__26925) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26925) : map__26925;
  var page = cljs.core.get.call(null, map__26925__$1, "\ufdd0:key");
  var display = cljs.core._EQ_.call(null, page, "\ufdd0:chat") ? "" : "none";
  return enfocus.core.at.call(null, "#chat-container", enfocus.core.set_style.call(null, "\ufdd0:display", display))
};
chatter_box.chat_view_component.load_conversation = function load_conversation(r_usr) {
  var r_id = [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join("");
  var messages = enfocus.core.from.call(null, r_id, enfocus.core.get_data.call(null, "\ufdd0:msgs"));
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, r_usr);
  return enfocus.core.at.call(null, "#conv-name", enfocus.core.content.call(null, [cljs.core.str((new cljs.core.Keyword("\ufdd0:first")).call(null, r_usr)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0:last")).call(null, r_usr))].join("")), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", ""), "#chat-list", enfocus.core.content.call(null, function() {
    var iter__3470__auto__ = function iter__26930(s__26931) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__26931__$1 = s__26931;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__26931__$1);
          if(temp__4092__auto__) {
            var s__26931__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__26931__$2)) {
              var c__3468__auto__ = cljs.core.chunk_first.call(null, s__26931__$2);
              var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
              var b__26933 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
              if(function() {
                var i__26932 = 0;
                while(true) {
                  if(i__26932 < size__3469__auto__) {
                    var msg = cljs.core._nth.call(null, c__3468__auto__, i__26932);
                    cljs.core.chunk_append.call(null, b__26933, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:local")).call(null, msg), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? chatter_box.chat_view_component.chat_message_element.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user), (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)) : chatter_box.chat_view_component.chat_message_element.call(null, 
                    r_usr, (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)));
                    var G__26934 = i__26932 + 1;
                    i__26932 = G__26934;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26933), iter__26930.call(null, cljs.core.chunk_rest.call(null, s__26931__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__26933), null)
              }
            }else {
              var msg = cljs.core.first.call(null, s__26931__$2);
              return cljs.core.cons.call(null, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:local")).call(null, msg), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? chatter_box.chat_view_component.chat_message_element.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user), (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)) : chatter_box.chat_view_component.chat_message_element.call(null, 
              r_usr, (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)), iter__26930.call(null, cljs.core.rest.call(null, s__26931__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3470__auto__.call(null, messages)
  }()), r_id, enfocus.core.remove_class.call(null, "btn-success"))
};
chatter_box.chat_view_component.user_join = function user_join(r_usr) {
  var id = [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join("");
  return enfocus.core.at.call(null, id, enfocus.core.remove_node.call(null), "#user-list", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_user_element.call(null, r_usr)), id, enfocus.core.set_data.call(null, "\ufdd0:msgs", cljs.core.PersistentVector.EMPTY))
};
chatter_box.chat_view_component.user_left = function user_left(r_usr) {
  enfocus.core.at.call(null, [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join(""), enfocus.core.remove_node.call(null));
  if(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)), (new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))) {
    enfocus.core.at.call(null, "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a User"), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
    return cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, null)
  }else {
    return null
  }
};
chatter_box.chat_view_component.receive_chat = function receive_chat(p__26935) {
  var map__26937 = p__26935;
  var map__26937__$1 = cljs.core.seq_QMARK_.call(null, map__26937) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26937) : map__26937;
  var msg = map__26937__$1;
  var remote = cljs.core.get.call(null, map__26937__$1, "\ufdd0:remote");
  var local = cljs.core.get.call(null, map__26937__$1, "\ufdd0:local");
  var text = cljs.core.get.call(null, map__26937__$1, "\ufdd0:text");
  var rm_but_id = cljs.core._EQ_.call(null, remote, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? [cljs.core.str("#id_"), cljs.core.str(local)].join("") : [cljs.core.str("#id_"), cljs.core.str(remote)].join("");
  var messages = enfocus.core.from.call(null, rm_but_id, enfocus.core.get_data.call(null, "\ufdd0:msgs"));
  enfocus.core.at.call(null, rm_but_id, enfocus.core.set_data.call(null, "\ufdd0:msgs", cljs.core.conj.call(null, messages, msg)));
  if(function() {
    var or__3943__auto__ = cljs.core._EQ_.call(null, remote, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)));
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._EQ_.call(null, local, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)))
    }
  }()) {
    var usr = cljs.core._EQ_.call(null, local, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? cljs.core.deref.call(null, chatter_box.chat_view_component.user) : cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv);
    return enfocus.core.at.call(null, "#chat-list", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_message_element.call(null, usr, text)))
  }else {
    return enfocus.core.at.call(null, rm_but_id, enfocus.core.do__GT_.call(null, enfocus.core.remove_class.call(null, "btn-success"), enfocus.core.add_class.call(null, "btn-success")))
  }
};
chatter_box.chat_view_component.send_chat = function send_chat() {
  var text = enfocus.core.from.call(null, "#chat-msg", enfocus.core.get_prop.call(null, "\ufdd0:value"));
  var msg = chatter_box.protocol.send_chat_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user)), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)), text);
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), msg);
  return chatter_box.chat_view_component.receive_chat.call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, msg))
};
chatter_box.chat_view_component.login_success = function login_success(p__26938) {
  var map__26944 = p__26938;
  var map__26944__$1 = cljs.core.seq_QMARK_.call(null, map__26944) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26944) : map__26944;
  var usr = cljs.core.get.call(null, map__26944__$1, "\ufdd0:user");
  var e_users = cljs.core.get.call(null, map__26944__$1, "\ufdd0:existing-users");
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.user, usr);
  var seq__26945 = cljs.core.seq.call(null, e_users);
  var chunk__26946 = null;
  var count__26947 = 0;
  var i__26948 = 0;
  while(true) {
    if(i__26948 < count__26947) {
      var r_usr = cljs.core._nth.call(null, chunk__26946, i__26948);
      chatter_box.chat_view_component.user_join.call(null, r_usr);
      var G__26949 = seq__26945;
      var G__26950 = chunk__26946;
      var G__26951 = count__26947;
      var G__26952 = i__26948 + 1;
      seq__26945 = G__26949;
      chunk__26946 = G__26950;
      count__26947 = G__26951;
      i__26948 = G__26952;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__26945);
      if(temp__4092__auto__) {
        var seq__26945__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__26945__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__26945__$1);
          var G__26953 = cljs.core.chunk_rest.call(null, seq__26945__$1);
          var G__26954 = c__3501__auto__;
          var G__26955 = cljs.core.count.call(null, c__3501__auto__);
          var G__26956 = 0;
          seq__26945 = G__26953;
          chunk__26946 = G__26954;
          count__26947 = G__26955;
          i__26948 = G__26956;
          continue
        }else {
          var r_usr = cljs.core.first.call(null, seq__26945__$1);
          chatter_box.chat_view_component.user_join.call(null, r_usr);
          var G__26957 = cljs.core.next.call(null, seq__26945__$1);
          var G__26958 = null;
          var G__26959 = 0;
          var G__26960 = 0;
          seq__26945 = G__26957;
          chunk__26946 = G__26958;
          count__26947 = G__26959;
          i__26948 = G__26960;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
chatter_box.chat_view_component.logout = function logout() {
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), chatter_box.protocol.logout_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))));
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.user, null);
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, null);
  return enfocus.core.at.call(null, "#user-list *", enfocus.core.remove_node.call(null), "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a User"))
};
chatter_box.chat_view_component.nav_update_user = function nav_update_user() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:update-user", null))
};
chatter_box.chat_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_27811) {
        var state_val_27812 = state_27811[1];
        if(state_val_27812 === 32) {
          try {
            var inst_27630 = function() {
              throw cljs.core.match.backtrack;
            }();
            var state_27811__$1 = state_27811;
            var statearr_27815_28219 = state_27811__$1;
            statearr_27815_28219[2] = inst_27630;
            statearr_27815_28219[1] = 34;
            return"\ufdd0:recur"
          }catch(e27813) {
            if(e27813 instanceof Error) {
              var ex__5575__auto__ = e27813;
              var statearr_27814_28220 = state_27811;
              statearr_27814_28220[1] = 22;
              statearr_27814_28220[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e27813;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_27812 === 64) {
            try {
              var inst_27601 = state_27811[5];
              var inst_27707 = cljs.core._EQ_.call(null, inst_27601, "\ufdd0:nav");
              var state_27811__$1 = state_27811;
              if(inst_27707) {
                var statearr_27818_28221 = state_27811__$1;
                statearr_27818_28221[1] = 65
              }else {
                var statearr_27819_28222 = state_27811__$1;
                statearr_27819_28222[1] = 66
              }
              return"\ufdd0:recur"
            }catch(e27816) {
              if(e27816 instanceof Error) {
                var ex__5575__auto__ = e27816;
                var statearr_27817_28223 = state_27811;
                statearr_27817_28223[1] = 12;
                statearr_27817_28223[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e27816;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_27812 === 96) {
              try {
                try {
                  var state_27811__$1 = state_27811;
                  var statearr_27824_28224 = state_27811__$1;
                  statearr_27824_28224[2] = null;
                  statearr_27824_28224[1] = 97;
                  return"\ufdd0:recur"
                }catch(e27822) {
                  if(e27822 instanceof Error) {
                    var ex__5575__auto__ = e27822;
                    var statearr_27823_28225 = state_27811;
                    statearr_27823_28225[1] = 12;
                    statearr_27823_28225[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e27822;
                    }else {
                      return null
                    }
                  }
                }
              }catch(e27820) {
                if(e27820 instanceof Error) {
                  var ex__5575__auto__ = e27820;
                  var statearr_27821_28226 = state_27811;
                  statearr_27821_28226[1] = 87;
                  statearr_27821_28226[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e27820;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_27812 === 1) {
                var state_27811__$1 = state_27811;
                var statearr_27825_28227 = state_27811__$1;
                statearr_27825_28227[2] = null;
                statearr_27825_28227[1] = 2;
                return"\ufdd0:recur"
              }else {
                if(state_val_27812 === 33) {
                  try {
                    var inst_27627 = state_27811[6];
                    var inst_27632 = function() {
                      throw inst_27627;
                    }();
                    var state_27811__$1 = state_27811;
                    var statearr_27828_28228 = state_27811__$1;
                    statearr_27828_28228[2] = inst_27632;
                    statearr_27828_28228[1] = 34;
                    return"\ufdd0:recur"
                  }catch(e27826) {
                    if(e27826 instanceof Error) {
                      var ex__5575__auto__ = e27826;
                      var statearr_27827_28229 = state_27811;
                      statearr_27827_28229[1] = 22;
                      statearr_27827_28229[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e27826;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_27812 === 65) {
                    try {
                      var inst_27600 = state_27811[7];
                      var inst_27709 = chatter_box.chat_view_component.navigate.call(null, inst_27600);
                      var state_27811__$1 = state_27811;
                      var statearr_27831_28230 = state_27811__$1;
                      statearr_27831_28230[2] = inst_27709;
                      statearr_27831_28230[1] = 67;
                      return"\ufdd0:recur"
                    }catch(e27829) {
                      if(e27829 instanceof Error) {
                        var ex__5575__auto__ = e27829;
                        var statearr_27830_28231 = state_27811;
                        statearr_27830_28231[1] = 12;
                        statearr_27830_28231[2] = ex__5575__auto__;
                        return"\ufdd0:recur"
                      }else {
                        if("\ufdd0:else") {
                          throw e27829;
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(state_val_27812 === 97) {
                      try {
                        try {
                          var inst_27757 = state_27811[2];
                          var state_27811__$1 = state_27811;
                          var statearr_27836_28232 = state_27811__$1;
                          statearr_27836_28232[2] = inst_27757;
                          statearr_27836_28232[1] = 94;
                          return"\ufdd0:recur"
                        }catch(e27834) {
                          if(e27834 instanceof Error) {
                            var ex__5575__auto__ = e27834;
                            var statearr_27835_28233 = state_27811;
                            statearr_27835_28233[1] = 12;
                            statearr_27835_28233[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e27834;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e27832) {
                        if(e27832 instanceof Error) {
                          var ex__5575__auto__ = e27832;
                          var statearr_27833_28234 = state_27811;
                          statearr_27833_28234[1] = 87;
                          statearr_27833_28234[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e27832;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_27812 === 2) {
                        var state_27811__$1 = state_27811;
                        if(true) {
                          var statearr_27837_28235 = state_27811__$1;
                          statearr_27837_28235[1] = 4
                        }else {
                          var statearr_27838_28236 = state_27811__$1;
                          statearr_27838_28236[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_27812 === 34) {
                          try {
                            var inst_27634 = state_27811[2];
                            var state_27811__$1 = state_27811;
                            var statearr_27841_28237 = state_27811__$1;
                            statearr_27841_28237[2] = inst_27634;
                            statearr_27841_28237[1] = 30;
                            return"\ufdd0:recur"
                          }catch(e27839) {
                            if(e27839 instanceof Error) {
                              var ex__5575__auto__ = e27839;
                              var statearr_27840_28238 = state_27811;
                              statearr_27840_28238[1] = 22;
                              statearr_27840_28238[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e27839;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_27812 === 66) {
                            try {
                              var inst_27601 = state_27811[5];
                              var inst_27711 = cljs.core._EQ_.call(null, inst_27601, "\ufdd0:view");
                              var state_27811__$1 = state_27811;
                              if(inst_27711) {
                                var statearr_27844_28239 = state_27811__$1;
                                statearr_27844_28239[1] = 68
                              }else {
                                var statearr_27845_28240 = state_27811__$1;
                                statearr_27845_28240[1] = 69
                              }
                              return"\ufdd0:recur"
                            }catch(e27842) {
                              if(e27842 instanceof Error) {
                                var ex__5575__auto__ = e27842;
                                var statearr_27843_28241 = state_27811;
                                statearr_27843_28241[1] = 12;
                                statearr_27843_28241[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e27842;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_27812 === 98) {
                              try {
                                var state_27811__$1 = state_27811;
                                var statearr_27848_28242 = state_27811__$1;
                                statearr_27848_28242[2] = null;
                                statearr_27848_28242[1] = 106;
                                return"\ufdd0:recur"
                              }catch(e27846) {
                                if(e27846 instanceof Error) {
                                  var ex__5575__auto__ = e27846;
                                  var statearr_27847_28243 = state_27811;
                                  statearr_27847_28243[1] = 12;
                                  statearr_27847_28243[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e27846;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_27812 === 3) {
                                var inst_27809 = state_27811[2];
                                var state_27811__$1 = state_27811;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27811__$1, inst_27809)
                              }else {
                                if(state_val_27812 === 35) {
                                  try {
                                    try {
                                      var inst_27602 = state_27811[8];
                                      var inst_27637 = cljs.core._EQ_.call(null, inst_27602, "\ufdd0:left");
                                      var state_27811__$1 = state_27811;
                                      if(inst_27637) {
                                        var statearr_27853_28244 = state_27811__$1;
                                        statearr_27853_28244[1] = 36
                                      }else {
                                        var statearr_27854_28245 = state_27811__$1;
                                        statearr_27854_28245[1] = 37
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e27851) {
                                      if(e27851 instanceof Error) {
                                        var ex__5575__auto__ = e27851;
                                        var statearr_27852_28246 = state_27811;
                                        statearr_27852_28246[1] = 22;
                                        statearr_27852_28246[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e27851;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e27849) {
                                    if(e27849 instanceof Error) {
                                      var ex__5575__auto__ = e27849;
                                      var statearr_27850_28247 = state_27811;
                                      statearr_27850_28247[1] = 31;
                                      statearr_27850_28247[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e27849;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_27812 === 67) {
                                    try {
                                      var inst_27801 = state_27811[2];
                                      var state_27811__$1 = state_27811;
                                      var statearr_27857_28248 = state_27811__$1;
                                      statearr_27857_28248[2] = inst_27801;
                                      statearr_27857_28248[1] = 11;
                                      return"\ufdd0:recur"
                                    }catch(e27855) {
                                      if(e27855 instanceof Error) {
                                        var ex__5575__auto__ = e27855;
                                        var statearr_27856_28249 = state_27811;
                                        statearr_27856_28249[1] = 12;
                                        statearr_27856_28249[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e27855;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_27812 === 99) {
                                      try {
                                        var state_27811__$1 = state_27811;
                                        if("\ufdd0:else") {
                                          var statearr_27860_28250 = state_27811__$1;
                                          statearr_27860_28250[1] = 113
                                        }else {
                                          var statearr_27861_28251 = state_27811__$1;
                                          statearr_27861_28251[1] = 114
                                        }
                                        return"\ufdd0:recur"
                                      }catch(e27858) {
                                        if(e27858 instanceof Error) {
                                          var ex__5575__auto__ = e27858;
                                          var statearr_27859_28252 = state_27811;
                                          statearr_27859_28252[1] = 12;
                                          statearr_27859_28252[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e27858;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_27812 === 4) {
                                        var state_27811__$1 = state_27811;
                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27811__$1, 7, in_ch)
                                      }else {
                                        if(state_val_27812 === 36) {
                                          try {
                                            try {
                                              var inst_27603 = state_27811[9];
                                              var inst_27639 = chatter_box.chat_view_component.user_left.call(null, inst_27603);
                                              var state_27811__$1 = state_27811;
                                              var statearr_27866_28253 = state_27811__$1;
                                              statearr_27866_28253[2] = inst_27639;
                                              statearr_27866_28253[1] = 38;
                                              return"\ufdd0:recur"
                                            }catch(e27864) {
                                              if(e27864 instanceof Error) {
                                                var ex__5575__auto__ = e27864;
                                                var statearr_27865_28254 = state_27811;
                                                statearr_27865_28254[1] = 22;
                                                statearr_27865_28254[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e27864;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e27862) {
                                            if(e27862 instanceof Error) {
                                              var ex__5575__auto__ = e27862;
                                              var statearr_27863_28255 = state_27811;
                                              statearr_27863_28255[1] = 31;
                                              statearr_27863_28255[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e27862;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_27812 === 68) {
                                            try {
                                              var state_27811__$1 = state_27811;
                                              var statearr_27869_28256 = state_27811__$1;
                                              statearr_27869_28256[2] = null;
                                              statearr_27869_28256[1] = 76;
                                              return"\ufdd0:recur"
                                            }catch(e27867) {
                                              if(e27867 instanceof Error) {
                                                var ex__5575__auto__ = e27867;
                                                var statearr_27868_28257 = state_27811;
                                                statearr_27868_28257[1] = 12;
                                                statearr_27868_28257[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e27867;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_27812 === 100) {
                                              try {
                                                var inst_27795 = state_27811[2];
                                                var state_27811__$1 = state_27811;
                                                var statearr_27872_28258 = state_27811__$1;
                                                statearr_27872_28258[2] = inst_27795;
                                                statearr_27872_28258[1] = 85;
                                                return"\ufdd0:recur"
                                              }catch(e27870) {
                                                if(e27870 instanceof Error) {
                                                  var ex__5575__auto__ = e27870;
                                                  var statearr_27871_28259 = state_27811;
                                                  statearr_27871_28259[1] = 12;
                                                  statearr_27871_28259[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e27870;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_27812 === 5) {
                                                var state_27811__$1 = state_27811;
                                                var statearr_27873_28260 = state_27811__$1;
                                                statearr_27873_28260[2] = null;
                                                statearr_27873_28260[1] = 6;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_27812 === 37) {
                                                  try {
                                                    try {
                                                      var state_27811__$1 = state_27811;
                                                      if("\ufdd0:else") {
                                                        var statearr_27878_28261 = state_27811__$1;
                                                        statearr_27878_28261[1] = 39
                                                      }else {
                                                        var statearr_27879_28262 = state_27811__$1;
                                                        statearr_27879_28262[1] = 40
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e27876) {
                                                      if(e27876 instanceof Error) {
                                                        var ex__5575__auto__ = e27876;
                                                        var statearr_27877_28263 = state_27811;
                                                        statearr_27877_28263[1] = 22;
                                                        statearr_27877_28263[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e27876;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }catch(e27874) {
                                                    if(e27874 instanceof Error) {
                                                      var ex__5575__auto__ = e27874;
                                                      var statearr_27875_28264 = state_27811;
                                                      statearr_27875_28264[1] = 31;
                                                      statearr_27875_28264[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e27874;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_27812 === 69) {
                                                    try {
                                                      var inst_27601 = state_27811[5];
                                                      var inst_27737 = cljs.core._EQ_.call(null, inst_27601, "\ufdd0:security");
                                                      var state_27811__$1 = state_27811;
                                                      if(inst_27737) {
                                                        var statearr_27882_28265 = state_27811__$1;
                                                        statearr_27882_28265[1] = 83
                                                      }else {
                                                        var statearr_27883_28266 = state_27811__$1;
                                                        statearr_27883_28266[1] = 84
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e27880) {
                                                      if(e27880 instanceof Error) {
                                                        var ex__5575__auto__ = e27880;
                                                        var statearr_27881_28267 = state_27811;
                                                        statearr_27881_28267[1] = 12;
                                                        statearr_27881_28267[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e27880;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_27812 === 101) {
                                                      try {
                                                        var inst_27787 = state_27811[2];
                                                        var state_27811__$1 = state_27811;
                                                        var statearr_27886_28268 = state_27811__$1;
                                                        statearr_27886_28268[2] = inst_27787;
                                                        statearr_27886_28268[1] = 100;
                                                        return"\ufdd0:recur"
                                                      }catch(e27884) {
                                                        if(e27884 instanceof Error) {
                                                          var ex__5575__auto__ = e27884;
                                                          var statearr_27885_28269 = state_27811;
                                                          statearr_27885_28269[1] = 12;
                                                          statearr_27885_28269[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e27884;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_27812 === 6) {
                                                        var inst_27807 = state_27811[2];
                                                        var state_27811__$1 = state_27811;
                                                        var statearr_27887_28270 = state_27811__$1;
                                                        statearr_27887_28270[2] = inst_27807;
                                                        statearr_27887_28270[1] = 3;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_27812 === 38) {
                                                          try {
                                                            try {
                                                              var inst_27647 = state_27811[2];
                                                              var state_27811__$1 = state_27811;
                                                              var statearr_27892_28271 = state_27811__$1;
                                                              statearr_27892_28271[2] = inst_27647;
                                                              statearr_27892_28271[1] = 30;
                                                              return"\ufdd0:recur"
                                                            }catch(e27890) {
                                                              if(e27890 instanceof Error) {
                                                                var ex__5575__auto__ = e27890;
                                                                var statearr_27891_28272 = state_27811;
                                                                statearr_27891_28272[1] = 22;
                                                                statearr_27891_28272[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e27890;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }catch(e27888) {
                                                            if(e27888 instanceof Error) {
                                                              var ex__5575__auto__ = e27888;
                                                              var statearr_27889_28273 = state_27811;
                                                              statearr_27889_28273[1] = 31;
                                                              statearr_27889_28273[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e27888;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_27812 === 70) {
                                                            try {
                                                              var inst_27799 = state_27811[2];
                                                              var state_27811__$1 = state_27811;
                                                              var statearr_27895_28274 = state_27811__$1;
                                                              statearr_27895_28274[2] = inst_27799;
                                                              statearr_27895_28274[1] = 67;
                                                              return"\ufdd0:recur"
                                                            }catch(e27893) {
                                                              if(e27893 instanceof Error) {
                                                                var ex__5575__auto__ = e27893;
                                                                var statearr_27894_28275 = state_27811;
                                                                statearr_27894_28275[1] = 12;
                                                                statearr_27894_28275[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e27893;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_27812 === 102) {
                                                              try {
                                                                var inst_27765 = state_27811[10];
                                                                var inst_27765__$1 = state_27811[2];
                                                                var inst_27766 = inst_27765__$1 === cljs.core.match.backtrack;
                                                                var state_27811__$1 = function() {
                                                                  var statearr_27898 = state_27811;
                                                                  statearr_27898[10] = inst_27765__$1;
                                                                  return statearr_27898
                                                                }();
                                                                if(cljs.core.truth_(inst_27766)) {
                                                                  var statearr_27899_28276 = state_27811__$1;
                                                                  statearr_27899_28276[1] = 103
                                                                }else {
                                                                  var statearr_27900_28277 = state_27811__$1;
                                                                  statearr_27900_28277[1] = 104
                                                                }
                                                                return"\ufdd0:recur"
                                                              }catch(e27896) {
                                                                if(e27896 instanceof Error) {
                                                                  var ex__5575__auto__ = e27896;
                                                                  var statearr_27897_28278 = state_27811;
                                                                  statearr_27897_28278[1] = 12;
                                                                  statearr_27897_28278[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e27896;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_27812 === 7) {
                                                                var inst_27594 = state_27811[11];
                                                                var inst_27594__$1 = state_27811[2];
                                                                var inst_27595 = cljs.core.seq_QMARK_.call(null, inst_27594__$1);
                                                                var state_27811__$1 = function() {
                                                                  var statearr_27901 = state_27811;
                                                                  statearr_27901[11] = inst_27594__$1;
                                                                  return statearr_27901
                                                                }();
                                                                if(inst_27595) {
                                                                  var statearr_27902_28279 = state_27811__$1;
                                                                  statearr_27902_28279[1] = 8
                                                                }else {
                                                                  var statearr_27903_28280 = state_27811__$1;
                                                                  statearr_27903_28280[1] = 9
                                                                }
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if(state_val_27812 === 39) {
                                                                  try {
                                                                    try {
                                                                      var inst_27642 = function() {
                                                                        throw cljs.core.match.backtrack;
                                                                      }();
                                                                      var state_27811__$1 = state_27811;
                                                                      var statearr_27908_28281 = state_27811__$1;
                                                                      statearr_27908_28281[2] = inst_27642;
                                                                      statearr_27908_28281[1] = 41;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e27906) {
                                                                      if(e27906 instanceof Error) {
                                                                        var ex__5575__auto__ = e27906;
                                                                        var statearr_27907_28282 = state_27811;
                                                                        statearr_27907_28282[1] = 22;
                                                                        statearr_27907_28282[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e27906;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e27904) {
                                                                    if(e27904 instanceof Error) {
                                                                      var ex__5575__auto__ = e27904;
                                                                      var statearr_27905_28283 = state_27811;
                                                                      statearr_27905_28283[1] = 31;
                                                                      statearr_27905_28283[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e27904;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_27812 === 71) {
                                                                    try {
                                                                      var inst_27735 = state_27811[2];
                                                                      var state_27811__$1 = state_27811;
                                                                      var statearr_27911_28284 = state_27811__$1;
                                                                      statearr_27911_28284[2] = inst_27735;
                                                                      statearr_27911_28284[1] = 70;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e27909) {
                                                                      if(e27909 instanceof Error) {
                                                                        var ex__5575__auto__ = e27909;
                                                                        var statearr_27910_28285 = state_27811;
                                                                        statearr_27910_28285[1] = 12;
                                                                        statearr_27910_28285[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e27909;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_27812 === 103) {
                                                                      try {
                                                                        var inst_27768 = function() {
                                                                          throw cljs.core.match.backtrack;
                                                                        }();
                                                                        var state_27811__$1 = state_27811;
                                                                        var statearr_27914_28286 = state_27811__$1;
                                                                        statearr_27914_28286[2] = inst_27768;
                                                                        statearr_27914_28286[1] = 105;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e27912) {
                                                                        if(e27912 instanceof Error) {
                                                                          var ex__5575__auto__ = e27912;
                                                                          var statearr_27913_28287 = state_27811;
                                                                          statearr_27913_28287[1] = 12;
                                                                          statearr_27913_28287[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e27912;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_27812 === 8) {
                                                                        var inst_27594 = state_27811[11];
                                                                        var inst_27597 = cljs.core.apply.call(null, cljs.core.hash_map, inst_27594);
                                                                        var state_27811__$1 = state_27811;
                                                                        var statearr_27915_28288 = state_27811__$1;
                                                                        statearr_27915_28288[2] = inst_27597;
                                                                        statearr_27915_28288[1] = 10;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if(state_val_27812 === 40) {
                                                                          try {
                                                                            try {
                                                                              var state_27811__$1 = state_27811;
                                                                              var statearr_27920_28289 = state_27811__$1;
                                                                              statearr_27920_28289[2] = null;
                                                                              statearr_27920_28289[1] = 41;
                                                                              return"\ufdd0:recur"
                                                                            }catch(e27918) {
                                                                              if(e27918 instanceof Error) {
                                                                                var ex__5575__auto__ = e27918;
                                                                                var statearr_27919_28290 = state_27811;
                                                                                statearr_27919_28290[1] = 22;
                                                                                statearr_27919_28290[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e27918;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }catch(e27916) {
                                                                            if(e27916 instanceof Error) {
                                                                              var ex__5575__auto__ = e27916;
                                                                              var statearr_27917_28291 = state_27811;
                                                                              statearr_27917_28291[1] = 31;
                                                                              statearr_27917_28291[2] = ex__5575__auto__;
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if("\ufdd0:else") {
                                                                                throw e27916;
                                                                              }else {
                                                                                return null
                                                                              }
                                                                            }
                                                                          }
                                                                        }else {
                                                                          if(state_val_27812 === 72) {
                                                                            try {
                                                                              var inst_27713 = state_27811[12];
                                                                              var inst_27713__$1 = state_27811[2];
                                                                              var inst_27714 = inst_27713__$1 === cljs.core.match.backtrack;
                                                                              var state_27811__$1 = function() {
                                                                                var statearr_27923 = state_27811;
                                                                                statearr_27923[12] = inst_27713__$1;
                                                                                return statearr_27923
                                                                              }();
                                                                              if(cljs.core.truth_(inst_27714)) {
                                                                                var statearr_27924_28292 = state_27811__$1;
                                                                                statearr_27924_28292[1] = 73
                                                                              }else {
                                                                                var statearr_27925_28293 = state_27811__$1;
                                                                                statearr_27925_28293[1] = 74
                                                                              }
                                                                              return"\ufdd0:recur"
                                                                            }catch(e27921) {
                                                                              if(e27921 instanceof Error) {
                                                                                var ex__5575__auto__ = e27921;
                                                                                var statearr_27922_28294 = state_27811;
                                                                                statearr_27922_28294[1] = 12;
                                                                                statearr_27922_28294[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e27921;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_27812 === 104) {
                                                                              try {
                                                                                var inst_27765 = state_27811[10];
                                                                                var inst_27770 = function() {
                                                                                  throw inst_27765;
                                                                                }();
                                                                                var state_27811__$1 = state_27811;
                                                                                var statearr_27928_28295 = state_27811__$1;
                                                                                statearr_27928_28295[2] = inst_27770;
                                                                                statearr_27928_28295[1] = 105;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e27926) {
                                                                                if(e27926 instanceof Error) {
                                                                                  var ex__5575__auto__ = e27926;
                                                                                  var statearr_27927_28296 = state_27811;
                                                                                  statearr_27927_28296[1] = 12;
                                                                                  statearr_27927_28296[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e27926;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_27812 === 9) {
                                                                                var inst_27594 = state_27811[11];
                                                                                var state_27811__$1 = state_27811;
                                                                                var statearr_27929_28297 = state_27811__$1;
                                                                                statearr_27929_28297[2] = inst_27594;
                                                                                statearr_27929_28297[1] = 10;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_27812 === 41) {
                                                                                  try {
                                                                                    try {
                                                                                      var inst_27645 = state_27811[2];
                                                                                      var state_27811__$1 = state_27811;
                                                                                      var statearr_27934_28298 = state_27811__$1;
                                                                                      statearr_27934_28298[2] = inst_27645;
                                                                                      statearr_27934_28298[1] = 38;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e27932) {
                                                                                      if(e27932 instanceof Error) {
                                                                                        var ex__5575__auto__ = e27932;
                                                                                        var statearr_27933_28299 = state_27811;
                                                                                        statearr_27933_28299[1] = 22;
                                                                                        statearr_27933_28299[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e27932;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }catch(e27930) {
                                                                                    if(e27930 instanceof Error) {
                                                                                      var ex__5575__auto__ = e27930;
                                                                                      var statearr_27931_28300 = state_27811;
                                                                                      statearr_27931_28300[1] = 31;
                                                                                      statearr_27931_28300[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e27930;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_27812 === 73) {
                                                                                    try {
                                                                                      var inst_27716 = function() {
                                                                                        throw cljs.core.match.backtrack;
                                                                                      }();
                                                                                      var state_27811__$1 = state_27811;
                                                                                      var statearr_27937_28301 = state_27811__$1;
                                                                                      statearr_27937_28301[2] = inst_27716;
                                                                                      statearr_27937_28301[1] = 75;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e27935) {
                                                                                      if(e27935 instanceof Error) {
                                                                                        var ex__5575__auto__ = e27935;
                                                                                        var statearr_27936_28302 = state_27811;
                                                                                        statearr_27936_28302[1] = 12;
                                                                                        statearr_27936_28302[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e27935;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_27812 === 105) {
                                                                                      try {
                                                                                        var inst_27772 = state_27811[2];
                                                                                        var state_27811__$1 = state_27811;
                                                                                        var statearr_27940_28303 = state_27811__$1;
                                                                                        statearr_27940_28303[2] = inst_27772;
                                                                                        statearr_27940_28303[1] = 101;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e27938) {
                                                                                        if(e27938 instanceof Error) {
                                                                                          var ex__5575__auto__ = e27938;
                                                                                          var statearr_27939_28304 = state_27811;
                                                                                          statearr_27939_28304[1] = 12;
                                                                                          statearr_27939_28304[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e27938;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_27812 === 10) {
                                                                                        var inst_27600 = state_27811[7];
                                                                                        var inst_27600__$1 = state_27811[2];
                                                                                        var inst_27601 = cljs.core.get.call(null, inst_27600__$1, "\ufdd0:area");
                                                                                        var inst_27602 = cljs.core.get.call(null, inst_27600__$1, "\ufdd0:key");
                                                                                        var inst_27603 = cljs.core.get.call(null, inst_27600__$1, "\ufdd0:data");
                                                                                        var state_27811__$1 = function() {
                                                                                          var statearr_27941 = state_27811;
                                                                                          statearr_27941[9] = inst_27603;
                                                                                          statearr_27941[8] = inst_27602;
                                                                                          statearr_27941[5] = inst_27601;
                                                                                          statearr_27941[7] = inst_27600__$1;
                                                                                          return statearr_27941
                                                                                        }();
                                                                                        var statearr_27942_28305 = state_27811__$1;
                                                                                        statearr_27942_28305[2] = null;
                                                                                        statearr_27942_28305[1] = 64;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_27812 === 42) {
                                                                                          try {
                                                                                            var inst_27652 = function() {
                                                                                              throw cljs.core.match.backtrack;
                                                                                            }();
                                                                                            var state_27811__$1 = state_27811;
                                                                                            var statearr_27945_28306 = state_27811__$1;
                                                                                            statearr_27945_28306[2] = inst_27652;
                                                                                            statearr_27945_28306[1] = 44;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e27943) {
                                                                                            if(e27943 instanceof Error) {
                                                                                              var ex__5575__auto__ = e27943;
                                                                                              var statearr_27944_28307 = state_27811;
                                                                                              statearr_27944_28307[1] = 22;
                                                                                              statearr_27944_28307[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e27943;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_27812 === 74) {
                                                                                            try {
                                                                                              var inst_27713 = state_27811[12];
                                                                                              var inst_27718 = function() {
                                                                                                throw inst_27713;
                                                                                              }();
                                                                                              var state_27811__$1 = state_27811;
                                                                                              var statearr_27948_28308 = state_27811__$1;
                                                                                              statearr_27948_28308[2] = inst_27718;
                                                                                              statearr_27948_28308[1] = 75;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e27946) {
                                                                                              if(e27946 instanceof Error) {
                                                                                                var ex__5575__auto__ = e27946;
                                                                                                var statearr_27947_28309 = state_27811;
                                                                                                statearr_27947_28309[1] = 12;
                                                                                                statearr_27947_28309[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e27946;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_27812 === 106) {
                                                                                              try {
                                                                                                try {
                                                                                                  var inst_27602 = state_27811[8];
                                                                                                  var inst_27775 = cljs.core._EQ_.call(null, inst_27602, "\ufdd0:receive-chat");
                                                                                                  var state_27811__$1 = state_27811;
                                                                                                  if(inst_27775) {
                                                                                                    var statearr_27953_28310 = state_27811__$1;
                                                                                                    statearr_27953_28310[1] = 107
                                                                                                  }else {
                                                                                                    var statearr_27954_28311 = state_27811__$1;
                                                                                                    statearr_27954_28311[1] = 108
                                                                                                  }
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e27951) {
                                                                                                  if(e27951 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e27951;
                                                                                                    var statearr_27952_28312 = state_27811;
                                                                                                    statearr_27952_28312[1] = 12;
                                                                                                    statearr_27952_28312[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e27951;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }catch(e27949) {
                                                                                                if(e27949 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e27949;
                                                                                                  var statearr_27950_28313 = state_27811;
                                                                                                  statearr_27950_28313[1] = 102;
                                                                                                  statearr_27950_28313[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e27949;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_27812 === 11) {
                                                                                                var inst_27803 = state_27811[2];
                                                                                                var state_27811__$1 = function() {
                                                                                                  var statearr_27955 = state_27811;
                                                                                                  statearr_27955[13] = inst_27803;
                                                                                                  return statearr_27955
                                                                                                }();
                                                                                                var statearr_27956_28314 = state_27811__$1;
                                                                                                statearr_27956_28314[2] = null;
                                                                                                statearr_27956_28314[1] = 2;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if(state_val_27812 === 43) {
                                                                                                  try {
                                                                                                    var state_27811__$1 = state_27811;
                                                                                                    var statearr_27959_28315 = state_27811__$1;
                                                                                                    statearr_27959_28315[2] = null;
                                                                                                    statearr_27959_28315[1] = 44;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e27957) {
                                                                                                    if(e27957 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e27957;
                                                                                                      var statearr_27958_28316 = state_27811;
                                                                                                      statearr_27958_28316[1] = 22;
                                                                                                      statearr_27958_28316[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e27957;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }else {
                                                                                                  if(state_val_27812 === 75) {
                                                                                                    try {
                                                                                                      var inst_27720 = state_27811[2];
                                                                                                      var state_27811__$1 = state_27811;
                                                                                                      var statearr_27962_28317 = state_27811__$1;
                                                                                                      statearr_27962_28317[2] = inst_27720;
                                                                                                      statearr_27962_28317[1] = 71;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }catch(e27960) {
                                                                                                      if(e27960 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e27960;
                                                                                                        var statearr_27961_28318 = state_27811;
                                                                                                        statearr_27961_28318[1] = 12;
                                                                                                        statearr_27961_28318[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e27960;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_27812 === 107) {
                                                                                                      try {
                                                                                                        try {
                                                                                                          var inst_27603 = state_27811[9];
                                                                                                          var inst_27777 = chatter_box.chat_view_component.receive_chat.call(null, inst_27603);
                                                                                                          var state_27811__$1 = state_27811;
                                                                                                          var statearr_27967_28319 = state_27811__$1;
                                                                                                          statearr_27967_28319[2] = inst_27777;
                                                                                                          statearr_27967_28319[1] = 109;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e27965) {
                                                                                                          if(e27965 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e27965;
                                                                                                            var statearr_27966_28320 = state_27811;
                                                                                                            statearr_27966_28320[1] = 12;
                                                                                                            statearr_27966_28320[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e27965;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }catch(e27963) {
                                                                                                        if(e27963 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e27963;
                                                                                                          var statearr_27964_28321 = state_27811;
                                                                                                          statearr_27964_28321[1] = 102;
                                                                                                          statearr_27964_28321[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e27963;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }else {
                                                                                                      if(state_val_27812 === 12) {
                                                                                                        var inst_27607 = state_27811[14];
                                                                                                        var inst_27607__$1 = state_27811[2];
                                                                                                        var inst_27608 = inst_27607__$1 === cljs.core.match.backtrack;
                                                                                                        var state_27811__$1 = function() {
                                                                                                          var statearr_27968 = state_27811;
                                                                                                          statearr_27968[14] = inst_27607__$1;
                                                                                                          return statearr_27968
                                                                                                        }();
                                                                                                        if(cljs.core.truth_(inst_27608)) {
                                                                                                          var statearr_27969_28322 = state_27811__$1;
                                                                                                          statearr_27969_28322[1] = 13
                                                                                                        }else {
                                                                                                          var statearr_27970_28323 = state_27811__$1;
                                                                                                          statearr_27970_28323[1] = 14
                                                                                                        }
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if(state_val_27812 === 44) {
                                                                                                          try {
                                                                                                            var inst_27655 = state_27811[2];
                                                                                                            var state_27811__$1 = state_27811;
                                                                                                            var statearr_27973_28324 = state_27811__$1;
                                                                                                            statearr_27973_28324[2] = inst_27655;
                                                                                                            statearr_27973_28324[1] = 29;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e27971) {
                                                                                                            if(e27971 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e27971;
                                                                                                              var statearr_27972_28325 = state_27811;
                                                                                                              statearr_27972_28325[1] = 22;
                                                                                                              statearr_27972_28325[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e27971;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_27812 === 76) {
                                                                                                            try {
                                                                                                              try {
                                                                                                                var inst_27602 = state_27811[8];
                                                                                                                var inst_27723 = cljs.core._EQ_.call(null, inst_27602, "\ufdd0:init");
                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                if(inst_27723) {
                                                                                                                  var statearr_27978_28326 = state_27811__$1;
                                                                                                                  statearr_27978_28326[1] = 77
                                                                                                                }else {
                                                                                                                  var statearr_27979_28327 = state_27811__$1;
                                                                                                                  statearr_27979_28327[1] = 78
                                                                                                                }
                                                                                                                return"\ufdd0:recur"
                                                                                                              }catch(e27976) {
                                                                                                                if(e27976 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e27976;
                                                                                                                  var statearr_27977_28328 = state_27811;
                                                                                                                  statearr_27977_28328[1] = 12;
                                                                                                                  statearr_27977_28328[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e27976;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }catch(e27974) {
                                                                                                              if(e27974 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e27974;
                                                                                                                var statearr_27975_28329 = state_27811;
                                                                                                                statearr_27975_28329[1] = 72;
                                                                                                                statearr_27975_28329[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e27974;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_27812 === 108) {
                                                                                                              try {
                                                                                                                try {
                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    var statearr_27984_28330 = state_27811__$1;
                                                                                                                    statearr_27984_28330[1] = 110
                                                                                                                  }else {
                                                                                                                    var statearr_27985_28331 = state_27811__$1;
                                                                                                                    statearr_27985_28331[1] = 111
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e27982) {
                                                                                                                  if(e27982 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e27982;
                                                                                                                    var statearr_27983_28332 = state_27811;
                                                                                                                    statearr_27983_28332[1] = 12;
                                                                                                                    statearr_27983_28332[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e27982;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }catch(e27980) {
                                                                                                                if(e27980 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e27980;
                                                                                                                  var statearr_27981_28333 = state_27811;
                                                                                                                  statearr_27981_28333[1] = 102;
                                                                                                                  statearr_27981_28333[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e27980;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_27812 === 13) {
                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                var statearr_27986_28334 = state_27811__$1;
                                                                                                                statearr_27986_28334[2] = null;
                                                                                                                statearr_27986_28334[1] = 45;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if(state_val_27812 === 45) {
                                                                                                                  try {
                                                                                                                    var inst_27601 = state_27811[5];
                                                                                                                    var inst_27666 = cljs.core._EQ_.call(null, inst_27601, "\ufdd0:messaging");
                                                                                                                    var state_27811__$1 = state_27811;
                                                                                                                    if(inst_27666) {
                                                                                                                      var statearr_27989_28335 = state_27811__$1;
                                                                                                                      statearr_27989_28335[1] = 46
                                                                                                                    }else {
                                                                                                                      var statearr_27990_28336 = state_27811__$1;
                                                                                                                      statearr_27990_28336[1] = 47
                                                                                                                    }
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e27987) {
                                                                                                                    if(e27987 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e27987;
                                                                                                                      var statearr_27988_28337 = state_27811;
                                                                                                                      statearr_27988_28337[1] = 17;
                                                                                                                      statearr_27988_28337[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e27987;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_27812 === 77) {
                                                                                                                    try {
                                                                                                                      try {
                                                                                                                        var inst_27725 = chatter_box.chat_view_component.initialize.call(null);
                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                        var statearr_27995_28338 = state_27811__$1;
                                                                                                                        statearr_27995_28338[2] = inst_27725;
                                                                                                                        statearr_27995_28338[1] = 79;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e27993) {
                                                                                                                        if(e27993 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e27993;
                                                                                                                          var statearr_27994_28339 = state_27811;
                                                                                                                          statearr_27994_28339[1] = 12;
                                                                                                                          statearr_27994_28339[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e27993;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }catch(e27991) {
                                                                                                                      if(e27991 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e27991;
                                                                                                                        var statearr_27992_28340 = state_27811;
                                                                                                                        statearr_27992_28340[1] = 72;
                                                                                                                        statearr_27992_28340[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e27991;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_27812 === 109) {
                                                                                                                      try {
                                                                                                                        try {
                                                                                                                          var inst_27785 = state_27811[2];
                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                          var statearr_28000_28341 = state_27811__$1;
                                                                                                                          statearr_28000_28341[2] = inst_27785;
                                                                                                                          statearr_28000_28341[1] = 101;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e27998) {
                                                                                                                          if(e27998 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e27998;
                                                                                                                            var statearr_27999_28342 = state_27811;
                                                                                                                            statearr_27999_28342[1] = 12;
                                                                                                                            statearr_27999_28342[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e27998;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }catch(e27996) {
                                                                                                                        if(e27996 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e27996;
                                                                                                                          var statearr_27997_28343 = state_27811;
                                                                                                                          statearr_27997_28343[1] = 102;
                                                                                                                          statearr_27997_28343[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e27996;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_27812 === 14) {
                                                                                                                        var inst_27607 = state_27811[14];
                                                                                                                        var inst_27702 = function() {
                                                                                                                          throw inst_27607;
                                                                                                                        }();
                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                        var statearr_28001_28344 = state_27811__$1;
                                                                                                                        statearr_28001_28344[2] = inst_27702;
                                                                                                                        statearr_28001_28344[1] = 15;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if(state_val_27812 === 46) {
                                                                                                                          try {
                                                                                                                            var state_27811__$1 = state_27811;
                                                                                                                            var statearr_28004_28345 = state_27811__$1;
                                                                                                                            statearr_28004_28345[2] = null;
                                                                                                                            statearr_28004_28345[1] = 54;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e28002) {
                                                                                                                            if(e28002 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e28002;
                                                                                                                              var statearr_28003_28346 = state_27811;
                                                                                                                              statearr_28003_28346[1] = 17;
                                                                                                                              statearr_28003_28346[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e28002;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_27812 === 78) {
                                                                                                                            try {
                                                                                                                              try {
                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  var statearr_28009_28347 = state_27811__$1;
                                                                                                                                  statearr_28009_28347[1] = 80
                                                                                                                                }else {
                                                                                                                                  var statearr_28010_28348 = state_27811__$1;
                                                                                                                                  statearr_28010_28348[1] = 81
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e28007) {
                                                                                                                                if(e28007 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e28007;
                                                                                                                                  var statearr_28008_28349 = state_27811;
                                                                                                                                  statearr_28008_28349[1] = 12;
                                                                                                                                  statearr_28008_28349[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e28007;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }catch(e28005) {
                                                                                                                              if(e28005 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e28005;
                                                                                                                                var statearr_28006_28350 = state_27811;
                                                                                                                                statearr_28006_28350[1] = 72;
                                                                                                                                statearr_28006_28350[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e28005;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_27812 === 110) {
                                                                                                                              try {
                                                                                                                                try {
                                                                                                                                  var inst_27780 = function() {
                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                  }();
                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                  var statearr_28015_28351 = state_27811__$1;
                                                                                                                                  statearr_28015_28351[2] = inst_27780;
                                                                                                                                  statearr_28015_28351[1] = 112;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e28013) {
                                                                                                                                  if(e28013 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e28013;
                                                                                                                                    var statearr_28014_28352 = state_27811;
                                                                                                                                    statearr_28014_28352[1] = 12;
                                                                                                                                    statearr_28014_28352[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e28013;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }catch(e28011) {
                                                                                                                                if(e28011 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e28011;
                                                                                                                                  var statearr_28012_28353 = state_27811;
                                                                                                                                  statearr_28012_28353[1] = 102;
                                                                                                                                  statearr_28012_28353[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e28011;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_27812 === 15) {
                                                                                                                                var inst_27704 = state_27811[2];
                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                var statearr_28016_28354 = state_27811__$1;
                                                                                                                                statearr_28016_28354[2] = inst_27704;
                                                                                                                                statearr_28016_28354[1] = 11;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if(state_val_27812 === 47) {
                                                                                                                                  try {
                                                                                                                                    var state_27811__$1 = state_27811;
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      var statearr_28019_28355 = state_27811__$1;
                                                                                                                                      statearr_28019_28355[1] = 61
                                                                                                                                    }else {
                                                                                                                                      var statearr_28020_28356 = state_27811__$1;
                                                                                                                                      statearr_28020_28356[1] = 62
                                                                                                                                    }
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e28017) {
                                                                                                                                    if(e28017 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e28017;
                                                                                                                                      var statearr_28018_28357 = state_27811;
                                                                                                                                      statearr_28018_28357[1] = 17;
                                                                                                                                      statearr_28018_28357[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e28017;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_27812 === 79) {
                                                                                                                                    try {
                                                                                                                                      try {
                                                                                                                                        var inst_27733 = state_27811[2];
                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                        var statearr_28025_28358 = state_27811__$1;
                                                                                                                                        statearr_28025_28358[2] = inst_27733;
                                                                                                                                        statearr_28025_28358[1] = 71;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e28023) {
                                                                                                                                        if(e28023 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e28023;
                                                                                                                                          var statearr_28024_28359 = state_27811;
                                                                                                                                          statearr_28024_28359[1] = 12;
                                                                                                                                          statearr_28024_28359[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e28023;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }catch(e28021) {
                                                                                                                                      if(e28021 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e28021;
                                                                                                                                        var statearr_28022_28360 = state_27811;
                                                                                                                                        statearr_28022_28360[1] = 72;
                                                                                                                                        statearr_28022_28360[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e28021;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_27812 === 111) {
                                                                                                                                      try {
                                                                                                                                        try {
                                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                                          var statearr_28030_28361 = state_27811__$1;
                                                                                                                                          statearr_28030_28361[2] = null;
                                                                                                                                          statearr_28030_28361[1] = 112;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }catch(e28028) {
                                                                                                                                          if(e28028 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e28028;
                                                                                                                                            var statearr_28029_28362 = state_27811;
                                                                                                                                            statearr_28029_28362[1] = 12;
                                                                                                                                            statearr_28029_28362[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e28028;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }catch(e28026) {
                                                                                                                                        if(e28026 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e28026;
                                                                                                                                          var statearr_28027_28363 = state_27811;
                                                                                                                                          statearr_28027_28363[1] = 102;
                                                                                                                                          statearr_28027_28363[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e28026;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_27812 === 16) {
                                                                                                                                        var inst_27700 = state_27811[2];
                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                        var statearr_28031_28364 = state_27811__$1;
                                                                                                                                        statearr_28031_28364[2] = inst_27700;
                                                                                                                                        statearr_28031_28364[1] = 15;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if(state_val_27812 === 48) {
                                                                                                                                          try {
                                                                                                                                            var inst_27698 = state_27811[2];
                                                                                                                                            var state_27811__$1 = state_27811;
                                                                                                                                            var statearr_28034_28365 = state_27811__$1;
                                                                                                                                            statearr_28034_28365[2] = inst_27698;
                                                                                                                                            statearr_28034_28365[1] = 16;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e28032) {
                                                                                                                                            if(e28032 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e28032;
                                                                                                                                              var statearr_28033_28366 = state_27811;
                                                                                                                                              statearr_28033_28366[1] = 17;
                                                                                                                                              statearr_28033_28366[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e28032;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_27812 === 80) {
                                                                                                                                            try {
                                                                                                                                              try {
                                                                                                                                                var inst_27728 = function() {
                                                                                                                                                  throw cljs.core.match.backtrack;
                                                                                                                                                }();
                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                var statearr_28039_28367 = state_27811__$1;
                                                                                                                                                statearr_28039_28367[2] = inst_27728;
                                                                                                                                                statearr_28039_28367[1] = 82;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e28037) {
                                                                                                                                                if(e28037 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e28037;
                                                                                                                                                  var statearr_28038_28368 = state_27811;
                                                                                                                                                  statearr_28038_28368[1] = 12;
                                                                                                                                                  statearr_28038_28368[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e28037;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }catch(e28035) {
                                                                                                                                              if(e28035 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e28035;
                                                                                                                                                var statearr_28036_28369 = state_27811;
                                                                                                                                                statearr_28036_28369[1] = 72;
                                                                                                                                                statearr_28036_28369[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e28035;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_27812 === 112) {
                                                                                                                                              try {
                                                                                                                                                try {
                                                                                                                                                  var inst_27783 = state_27811[2];
                                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                                  var statearr_28044_28370 = state_27811__$1;
                                                                                                                                                  statearr_28044_28370[2] = inst_27783;
                                                                                                                                                  statearr_28044_28370[1] = 109;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e28042) {
                                                                                                                                                  if(e28042 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e28042;
                                                                                                                                                    var statearr_28043_28371 = state_27811;
                                                                                                                                                    statearr_28043_28371[1] = 12;
                                                                                                                                                    statearr_28043_28371[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e28042;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }catch(e28040) {
                                                                                                                                                if(e28040 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e28040;
                                                                                                                                                  var statearr_28041_28372 = state_27811;
                                                                                                                                                  statearr_28041_28372[1] = 102;
                                                                                                                                                  statearr_28041_28372[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e28040;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_27812 === 17) {
                                                                                                                                                var inst_27610 = state_27811[15];
                                                                                                                                                var inst_27610__$1 = state_27811[2];
                                                                                                                                                var inst_27611 = inst_27610__$1 === cljs.core.match.backtrack;
                                                                                                                                                var state_27811__$1 = function() {
                                                                                                                                                  var statearr_28045 = state_27811;
                                                                                                                                                  statearr_28045[15] = inst_27610__$1;
                                                                                                                                                  return statearr_28045
                                                                                                                                                }();
                                                                                                                                                if(cljs.core.truth_(inst_27611)) {
                                                                                                                                                  var statearr_28046_28373 = state_27811__$1;
                                                                                                                                                  statearr_28046_28373[1] = 18
                                                                                                                                                }else {
                                                                                                                                                  var statearr_28047_28374 = state_27811__$1;
                                                                                                                                                  statearr_28047_28374[1] = 19
                                                                                                                                                }
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if(state_val_27812 === 49) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_27690 = state_27811[2];
                                                                                                                                                    var state_27811__$1 = state_27811;
                                                                                                                                                    var statearr_28050_28375 = state_27811__$1;
                                                                                                                                                    statearr_28050_28375[2] = inst_27690;
                                                                                                                                                    statearr_28050_28375[1] = 48;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e28048) {
                                                                                                                                                    if(e28048 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e28048;
                                                                                                                                                      var statearr_28049_28376 = state_27811;
                                                                                                                                                      statearr_28049_28376[1] = 17;
                                                                                                                                                      statearr_28049_28376[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e28048;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_27812 === 81) {
                                                                                                                                                    try {
                                                                                                                                                      try {
                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                        var statearr_28055_28377 = state_27811__$1;
                                                                                                                                                        statearr_28055_28377[2] = null;
                                                                                                                                                        statearr_28055_28377[1] = 82;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e28053) {
                                                                                                                                                        if(e28053 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e28053;
                                                                                                                                                          var statearr_28054_28378 = state_27811;
                                                                                                                                                          statearr_28054_28378[1] = 12;
                                                                                                                                                          statearr_28054_28378[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e28053;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }catch(e28051) {
                                                                                                                                                      if(e28051 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e28051;
                                                                                                                                                        var statearr_28052_28379 = state_27811;
                                                                                                                                                        statearr_28052_28379[1] = 72;
                                                                                                                                                        statearr_28052_28379[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e28051;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_27812 === 113) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_27790 = function() {
                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                        }();
                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                        var statearr_28058_28380 = state_27811__$1;
                                                                                                                                                        statearr_28058_28380[2] = inst_27790;
                                                                                                                                                        statearr_28058_28380[1] = 115;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e28056) {
                                                                                                                                                        if(e28056 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e28056;
                                                                                                                                                          var statearr_28057_28381 = state_27811;
                                                                                                                                                          statearr_28057_28381[1] = 12;
                                                                                                                                                          statearr_28057_28381[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e28056;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_27812 === 18) {
                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                        var statearr_28059_28382 = state_27811__$1;
                                                                                                                                                        statearr_28059_28382[2] = null;
                                                                                                                                                        statearr_28059_28382[1] = 26;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_27812 === 50) {
                                                                                                                                                          try {
                                                                                                                                                            var inst_27668 = state_27811[16];
                                                                                                                                                            var inst_27668__$1 = state_27811[2];
                                                                                                                                                            var inst_27669 = inst_27668__$1 === cljs.core.match.backtrack;
                                                                                                                                                            var state_27811__$1 = function() {
                                                                                                                                                              var statearr_28062 = state_27811;
                                                                                                                                                              statearr_28062[16] = inst_27668__$1;
                                                                                                                                                              return statearr_28062
                                                                                                                                                            }();
                                                                                                                                                            if(cljs.core.truth_(inst_27669)) {
                                                                                                                                                              var statearr_28063_28383 = state_27811__$1;
                                                                                                                                                              statearr_28063_28383[1] = 51
                                                                                                                                                            }else {
                                                                                                                                                              var statearr_28064_28384 = state_27811__$1;
                                                                                                                                                              statearr_28064_28384[1] = 52
                                                                                                                                                            }
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }catch(e28060) {
                                                                                                                                                            if(e28060 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e28060;
                                                                                                                                                              var statearr_28061_28385 = state_27811;
                                                                                                                                                              statearr_28061_28385[1] = 17;
                                                                                                                                                              statearr_28061_28385[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e28060;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_27812 === 82) {
                                                                                                                                                            try {
                                                                                                                                                              try {
                                                                                                                                                                var inst_27731 = state_27811[2];
                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                var statearr_28069_28386 = state_27811__$1;
                                                                                                                                                                statearr_28069_28386[2] = inst_27731;
                                                                                                                                                                statearr_28069_28386[1] = 79;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e28067) {
                                                                                                                                                                if(e28067 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e28067;
                                                                                                                                                                  var statearr_28068_28387 = state_27811;
                                                                                                                                                                  statearr_28068_28387[1] = 12;
                                                                                                                                                                  statearr_28068_28387[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e28067;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }catch(e28065) {
                                                                                                                                                              if(e28065 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e28065;
                                                                                                                                                                var statearr_28066_28388 = state_27811;
                                                                                                                                                                statearr_28066_28388[1] = 72;
                                                                                                                                                                statearr_28066_28388[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e28065;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_27812 === 114) {
                                                                                                                                                              try {
                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                var statearr_28072_28389 = state_27811__$1;
                                                                                                                                                                statearr_28072_28389[2] = null;
                                                                                                                                                                statearr_28072_28389[1] = 115;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e28070) {
                                                                                                                                                                if(e28070 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e28070;
                                                                                                                                                                  var statearr_28071_28390 = state_27811;
                                                                                                                                                                  statearr_28071_28390[1] = 12;
                                                                                                                                                                  statearr_28071_28390[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e28070;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_27812 === 19) {
                                                                                                                                                                var inst_27610 = state_27811[15];
                                                                                                                                                                var inst_27661 = function() {
                                                                                                                                                                  throw inst_27610;
                                                                                                                                                                }();
                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                var statearr_28073_28391 = state_27811__$1;
                                                                                                                                                                statearr_28073_28391[2] = inst_27661;
                                                                                                                                                                statearr_28073_28391[1] = 20;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_27812 === 51) {
                                                                                                                                                                  try {
                                                                                                                                                                    var inst_27671 = function() {
                                                                                                                                                                      throw cljs.core.match.backtrack;
                                                                                                                                                                    }();
                                                                                                                                                                    var state_27811__$1 = state_27811;
                                                                                                                                                                    var statearr_28076_28392 = state_27811__$1;
                                                                                                                                                                    statearr_28076_28392[2] = inst_27671;
                                                                                                                                                                    statearr_28076_28392[1] = 53;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e28074) {
                                                                                                                                                                    if(e28074 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e28074;
                                                                                                                                                                      var statearr_28075_28393 = state_27811;
                                                                                                                                                                      statearr_28075_28393[1] = 17;
                                                                                                                                                                      statearr_28075_28393[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e28074;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_27812 === 83) {
                                                                                                                                                                    try {
                                                                                                                                                                      var state_27811__$1 = state_27811;
                                                                                                                                                                      var statearr_28079_28394 = state_27811__$1;
                                                                                                                                                                      statearr_28079_28394[2] = null;
                                                                                                                                                                      statearr_28079_28394[1] = 91;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }catch(e28077) {
                                                                                                                                                                      if(e28077 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e28077;
                                                                                                                                                                        var statearr_28078_28395 = state_27811;
                                                                                                                                                                        statearr_28078_28395[1] = 12;
                                                                                                                                                                        statearr_28078_28395[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e28077;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_27812 === 115) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_27793 = state_27811[2];
                                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                                        var statearr_28082_28396 = state_27811__$1;
                                                                                                                                                                        statearr_28082_28396[2] = inst_27793;
                                                                                                                                                                        statearr_28082_28396[1] = 100;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e28080) {
                                                                                                                                                                        if(e28080 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e28080;
                                                                                                                                                                          var statearr_28081_28397 = state_27811;
                                                                                                                                                                          statearr_28081_28397[1] = 12;
                                                                                                                                                                          statearr_28081_28397[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e28080;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_27812 === 20) {
                                                                                                                                                                        var inst_27663 = state_27811[2];
                                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                                        var statearr_28083_28398 = state_27811__$1;
                                                                                                                                                                        statearr_28083_28398[2] = inst_27663;
                                                                                                                                                                        statearr_28083_28398[1] = 16;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_27812 === 52) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_27668 = state_27811[16];
                                                                                                                                                                            var inst_27673 = function() {
                                                                                                                                                                              throw inst_27668;
                                                                                                                                                                            }();
                                                                                                                                                                            var state_27811__$1 = state_27811;
                                                                                                                                                                            var statearr_28086_28399 = state_27811__$1;
                                                                                                                                                                            statearr_28086_28399[2] = inst_27673;
                                                                                                                                                                            statearr_28086_28399[1] = 53;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e28084) {
                                                                                                                                                                            if(e28084 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e28084;
                                                                                                                                                                              var statearr_28085_28400 = state_27811;
                                                                                                                                                                              statearr_28085_28400[1] = 17;
                                                                                                                                                                              statearr_28085_28400[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e28084;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_27812 === 84) {
                                                                                                                                                                            try {
                                                                                                                                                                              var inst_27601 = state_27811[5];
                                                                                                                                                                              var inst_27763 = cljs.core._EQ_.call(null, inst_27601, "\ufdd0:messaging");
                                                                                                                                                                              var state_27811__$1 = state_27811;
                                                                                                                                                                              if(inst_27763) {
                                                                                                                                                                                var statearr_28089_28401 = state_27811__$1;
                                                                                                                                                                                statearr_28089_28401[1] = 98
                                                                                                                                                                              }else {
                                                                                                                                                                                var statearr_28090_28402 = state_27811__$1;
                                                                                                                                                                                statearr_28090_28402[1] = 99
                                                                                                                                                                              }
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }catch(e28087) {
                                                                                                                                                                              if(e28087 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e28087;
                                                                                                                                                                                var statearr_28088_28403 = state_27811;
                                                                                                                                                                                statearr_28088_28403[1] = 12;
                                                                                                                                                                                statearr_28088_28403[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e28087;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_27812 === 21) {
                                                                                                                                                                              var inst_27659 = state_27811[2];
                                                                                                                                                                              var state_27811__$1 = state_27811;
                                                                                                                                                                              var statearr_28091_28404 = state_27811__$1;
                                                                                                                                                                              statearr_28091_28404[2] = inst_27659;
                                                                                                                                                                              statearr_28091_28404[1] = 20;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if(state_val_27812 === 53) {
                                                                                                                                                                                try {
                                                                                                                                                                                  var inst_27675 = state_27811[2];
                                                                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                                                                  var statearr_28094_28405 = state_27811__$1;
                                                                                                                                                                                  statearr_28094_28405[2] = inst_27675;
                                                                                                                                                                                  statearr_28094_28405[1] = 49;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }catch(e28092) {
                                                                                                                                                                                  if(e28092 instanceof Error) {
                                                                                                                                                                                    var ex__5575__auto__ = e28092;
                                                                                                                                                                                    var statearr_28093_28406 = state_27811;
                                                                                                                                                                                    statearr_28093_28406[1] = 17;
                                                                                                                                                                                    statearr_28093_28406[2] = ex__5575__auto__;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                      throw e28092;
                                                                                                                                                                                    }else {
                                                                                                                                                                                      return null
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }else {
                                                                                                                                                                                if(state_val_27812 === 85) {
                                                                                                                                                                                  try {
                                                                                                                                                                                    var inst_27797 = state_27811[2];
                                                                                                                                                                                    var state_27811__$1 = state_27811;
                                                                                                                                                                                    var statearr_28097_28407 = state_27811__$1;
                                                                                                                                                                                    statearr_28097_28407[2] = inst_27797;
                                                                                                                                                                                    statearr_28097_28407[1] = 70;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }catch(e28095) {
                                                                                                                                                                                    if(e28095 instanceof Error) {
                                                                                                                                                                                      var ex__5575__auto__ = e28095;
                                                                                                                                                                                      var statearr_28096_28408 = state_27811;
                                                                                                                                                                                      statearr_28096_28408[1] = 12;
                                                                                                                                                                                      statearr_28096_28408[2] = ex__5575__auto__;
                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                        throw e28095;
                                                                                                                                                                                      }else {
                                                                                                                                                                                        return null
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }else {
                                                                                                                                                                                  if(state_val_27812 === 22) {
                                                                                                                                                                                    var inst_27613 = state_27811[17];
                                                                                                                                                                                    var inst_27613__$1 = state_27811[2];
                                                                                                                                                                                    var inst_27614 = inst_27613__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                    var state_27811__$1 = function() {
                                                                                                                                                                                      var statearr_28098 = state_27811;
                                                                                                                                                                                      statearr_28098[17] = inst_27613__$1;
                                                                                                                                                                                      return statearr_28098
                                                                                                                                                                                    }();
                                                                                                                                                                                    if(cljs.core.truth_(inst_27614)) {
                                                                                                                                                                                      var statearr_28099_28409 = state_27811__$1;
                                                                                                                                                                                      statearr_28099_28409[1] = 23
                                                                                                                                                                                    }else {
                                                                                                                                                                                      var statearr_28100_28410 = state_27811__$1;
                                                                                                                                                                                      statearr_28100_28410[1] = 24
                                                                                                                                                                                    }
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if(state_val_27812 === 54) {
                                                                                                                                                                                      try {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_27602 = state_27811[8];
                                                                                                                                                                                          var inst_27678 = cljs.core._EQ_.call(null, inst_27602, "\ufdd0:join");
                                                                                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                                                                                          if(inst_27678) {
                                                                                                                                                                                            var statearr_28105_28411 = state_27811__$1;
                                                                                                                                                                                            statearr_28105_28411[1] = 55
                                                                                                                                                                                          }else {
                                                                                                                                                                                            var statearr_28106_28412 = state_27811__$1;
                                                                                                                                                                                            statearr_28106_28412[1] = 56
                                                                                                                                                                                          }
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e28103) {
                                                                                                                                                                                          if(e28103 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e28103;
                                                                                                                                                                                            var statearr_28104_28413 = state_27811;
                                                                                                                                                                                            statearr_28104_28413[1] = 17;
                                                                                                                                                                                            statearr_28104_28413[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e28103;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }catch(e28101) {
                                                                                                                                                                                        if(e28101 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e28101;
                                                                                                                                                                                          var statearr_28102_28414 = state_27811;
                                                                                                                                                                                          statearr_28102_28414[1] = 50;
                                                                                                                                                                                          statearr_28102_28414[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e28101;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if(state_val_27812 === 86) {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_27761 = state_27811[2];
                                                                                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                                                                                          var statearr_28109_28415 = state_27811__$1;
                                                                                                                                                                                          statearr_28109_28415[2] = inst_27761;
                                                                                                                                                                                          statearr_28109_28415[1] = 85;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e28107) {
                                                                                                                                                                                          if(e28107 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e28107;
                                                                                                                                                                                            var statearr_28108_28416 = state_27811;
                                                                                                                                                                                            statearr_28108_28416[1] = 12;
                                                                                                                                                                                            statearr_28108_28416[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e28107;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if(state_val_27812 === 23) {
                                                                                                                                                                                          var inst_27602 = state_27811[8];
                                                                                                                                                                                          var inst_27601 = state_27811[5];
                                                                                                                                                                                          var inst_27616 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_27601), cljs.core.str(" "), cljs.core.str(inst_27602)].join("");
                                                                                                                                                                                          var inst_27617 = new Error(inst_27616);
                                                                                                                                                                                          var inst_27618 = function() {
                                                                                                                                                                                            throw inst_27617;
                                                                                                                                                                                          }();
                                                                                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                                                                                          var statearr_28110_28417 = state_27811__$1;
                                                                                                                                                                                          statearr_28110_28417[2] = inst_27618;
                                                                                                                                                                                          statearr_28110_28417[1] = 25;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if(state_val_27812 === 55) {
                                                                                                                                                                                            try {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_27603 = state_27811[9];
                                                                                                                                                                                                var inst_27680 = chatter_box.chat_view_component.user_join.call(null, inst_27603);
                                                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                                                var statearr_28115_28418 = state_27811__$1;
                                                                                                                                                                                                statearr_28115_28418[2] = inst_27680;
                                                                                                                                                                                                statearr_28115_28418[1] = 57;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e28113) {
                                                                                                                                                                                                if(e28113 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e28113;
                                                                                                                                                                                                  var statearr_28114_28419 = state_27811;
                                                                                                                                                                                                  statearr_28114_28419[1] = 17;
                                                                                                                                                                                                  statearr_28114_28419[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e28113;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }catch(e28111) {
                                                                                                                                                                                              if(e28111 instanceof Error) {
                                                                                                                                                                                                var ex__5575__auto__ = e28111;
                                                                                                                                                                                                var statearr_28112_28420 = state_27811;
                                                                                                                                                                                                statearr_28112_28420[1] = 50;
                                                                                                                                                                                                statearr_28112_28420[2] = ex__5575__auto__;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                  throw e28111;
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  return null
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if(state_val_27812 === 87) {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_27739 = state_27811[18];
                                                                                                                                                                                                var inst_27739__$1 = state_27811[2];
                                                                                                                                                                                                var inst_27740 = inst_27739__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                var state_27811__$1 = function() {
                                                                                                                                                                                                  var statearr_28118 = state_27811;
                                                                                                                                                                                                  statearr_28118[18] = inst_27739__$1;
                                                                                                                                                                                                  return statearr_28118
                                                                                                                                                                                                }();
                                                                                                                                                                                                if(cljs.core.truth_(inst_27740)) {
                                                                                                                                                                                                  var statearr_28119_28421 = state_27811__$1;
                                                                                                                                                                                                  statearr_28119_28421[1] = 88
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  var statearr_28120_28422 = state_27811__$1;
                                                                                                                                                                                                  statearr_28120_28422[1] = 89
                                                                                                                                                                                                }
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e28116) {
                                                                                                                                                                                                if(e28116 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e28116;
                                                                                                                                                                                                  var statearr_28117_28423 = state_27811;
                                                                                                                                                                                                  statearr_28117_28423[1] = 12;
                                                                                                                                                                                                  statearr_28117_28423[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e28116;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if(state_val_27812 === 24) {
                                                                                                                                                                                                var inst_27613 = state_27811[17];
                                                                                                                                                                                                var inst_27620 = function() {
                                                                                                                                                                                                  throw inst_27613;
                                                                                                                                                                                                }();
                                                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                                                var statearr_28121_28424 = state_27811__$1;
                                                                                                                                                                                                statearr_28121_28424[2] = inst_27620;
                                                                                                                                                                                                statearr_28121_28424[1] = 25;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if(state_val_27812 === 56) {
                                                                                                                                                                                                  try {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var state_27811__$1 = state_27811;
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        var statearr_28126_28425 = state_27811__$1;
                                                                                                                                                                                                        statearr_28126_28425[1] = 58
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        var statearr_28127_28426 = state_27811__$1;
                                                                                                                                                                                                        statearr_28127_28426[1] = 59
                                                                                                                                                                                                      }
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e28124) {
                                                                                                                                                                                                      if(e28124 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e28124;
                                                                                                                                                                                                        var statearr_28125_28427 = state_27811;
                                                                                                                                                                                                        statearr_28125_28427[1] = 17;
                                                                                                                                                                                                        statearr_28125_28427[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e28124;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }catch(e28122) {
                                                                                                                                                                                                    if(e28122 instanceof Error) {
                                                                                                                                                                                                      var ex__5575__auto__ = e28122;
                                                                                                                                                                                                      var statearr_28123_28428 = state_27811;
                                                                                                                                                                                                      statearr_28123_28428[1] = 50;
                                                                                                                                                                                                      statearr_28123_28428[2] = ex__5575__auto__;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        throw e28122;
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        return null
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if(state_val_27812 === 88) {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var inst_27742 = function() {
                                                                                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                                                                                      }();
                                                                                                                                                                                                      var state_27811__$1 = state_27811;
                                                                                                                                                                                                      var statearr_28130_28429 = state_27811__$1;
                                                                                                                                                                                                      statearr_28130_28429[2] = inst_27742;
                                                                                                                                                                                                      statearr_28130_28429[1] = 90;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e28128) {
                                                                                                                                                                                                      if(e28128 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e28128;
                                                                                                                                                                                                        var statearr_28129_28430 = state_27811;
                                                                                                                                                                                                        statearr_28129_28430[1] = 12;
                                                                                                                                                                                                        statearr_28129_28430[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e28128;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if(state_val_27812 === 25) {
                                                                                                                                                                                                      var inst_27622 = state_27811[2];
                                                                                                                                                                                                      var state_27811__$1 = state_27811;
                                                                                                                                                                                                      var statearr_28131_28431 = state_27811__$1;
                                                                                                                                                                                                      statearr_28131_28431[2] = inst_27622;
                                                                                                                                                                                                      statearr_28131_28431[1] = 21;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if(state_val_27812 === 57) {
                                                                                                                                                                                                        try {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_27688 = state_27811[2];
                                                                                                                                                                                                            var state_27811__$1 = state_27811;
                                                                                                                                                                                                            var statearr_28136_28432 = state_27811__$1;
                                                                                                                                                                                                            statearr_28136_28432[2] = inst_27688;
                                                                                                                                                                                                            statearr_28136_28432[1] = 49;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e28134) {
                                                                                                                                                                                                            if(e28134 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e28134;
                                                                                                                                                                                                              var statearr_28135_28433 = state_27811;
                                                                                                                                                                                                              statearr_28135_28433[1] = 17;
                                                                                                                                                                                                              statearr_28135_28433[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e28134;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }catch(e28132) {
                                                                                                                                                                                                          if(e28132 instanceof Error) {
                                                                                                                                                                                                            var ex__5575__auto__ = e28132;
                                                                                                                                                                                                            var statearr_28133_28434 = state_27811;
                                                                                                                                                                                                            statearr_28133_28434[1] = 50;
                                                                                                                                                                                                            statearr_28133_28434[2] = ex__5575__auto__;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                              throw e28132;
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              return null
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if(state_val_27812 === 89) {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_27739 = state_27811[18];
                                                                                                                                                                                                            var inst_27744 = function() {
                                                                                                                                                                                                              throw inst_27739;
                                                                                                                                                                                                            }();
                                                                                                                                                                                                            var state_27811__$1 = state_27811;
                                                                                                                                                                                                            var statearr_28139_28435 = state_27811__$1;
                                                                                                                                                                                                            statearr_28139_28435[2] = inst_27744;
                                                                                                                                                                                                            statearr_28139_28435[1] = 90;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e28137) {
                                                                                                                                                                                                            if(e28137 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e28137;
                                                                                                                                                                                                              var statearr_28138_28436 = state_27811;
                                                                                                                                                                                                              statearr_28138_28436[1] = 12;
                                                                                                                                                                                                              statearr_28138_28436[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e28137;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if(state_val_27812 === 26) {
                                                                                                                                                                                                            try {
                                                                                                                                                                                                              var inst_27601 = state_27811[5];
                                                                                                                                                                                                              var inst_27625 = cljs.core._EQ_.call(null, inst_27601, "\ufdd0:messaging");
                                                                                                                                                                                                              var state_27811__$1 = state_27811;
                                                                                                                                                                                                              if(inst_27625) {
                                                                                                                                                                                                                var statearr_28142_28437 = state_27811__$1;
                                                                                                                                                                                                                statearr_28142_28437[1] = 27
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                var statearr_28143_28438 = state_27811__$1;
                                                                                                                                                                                                                statearr_28143_28438[1] = 28
                                                                                                                                                                                                              }
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }catch(e28140) {
                                                                                                                                                                                                              if(e28140 instanceof Error) {
                                                                                                                                                                                                                var ex__5575__auto__ = e28140;
                                                                                                                                                                                                                var statearr_28141_28439 = state_27811;
                                                                                                                                                                                                                statearr_28141_28439[1] = 22;
                                                                                                                                                                                                                statearr_28141_28439[2] = ex__5575__auto__;
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                  throw e28140;
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if(state_val_27812 === 58) {
                                                                                                                                                                                                              try {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_27683 = function() {
                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                                                                                                  var statearr_28148_28440 = state_27811__$1;
                                                                                                                                                                                                                  statearr_28148_28440[2] = inst_27683;
                                                                                                                                                                                                                  statearr_28148_28440[1] = 60;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e28146) {
                                                                                                                                                                                                                  if(e28146 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e28146;
                                                                                                                                                                                                                    var statearr_28147_28441 = state_27811;
                                                                                                                                                                                                                    statearr_28147_28441[1] = 17;
                                                                                                                                                                                                                    statearr_28147_28441[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e28146;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }catch(e28144) {
                                                                                                                                                                                                                if(e28144 instanceof Error) {
                                                                                                                                                                                                                  var ex__5575__auto__ = e28144;
                                                                                                                                                                                                                  var statearr_28145_28442 = state_27811;
                                                                                                                                                                                                                  statearr_28145_28442[1] = 50;
                                                                                                                                                                                                                  statearr_28145_28442[2] = ex__5575__auto__;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    throw e28144;
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if(state_val_27812 === 90) {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_27746 = state_27811[2];
                                                                                                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                                                                                                  var statearr_28151_28443 = state_27811__$1;
                                                                                                                                                                                                                  statearr_28151_28443[2] = inst_27746;
                                                                                                                                                                                                                  statearr_28151_28443[1] = 86;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e28149) {
                                                                                                                                                                                                                  if(e28149 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e28149;
                                                                                                                                                                                                                    var statearr_28150_28444 = state_27811;
                                                                                                                                                                                                                    statearr_28150_28444[1] = 12;
                                                                                                                                                                                                                    statearr_28150_28444[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e28149;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if(state_val_27812 === 27) {
                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                    var state_27811__$1 = state_27811;
                                                                                                                                                                                                                    var statearr_28154_28445 = state_27811__$1;
                                                                                                                                                                                                                    statearr_28154_28445[2] = null;
                                                                                                                                                                                                                    statearr_28154_28445[1] = 35;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }catch(e28152) {
                                                                                                                                                                                                                    if(e28152 instanceof Error) {
                                                                                                                                                                                                                      var ex__5575__auto__ = e28152;
                                                                                                                                                                                                                      var statearr_28153_28446 = state_27811;
                                                                                                                                                                                                                      statearr_28153_28446[1] = 22;
                                                                                                                                                                                                                      statearr_28153_28446[2] = ex__5575__auto__;
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        throw e28152;
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if(state_val_27812 === 59) {
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                                                                                        var statearr_28159_28447 = state_27811__$1;
                                                                                                                                                                                                                        statearr_28159_28447[2] = null;
                                                                                                                                                                                                                        statearr_28159_28447[1] = 60;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }catch(e28157) {
                                                                                                                                                                                                                        if(e28157 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e28157;
                                                                                                                                                                                                                          var statearr_28158_28448 = state_27811;
                                                                                                                                                                                                                          statearr_28158_28448[1] = 17;
                                                                                                                                                                                                                          statearr_28158_28448[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e28157;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }catch(e28155) {
                                                                                                                                                                                                                      if(e28155 instanceof Error) {
                                                                                                                                                                                                                        var ex__5575__auto__ = e28155;
                                                                                                                                                                                                                        var statearr_28156_28449 = state_27811;
                                                                                                                                                                                                                        statearr_28156_28449[1] = 50;
                                                                                                                                                                                                                        statearr_28156_28449[2] = ex__5575__auto__;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                          throw e28155;
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if(state_val_27812 === 91) {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var inst_27602 = state_27811[8];
                                                                                                                                                                                                                          var inst_27749 = cljs.core._EQ_.call(null, inst_27602, "\ufdd0:login-success");
                                                                                                                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                                                                                                                          if(inst_27749) {
                                                                                                                                                                                                                            var statearr_28164_28450 = state_27811__$1;
                                                                                                                                                                                                                            statearr_28164_28450[1] = 92
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_28165_28451 = state_27811__$1;
                                                                                                                                                                                                                            statearr_28165_28451[1] = 93
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e28162) {
                                                                                                                                                                                                                          if(e28162 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e28162;
                                                                                                                                                                                                                            var statearr_28163_28452 = state_27811;
                                                                                                                                                                                                                            statearr_28163_28452[1] = 12;
                                                                                                                                                                                                                            statearr_28163_28452[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e28162;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }catch(e28160) {
                                                                                                                                                                                                                        if(e28160 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e28160;
                                                                                                                                                                                                                          var statearr_28161_28453 = state_27811;
                                                                                                                                                                                                                          statearr_28161_28453[1] = 87;
                                                                                                                                                                                                                          statearr_28161_28453[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e28160;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if(state_val_27812 === 28) {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var state_27811__$1 = state_27811;
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            var statearr_28168_28454 = state_27811__$1;
                                                                                                                                                                                                                            statearr_28168_28454[1] = 42
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_28169_28455 = state_27811__$1;
                                                                                                                                                                                                                            statearr_28169_28455[1] = 43
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e28166) {
                                                                                                                                                                                                                          if(e28166 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e28166;
                                                                                                                                                                                                                            var statearr_28167_28456 = state_27811;
                                                                                                                                                                                                                            statearr_28167_28456[1] = 22;
                                                                                                                                                                                                                            statearr_28167_28456[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e28166;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if(state_val_27812 === 60) {
                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              var inst_27686 = state_27811[2];
                                                                                                                                                                                                                              var state_27811__$1 = state_27811;
                                                                                                                                                                                                                              var statearr_28174_28457 = state_27811__$1;
                                                                                                                                                                                                                              statearr_28174_28457[2] = inst_27686;
                                                                                                                                                                                                                              statearr_28174_28457[1] = 57;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }catch(e28172) {
                                                                                                                                                                                                                              if(e28172 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e28172;
                                                                                                                                                                                                                                var statearr_28173_28458 = state_27811;
                                                                                                                                                                                                                                statearr_28173_28458[1] = 17;
                                                                                                                                                                                                                                statearr_28173_28458[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e28172;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }catch(e28170) {
                                                                                                                                                                                                                            if(e28170 instanceof Error) {
                                                                                                                                                                                                                              var ex__5575__auto__ = e28170;
                                                                                                                                                                                                                              var statearr_28171_28459 = state_27811;
                                                                                                                                                                                                                              statearr_28171_28459[1] = 50;
                                                                                                                                                                                                                              statearr_28171_28459[2] = ex__5575__auto__;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                throw e28170;
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if(state_val_27812 === 92) {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_27603 = state_27811[9];
                                                                                                                                                                                                                                var inst_27751 = chatter_box.chat_view_component.login_success.call(null, inst_27603);
                                                                                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                var statearr_28179_28460 = state_27811__$1;
                                                                                                                                                                                                                                statearr_28179_28460[2] = inst_27751;
                                                                                                                                                                                                                                statearr_28179_28460[1] = 94;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e28177) {
                                                                                                                                                                                                                                if(e28177 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e28177;
                                                                                                                                                                                                                                  var statearr_28178_28461 = state_27811;
                                                                                                                                                                                                                                  statearr_28178_28461[1] = 12;
                                                                                                                                                                                                                                  statearr_28178_28461[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e28177;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }catch(e28175) {
                                                                                                                                                                                                                              if(e28175 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e28175;
                                                                                                                                                                                                                                var statearr_28176_28462 = state_27811;
                                                                                                                                                                                                                                statearr_28176_28462[1] = 87;
                                                                                                                                                                                                                                statearr_28176_28462[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e28175;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if(state_val_27812 === 29) {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_27657 = state_27811[2];
                                                                                                                                                                                                                                var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                var statearr_28182_28463 = state_27811__$1;
                                                                                                                                                                                                                                statearr_28182_28463[2] = inst_27657;
                                                                                                                                                                                                                                statearr_28182_28463[1] = 21;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e28180) {
                                                                                                                                                                                                                                if(e28180 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e28180;
                                                                                                                                                                                                                                  var statearr_28181_28464 = state_27811;
                                                                                                                                                                                                                                  statearr_28181_28464[1] = 22;
                                                                                                                                                                                                                                  statearr_28181_28464[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e28180;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if(state_val_27812 === 61) {
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                  var inst_27693 = function() {
                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                  var statearr_28185_28465 = state_27811__$1;
                                                                                                                                                                                                                                  statearr_28185_28465[2] = inst_27693;
                                                                                                                                                                                                                                  statearr_28185_28465[1] = 63;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }catch(e28183) {
                                                                                                                                                                                                                                  if(e28183 instanceof Error) {
                                                                                                                                                                                                                                    var ex__5575__auto__ = e28183;
                                                                                                                                                                                                                                    var statearr_28184_28466 = state_27811;
                                                                                                                                                                                                                                    statearr_28184_28466[1] = 17;
                                                                                                                                                                                                                                    statearr_28184_28466[2] = ex__5575__auto__;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                      throw e28183;
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if(state_val_27812 === 93) {
                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        var statearr_28190_28467 = state_27811__$1;
                                                                                                                                                                                                                                        statearr_28190_28467[1] = 95
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        var statearr_28191_28468 = state_27811__$1;
                                                                                                                                                                                                                                        statearr_28191_28468[1] = 96
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e28188) {
                                                                                                                                                                                                                                      if(e28188 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e28188;
                                                                                                                                                                                                                                        var statearr_28189_28469 = state_27811;
                                                                                                                                                                                                                                        statearr_28189_28469[1] = 12;
                                                                                                                                                                                                                                        statearr_28189_28469[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e28188;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }catch(e28186) {
                                                                                                                                                                                                                                    if(e28186 instanceof Error) {
                                                                                                                                                                                                                                      var ex__5575__auto__ = e28186;
                                                                                                                                                                                                                                      var statearr_28187_28470 = state_27811;
                                                                                                                                                                                                                                      statearr_28187_28470[1] = 87;
                                                                                                                                                                                                                                      statearr_28187_28470[2] = ex__5575__auto__;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        throw e28186;
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if(state_val_27812 === 30) {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var inst_27649 = state_27811[2];
                                                                                                                                                                                                                                      var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                      var statearr_28194_28471 = state_27811__$1;
                                                                                                                                                                                                                                      statearr_28194_28471[2] = inst_27649;
                                                                                                                                                                                                                                      statearr_28194_28471[1] = 29;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e28192) {
                                                                                                                                                                                                                                      if(e28192 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e28192;
                                                                                                                                                                                                                                        var statearr_28193_28472 = state_27811;
                                                                                                                                                                                                                                        statearr_28193_28472[1] = 22;
                                                                                                                                                                                                                                        statearr_28193_28472[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e28192;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if(state_val_27812 === 62) {
                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                        var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                        var statearr_28197_28473 = state_27811__$1;
                                                                                                                                                                                                                                        statearr_28197_28473[2] = null;
                                                                                                                                                                                                                                        statearr_28197_28473[1] = 63;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }catch(e28195) {
                                                                                                                                                                                                                                        if(e28195 instanceof Error) {
                                                                                                                                                                                                                                          var ex__5575__auto__ = e28195;
                                                                                                                                                                                                                                          var statearr_28196_28474 = state_27811;
                                                                                                                                                                                                                                          statearr_28196_28474[1] = 17;
                                                                                                                                                                                                                                          statearr_28196_28474[2] = ex__5575__auto__;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                            throw e28195;
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if(state_val_27812 === 94) {
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_27759 = state_27811[2];
                                                                                                                                                                                                                                            var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                            var statearr_28202_28475 = state_27811__$1;
                                                                                                                                                                                                                                            statearr_28202_28475[2] = inst_27759;
                                                                                                                                                                                                                                            statearr_28202_28475[1] = 86;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e28200) {
                                                                                                                                                                                                                                            if(e28200 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e28200;
                                                                                                                                                                                                                                              var statearr_28201_28476 = state_27811;
                                                                                                                                                                                                                                              statearr_28201_28476[1] = 12;
                                                                                                                                                                                                                                              statearr_28201_28476[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e28200;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }catch(e28198) {
                                                                                                                                                                                                                                          if(e28198 instanceof Error) {
                                                                                                                                                                                                                                            var ex__5575__auto__ = e28198;
                                                                                                                                                                                                                                            var statearr_28199_28477 = state_27811;
                                                                                                                                                                                                                                            statearr_28199_28477[1] = 87;
                                                                                                                                                                                                                                            statearr_28199_28477[2] = ex__5575__auto__;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                              throw e28198;
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if(state_val_27812 === 31) {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_27627 = state_27811[6];
                                                                                                                                                                                                                                            var inst_27627__$1 = state_27811[2];
                                                                                                                                                                                                                                            var inst_27628 = inst_27627__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                            var state_27811__$1 = function() {
                                                                                                                                                                                                                                              var statearr_28205 = state_27811;
                                                                                                                                                                                                                                              statearr_28205[6] = inst_27627__$1;
                                                                                                                                                                                                                                              return statearr_28205
                                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                                            if(cljs.core.truth_(inst_27628)) {
                                                                                                                                                                                                                                              var statearr_28206_28478 = state_27811__$1;
                                                                                                                                                                                                                                              statearr_28206_28478[1] = 32
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              var statearr_28207_28479 = state_27811__$1;
                                                                                                                                                                                                                                              statearr_28207_28479[1] = 33
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e28203) {
                                                                                                                                                                                                                                            if(e28203 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e28203;
                                                                                                                                                                                                                                              var statearr_28204_28480 = state_27811;
                                                                                                                                                                                                                                              statearr_28204_28480[1] = 22;
                                                                                                                                                                                                                                              statearr_28204_28480[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e28203;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if(state_val_27812 === 63) {
                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                              var inst_27696 = state_27811[2];
                                                                                                                                                                                                                                              var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                              var statearr_28210_28481 = state_27811__$1;
                                                                                                                                                                                                                                              statearr_28210_28481[2] = inst_27696;
                                                                                                                                                                                                                                              statearr_28210_28481[1] = 48;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }catch(e28208) {
                                                                                                                                                                                                                                              if(e28208 instanceof Error) {
                                                                                                                                                                                                                                                var ex__5575__auto__ = e28208;
                                                                                                                                                                                                                                                var statearr_28209_28482 = state_27811;
                                                                                                                                                                                                                                                statearr_28209_28482[1] = 17;
                                                                                                                                                                                                                                                statearr_28209_28482[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                  throw e28208;
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if(state_val_27812 === 95) {
                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                  var inst_27754 = function() {
                                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                                  var state_27811__$1 = state_27811;
                                                                                                                                                                                                                                                  var statearr_28215_28483 = state_27811__$1;
                                                                                                                                                                                                                                                  statearr_28215_28483[2] = inst_27754;
                                                                                                                                                                                                                                                  statearr_28215_28483[1] = 97;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }catch(e28213) {
                                                                                                                                                                                                                                                  if(e28213 instanceof Error) {
                                                                                                                                                                                                                                                    var ex__5575__auto__ = e28213;
                                                                                                                                                                                                                                                    var statearr_28214_28484 = state_27811;
                                                                                                                                                                                                                                                    statearr_28214_28484[1] = 12;
                                                                                                                                                                                                                                                    statearr_28214_28484[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                                      throw e28213;
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }catch(e28211) {
                                                                                                                                                                                                                                                if(e28211 instanceof Error) {
                                                                                                                                                                                                                                                  var ex__5575__auto__ = e28211;
                                                                                                                                                                                                                                                  var statearr_28212_28485 = state_27811;
                                                                                                                                                                                                                                                  statearr_28212_28485[1] = 87;
                                                                                                                                                                                                                                                  statearr_28212_28485[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                    throw e28211;
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_28217 = new Array(19);
            statearr_28217[0] = state_machine__5582__auto__;
            statearr_28217[1] = 1;
            return statearr_28217
          };
          var state_machine__5582__auto____1 = function(state_27811) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_27811);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_27811) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_27811)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_28218 = f__5654__auto__.call(null);
      statearr_28218[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_28218
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.consol_log_component");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.core");
chatter_box.consol_log_component.create_consol_log_component = function create_consol_log_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.consol_log_component.t11813 !== "undefined") {
  }else {
    goog.provide("chatter_box.consol_log_component.t11813");
    chatter_box.consol_log_component.t11813 = function(in_ch, create_consol_log_component, meta11814) {
      this.in_ch = in_ch;
      this.create_consol_log_component = create_consol_log_component;
      this.meta11814 = meta11814;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.consol_log_component.t11813.cljs$lang$type = true;
    chatter_box.consol_log_component.t11813.cljs$lang$ctorStr = "chatter-box.consol-log-component/t11813";
    chatter_box.consol_log_component.t11813.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.consol-log-component/t11813")
    };
    chatter_box.consol_log_component.t11813.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.consol_log_component.t11813.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__5654__auto__ = function() {
          var switch__5581__auto__ = function(state_11829) {
            var state_val_11830 = state_11829[1];
            if(state_val_11830 === 7) {
              var inst_11819 = state_11829[2];
              var inst_11820 = cljs.core.pr_str.call(null, inst_11819);
              var inst_11821 = enfocus.core.log_debug.call(null, inst_11820);
              var state_11829__$1 = function() {
                var statearr_11831 = state_11829;
                statearr_11831[5] = inst_11821;
                return statearr_11831
              }();
              var statearr_11832_11841 = state_11829__$1;
              statearr_11832_11841[2] = null;
              statearr_11832_11841[1] = 2;
              return"\ufdd0:recur"
            }else {
              if(state_val_11830 === 6) {
                var inst_11825 = state_11829[2];
                var state_11829__$1 = state_11829;
                var statearr_11833_11842 = state_11829__$1;
                statearr_11833_11842[2] = inst_11825;
                statearr_11833_11842[1] = 3;
                return"\ufdd0:recur"
              }else {
                if(state_val_11830 === 5) {
                  var state_11829__$1 = state_11829;
                  var statearr_11834_11843 = state_11829__$1;
                  statearr_11834_11843[2] = null;
                  statearr_11834_11843[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_11830 === 4) {
                    var state_11829__$1 = state_11829;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11829__$1, 7, self__.in_ch)
                  }else {
                    if(state_val_11830 === 3) {
                      var inst_11827 = state_11829[2];
                      var state_11829__$1 = state_11829;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11829__$1, inst_11827)
                    }else {
                      if(state_val_11830 === 2) {
                        var state_11829__$1 = state_11829;
                        if(true) {
                          var statearr_11835_11844 = state_11829__$1;
                          statearr_11835_11844[1] = 4
                        }else {
                          var statearr_11836_11845 = state_11829__$1;
                          statearr_11836_11845[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_11830 === 1) {
                          var state_11829__$1 = state_11829;
                          var statearr_11837_11846 = state_11829__$1;
                          statearr_11837_11846[2] = null;
                          statearr_11837_11846[1] = 2;
                          return"\ufdd0:recur"
                        }else {
                          return null
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__5581__auto__) {
            return function() {
              var state_machine__5582__auto__ = null;
              var state_machine__5582__auto____0 = function() {
                var statearr_11839 = new Array(6);
                statearr_11839[0] = state_machine__5582__auto__;
                statearr_11839[1] = 1;
                return statearr_11839
              };
              var state_machine__5582__auto____1 = function(state_11829) {
                while(true) {
                  var result__5583__auto__ = switch__5581__auto__.call(null, state_11829);
                  if(result__5583__auto__ === "\ufdd0:recur") {
                    continue
                  }else {
                    return result__5583__auto__
                  }
                  break
                }
              };
              state_machine__5582__auto__ = function(state_11829) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5582__auto____0.call(this);
                  case 1:
                    return state_machine__5582__auto____1.call(this, state_11829)
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
              state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
              return state_machine__5582__auto__
            }()
          }(switch__5581__auto__)
        }();
        var state__5655__auto__ = function() {
          var statearr_11840 = f__5654__auto__.call(null);
          statearr_11840[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
          return statearr_11840
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
      });
      return c__5653__auto__
    };
    chatter_box.consol_log_component.t11813.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return true
    };
    chatter_box.consol_log_component.t11813.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.consol_log_component.t11813.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11815) {
      var self__ = this;
      return self__.meta11814
    };
    chatter_box.consol_log_component.t11813.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11815, meta11814__$1) {
      var self__ = this;
      return new chatter_box.consol_log_component.t11813(self__.in_ch, self__.create_consol_log_component, meta11814__$1)
    };
    chatter_box.consol_log_component.__GT_t11813 = function __GT_t11813(in_ch__$1, create_consol_log_component__$1, meta11814) {
      return new chatter_box.consol_log_component.t11813(in_ch__$1, create_consol_log_component__$1, meta11814)
    }
  }
  return new chatter_box.consol_log_component.t11813(in_ch, create_consol_log_component, null)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3370__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.read_char[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.read_char["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3370__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.unread[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.unread["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  if(self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx]
  }else {
    return self__.buffer.pop()
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  return self__.buffer.push(ch)
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1)
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto__ = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var and__3941__auto__ = function() {
      var or__3943__auto____$1 = "+" === initch;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch);
        return next_ch
      }())
    }else {
      return and__3941__auto__
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__14248) {
    var rdr = cljs.core.first(arglist__14248);
    var msg = cljs.core.rest(arglist__14248);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto__ = !(ch === "#");
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !(ch === "'");
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(ch === ":");
      if(and__3941__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__14249 = function() {
        sb.append(ch);
        return sb
      }();
      var G__14250 = cljs.reader.read_char.call(null, rdr);
      sb = G__14249;
      ch = G__14250;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto__ = ch === "n";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = ch === "r";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return ch == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!function() {
    var or__3943__auto__ = group3 == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return group3.length < 1
    }
  }()) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : "\ufdd0:default" ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(function() {
    var and__3941__auto__ = !(matches == null);
    if(and__3941__auto__) {
      return matches[0] === s
    }else {
      return and__3941__auto__
    }
  }()) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\b"
            }else {
              if(c === "f") {
                return"\f"
              }else {
                if("\ufdd0:else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if("\ufdd0:else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__14251 = cljs.reader.read_char.call(null, rdr);
      ch = G__14251;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__14252 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__14252;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__14253 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__14253;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3943__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__14254 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__14255 = cljs.reader.read_char.call(null, reader);
      buffer = G__14254;
      ch = G__14255;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__14256 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__14257 = cljs.reader.read_char.call(null, reader);
        buffer = G__14256;
        ch = G__14257;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if("\ufdd0:default") {
            var G__14258 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__14259 = cljs.reader.read_char.call(null, reader);
            buffer = G__14258;
            ch = G__14259;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = function() {
      var and__3941__auto__ = !(void 0 === ns);
      if(and__3941__auto__) {
        return ns.substring(ns.length - 2, ns.length) === ":/"
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = name[name.length - 1] === ":";
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return!(token__$1.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(function() {
      var and__3941__auto__ = !(ns == null);
      if(and__3941__auto__) {
        return ns.length > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true)
      }else {
        if("\ufdd0:else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__14261 = o;
    if(G__14261) {
      if(function() {
        var or__3943__auto__ = G__14261.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__14261.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__14261.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__14261)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__14261)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0:else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0:else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__14262 = reader;
        var G__14263 = eof_is_error;
        var G__14264 = sentinel;
        var G__14265 = is_recursive;
        reader = G__14262;
        eof_is_error = G__14263;
        sentinel = G__14264;
        is_recursive = G__14265;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__14266 = cljs.reader.read_comment.call(null, reader, ch);
          var G__14267 = eof_is_error;
          var G__14268 = sentinel;
          var G__14269 = is_recursive;
          reader = G__14266;
          eof_is_error = G__14267;
          sentinel = G__14268;
          is_recursive = G__14269;
          continue
        }else {
          if("\ufdd0:else") {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : "\ufdd0:else" ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__14270 = reader;
              var G__14271 = eof_is_error;
              var G__14272 = sentinel;
              var G__14273 = is_recursive;
              reader = G__14270;
              eof_is_error = G__14271;
              sentinel = G__14272;
              is_recursive = G__14273;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width)
    }else {
      if("\ufdd0:else") {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__14274 = b.append("0");
            b = G__14274;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto__)) {
    var or__3943__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if(cljs.core.not.call(null, isNaN(n))) {
    return n
  }else {
    return null
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if(function() {
    var and__3941__auto__ = low <= n;
    if(and__3941__auto__) {
      return n <= high
    }else {
      return and__3941__auto__
    }
  }()) {
  }else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""))
  }
  return n
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__14276 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__14276, 0, null);
  var years = cljs.core.nth.call(null, vec__14276, 1, null);
  var months = cljs.core.nth.call(null, vec__14276, 2, null);
  var days = cljs.core.nth.call(null, vec__14276, 3, null);
  var hours = cljs.core.nth.call(null, vec__14276, 4, null);
  var minutes = cljs.core.nth.call(null, vec__14276, 5, null);
  var seconds = cljs.core.nth.call(null, vec__14276, 6, null);
  var fraction = cljs.core.nth.call(null, vec__14276, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__14276, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__14276, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__14276, 10, null);
  var v = vec__14276;
  if(cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""))
  }else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, months);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 1
      }
    }();
    var days__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, days);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 1
      }
    }();
    var hours__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, hours);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var minutes__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, minutes);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var seconds__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, seconds);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var fraction__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return cljs.core.PersistentVector.fromArray([years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check.call(null, 0, minutes__$1, 
    59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], true)
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__14278 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__14278, 0, null);
    var months = cljs.core.nth.call(null, vec__14278, 1, null);
    var days = cljs.core.nth.call(null, vec__14278, 2, null);
    var hours = cljs.core.nth.call(null, vec__14278, 3, null);
    var minutes = cljs.core.nth.call(null, vec__14278, 4, null);
    var seconds = cljs.core.nth.call(null, vec__14278, 5, null);
    var ms = cljs.core.nth.call(null, vec__14278, 6, null);
    var offset = cljs.core.nth.call(null, vec__14278, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.fromArray(["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], true));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if("\ufdd0:else") {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("chatter_box.error_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.error_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-failure"], true), null], true);
chatter_box.error_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.error_view_component.create_error_view_component = function create_error_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.error_view_component.t8676 !== "undefined") {
  }else {
    goog.provide("chatter_box.error_view_component.t8676");
    chatter_box.error_view_component.t8676 = function(in_ch, create_error_view_component, meta8677) {
      this.in_ch = in_ch;
      this.create_error_view_component = create_error_view_component;
      this.meta8677 = meta8677;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.error_view_component.t8676.cljs$lang$type = true;
    chatter_box.error_view_component.t8676.cljs$lang$ctorStr = "chatter-box.error-view-component/t8676";
    chatter_box.error_view_component.t8676.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.error-view-component/t8676")
    };
    chatter_box.error_view_component.t8676.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.error_view_component.t8676.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.error_view_component.out_chan, out_ch);
      return chatter_box.error_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.error_view_component.t8676.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.error_view_component.valid_types).call(null, msg)
    };
    chatter_box.error_view_component.t8676.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.error_view_component.t8676.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8678) {
      var self__ = this;
      return self__.meta8677
    };
    chatter_box.error_view_component.t8676.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8678, meta8677__$1) {
      var self__ = this;
      return new chatter_box.error_view_component.t8676(self__.in_ch, self__.create_error_view_component, meta8677__$1)
    };
    chatter_box.error_view_component.__GT_t8676 = function __GT_t8676(in_ch__$1, create_error_view_component__$1, meta8677) {
      return new chatter_box.error_view_component.t8676(in_ch__$1, create_error_view_component__$1, meta8677)
    }
  }
  return new chatter_box.error_view_component.t8676(in_ch, create_error_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/error.html["#error-div"]') == null) {
  var vec__8680_8685 = enfocus.core.replace_ids.call(null, "en8679_", '\x3cdiv id\x3d"error-div" class\x3d"alert alert-danger"\x3e \n \x3ccenter\x3e \n  \x3cdiv id\x3d"error-txt"\x3e\n   This is an error\n  \x3c/div\x3e \n  \x3cbr /\x3e \n  \x3cbutton id\x3d"error-btn" class\x3d"btn btn-danger"\x3eClose\x3c/button\x3e \n  \x3ccenter\x3e \n  \x3c/center\x3e\n \x3c/center\x3e\n\x3c/div\x3e');
  var sym__4174__auto___8686 = cljs.core.nth.call(null, vec__8680_8685, 0, null);
  var txt__4175__auto___8687 = cljs.core.nth.call(null, vec__8680_8685, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/error.html["#error-div"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___8686, txt__4175__auto___8687], true))
}else {
}
chatter_box.error_view_component.error_div = function error_div() {
  var vec__8684 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/error.html["#error-div"]')
  }.call(null);
  var id_sym8681 = cljs.core.nth.call(null, vec__8684, 0, null);
  var pnod8682 = cljs.core.nth.call(null, vec__8684, 1, null);
  var pnod8682__$1 = enfocus.core.create_hidden_dom.call(null, pnod8682);
  enfocus.core.i_at.call(null, id_sym8681, pnod8682__$1, "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym8681, pnod8682__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod8682__$1)
};
chatter_box.error_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, "body", enfocus.core.append.call(null, chatter_box.error_view_component.error_div.call(null)), "#error-btn", enfocus.core.do__GT_.call(null, enfocus.events.listen.call(null, "\ufdd0:click", function() {
    return enfocus.core.at.call(null, "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"))
  })))
};
chatter_box.error_view_component.show_error = function show_error(msg) {
  return enfocus.core.at.call(null, "#error-txt", enfocus.core.content.call(null, msg), "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", ""))
};
chatter_box.error_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_8768) {
        var state_val_8769 = state_8768[1];
        if(state_val_8769 === 1) {
          var state_8768__$1 = state_8768;
          var statearr_8770_8790 = state_8768__$1;
          statearr_8770_8790[2] = null;
          statearr_8770_8790[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_8769 === 2) {
            var state_8768__$1 = state_8768;
            if(true) {
              var statearr_8771_8791 = state_8768__$1;
              statearr_8771_8791[1] = 4
            }else {
              var statearr_8772_8792 = state_8768__$1;
              statearr_8772_8792[1] = 5
            }
            return"\ufdd0:recur"
          }else {
            if(state_val_8769 === 3) {
              var inst_8766 = state_8768[2];
              var state_8768__$1 = state_8768;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8768__$1, inst_8766)
            }else {
              if(state_val_8769 === 4) {
                var state_8768__$1 = state_8768;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8768__$1, 7, in_ch)
              }else {
                if(state_val_8769 === 5) {
                  var state_8768__$1 = state_8768;
                  var statearr_8773_8793 = state_8768__$1;
                  statearr_8773_8793[2] = null;
                  statearr_8773_8793[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_8769 === 6) {
                    var inst_8764 = state_8768[2];
                    var state_8768__$1 = state_8768;
                    var statearr_8774_8794 = state_8768__$1;
                    statearr_8774_8794[2] = inst_8764;
                    statearr_8774_8794[1] = 3;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_8769 === 7) {
                      var inst_8744 = state_8768[5];
                      var inst_8742 = state_8768[6];
                      var inst_8742__$1 = state_8768[2];
                      var inst_8743 = (new cljs.core.Keyword("\ufdd0:area")).call(null, inst_8742__$1);
                      var inst_8744__$1 = cljs.core._EQ_.call(null, inst_8743, "\ufdd0:view");
                      var state_8768__$1 = function() {
                        var statearr_8775 = state_8768;
                        statearr_8775[5] = inst_8744__$1;
                        statearr_8775[6] = inst_8742__$1;
                        return statearr_8775
                      }();
                      if(inst_8744__$1) {
                        var statearr_8776_8795 = state_8768__$1;
                        statearr_8776_8795[1] = 8
                      }else {
                        var statearr_8777_8796 = state_8768__$1;
                        statearr_8777_8796[1] = 9
                      }
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_8769 === 8) {
                        var inst_8742 = state_8768[6];
                        var inst_8746 = (new cljs.core.Keyword("\ufdd0:key")).call(null, inst_8742);
                        var inst_8747 = cljs.core._EQ_.call(null, inst_8746, "\ufdd0:init");
                        var state_8768__$1 = state_8768;
                        var statearr_8778_8797 = state_8768__$1;
                        statearr_8778_8797[2] = inst_8747;
                        statearr_8778_8797[1] = 10;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_8769 === 9) {
                          var inst_8744 = state_8768[5];
                          var state_8768__$1 = state_8768;
                          var statearr_8779_8798 = state_8768__$1;
                          statearr_8779_8798[2] = inst_8744;
                          statearr_8779_8798[1] = 10;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_8769 === 10) {
                            var inst_8750 = state_8768[2];
                            var state_8768__$1 = state_8768;
                            if(cljs.core.truth_(inst_8750)) {
                              var statearr_8780_8799 = state_8768__$1;
                              statearr_8780_8799[1] = 11
                            }else {
                              var statearr_8781_8800 = state_8768__$1;
                              statearr_8781_8800[1] = 12
                            }
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_8769 === 11) {
                              var inst_8752 = chatter_box.error_view_component.initialize.call(null);
                              var state_8768__$1 = state_8768;
                              var statearr_8782_8801 = state_8768__$1;
                              statearr_8782_8801[2] = inst_8752;
                              statearr_8782_8801[1] = 13;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_8769 === 12) {
                                var inst_8742 = state_8768[6];
                                var inst_8754 = cljs.core.pr_str.call(null, "ERROR:", inst_8742);
                                var inst_8755 = enfocus.core.log_debug.call(null, inst_8754);
                                var inst_8756 = (new cljs.core.Keyword("\ufdd0:data")).call(null, inst_8742);
                                var inst_8757 = (new cljs.core.Keyword("\ufdd0:err")).call(null, inst_8756);
                                var inst_8758 = chatter_box.error_view_component.show_error.call(null, inst_8757);
                                var state_8768__$1 = function() {
                                  var statearr_8783 = state_8768;
                                  statearr_8783[7] = inst_8755;
                                  return statearr_8783
                                }();
                                var statearr_8784_8802 = state_8768__$1;
                                statearr_8784_8802[2] = inst_8758;
                                statearr_8784_8802[1] = 13;
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_8769 === 13) {
                                  var inst_8760 = state_8768[2];
                                  var state_8768__$1 = function() {
                                    var statearr_8785 = state_8768;
                                    statearr_8785[8] = inst_8760;
                                    return statearr_8785
                                  }();
                                  var statearr_8786_8803 = state_8768__$1;
                                  statearr_8786_8803[2] = null;
                                  statearr_8786_8803[1] = 2;
                                  return"\ufdd0:recur"
                                }else {
                                  return null
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_8788 = new Array(9);
            statearr_8788[0] = state_machine__5582__auto__;
            statearr_8788[1] = 1;
            return statearr_8788
          };
          var state_machine__5582__auto____1 = function(state_8768) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_8768);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_8768) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_8768)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_8789 = f__5654__auto__.call(null);
      statearr_8789[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_8789
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.chat_client");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("cljs.core.match");
goog.require("cljs.core.async");
goog.require("chatter_box.protocol");
goog.require("chatter_box.event_bus");
goog.require("enfocus.core");
chatter_box.chat_client.external_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:join"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:created"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", 
"\ufdd0:key", "\ufdd0:updated"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:receive-chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", 
"\ufdd0:left"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-failure"], true), null], true);
chatter_box.chat_client.create_chat_client = function() {
  var create_chat_client__delegate = function(sub_components) {
    var in_ch = cljs.core.async.chan.call(null);
    if(typeof chatter_box.chat_client.t47555 !== "undefined") {
    }else {
      goog.provide("chatter_box.chat_client.t47555");
      chatter_box.chat_client.t47555 = function(in_ch, sub_components, create_chat_client, meta47556) {
        this.in_ch = in_ch;
        this.sub_components = sub_components;
        this.create_chat_client = create_chat_client;
        this.meta47556 = meta47556;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      chatter_box.chat_client.t47555.cljs$lang$type = true;
      chatter_box.chat_client.t47555.cljs$lang$ctorStr = "chatter-box.chat-client/t47555";
      chatter_box.chat_client.t47555.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-client/t47555")
      };
      chatter_box.chat_client.t47555.prototype.chatter_box$event_bus$Component$ = true;
      chatter_box.chat_client.t47555.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
        var self__ = this;
        return chatter_box.chat_client.setup.call(null, out_ch, self__.in_ch, self__.sub_components)
      };
      chatter_box.chat_client.t47555.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
        var self__ = this;
        return chatter_box.protocol.create_filter.call(null, chatter_box.chat_client.external_types).call(null, msg)
      };
      chatter_box.chat_client.t47555.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
        var self__ = this;
        return self__.in_ch
      };
      chatter_box.chat_client.t47555.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47557) {
        var self__ = this;
        return self__.meta47556
      };
      chatter_box.chat_client.t47555.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47557, meta47556__$1) {
        var self__ = this;
        return new chatter_box.chat_client.t47555(self__.in_ch, self__.sub_components, self__.create_chat_client, meta47556__$1)
      };
      chatter_box.chat_client.__GT_t47555 = function __GT_t47555(in_ch__$1, sub_components__$1, create_chat_client__$1, meta47556) {
        return new chatter_box.chat_client.t47555(in_ch__$1, sub_components__$1, create_chat_client__$1, meta47556)
      }
    }
    return new chatter_box.chat_client.t47555(in_ch, sub_components, create_chat_client, null)
  };
  var create_chat_client = function(var_args) {
    var sub_components = null;
    if(arguments.length > 0) {
      sub_components = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return create_chat_client__delegate.call(this, sub_components)
  };
  create_chat_client.cljs$lang$maxFixedArity = 0;
  create_chat_client.cljs$lang$applyTo = function(arglist__47558) {
    var sub_components = cljs.core.seq(arglist__47558);
    return create_chat_client__delegate(sub_components)
  };
  create_chat_client.cljs$core$IFn$_invoke$arity$variadic = create_chat_client__delegate;
  return create_chat_client
}();
chatter_box.chat_client.pipe_ch = function pipe_ch(in_ch, out_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_47595) {
        var state_val_47596 = state_47595[1];
        if(state_val_47596 === 7) {
          var inst_47586 = state_47595[2];
          var inst_47587 = cljs.core.async.put_BANG_.call(null, out_ch, inst_47586);
          var state_47595__$1 = function() {
            var statearr_47597 = state_47595;
            statearr_47597[5] = inst_47587;
            return statearr_47597
          }();
          var statearr_47598_47607 = state_47595__$1;
          statearr_47598_47607[2] = null;
          statearr_47598_47607[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_47596 === 6) {
            var inst_47591 = state_47595[2];
            var state_47595__$1 = state_47595;
            var statearr_47599_47608 = state_47595__$1;
            statearr_47599_47608[2] = inst_47591;
            statearr_47599_47608[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_47596 === 5) {
              var state_47595__$1 = state_47595;
              var statearr_47600_47609 = state_47595__$1;
              statearr_47600_47609[2] = null;
              statearr_47600_47609[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_47596 === 4) {
                var state_47595__$1 = state_47595;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47595__$1, 7, in_ch)
              }else {
                if(state_val_47596 === 3) {
                  var inst_47593 = state_47595[2];
                  var state_47595__$1 = state_47595;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_47595__$1, inst_47593)
                }else {
                  if(state_val_47596 === 2) {
                    var state_47595__$1 = state_47595;
                    if(true) {
                      var statearr_47601_47610 = state_47595__$1;
                      statearr_47601_47610[1] = 4
                    }else {
                      var statearr_47602_47611 = state_47595__$1;
                      statearr_47602_47611[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_47596 === 1) {
                      var state_47595__$1 = state_47595;
                      var statearr_47603_47612 = state_47595__$1;
                      statearr_47603_47612[2] = null;
                      statearr_47603_47612[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_47605 = new Array(6);
            statearr_47605[0] = state_machine__5582__auto__;
            statearr_47605[1] = 1;
            return statearr_47605
          };
          var state_machine__5582__auto____1 = function(state_47595) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_47595);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_47595) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_47595)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_47606 = f__5654__auto__.call(null);
      statearr_47606[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_47606
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
chatter_box.chat_client.internal_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:update"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:create"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:send-chat"], true), null], true);
chatter_box.chat_client.create_internal_component = function create_internal_component(ext_out, ext_in) {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.chat_client.t47616 !== "undefined") {
  }else {
    goog.provide("chatter_box.chat_client.t47616");
    chatter_box.chat_client.t47616 = function(in_ch, ext_in, ext_out, create_internal_component, meta47617) {
      this.in_ch = in_ch;
      this.ext_in = ext_in;
      this.ext_out = ext_out;
      this.create_internal_component = create_internal_component;
      this.meta47617 = meta47617;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.chat_client.t47616.cljs$lang$type = true;
    chatter_box.chat_client.t47616.cljs$lang$ctorStr = "chatter-box.chat-client/t47616";
    chatter_box.chat_client.t47616.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-client/t47616")
    };
    chatter_box.chat_client.t47616.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.chat_client.t47616.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      chatter_box.chat_client.pipe_ch.call(null, self__.ext_in, out_ch);
      return chatter_box.chat_client.pipe_ch.call(null, self__.in_ch, self__.ext_out)
    };
    chatter_box.chat_client.t47616.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.chat_client.internal_types).call(null, msg)
    };
    chatter_box.chat_client.t47616.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.chat_client.t47616.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47618) {
      var self__ = this;
      return self__.meta47617
    };
    chatter_box.chat_client.t47616.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47618, meta47617__$1) {
      var self__ = this;
      return new chatter_box.chat_client.t47616(self__.in_ch, self__.ext_in, self__.ext_out, self__.create_internal_component, meta47617__$1)
    };
    chatter_box.chat_client.__GT_t47616 = function __GT_t47616(in_ch__$1, ext_in__$1, ext_out__$1, create_internal_component__$1, meta47617) {
      return new chatter_box.chat_client.t47616(in_ch__$1, ext_in__$1, ext_out__$1, create_internal_component__$1, meta47617)
    }
  }
  return new chatter_box.chat_client.t47616(in_ch, ext_in, ext_out, create_internal_component, null)
};
chatter_box.chat_client.setup = function setup(out_ch, in_ch, sub_components) {
  return cljs.core.apply.call(null, chatter_box.event_bus.create_bus, cljs.core.conj.call(null, sub_components, chatter_box.chat_client.create_internal_component.call(null, out_ch, in_ch)))
};
goog.provide("chatter_box.main");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("chatter_box.user_view_component");
goog.require("cljs.core.async");
goog.require("chatter_box.protocol");
goog.require("chatter_box.chat_view_component");
goog.require("cljs.reader");
goog.require("chatter_box.consol_log_component");
goog.require("chatter_box.chat_client");
goog.require("chatter_box.login_view_component");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.error_view_component");
chatter_box.main.testing = false;
chatter_box.main.ws_url = "ws://10.0.1.62:3000/async";
chatter_box.main.init = function init() {
  var c_client = chatter_box.chat_client.create_chat_client.call(null, chatter_box.user_view_component.create_user_view_component.call(null), chatter_box.chat_view_component.create_chat_view_component.call(null), chatter_box.login_view_component.create_login_view_component.call(null), chatter_box.consol_log_component.create_consol_log_component.call(null), chatter_box.error_view_component.create_error_view_component.call(null));
  var out_ch = cljs.core.async.chan.call(null);
  var in_ch = chatter_box.event_bus.get_channel.call(null, c_client);
  var ws = cljs.core.atom.call(null, new WebSocket(chatter_box.main.ws_url));
  chatter_box.event_bus.init.call(null, c_client, out_ch);
  cljs.core.deref.call(null, ws).onmessage = function(msg) {
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, "RECEIVE:", msg.data));
    return cljs.core.async.put_BANG_.call(null, in_ch, cljs.reader.read_string.call(null, msg.data))
  };
  cljs.core.deref.call(null, ws).onclose = function(msg) {
    return location.reload()
  };
  var c__5653__auto___7181 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_7169) {
        var state_val_7170 = state_7169[1];
        if(state_val_7170 === 7) {
          var inst_7156 = state_7169[2];
          var inst_7157 = cljs.core.pr_str.call(null, "SEND:", inst_7156);
          var inst_7158 = enfocus.core.log_debug.call(null, inst_7157);
          var inst_7159 = cljs.core.deref.call(null, ws);
          var inst_7160 = cljs.core.pr_str.call(null, inst_7156);
          var inst_7161 = inst_7159.send(inst_7160);
          var state_7169__$1 = function() {
            var statearr_7171 = state_7169;
            statearr_7171[5] = inst_7158;
            statearr_7171[6] = inst_7161;
            return statearr_7171
          }();
          var statearr_7172_7182 = state_7169__$1;
          statearr_7172_7182[2] = null;
          statearr_7172_7182[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_7170 === 6) {
            var inst_7165 = state_7169[2];
            var state_7169__$1 = state_7169;
            var statearr_7173_7183 = state_7169__$1;
            statearr_7173_7183[2] = inst_7165;
            statearr_7173_7183[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_7170 === 5) {
              var state_7169__$1 = state_7169;
              var statearr_7174_7184 = state_7169__$1;
              statearr_7174_7184[2] = null;
              statearr_7174_7184[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_7170 === 4) {
                var state_7169__$1 = state_7169;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7169__$1, 7, out_ch)
              }else {
                if(state_val_7170 === 3) {
                  var inst_7167 = state_7169[2];
                  var state_7169__$1 = state_7169;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7169__$1, inst_7167)
                }else {
                  if(state_val_7170 === 2) {
                    var state_7169__$1 = state_7169;
                    if(true) {
                      var statearr_7175_7185 = state_7169__$1;
                      statearr_7175_7185[1] = 4
                    }else {
                      var statearr_7176_7186 = state_7169__$1;
                      statearr_7176_7186[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_7170 === 1) {
                      var state_7169__$1 = state_7169;
                      var statearr_7177_7187 = state_7169__$1;
                      statearr_7177_7187[2] = null;
                      statearr_7177_7187[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_7179 = new Array(7);
            statearr_7179[0] = state_machine__5582__auto__;
            statearr_7179[1] = 1;
            return statearr_7179
          };
          var state_machine__5582__auto____1 = function(state_7169) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_7169);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_7169) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_7169)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_7180 = f__5654__auto__.call(null);
      statearr_7180[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto___7181;
      return statearr_7180
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return cljs.core.async.put_BANG_.call(null, in_ch, chatter_box.protocol.create_message.call(null, "\ufdd0:view", "\ufdd0:init", null))
};
window.onload = chatter_box.main.init;
