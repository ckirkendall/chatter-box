var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:flush-on-newline", cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0:readably", cljs.core._STAR_print_readably_STAR_, "\ufdd0:meta", cljs.core._STAR_print_meta_STAR_, "\ufdd0:dup", cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0:else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__12970__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__12970 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12970__delegate.call(this, array, i, idxs)
    };
    G__12970.cljs$lang$maxFixedArity = 2;
    G__12970.cljs$lang$applyTo = function(arglist__12971) {
      var array = cljs.core.first(arglist__12971);
      arglist__12971 = cljs.core.next(arglist__12971);
      var i = cljs.core.first(arglist__12971);
      var idxs = cljs.core.rest(arglist__12971);
      return G__12970__delegate(array, i, idxs)
    };
    G__12970.cljs$core$IFn$_invoke$arity$variadic = G__12970__delegate;
    return G__12970
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__12972__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__12972 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12972__delegate.call(this, array, idx, idx2, idxv)
    };
    G__12972.cljs$lang$maxFixedArity = 3;
    G__12972.cljs$lang$applyTo = function(arglist__12973) {
      var array = cljs.core.first(arglist__12973);
      arglist__12973 = cljs.core.next(arglist__12973);
      var idx = cljs.core.first(arglist__12973);
      arglist__12973 = cljs.core.next(arglist__12973);
      var idx2 = cljs.core.first(arglist__12973);
      var idxv = cljs.core.rest(arglist__12973);
      return G__12972__delegate(array, idx, idx2, idxv)
    };
    G__12972.cljs$core$IFn$_invoke$arity$variadic = G__12972__delegate;
    return G__12972
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3370__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3370__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3370__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3370__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3370__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3370__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3370__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3370__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3370__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3191__auto__ = self__._hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__12975 = null;
  var G__12975__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__12975__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__12975 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12975__2.call(this, self__, coll);
      case 3:
        return G__12975__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12975
}();
cljs.core.Symbol.prototype.apply = function(self__, args12974) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12974.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12977 = coll;
      if(G__12977) {
        if(function() {
          var or__3943__auto__ = G__12977.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12977.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if("\ufdd0:else") {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12979 = coll;
      if(G__12979) {
        if(function() {
          var or__3943__auto__ = G__12979.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12979.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12981 = coll;
      if(G__12981) {
        if(function() {
          var or__3943__auto__ = G__12981.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12981.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12983 = coll;
      if(G__12983) {
        if(function() {
          var or__3943__auto__ = G__12983.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12983.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__12984__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12985 = y;
            var G__12986 = cljs.core.first.call(null, more);
            var G__12987 = cljs.core.next.call(null, more);
            x = G__12985;
            y = G__12986;
            more = G__12987;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12984 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12984__delegate.call(this, x, y, more)
    };
    G__12984.cljs$lang$maxFixedArity = 2;
    G__12984.cljs$lang$applyTo = function(arglist__12988) {
      var x = cljs.core.first(arglist__12988);
      arglist__12988 = cljs.core.next(arglist__12988);
      var y = cljs.core.first(arglist__12988);
      var more = cljs.core.rest(arglist__12988);
      return G__12984__delegate(x, y, more)
    };
    G__12984.cljs$core$IFn$_invoke$arity$variadic = G__12984__delegate;
    return G__12984
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__12989 = nval;
            var G__12990 = n + 1;
            val = G__12989;
            n = G__12990;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12991 = nval;
          var G__12992 = n + 1;
          val__$1 = G__12991;
          n = G__12992;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12993 = nval;
          var G__12994 = n + 1;
          val__$1 = G__12993;
          n = G__12994;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__12995 = nval;
            var G__12996 = n + 1;
            val = G__12995;
            n = G__12996;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12997 = nval;
          var G__12998 = n + 1;
          val__$1 = G__12997;
          n = G__12998;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12999 = nval;
          var G__13000 = n + 1;
          val__$1 = G__12999;
          n = G__13000;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__13002 = x;
  if(G__13002) {
    if(function() {
      var or__3943__auto__ = G__13002.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13002.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__13002.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__13002)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__13002)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__13004 = x;
  if(G__13004) {
    if(function() {
      var or__3943__auto__ = G__13004.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13004.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__13004.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__13004)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__13004)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function(col, f) {
  return cljs.core.array_reduce.call(null, col, f)
};
cljs.core._reduce["array"] = function(col, f, start) {
  return cljs.core.array_reduce.call(null, col, f, start)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__13005 = sn;
      s = G__13005;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__13006__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__13007 = conj.call(null, coll, x);
          var G__13008 = cljs.core.first.call(null, xs);
          var G__13009 = cljs.core.next.call(null, xs);
          coll = G__13007;
          x = G__13008;
          xs = G__13009;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__13006 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13006__delegate.call(this, coll, x, xs)
    };
    G__13006.cljs$lang$maxFixedArity = 2;
    G__13006.cljs$lang$applyTo = function(arglist__13010) {
      var coll = cljs.core.first(arglist__13010);
      arglist__13010 = cljs.core.next(arglist__13010);
      var x = cljs.core.first(arglist__13010);
      var xs = cljs.core.rest(arglist__13010);
      return G__13006__delegate(coll, x, xs)
    };
    G__13006.cljs$core$IFn$_invoke$arity$variadic = G__13006__delegate;
    return G__13006
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__13011 = cljs.core.next.call(null, s);
      var G__13012 = acc + 1;
      s = G__13011;
      acc = G__13012;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__13014 = coll;
      if(G__13014) {
        if(function() {
          var or__3943__auto__ = G__13014.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__13014.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if("\ufdd0:else") {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__13015 = cljs.core.next.call(null, coll);
              var G__13016 = n - 1;
              coll = G__13015;
              n = G__13016;
              continue
            }else {
              if("\ufdd0:else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__13017 = cljs.core.next.call(null, coll);
              var G__13018 = n - 1;
              var G__13019 = not_found;
              coll = G__13017;
              n = G__13018;
              not_found = G__13019;
              continue
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__13024 = coll;
        if(G__13024) {
          if(function() {
            var or__3943__auto__ = G__13024.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13024.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if("\ufdd0:else") {
                if(function() {
                  var G__13025 = coll;
                  if(G__13025) {
                    if(function() {
                      var or__3943__auto__ = G__13025.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__13025.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__13025.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13025)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13025)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__13026 = coll;
        if(G__13026) {
          if(function() {
            var or__3943__auto__ = G__13026.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13026.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if("\ufdd0:else") {
                if(function() {
                  var G__13027 = coll;
                  if(G__13027) {
                    if(function() {
                      var or__3943__auto__ = G__13027.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__13027.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__13027.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13027)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13027)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__13030 = o;
        if(G__13030) {
          if(function() {
            var or__3943__auto__ = G__13030.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13030.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if("\ufdd0:else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__13031 = o;
        if(G__13031) {
          if(function() {
            var or__3943__auto__ = G__13031.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13031.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__13032__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__13033 = ret;
          var G__13034 = cljs.core.first.call(null, kvs);
          var G__13035 = cljs.core.second.call(null, kvs);
          var G__13036 = cljs.core.nnext.call(null, kvs);
          coll = G__13033;
          k = G__13034;
          v = G__13035;
          kvs = G__13036;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__13032 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13032__delegate.call(this, coll, k, v, kvs)
    };
    G__13032.cljs$lang$maxFixedArity = 3;
    G__13032.cljs$lang$applyTo = function(arglist__13037) {
      var coll = cljs.core.first(arglist__13037);
      arglist__13037 = cljs.core.next(arglist__13037);
      var k = cljs.core.first(arglist__13037);
      arglist__13037 = cljs.core.next(arglist__13037);
      var v = cljs.core.first(arglist__13037);
      var kvs = cljs.core.rest(arglist__13037);
      return G__13032__delegate(coll, k, v, kvs)
    };
    G__13032.cljs$core$IFn$_invoke$arity$variadic = G__13032__delegate;
    return G__13032
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__13038__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__13039 = ret;
          var G__13040 = cljs.core.first.call(null, ks);
          var G__13041 = cljs.core.next.call(null, ks);
          coll = G__13039;
          k = G__13040;
          ks = G__13041;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__13038 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13038__delegate.call(this, coll, k, ks)
    };
    G__13038.cljs$lang$maxFixedArity = 2;
    G__13038.cljs$lang$applyTo = function(arglist__13042) {
      var coll = cljs.core.first(arglist__13042);
      arglist__13042 = cljs.core.next(arglist__13042);
      var k = cljs.core.first(arglist__13042);
      var ks = cljs.core.rest(arglist__13042);
      return G__13038__delegate(coll, k, ks)
    };
    G__13038.cljs$core$IFn$_invoke$arity$variadic = G__13038__delegate;
    return G__13038
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__13044 = f;
    if(G__13044) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__13044.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__13044.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__13044)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__13044)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__13050 = o;
        if(G__13050) {
          if(function() {
            var or__3943__auto__ = G__13050.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13050.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__13050.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13050)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13050)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t13051 !== "undefined") {
      }else {
        goog.provide("cljs.core.t13051");
        cljs.core.t13051 = function(meta, o, with_meta, meta13052) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta13052 = meta13052;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t13051.cljs$lang$type = true;
        cljs.core.t13051.cljs$lang$ctorStr = "cljs.core/t13051";
        cljs.core.t13051.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
          return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/t13051")
        };
        cljs.core.t13051.prototype.call = function() {
          var G__13055__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__13055 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__13055__delegate.call(this, self__, args)
          };
          G__13055.cljs$lang$maxFixedArity = 1;
          G__13055.cljs$lang$applyTo = function(arglist__13056) {
            var self__ = cljs.core.first(arglist__13056);
            var args = cljs.core.rest(arglist__13056);
            return G__13055__delegate(self__, args)
          };
          G__13055.cljs$core$IFn$_invoke$arity$variadic = G__13055__delegate;
          return G__13055
        }();
        cljs.core.t13051.prototype.apply = function(self__, args13054) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args13054.slice()))
        };
        cljs.core.t13051.prototype.cljs$core$Fn$ = true;
        cljs.core.t13051.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13053) {
          var self__ = this;
          return self__.meta13052
        };
        cljs.core.t13051.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13053, meta13052__$1) {
          var self__ = this;
          return new cljs.core.t13051(self__.meta, self__.o, self__.with_meta, meta13052__$1)
        };
        cljs.core.__GT_t13051 = function __GT_t13051(meta__$1, o__$1, with_meta__$1, meta13052) {
          return new cljs.core.t13051(meta__$1, o__$1, with_meta__$1, meta13052)
        }
      }
      return new cljs.core.t13051(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__13058 = o;
    if(G__13058) {
      if(function() {
        var or__3943__auto__ = G__13058.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13058.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__13058.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__13058)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__13058)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__13059__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__13060 = ret;
          var G__13061 = cljs.core.first.call(null, ks);
          var G__13062 = cljs.core.next.call(null, ks);
          coll = G__13060;
          k = G__13061;
          ks = G__13062;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__13059 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13059__delegate.call(this, coll, k, ks)
    };
    G__13059.cljs$lang$maxFixedArity = 2;
    G__13059.cljs$lang$applyTo = function(arglist__13063) {
      var coll = cljs.core.first(arglist__13063);
      arglist__13063 = cljs.core.next(arglist__13063);
      var k = cljs.core.first(arglist__13063);
      var ks = cljs.core.rest(arglist__13063);
      return G__13059__delegate(coll, k, ks)
    };
    G__13059.cljs$core$IFn$_invoke$arity$variadic = G__13059__delegate;
    return G__13059
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__13065 = x;
    if(G__13065) {
      if(function() {
        var or__3943__auto__ = G__13065.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13065.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__13065.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__13065)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__13065)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__13067 = x;
    if(G__13067) {
      if(function() {
        var or__3943__auto__ = G__13067.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13067.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__13067.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__13067)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__13067)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__13069 = x;
  if(G__13069) {
    if(function() {
      var or__3943__auto__ = G__13069.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13069.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__13069.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__13069)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__13069)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__13071 = x;
  if(G__13071) {
    if(function() {
      var or__3943__auto__ = G__13071.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13071.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__13071.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__13071)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__13071)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__13073 = x;
  if(G__13073) {
    if(function() {
      var or__3943__auto__ = G__13073.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13073.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__13073.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__13073)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__13073)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__13075 = x;
    if(G__13075) {
      if(function() {
        var or__3943__auto__ = G__13075.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13075.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__13075.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__13075)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__13075)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__13077 = x;
  if(G__13077) {
    if(function() {
      var or__3943__auto__ = G__13077.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13077.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__13077.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__13077)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__13077)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__13079 = x;
  if(G__13079) {
    if(function() {
      var or__3943__auto__ = G__13079.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13079.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__13080__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__13080 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13080__delegate.call(this, keyvals)
    };
    G__13080.cljs$lang$maxFixedArity = 0;
    G__13080.cljs$lang$applyTo = function(arglist__13081) {
      var keyvals = cljs.core.seq(arglist__13081);
      return G__13080__delegate(keyvals)
    };
    G__13080.cljs$core$IFn$_invoke$arity$variadic = G__13080__delegate;
    return G__13080
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__13082 = i__$1 + 1;
      var G__13083 = j__$1 + 1;
      var G__13084 = len__$1 - 1;
      i__$1 = G__13082;
      j__$1 = G__13083;
      len__$1 = G__13084;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__13085 = i__$1 - 1;
      var G__13086 = j__$1 - 1;
      var G__13087 = len__$1 - 1;
      i__$1 = G__13085;
      j__$1 = G__13086;
      len__$1 = G__13087;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__13089 = s;
    if(G__13089) {
      if(function() {
        var or__3943__auto__ = G__13089.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13089.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__13089.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13089)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__13089)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__13091 = s;
  if(G__13091) {
    if(function() {
      var or__3943__auto__ = G__13091.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13091.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__13091.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__13091)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__13091)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto__
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__13093 = f;
    if(G__13093) {
      if(function() {
        var or__3943__auto____$1 = G__13093.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__13093.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__13093.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__13093)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__13093)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__13094__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__13095 = cljs.core.conj.call(null, s, x__$1);
              var G__13096 = etc;
              s = G__13095;
              xs = G__13096;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__13094 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13094__delegate.call(this, x, y, more)
    };
    G__13094.cljs$lang$maxFixedArity = 2;
    G__13094.cljs$lang$applyTo = function(arglist__13097) {
      var x = cljs.core.first(arglist__13097);
      arglist__13097 = cljs.core.next(arglist__13097);
      var y = cljs.core.first(arglist__13097);
      var more = cljs.core.rest(arglist__13097);
      return G__13094__delegate(x, y, more)
    };
    G__13094.cljs$core$IFn$_invoke$arity$variadic = G__13094__delegate;
    return G__13094
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__13099 = x;
            if(G__13099) {
              if(function() {
                var or__3943__auto__ = G__13099.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__13099.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0:else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if("\ufdd0:else") {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__13100 = xs;
        var G__13101 = ys;
        var G__13102 = len;
        var G__13103 = n + 1;
        xs = G__13100;
        ys = G__13101;
        len = G__13102;
        n = G__13103;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13104 = nval;
          var G__13105 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__13104;
          coll__$1 = G__13105;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__13108 = coll;
      if(G__13108) {
        if(function() {
          var or__3943__auto__ = G__13108.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__13108.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__13109 = coll;
      if(G__13109) {
        if(function() {
          var or__3943__auto__ = G__13109.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__13109.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__13110__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__13110 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13110__delegate.call(this, x, y, more)
    };
    G__13110.cljs$lang$maxFixedArity = 2;
    G__13110.cljs$lang$applyTo = function(arglist__13111) {
      var x = cljs.core.first(arglist__13111);
      arglist__13111 = cljs.core.next(arglist__13111);
      var y = cljs.core.first(arglist__13111);
      var more = cljs.core.rest(arglist__13111);
      return G__13110__delegate(x, y, more)
    };
    G__13110.cljs$core$IFn$_invoke$arity$variadic = G__13110__delegate;
    return G__13110
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__13112__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__13112 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13112__delegate.call(this, x, y, more)
    };
    G__13112.cljs$lang$maxFixedArity = 2;
    G__13112.cljs$lang$applyTo = function(arglist__13113) {
      var x = cljs.core.first(arglist__13113);
      arglist__13113 = cljs.core.next(arglist__13113);
      var y = cljs.core.first(arglist__13113);
      var more = cljs.core.rest(arglist__13113);
      return G__13112__delegate(x, y, more)
    };
    G__13112.cljs$core$IFn$_invoke$arity$variadic = G__13112__delegate;
    return G__13112
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__13114__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__13114 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13114__delegate.call(this, x, y, more)
    };
    G__13114.cljs$lang$maxFixedArity = 2;
    G__13114.cljs$lang$applyTo = function(arglist__13115) {
      var x = cljs.core.first(arglist__13115);
      arglist__13115 = cljs.core.next(arglist__13115);
      var y = cljs.core.first(arglist__13115);
      var more = cljs.core.rest(arglist__13115);
      return G__13114__delegate(x, y, more)
    };
    G__13114.cljs$core$IFn$_invoke$arity$variadic = G__13114__delegate;
    return G__13114
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__13116__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__13116 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13116__delegate.call(this, x, y, more)
    };
    G__13116.cljs$lang$maxFixedArity = 2;
    G__13116.cljs$lang$applyTo = function(arglist__13117) {
      var x = cljs.core.first(arglist__13117);
      arglist__13117 = cljs.core.next(arglist__13117);
      var y = cljs.core.first(arglist__13117);
      var more = cljs.core.rest(arglist__13117);
      return G__13116__delegate(x, y, more)
    };
    G__13116.cljs$core$IFn$_invoke$arity$variadic = G__13116__delegate;
    return G__13116
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__13118__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__13119 = y;
            var G__13120 = cljs.core.first.call(null, more);
            var G__13121 = cljs.core.next.call(null, more);
            x = G__13119;
            y = G__13120;
            more = G__13121;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13118 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13118__delegate.call(this, x, y, more)
    };
    G__13118.cljs$lang$maxFixedArity = 2;
    G__13118.cljs$lang$applyTo = function(arglist__13122) {
      var x = cljs.core.first(arglist__13122);
      arglist__13122 = cljs.core.next(arglist__13122);
      var y = cljs.core.first(arglist__13122);
      var more = cljs.core.rest(arglist__13122);
      return G__13118__delegate(x, y, more)
    };
    G__13118.cljs$core$IFn$_invoke$arity$variadic = G__13118__delegate;
    return G__13118
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__13123__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__13124 = y;
            var G__13125 = cljs.core.first.call(null, more);
            var G__13126 = cljs.core.next.call(null, more);
            x = G__13124;
            y = G__13125;
            more = G__13126;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13123 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13123__delegate.call(this, x, y, more)
    };
    G__13123.cljs$lang$maxFixedArity = 2;
    G__13123.cljs$lang$applyTo = function(arglist__13127) {
      var x = cljs.core.first(arglist__13127);
      arglist__13127 = cljs.core.next(arglist__13127);
      var y = cljs.core.first(arglist__13127);
      var more = cljs.core.rest(arglist__13127);
      return G__13123__delegate(x, y, more)
    };
    G__13123.cljs$core$IFn$_invoke$arity$variadic = G__13123__delegate;
    return G__13123
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__13128__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__13129 = y;
            var G__13130 = cljs.core.first.call(null, more);
            var G__13131 = cljs.core.next.call(null, more);
            x = G__13129;
            y = G__13130;
            more = G__13131;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13128 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13128__delegate.call(this, x, y, more)
    };
    G__13128.cljs$lang$maxFixedArity = 2;
    G__13128.cljs$lang$applyTo = function(arglist__13132) {
      var x = cljs.core.first(arglist__13132);
      arglist__13132 = cljs.core.next(arglist__13132);
      var y = cljs.core.first(arglist__13132);
      var more = cljs.core.rest(arglist__13132);
      return G__13128__delegate(x, y, more)
    };
    G__13128.cljs$core$IFn$_invoke$arity$variadic = G__13128__delegate;
    return G__13128
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__13133__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__13134 = y;
            var G__13135 = cljs.core.first.call(null, more);
            var G__13136 = cljs.core.next.call(null, more);
            x = G__13134;
            y = G__13135;
            more = G__13136;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13133 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13133__delegate.call(this, x, y, more)
    };
    G__13133.cljs$lang$maxFixedArity = 2;
    G__13133.cljs$lang$applyTo = function(arglist__13137) {
      var x = cljs.core.first(arglist__13137);
      arglist__13137 = cljs.core.next(arglist__13137);
      var y = cljs.core.first(arglist__13137);
      var more = cljs.core.rest(arglist__13137);
      return G__13133__delegate(x, y, more)
    };
    G__13133.cljs$core$IFn$_invoke$arity$variadic = G__13133__delegate;
    return G__13133
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3092__auto__ = x;
    var y__3093__auto__ = y;
    return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
  };
  var max__3 = function() {
    var G__13138__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3092__auto__ = x;
        var y__3093__auto__ = y;
        return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
      }(), more)
    };
    var G__13138 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13138__delegate.call(this, x, y, more)
    };
    G__13138.cljs$lang$maxFixedArity = 2;
    G__13138.cljs$lang$applyTo = function(arglist__13139) {
      var x = cljs.core.first(arglist__13139);
      arglist__13139 = cljs.core.next(arglist__13139);
      var y = cljs.core.first(arglist__13139);
      var more = cljs.core.rest(arglist__13139);
      return G__13138__delegate(x, y, more)
    };
    G__13138.cljs$core$IFn$_invoke$arity$variadic = G__13138__delegate;
    return G__13138
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3099__auto__ = x;
    var y__3100__auto__ = y;
    return x__3099__auto__ < y__3100__auto__ ? x__3099__auto__ : y__3100__auto__
  };
  var min__3 = function() {
    var G__13140__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3099__auto__ = x;
        var y__3100__auto__ = y;
        return x__3099__auto__ < y__3100__auto__ ? x__3099__auto__ : y__3100__auto__
      }(), more)
    };
    var G__13140 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13140__delegate.call(this, x, y, more)
    };
    G__13140.cljs$lang$maxFixedArity = 2;
    G__13140.cljs$lang$applyTo = function(arglist__13141) {
      var x = cljs.core.first(arglist__13141);
      arglist__13141 = cljs.core.next(arglist__13141);
      var y = cljs.core.first(arglist__13141);
      var more = cljs.core.rest(arglist__13141);
      return G__13140__delegate(x, y, more)
    };
    G__13140.cljs$core$IFn$_invoke$arity$variadic = G__13140__delegate;
    return G__13140
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if("\ufdd0:else") {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__13142__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__13142 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13142__delegate.call(this, x, y, more)
    };
    G__13142.cljs$lang$maxFixedArity = 2;
    G__13142.cljs$lang$applyTo = function(arglist__13143) {
      var x = cljs.core.first(arglist__13143);
      arglist__13143 = cljs.core.next(arglist__13143);
      var y = cljs.core.first(arglist__13143);
      var more = cljs.core.rest(arglist__13143);
      return G__13142__delegate(x, y, more)
    };
    G__13142.cljs$core$IFn$_invoke$arity$variadic = G__13142__delegate;
    return G__13142
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__13144__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__13144 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13144__delegate.call(this, x, y, more)
    };
    G__13144.cljs$lang$maxFixedArity = 2;
    G__13144.cljs$lang$applyTo = function(arglist__13145) {
      var x = cljs.core.first(arglist__13145);
      arglist__13145 = cljs.core.next(arglist__13145);
      var y = cljs.core.first(arglist__13145);
      var more = cljs.core.rest(arglist__13145);
      return G__13144__delegate(x, y, more)
    };
    G__13144.cljs$core$IFn$_invoke$arity$variadic = G__13144__delegate;
    return G__13144
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__13146__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__13146 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13146__delegate.call(this, x, y, more)
    };
    G__13146.cljs$lang$maxFixedArity = 2;
    G__13146.cljs$lang$applyTo = function(arglist__13147) {
      var x = cljs.core.first(arglist__13147);
      arglist__13147 = cljs.core.next(arglist__13147);
      var y = cljs.core.first(arglist__13147);
      var more = cljs.core.rest(arglist__13147);
      return G__13146__delegate(x, y, more)
    };
    G__13146.cljs$core$IFn$_invoke$arity$variadic = G__13146__delegate;
    return G__13146
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__13148__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__13148 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13148__delegate.call(this, x, y, more)
    };
    G__13148.cljs$lang$maxFixedArity = 2;
    G__13148.cljs$lang$applyTo = function(arglist__13149) {
      var x = cljs.core.first(arglist__13149);
      arglist__13149 = cljs.core.next(arglist__13149);
      var y = cljs.core.first(arglist__13149);
      var more = cljs.core.rest(arglist__13149);
      return G__13148__delegate(x, y, more)
    };
    G__13148.cljs$core$IFn$_invoke$arity$variadic = G__13148__delegate;
    return G__13148
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__13150__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__13150 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13150__delegate.call(this, x, y, more)
    };
    G__13150.cljs$lang$maxFixedArity = 2;
    G__13150.cljs$lang$applyTo = function(arglist__13151) {
      var x = cljs.core.first(arglist__13151);
      arglist__13151 = cljs.core.next(arglist__13151);
      var y = cljs.core.first(arglist__13151);
      var more = cljs.core.rest(arglist__13151);
      return G__13150__delegate(x, y, more)
    };
    G__13150.cljs$core$IFn$_invoke$arity$variadic = G__13150__delegate;
    return G__13150
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__13152__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__13152 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13152__delegate.call(this, x, y, more)
    };
    G__13152.cljs$lang$maxFixedArity = 2;
    G__13152.cljs$lang$applyTo = function(arglist__13153) {
      var x = cljs.core.first(arglist__13153);
      arglist__13153 = cljs.core.next(arglist__13153);
      var y = cljs.core.first(arglist__13153);
      var more = cljs.core.rest(arglist__13153);
      return G__13152__delegate(x, y, more)
    };
    G__13152.cljs$core$IFn$_invoke$arity$variadic = G__13152__delegate;
    return G__13152
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__13154__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__13154 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13154__delegate.call(this, x, y, more)
    };
    G__13154.cljs$lang$maxFixedArity = 2;
    G__13154.cljs$lang$applyTo = function(arglist__13155) {
      var x = cljs.core.first(arglist__13155);
      arglist__13155 = cljs.core.next(arglist__13155);
      var y = cljs.core.first(arglist__13155);
      var more = cljs.core.rest(arglist__13155);
      return G__13154__delegate(x, y, more)
    };
    G__13154.cljs$core$IFn$_invoke$arity$variadic = G__13154__delegate;
    return G__13154
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__13156__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__13157 = y;
            var G__13158 = cljs.core.first.call(null, more);
            var G__13159 = cljs.core.next.call(null, more);
            x = G__13157;
            y = G__13158;
            more = G__13159;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13156 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13156__delegate.call(this, x, y, more)
    };
    G__13156.cljs$lang$maxFixedArity = 2;
    G__13156.cljs$lang$applyTo = function(arglist__13160) {
      var x = cljs.core.first(arglist__13160);
      arglist__13160 = cljs.core.next(arglist__13160);
      var y = cljs.core.first(arglist__13160);
      var more = cljs.core.rest(arglist__13160);
      return G__13156__delegate(x, y, more)
    };
    G__13156.cljs$core$IFn$_invoke$arity$variadic = G__13156__delegate;
    return G__13156
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__13161 = n__$1 - 1;
      var G__13162 = cljs.core.next.call(null, xs);
      n__$1 = G__13161;
      xs = G__13162;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0:else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__13163__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__13164 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__13165 = cljs.core.next.call(null, more);
            sb = G__13164;
            more = G__13165;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__13163 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13163__delegate.call(this, x, ys)
    };
    G__13163.cljs$lang$maxFixedArity = 1;
    G__13163.cljs$lang$applyTo = function(arglist__13166) {
      var x = cljs.core.first(arglist__13166);
      var ys = cljs.core.rest(arglist__13166);
      return G__13163__delegate(x, ys)
    };
    G__13163.cljs$core$IFn$_invoke$arity$variadic = G__13163__delegate;
    return G__13163
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$core$IFn$_invoke$arity$0 = str_STAR___0;
  str_STAR_.cljs$core$IFn$_invoke$arity$1 = str_STAR___1;
  str_STAR_.cljs$core$IFn$_invoke$arity$variadic = str_STAR___2.cljs$core$IFn$_invoke$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
    }else {
      if(x == null) {
        return""
      }else {
        if("\ufdd0:else") {
          return x.toString()
        }else {
          return null
        }
      }
    }
  };
  var str__2 = function() {
    var G__13167__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__13168 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__13169 = cljs.core.next.call(null, more);
            sb = G__13168;
            more = G__13169;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__13167 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13167__delegate.call(this, x, ys)
    };
    G__13167.cljs$lang$maxFixedArity = 1;
    G__13167.cljs$lang$applyTo = function(arglist__13170) {
      var x = cljs.core.first(arglist__13170);
      var ys = cljs.core.rest(arglist__13170);
      return G__13167__delegate(x, ys)
    };
    G__13167.cljs$core$IFn$_invoke$arity$variadic = G__13167__delegate;
    return G__13167
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3943__auto__ = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return x instanceof cljs.core.Symbol
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__13171) {
    var fmt = cljs.core.first(arglist__13171);
    var args = cljs.core.rest(arglist__13171);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", ":", cljs.core.name.call(null, name))
      }else {
        if("\ufdd0:else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", ":", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__13172 = cljs.core.next.call(null, xs);
            var G__13173 = cljs.core.next.call(null, ys);
            xs = G__13172;
            ys = G__13173;
            continue
          }else {
            if("\ufdd0:else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__13174_SHARP_, p2__13175_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__13174_SHARP_, cljs.core.hash.call(null, p2__13175_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__13176 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__13177 = cljs.core.next.call(null, s);
      h = G__13176;
      s = G__13177;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__13178 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__13179 = cljs.core.next.call(null, s__$1);
      h = G__13178;
      s__$1 = G__13179;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__13186_13192 = cljs.core.seq.call(null, fn_map);
  var chunk__13187_13193 = null;
  var count__13188_13194 = 0;
  var i__13189_13195 = 0;
  while(true) {
    if(i__13189_13195 < count__13188_13194) {
      var vec__13190_13196 = cljs.core._nth.call(null, chunk__13187_13193, i__13189_13195);
      var key_name_13197 = cljs.core.nth.call(null, vec__13190_13196, 0, null);
      var f_13198 = cljs.core.nth.call(null, vec__13190_13196, 1, null);
      var str_name_13199 = cljs.core.name.call(null, key_name_13197);
      obj[str_name_13199] = f_13198;
      var G__13200 = seq__13186_13192;
      var G__13201 = chunk__13187_13193;
      var G__13202 = count__13188_13194;
      var G__13203 = i__13189_13195 + 1;
      seq__13186_13192 = G__13200;
      chunk__13187_13193 = G__13201;
      count__13188_13194 = G__13202;
      i__13189_13195 = G__13203;
      continue
    }else {
      var temp__4092__auto___13204 = cljs.core.seq.call(null, seq__13186_13192);
      if(temp__4092__auto___13204) {
        var seq__13186_13205__$1 = temp__4092__auto___13204;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13186_13205__$1)) {
          var c__3501__auto___13206 = cljs.core.chunk_first.call(null, seq__13186_13205__$1);
          var G__13207 = cljs.core.chunk_rest.call(null, seq__13186_13205__$1);
          var G__13208 = c__3501__auto___13206;
          var G__13209 = cljs.core.count.call(null, c__3501__auto___13206);
          var G__13210 = 0;
          seq__13186_13192 = G__13207;
          chunk__13187_13193 = G__13208;
          count__13188_13194 = G__13209;
          i__13189_13195 = G__13210;
          continue
        }else {
          var vec__13191_13211 = cljs.core.first.call(null, seq__13186_13205__$1);
          var key_name_13212 = cljs.core.nth.call(null, vec__13191_13211, 0, null);
          var f_13213 = cljs.core.nth.call(null, vec__13191_13211, 1, null);
          var str_name_13214 = cljs.core.name.call(null, key_name_13212);
          obj[str_name_13214] = f_13213;
          var G__13215 = cljs.core.next.call(null, seq__13186_13205__$1);
          var G__13216 = null;
          var G__13217 = 0;
          var G__13218 = 0;
          seq__13186_13192 = G__13215;
          chunk__13187_13193 = G__13216;
          count__13188_13194 = G__13217;
          i__13189_13195 = G__13218;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__13220 = coll;
  if(G__13220) {
    if(function() {
      var or__3943__auto__ = G__13220.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13220.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__13220.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__13220)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__13220)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__13221 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__13221;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__13222 = i - 1;
        var G__13223 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__13222;
        r = G__13223;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__13224) {
    var xs = cljs.core.seq(arglist__13224);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__13226 = coll;
      if(G__13226) {
        if(function() {
          var or__3943__auto____$1 = G__13226.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__13226.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__13228 = x;
  if(G__13228) {
    if(function() {
      var or__3943__auto__ = G__13228.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__13228.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__13228.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__13228)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__13228)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__13232 = null;
  var G__13232__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__13230 = coll;
        if(G__13230) {
          if(function() {
            var or__3943__auto__ = G__13230.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13230.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__13230.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13230)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13230)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, self__.k, null)
      }else {
        return null
      }
    }
  };
  var G__13232__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__13231 = coll;
        if(G__13231) {
          if(function() {
            var or__3943__auto__ = G__13231.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__13231.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__13231.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13231)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13231)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, self__.k, not_found)
      }else {
        return null
      }
    }
  };
  G__13232 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13232__2.call(this, self__, coll);
      case 3:
        return G__13232__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13232
}();
cljs.core.Keyword.prototype.apply = function(self__, args13229) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13229.slice()))
};
cljs.core.__GT_Keyword = function __GT_Keyword(k) {
  return new cljs.core.Keyword(k)
};
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__13234 = null;
  var G__13234__2 = function(self__, coll) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString())
  };
  var G__13234__3 = function(self__, coll, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString(), not_found)
  };
  G__13234 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13234__2.call(this, self__, coll);
      case 3:
        return G__13234__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13234
}();
String.prototype.apply = function(self__, args13233) {
  return self__.call.apply(self__, [self__].concat(args13233.slice()))
};
String.prototype.apply = function(s, args) {
  if(args.length < 2) {
    return cljs.core.get.call(null, args[0], s)
  }else {
    return cljs.core.get.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, realized, x, __hash) {
  return new cljs.core.LazySeq(meta, realized, x, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__13236 = s;
    if(G__13236) {
      if(function() {
        var or__3943__auto__ = G__13236.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13236.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__13237 = cljs.core.next.call(null, s__$1);
      s__$1 = G__13237;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_13238 = 0;
  var xs_13239 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_13239) {
      ret[i_13238] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_13239));
      var G__13240 = i_13238 + 1;
      var G__13241 = cljs.core.next.call(null, xs_13239);
      i_13238 = G__13240;
      xs_13239 = G__13241;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13242 = i + 1;
          var G__13243 = cljs.core.next.call(null, s__$1);
          i = G__13242;
          s__$1 = G__13243;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___13244 = size;
      var i_13245 = 0;
      while(true) {
        if(i_13245 < n__3548__auto___13244) {
          a[i_13245] = init_val_or_seq;
          var G__13246 = i_13245 + 1;
          i_13245 = G__13246;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13247 = i + 1;
          var G__13248 = cljs.core.next.call(null, s__$1);
          i = G__13247;
          s__$1 = G__13248;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___13249 = size;
      var i_13250 = 0;
      while(true) {
        if(i_13250 < n__3548__auto___13249) {
          a[i_13250] = init_val_or_seq;
          var G__13251 = i_13250 + 1;
          i_13250 = G__13251;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13252 = i + 1;
          var G__13253 = cljs.core.next.call(null, s__$1);
          i = G__13252;
          s__$1 = G__13253;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___13254 = size;
      var i_13255 = 0;
      while(true) {
        if(i_13255 < n__3548__auto___13254) {
          a[i_13255] = init_val_or_seq;
          var G__13256 = i_13255 + 1;
          i_13255 = G__13256;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13257 = i + 1;
          var G__13258 = cljs.core.next.call(null, s__$1);
          i = G__13257;
          s__$1 = G__13258;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3548__auto___13259 = size;
      var i_13260 = 0;
      while(true) {
        if(i_13260 < n__3548__auto___13259) {
          a[i_13260] = init_val_or_seq;
          var G__13261 = i_13260 + 1;
          i_13260 = G__13261;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__13262 = cljs.core.next.call(null, s__$1);
        var G__13263 = i - 1;
        var G__13264 = sum + 1;
        s__$1 = G__13262;
        i = G__13263;
        sum = G__13264;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0:else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__13265__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__13265 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13265__delegate.call(this, x, y, zs)
    };
    G__13265.cljs$lang$maxFixedArity = 2;
    G__13265.cljs$lang$applyTo = function(arglist__13266) {
      var x = cljs.core.first(arglist__13266);
      arglist__13266 = cljs.core.next(arglist__13266);
      var y = cljs.core.first(arglist__13266);
      var zs = cljs.core.rest(arglist__13266);
      return G__13265__delegate(x, y, zs)
    };
    G__13265.cljs$core$IFn$_invoke$arity$variadic = G__13265__delegate;
    return G__13265
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__13267__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__13267 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13267__delegate.call(this, a, b, c, d, more)
    };
    G__13267.cljs$lang$maxFixedArity = 4;
    G__13267.cljs$lang$applyTo = function(arglist__13268) {
      var a = cljs.core.first(arglist__13268);
      arglist__13268 = cljs.core.next(arglist__13268);
      var b = cljs.core.first(arglist__13268);
      arglist__13268 = cljs.core.next(arglist__13268);
      var c = cljs.core.first(arglist__13268);
      arglist__13268 = cljs.core.next(arglist__13268);
      var d = cljs.core.first(arglist__13268);
      var more = cljs.core.rest(arglist__13268);
      return G__13267__delegate(a, b, c, d, more)
    };
    G__13267.cljs$core$IFn$_invoke$arity$variadic = G__13267__delegate;
    return G__13267
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__13269__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__13269 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__13269__delegate.call(this, f, a, b, c, d, args)
    };
    G__13269.cljs$lang$maxFixedArity = 5;
    G__13269.cljs$lang$applyTo = function(arglist__13270) {
      var f = cljs.core.first(arglist__13270);
      arglist__13270 = cljs.core.next(arglist__13270);
      var a = cljs.core.first(arglist__13270);
      arglist__13270 = cljs.core.next(arglist__13270);
      var b = cljs.core.first(arglist__13270);
      arglist__13270 = cljs.core.next(arglist__13270);
      var c = cljs.core.first(arglist__13270);
      arglist__13270 = cljs.core.next(arglist__13270);
      var d = cljs.core.first(arglist__13270);
      var args = cljs.core.rest(arglist__13270);
      return G__13269__delegate(f, a, b, c, d, args)
    };
    G__13269.cljs$core$IFn$_invoke$arity$variadic = G__13269__delegate;
    return G__13269
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__13271) {
    var obj = cljs.core.first(arglist__13271);
    arglist__13271 = cljs.core.next(arglist__13271);
    var f = cljs.core.first(arglist__13271);
    var args = cljs.core.rest(arglist__13271);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__13272__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__13272 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13272__delegate.call(this, x, y, more)
    };
    G__13272.cljs$lang$maxFixedArity = 2;
    G__13272.cljs$lang$applyTo = function(arglist__13273) {
      var x = cljs.core.first(arglist__13273);
      arglist__13273 = cljs.core.next(arglist__13273);
      var y = cljs.core.first(arglist__13273);
      var more = cljs.core.rest(arglist__13273);
      return G__13272__delegate(x, y, more)
    };
    G__13272.cljs$core$IFn$_invoke$arity$variadic = G__13272__delegate;
    return G__13272
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__13274 = pred;
        var G__13275 = cljs.core.next.call(null, coll);
        pred = G__13274;
        coll = G__13275;
        continue
      }else {
        if("\ufdd0:else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__13276 = pred;
        var G__13277 = cljs.core.next.call(null, coll);
        pred = G__13276;
        coll = G__13277;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13278 = null;
    var G__13278__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__13278__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__13278__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__13278__3 = function() {
      var G__13279__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__13279 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__13279__delegate.call(this, x, y, zs)
      };
      G__13279.cljs$lang$maxFixedArity = 2;
      G__13279.cljs$lang$applyTo = function(arglist__13280) {
        var x = cljs.core.first(arglist__13280);
        arglist__13280 = cljs.core.next(arglist__13280);
        var y = cljs.core.first(arglist__13280);
        var zs = cljs.core.rest(arglist__13280);
        return G__13279__delegate(x, y, zs)
      };
      G__13279.cljs$core$IFn$_invoke$arity$variadic = G__13279__delegate;
      return G__13279
    }();
    G__13278 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13278__0.call(this);
        case 1:
          return G__13278__1.call(this, x);
        case 2:
          return G__13278__2.call(this, x, y);
        default:
          return G__13278__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13278.cljs$lang$maxFixedArity = 2;
    G__13278.cljs$lang$applyTo = G__13278__3.cljs$lang$applyTo;
    return G__13278
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13281__delegate = function(args) {
      return x
    };
    var G__13281 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13281__delegate.call(this, args)
    };
    G__13281.cljs$lang$maxFixedArity = 0;
    G__13281.cljs$lang$applyTo = function(arglist__13282) {
      var args = cljs.core.seq(arglist__13282);
      return G__13281__delegate(args)
    };
    G__13281.cljs$core$IFn$_invoke$arity$variadic = G__13281__delegate;
    return G__13281
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13283 = null;
      var G__13283__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__13283__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__13283__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__13283__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__13283__4 = function() {
        var G__13284__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__13284 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13284__delegate.call(this, x, y, z, args)
        };
        G__13284.cljs$lang$maxFixedArity = 3;
        G__13284.cljs$lang$applyTo = function(arglist__13285) {
          var x = cljs.core.first(arglist__13285);
          arglist__13285 = cljs.core.next(arglist__13285);
          var y = cljs.core.first(arglist__13285);
          arglist__13285 = cljs.core.next(arglist__13285);
          var z = cljs.core.first(arglist__13285);
          var args = cljs.core.rest(arglist__13285);
          return G__13284__delegate(x, y, z, args)
        };
        G__13284.cljs$core$IFn$_invoke$arity$variadic = G__13284__delegate;
        return G__13284
      }();
      G__13283 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13283__0.call(this);
          case 1:
            return G__13283__1.call(this, x);
          case 2:
            return G__13283__2.call(this, x, y);
          case 3:
            return G__13283__3.call(this, x, y, z);
          default:
            return G__13283__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13283.cljs$lang$maxFixedArity = 3;
      G__13283.cljs$lang$applyTo = G__13283__4.cljs$lang$applyTo;
      return G__13283
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13286 = null;
      var G__13286__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__13286__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__13286__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__13286__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__13286__4 = function() {
        var G__13287__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__13287 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13287__delegate.call(this, x, y, z, args)
        };
        G__13287.cljs$lang$maxFixedArity = 3;
        G__13287.cljs$lang$applyTo = function(arglist__13288) {
          var x = cljs.core.first(arglist__13288);
          arglist__13288 = cljs.core.next(arglist__13288);
          var y = cljs.core.first(arglist__13288);
          arglist__13288 = cljs.core.next(arglist__13288);
          var z = cljs.core.first(arglist__13288);
          var args = cljs.core.rest(arglist__13288);
          return G__13287__delegate(x, y, z, args)
        };
        G__13287.cljs$core$IFn$_invoke$arity$variadic = G__13287__delegate;
        return G__13287
      }();
      G__13286 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13286__0.call(this);
          case 1:
            return G__13286__1.call(this, x);
          case 2:
            return G__13286__2.call(this, x, y);
          case 3:
            return G__13286__3.call(this, x, y, z);
          default:
            return G__13286__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13286.cljs$lang$maxFixedArity = 3;
      G__13286.cljs$lang$applyTo = G__13286__4.cljs$lang$applyTo;
      return G__13286
    }()
  };
  var comp__4 = function() {
    var G__13289__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__13290__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__13291 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__13292 = cljs.core.next.call(null, fs__$2);
              ret = G__13291;
              fs__$2 = G__13292;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__13290 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__13290__delegate.call(this, args)
        };
        G__13290.cljs$lang$maxFixedArity = 0;
        G__13290.cljs$lang$applyTo = function(arglist__13293) {
          var args = cljs.core.seq(arglist__13293);
          return G__13290__delegate(args)
        };
        G__13290.cljs$core$IFn$_invoke$arity$variadic = G__13290__delegate;
        return G__13290
      }()
    };
    var G__13289 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13289__delegate.call(this, f1, f2, f3, fs)
    };
    G__13289.cljs$lang$maxFixedArity = 3;
    G__13289.cljs$lang$applyTo = function(arglist__13294) {
      var f1 = cljs.core.first(arglist__13294);
      arglist__13294 = cljs.core.next(arglist__13294);
      var f2 = cljs.core.first(arglist__13294);
      arglist__13294 = cljs.core.next(arglist__13294);
      var f3 = cljs.core.first(arglist__13294);
      var fs = cljs.core.rest(arglist__13294);
      return G__13289__delegate(f1, f2, f3, fs)
    };
    G__13289.cljs$core$IFn$_invoke$arity$variadic = G__13289__delegate;
    return G__13289
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13295__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__13295 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13295__delegate.call(this, args)
      };
      G__13295.cljs$lang$maxFixedArity = 0;
      G__13295.cljs$lang$applyTo = function(arglist__13296) {
        var args = cljs.core.seq(arglist__13296);
        return G__13295__delegate(args)
      };
      G__13295.cljs$core$IFn$_invoke$arity$variadic = G__13295__delegate;
      return G__13295
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13297__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__13297 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13297__delegate.call(this, args)
      };
      G__13297.cljs$lang$maxFixedArity = 0;
      G__13297.cljs$lang$applyTo = function(arglist__13298) {
        var args = cljs.core.seq(arglist__13298);
        return G__13297__delegate(args)
      };
      G__13297.cljs$core$IFn$_invoke$arity$variadic = G__13297__delegate;
      return G__13297
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13299__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__13299 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__13299__delegate.call(this, args)
      };
      G__13299.cljs$lang$maxFixedArity = 0;
      G__13299.cljs$lang$applyTo = function(arglist__13300) {
        var args = cljs.core.seq(arglist__13300);
        return G__13299__delegate(args)
      };
      G__13299.cljs$core$IFn$_invoke$arity$variadic = G__13299__delegate;
      return G__13299
    }()
  };
  var partial__5 = function() {
    var G__13301__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13302__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__13302 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__13302__delegate.call(this, args)
        };
        G__13302.cljs$lang$maxFixedArity = 0;
        G__13302.cljs$lang$applyTo = function(arglist__13303) {
          var args = cljs.core.seq(arglist__13303);
          return G__13302__delegate(args)
        };
        G__13302.cljs$core$IFn$_invoke$arity$variadic = G__13302__delegate;
        return G__13302
      }()
    };
    var G__13301 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13301__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__13301.cljs$lang$maxFixedArity = 4;
    G__13301.cljs$lang$applyTo = function(arglist__13304) {
      var f = cljs.core.first(arglist__13304);
      arglist__13304 = cljs.core.next(arglist__13304);
      var arg1 = cljs.core.first(arglist__13304);
      arglist__13304 = cljs.core.next(arglist__13304);
      var arg2 = cljs.core.first(arglist__13304);
      arglist__13304 = cljs.core.next(arglist__13304);
      var arg3 = cljs.core.first(arglist__13304);
      var more = cljs.core.rest(arglist__13304);
      return G__13301__delegate(f, arg1, arg2, arg3, more)
    };
    G__13301.cljs$core$IFn$_invoke$arity$variadic = G__13301__delegate;
    return G__13301
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13305 = null;
      var G__13305__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__13305__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__13305__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__13305__4 = function() {
        var G__13306__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__13306 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13306__delegate.call(this, a, b, c, ds)
        };
        G__13306.cljs$lang$maxFixedArity = 3;
        G__13306.cljs$lang$applyTo = function(arglist__13307) {
          var a = cljs.core.first(arglist__13307);
          arglist__13307 = cljs.core.next(arglist__13307);
          var b = cljs.core.first(arglist__13307);
          arglist__13307 = cljs.core.next(arglist__13307);
          var c = cljs.core.first(arglist__13307);
          var ds = cljs.core.rest(arglist__13307);
          return G__13306__delegate(a, b, c, ds)
        };
        G__13306.cljs$core$IFn$_invoke$arity$variadic = G__13306__delegate;
        return G__13306
      }();
      G__13305 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13305__1.call(this, a);
          case 2:
            return G__13305__2.call(this, a, b);
          case 3:
            return G__13305__3.call(this, a, b, c);
          default:
            return G__13305__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13305.cljs$lang$maxFixedArity = 3;
      G__13305.cljs$lang$applyTo = G__13305__4.cljs$lang$applyTo;
      return G__13305
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13308 = null;
      var G__13308__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__13308__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__13308__4 = function() {
        var G__13309__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__13309 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13309__delegate.call(this, a, b, c, ds)
        };
        G__13309.cljs$lang$maxFixedArity = 3;
        G__13309.cljs$lang$applyTo = function(arglist__13310) {
          var a = cljs.core.first(arglist__13310);
          arglist__13310 = cljs.core.next(arglist__13310);
          var b = cljs.core.first(arglist__13310);
          arglist__13310 = cljs.core.next(arglist__13310);
          var c = cljs.core.first(arglist__13310);
          var ds = cljs.core.rest(arglist__13310);
          return G__13309__delegate(a, b, c, ds)
        };
        G__13309.cljs$core$IFn$_invoke$arity$variadic = G__13309__delegate;
        return G__13309
      }();
      G__13308 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13308__2.call(this, a, b);
          case 3:
            return G__13308__3.call(this, a, b, c);
          default:
            return G__13308__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13308.cljs$lang$maxFixedArity = 3;
      G__13308.cljs$lang$applyTo = G__13308__4.cljs$lang$applyTo;
      return G__13308
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13311 = null;
      var G__13311__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__13311__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__13311__4 = function() {
        var G__13312__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__13312 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13312__delegate.call(this, a, b, c, ds)
        };
        G__13312.cljs$lang$maxFixedArity = 3;
        G__13312.cljs$lang$applyTo = function(arglist__13313) {
          var a = cljs.core.first(arglist__13313);
          arglist__13313 = cljs.core.next(arglist__13313);
          var b = cljs.core.first(arglist__13313);
          arglist__13313 = cljs.core.next(arglist__13313);
          var c = cljs.core.first(arglist__13313);
          var ds = cljs.core.rest(arglist__13313);
          return G__13312__delegate(a, b, c, ds)
        };
        G__13312.cljs$core$IFn$_invoke$arity$variadic = G__13312__delegate;
        return G__13312
      }();
      G__13311 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13311__2.call(this, a, b);
          case 3:
            return G__13311__3.call(this, a, b, c);
          default:
            return G__13311__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13311.cljs$lang$maxFixedArity = 3;
      G__13311.cljs$lang$applyTo = G__13311__4.cljs$lang$applyTo;
      return G__13311
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___13314 = size;
          var i_13315 = 0;
          while(true) {
            if(i_13315 < n__3548__auto___13314) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_13315, cljs.core._nth.call(null, c, i_13315)));
              var G__13316 = i_13315 + 1;
              i_13315 = G__13316;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3548__auto___13317 = size;
        var i_13318 = 0;
        while(true) {
          if(i_13318 < n__3548__auto___13317) {
            var x_13319 = f.call(null, cljs.core._nth.call(null, c, i_13318));
            if(x_13319 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_13319)
            }
            var G__13320 = i_13318 + 1;
            i_13318 = G__13320;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___13321 = size;
          var i_13322 = 0;
          while(true) {
            if(i_13322 < n__3548__auto___13321) {
              var x_13323 = f.call(null, idx + i_13322, cljs.core._nth.call(null, c, i_13322));
              if(x_13323 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_13323)
              }
              var G__13324 = i_13322 + 1;
              i_13322 = G__13324;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__13331__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__13331 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13331__delegate.call(this, x, y, z, args)
        };
        G__13331.cljs$lang$maxFixedArity = 3;
        G__13331.cljs$lang$applyTo = function(arglist__13332) {
          var x = cljs.core.first(arglist__13332);
          arglist__13332 = cljs.core.next(arglist__13332);
          var y = cljs.core.first(arglist__13332);
          arglist__13332 = cljs.core.next(arglist__13332);
          var z = cljs.core.first(arglist__13332);
          var args = cljs.core.rest(arglist__13332);
          return G__13331__delegate(x, y, z, args)
        };
        G__13331.cljs$core$IFn$_invoke$arity$variadic = G__13331__delegate;
        return G__13331
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__13333__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13325_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__13325_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__13325_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__13333 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13333__delegate.call(this, x, y, z, args)
        };
        G__13333.cljs$lang$maxFixedArity = 3;
        G__13333.cljs$lang$applyTo = function(arglist__13334) {
          var x = cljs.core.first(arglist__13334);
          arglist__13334 = cljs.core.next(arglist__13334);
          var y = cljs.core.first(arglist__13334);
          arglist__13334 = cljs.core.next(arglist__13334);
          var z = cljs.core.first(arglist__13334);
          var args = cljs.core.rest(arglist__13334);
          return G__13333__delegate(x, y, z, args)
        };
        G__13333.cljs$core$IFn$_invoke$arity$variadic = G__13333__delegate;
        return G__13333
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__13335__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__13326_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__13326_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__13326_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__13326_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__13335 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13335__delegate.call(this, x, y, z, args)
        };
        G__13335.cljs$lang$maxFixedArity = 3;
        G__13335.cljs$lang$applyTo = function(arglist__13336) {
          var x = cljs.core.first(arglist__13336);
          arglist__13336 = cljs.core.next(arglist__13336);
          var y = cljs.core.first(arglist__13336);
          arglist__13336 = cljs.core.next(arglist__13336);
          var z = cljs.core.first(arglist__13336);
          var args = cljs.core.rest(arglist__13336);
          return G__13335__delegate(x, y, z, args)
        };
        G__13335.cljs$core$IFn$_invoke$arity$variadic = G__13335__delegate;
        return G__13335
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__13337__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__13327_SHARP_) {
            return p1__13327_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__13328_SHARP_) {
            var and__3941__auto__ = p1__13328_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__13328_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__13329_SHARP_) {
            var and__3941__auto__ = p1__13329_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__13329_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__13329_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__13338__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__13330_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__13330_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__13338 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13338__delegate.call(this, x, y, z, args)
          };
          G__13338.cljs$lang$maxFixedArity = 3;
          G__13338.cljs$lang$applyTo = function(arglist__13339) {
            var x = cljs.core.first(arglist__13339);
            arglist__13339 = cljs.core.next(arglist__13339);
            var y = cljs.core.first(arglist__13339);
            arglist__13339 = cljs.core.next(arglist__13339);
            var z = cljs.core.first(arglist__13339);
            var args = cljs.core.rest(arglist__13339);
            return G__13338__delegate(x, y, z, args)
          };
          G__13338.cljs$core$IFn$_invoke$arity$variadic = G__13338__delegate;
          return G__13338
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__13337 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13337__delegate.call(this, p1, p2, p3, ps)
    };
    G__13337.cljs$lang$maxFixedArity = 3;
    G__13337.cljs$lang$applyTo = function(arglist__13340) {
      var p1 = cljs.core.first(arglist__13340);
      arglist__13340 = cljs.core.next(arglist__13340);
      var p2 = cljs.core.first(arglist__13340);
      arglist__13340 = cljs.core.next(arglist__13340);
      var p3 = cljs.core.first(arglist__13340);
      var ps = cljs.core.rest(arglist__13340);
      return G__13337__delegate(p1, p2, p3, ps)
    };
    G__13337.cljs$core$IFn$_invoke$arity$variadic = G__13337__delegate;
    return G__13337
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__13347__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__13347 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13347__delegate.call(this, x, y, z, args)
        };
        G__13347.cljs$lang$maxFixedArity = 3;
        G__13347.cljs$lang$applyTo = function(arglist__13348) {
          var x = cljs.core.first(arglist__13348);
          arglist__13348 = cljs.core.next(arglist__13348);
          var y = cljs.core.first(arglist__13348);
          arglist__13348 = cljs.core.next(arglist__13348);
          var z = cljs.core.first(arglist__13348);
          var args = cljs.core.rest(arglist__13348);
          return G__13347__delegate(x, y, z, args)
        };
        G__13347.cljs$core$IFn$_invoke$arity$variadic = G__13347__delegate;
        return G__13347
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13349__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__13341_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__13341_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__13341_SHARP_)
              }
            }, args)
          }
        };
        var G__13349 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13349__delegate.call(this, x, y, z, args)
        };
        G__13349.cljs$lang$maxFixedArity = 3;
        G__13349.cljs$lang$applyTo = function(arglist__13350) {
          var x = cljs.core.first(arglist__13350);
          arglist__13350 = cljs.core.next(arglist__13350);
          var y = cljs.core.first(arglist__13350);
          arglist__13350 = cljs.core.next(arglist__13350);
          var z = cljs.core.first(arglist__13350);
          var args = cljs.core.rest(arglist__13350);
          return G__13349__delegate(x, y, z, args)
        };
        G__13349.cljs$core$IFn$_invoke$arity$variadic = G__13349__delegate;
        return G__13349
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13351__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__13342_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__13342_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__13342_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__13342_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__13351 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13351__delegate.call(this, x, y, z, args)
        };
        G__13351.cljs$lang$maxFixedArity = 3;
        G__13351.cljs$lang$applyTo = function(arglist__13352) {
          var x = cljs.core.first(arglist__13352);
          arglist__13352 = cljs.core.next(arglist__13352);
          var y = cljs.core.first(arglist__13352);
          arglist__13352 = cljs.core.next(arglist__13352);
          var z = cljs.core.first(arglist__13352);
          var args = cljs.core.rest(arglist__13352);
          return G__13351__delegate(x, y, z, args)
        };
        G__13351.cljs$core$IFn$_invoke$arity$variadic = G__13351__delegate;
        return G__13351
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__13353__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__13343_SHARP_) {
            return p1__13343_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__13344_SHARP_) {
            var or__3943__auto__ = p1__13344_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__13344_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__13345_SHARP_) {
            var or__3943__auto__ = p1__13345_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__13345_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__13345_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__13354__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__13346_SHARP_) {
                return cljs.core.some.call(null, p1__13346_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__13354 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13354__delegate.call(this, x, y, z, args)
          };
          G__13354.cljs$lang$maxFixedArity = 3;
          G__13354.cljs$lang$applyTo = function(arglist__13355) {
            var x = cljs.core.first(arglist__13355);
            arglist__13355 = cljs.core.next(arglist__13355);
            var y = cljs.core.first(arglist__13355);
            arglist__13355 = cljs.core.next(arglist__13355);
            var z = cljs.core.first(arglist__13355);
            var args = cljs.core.rest(arglist__13355);
            return G__13354__delegate(x, y, z, args)
          };
          G__13354.cljs$core$IFn$_invoke$arity$variadic = G__13354__delegate;
          return G__13354
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__13353 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13353__delegate.call(this, p1, p2, p3, ps)
    };
    G__13353.cljs$lang$maxFixedArity = 3;
    G__13353.cljs$lang$applyTo = function(arglist__13356) {
      var p1 = cljs.core.first(arglist__13356);
      arglist__13356 = cljs.core.next(arglist__13356);
      var p2 = cljs.core.first(arglist__13356);
      arglist__13356 = cljs.core.next(arglist__13356);
      var p3 = cljs.core.first(arglist__13356);
      var ps = cljs.core.rest(arglist__13356);
      return G__13353__delegate(p1, p2, p3, ps)
    };
    G__13353.cljs$core$IFn$_invoke$arity$variadic = G__13353__delegate;
    return G__13353
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3548__auto___13358 = size;
          var i_13359 = 0;
          while(true) {
            if(i_13359 < n__3548__auto___13358) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_13359)));
              var G__13360 = i_13359 + 1;
              i_13359 = G__13360;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__13361__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__13357_SHARP_) {
        return cljs.core.apply.call(null, f, p1__13357_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__13361 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13361__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13361.cljs$lang$maxFixedArity = 4;
    G__13361.cljs$lang$applyTo = function(arglist__13362) {
      var f = cljs.core.first(arglist__13362);
      arglist__13362 = cljs.core.next(arglist__13362);
      var c1 = cljs.core.first(arglist__13362);
      arglist__13362 = cljs.core.next(arglist__13362);
      var c2 = cljs.core.first(arglist__13362);
      arglist__13362 = cljs.core.next(arglist__13362);
      var c3 = cljs.core.first(arglist__13362);
      var colls = cljs.core.rest(arglist__13362);
      return G__13361__delegate(f, c1, c2, c3, colls)
    };
    G__13361.cljs$core$IFn$_invoke$arity$variadic = G__13361__delegate;
    return G__13361
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__13363 = n__$1 - 1;
        var G__13364 = cljs.core.rest.call(null, s);
        n__$1 = G__13363;
        coll__$1 = G__13364;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__13365 = cljs.core.next.call(null, s);
      var G__13366 = cljs.core.next.call(null, lead);
      s = G__13365;
      lead = G__13366;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__13367 = pred__$1;
        var G__13368 = cljs.core.rest.call(null, s);
        pred__$1 = G__13367;
        coll__$1 = G__13368;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__13369__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__13369 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13369__delegate.call(this, c1, c2, colls)
    };
    G__13369.cljs$lang$maxFixedArity = 2;
    G__13369.cljs$lang$applyTo = function(arglist__13370) {
      var c1 = cljs.core.first(arglist__13370);
      arglist__13370 = cljs.core.next(arglist__13370);
      var c2 = cljs.core.first(arglist__13370);
      var colls = cljs.core.rest(arglist__13370);
      return G__13369__delegate(c1, c2, colls)
    };
    G__13369.cljs$core$IFn$_invoke$arity$variadic = G__13369__delegate;
    return G__13369
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__13371__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__13371 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13371__delegate.call(this, f, coll, colls)
    };
    G__13371.cljs$lang$maxFixedArity = 2;
    G__13371.cljs$lang$applyTo = function(arglist__13372) {
      var f = cljs.core.first(arglist__13372);
      arglist__13372 = cljs.core.next(arglist__13372);
      var coll = cljs.core.first(arglist__13372);
      var colls = cljs.core.rest(arglist__13372);
      return G__13371__delegate(f, coll, colls)
    };
    G__13371.cljs$core$IFn$_invoke$arity$variadic = G__13371__delegate;
    return G__13371
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3548__auto___13373 = size;
        var i_13374 = 0;
        while(true) {
          if(i_13374 < n__3548__auto___13373) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_13374)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_13374))
            }else {
            }
            var G__13375 = i_13374 + 1;
            i_13374 = G__13375;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__13376_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__13376_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__13378 = to;
      if(G__13378) {
        if(function() {
          var or__3943__auto__ = G__13378.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__13378.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__13379__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__13379 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13379__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__13379.cljs$lang$maxFixedArity = 4;
    G__13379.cljs$lang$applyTo = function(arglist__13380) {
      var f = cljs.core.first(arglist__13380);
      arglist__13380 = cljs.core.next(arglist__13380);
      var c1 = cljs.core.first(arglist__13380);
      arglist__13380 = cljs.core.next(arglist__13380);
      var c2 = cljs.core.first(arglist__13380);
      arglist__13380 = cljs.core.next(arglist__13380);
      var c3 = cljs.core.first(arglist__13380);
      var colls = cljs.core.rest(arglist__13380);
      return G__13379__delegate(f, c1, c2, c3, colls)
    };
    G__13379.cljs$core$IFn$_invoke$arity$variadic = G__13379__delegate;
    return G__13379
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__13382 = m__$1;
          if(G__13382) {
            if(function() {
              var or__3943__auto__ = G__13382.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__13382.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__13382.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13382)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13382)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__13383 = sentinel;
            var G__13384 = m__$2;
            var G__13385 = cljs.core.next.call(null, ks__$1);
            sentinel = G__13383;
            m__$1 = G__13384;
            ks__$1 = G__13385;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__13386, v) {
  var vec__13388 = p__13386;
  var k = cljs.core.nth.call(null, vec__13388, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__13388, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__13389, f) {
    var vec__13399 = p__13389;
    var k = cljs.core.nth.call(null, vec__13399, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13399, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__13390, f, a) {
    var vec__13400 = p__13390;
    var k = cljs.core.nth.call(null, vec__13400, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13400, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__13391, f, a, b) {
    var vec__13401 = p__13391;
    var k = cljs.core.nth.call(null, vec__13401, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13401, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__13392, f, a, b, c) {
    var vec__13402 = p__13392;
    var k = cljs.core.nth.call(null, vec__13402, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13402, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__13404__delegate = function(m, p__13393, f, a, b, c, args) {
      var vec__13403 = p__13393;
      var k = cljs.core.nth.call(null, vec__13403, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__13403, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__13404 = function(m, p__13393, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__13404__delegate.call(this, m, p__13393, f, a, b, c, args)
    };
    G__13404.cljs$lang$maxFixedArity = 6;
    G__13404.cljs$lang$applyTo = function(arglist__13405) {
      var m = cljs.core.first(arglist__13405);
      arglist__13405 = cljs.core.next(arglist__13405);
      var p__13393 = cljs.core.first(arglist__13405);
      arglist__13405 = cljs.core.next(arglist__13405);
      var f = cljs.core.first(arglist__13405);
      arglist__13405 = cljs.core.next(arglist__13405);
      var a = cljs.core.first(arglist__13405);
      arglist__13405 = cljs.core.next(arglist__13405);
      var b = cljs.core.first(arglist__13405);
      arglist__13405 = cljs.core.next(arglist__13405);
      var c = cljs.core.first(arglist__13405);
      var args = cljs.core.rest(arglist__13405);
      return G__13404__delegate(m, p__13393, f, a, b, c, args)
    };
    G__13404.cljs$core$IFn$_invoke$arity$variadic = G__13404__delegate;
    return G__13404
  }();
  update_in = function(m, p__13393, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__13393, f);
      case 4:
        return update_in__4.call(this, m, p__13393, f, a);
      case 5:
        return update_in__5.call(this, m, p__13393, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__13393, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__13393, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__13406 = ll - 5;
      var G__13407 = r;
      ll = G__13406;
      ret = G__13407;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__13408 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__13409 = level - 5;
          node = G__13408;
          level = G__13409;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__13411 = null;
  var G__13411__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__13411__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__13411 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13411__2.call(this, self__, k);
      case 3:
        return G__13411__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13411
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args13410) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13410.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__13412 = j + 1;
              var G__13413 = init__$2;
              j = G__13412;
              init__$1 = G__13413;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__13414 = i + step_init[0];
        i = G__13414;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if("\ufdd0:else") {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if("\ufdd0:else") {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__13415 = i + 1;
        var G__13416 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__13415;
        out = G__13416;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__13417) {
    var args = cljs.core.seq(arglist__13417);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3092__auto__ = self__.end;
    var y__3093__auto__ = v_pos + 1;
    return x__3092__auto__ > y__3093__auto__ ? x__3092__auto__ : y__3093__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__13419 = null;
  var G__13419__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__13419__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__13419 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13419__2.call(this, self__, k);
      case 3:
        return G__13419__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13419
}();
cljs.core.Subvec.prototype.apply = function(self__, args13418) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13418.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__13420 = meta;
      var G__13421 = v.v;
      var G__13422 = v.start + start;
      var G__13423 = v.start + end;
      var G__13424 = __hash;
      meta = G__13420;
      v = G__13421;
      start = G__13422;
      end = G__13423;
      __hash = G__13424;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__13425 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__13426 = level - 5;
          node = G__13425;
          level = G__13426;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__13428 = null;
  var G__13428__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13428__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13428 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13428__2.call(this, self__, k);
      case 3:
        return G__13428__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13428
}();
cljs.core.TransientVector.prototype.apply = function(self__, args13427) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13427.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0:else") {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__13429 = i + incr;
        i = G__13429;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if("\ufdd0:else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__13430 = i + 1;
      var G__13431 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__13430;
      out = G__13431;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_13432 = 0;
  while(true) {
    if(i_13432 < l) {
      var k_13433 = ks[i_13432];
      new_obj[k_13433] = obj[k_13433];
      var G__13434 = i_13432 + 1;
      i_13432 = G__13434;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13437 = null;
  var G__13437__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13437__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13437 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13437__2.call(this, self__, k);
      case 3:
        return G__13437__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13437
}();
cljs.core.ObjMap.prototype.apply = function(self__, args13436) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13436.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__13438 = cljs.core.rest.call(null, keys__$1);
        var G__13439 = init__$2;
        keys__$1 = G__13438;
        init__$1 = G__13439;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__13435_SHARP_) {
      return cljs.core.vector.call(null, p1__13435_SHARP_, self__.strobj[p1__13435_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__13440 = i + 2;
          i = G__13440;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__13441 = i + 2;
          i = G__13441;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__13442 = i + 2;
          i = G__13442;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__13443 = i + 2;
          i = G__13443;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(function() {
    var or__3943__auto__ = goog.isString(k);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return typeof k === "number"
    }
  }()) {
    return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
  }else {
    if(k instanceof cljs.core.Symbol) {
      return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
    }else {
      if(k == null) {
        return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
      }else {
        if("\ufdd0:else") {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_13444 = 0;
  while(true) {
    if(i_13444 < l) {
      narr[i_13444] = arr[i_13444];
      var G__13445 = i_13444 + 1;
      i_13444 = G__13445;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if("\ufdd0:else") {
        var arr__$1 = function() {
          var G__13447 = self__.arr.slice();
          G__13447[idx + 1] = v;
          return G__13447
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13448 = null;
  var G__13448__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13448__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13448 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13448__2.call(this, self__, k);
      case 3:
        return G__13448__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13448
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args13446) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13446.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__13449 = i + 2;
        var G__13450 = init__$2;
        i = G__13449;
        init__$1 = G__13450;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__13451 = s + 2;
            var G__13452 = d;
            s = G__13451;
            d = G__13452;
            continue
          }else {
            if("\ufdd0:else") {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__13453 = s + 2;
              var G__13454 = d + 2;
              s = G__13453;
              d = G__13454;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__13455_13457 = self__.arr;
      G__13455_13457.pop();
      G__13455_13457.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__13456 = o;
      if(G__13456) {
        if(function() {
          var or__3943__auto__ = G__13456.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__13456.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13456.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13456)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13456)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__13458 = cljs.core.next.call(null, es);
          var G__13459 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__13458;
          tcoll__$1 = G__13459;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__13460 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__13461 = i + 2;
      out = G__13460;
      i = G__13461;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13464 = arr.slice();
    G__13464[i] = a;
    return G__13464
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13465 = arr.slice();
    G__13465[i] = a;
    G__13465[j] = b;
    return G__13465
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__13466 = i + 2;
        var G__13467 = init__$2;
        i = G__13466;
        init__$1 = G__13467;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_13468 = 0;
        var j_13469 = 0;
        while(true) {
          if(i_13468 < 32) {
            if((self__.bitmap >>> i_13468 & 1) === 0) {
              var G__13470 = i_13468 + 1;
              var G__13471 = j_13469;
              i_13468 = G__13470;
              j_13469 = G__13471;
              continue
            }else {
              nodes[i_13468] = !(self__.arr[j_13469] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_13469]), self__.arr[j_13469], self__.arr[j_13469 + 1], added_leaf_QMARK_) : self__.arr[j_13469 + 1];
              var G__13472 = i_13468 + 1;
              var G__13473 = j_13469 + 2;
              i_13468 = G__13472;
              j_13469 = G__13473;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if("\ufdd0:else") {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_13474 = 0;
      var j_13475 = 0;
      while(true) {
        if(i_13474 < 32) {
          if((self__.bitmap >>> i_13474 & 1) === 0) {
            var G__13476 = i_13474 + 1;
            var G__13477 = j_13475;
            i_13474 = G__13476;
            j_13475 = G__13477;
            continue
          }else {
            nodes[i_13474] = !(self__.arr[j_13475] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_13475]), self__.arr[j_13475], self__.arr[j_13475 + 1], added_leaf_QMARK_) : self__.arr[j_13475 + 1];
            var G__13478 = i_13474 + 1;
            var G__13479 = j_13475 + 2;
            i_13474 = G__13478;
            j_13475 = G__13479;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__13480 = i + 1;
        var G__13481 = j + 2;
        var G__13482 = bitmap | 1 << i;
        i = G__13480;
        j = G__13481;
        bitmap = G__13482;
        continue
      }else {
        var G__13483 = i + 1;
        var G__13484 = j;
        var G__13485 = bitmap;
        i = G__13483;
        j = G__13484;
        bitmap = G__13485;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if("\ufdd0:else") {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__13486 = i + 1;
          var G__13487 = init__$2;
          i = G__13486;
          init__$1 = G__13487;
          continue
        }
      }else {
        var G__13488 = i + 1;
        var G__13489 = init__$1;
        i = G__13488;
        init__$1 = G__13489;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if("\ufdd0:else") {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__13490 = i + 2;
        i = G__13490;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if("\ufdd0:else") {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__13491 = j + 2;
                j = G__13491;
                continue
              }
            }else {
              var G__13492 = j + 2;
              j = G__13492;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__13493 = j + 1;
              j = G__13493;
              continue
            }
          }else {
            var G__13494 = j + 1;
            j = G__13494;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if("\ufdd0:else") {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if("\ufdd0:else") {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__13496 = null;
  var G__13496__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13496__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13496 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13496__2.call(this, self__, k);
      case 3:
        return G__13496__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13496
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args13495) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13495.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if("\ufdd0:else") {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if("\ufdd0:else") {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__13497 = i + 1;
      var G__13498 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__13497;
      out = G__13498;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__13499 = o;
      if(G__13499) {
        if(function() {
          var or__3943__auto__ = G__13499.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__13499.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__13499.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13499)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__13499)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__13500 = cljs.core.next.call(null, es);
          var G__13501 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__13500;
          tcoll__$1 = G__13501;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__13502 = ascending_QMARK_ ? t.left : t.right;
      var G__13503 = cljs.core.conj.call(null, stack__$1, t);
      t = G__13502;
      stack__$1 = G__13503;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__13505 = null;
  var G__13505__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__13505__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__13505 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13505__2.call(this, self__, k);
      case 3:
        return G__13505__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13505
}();
cljs.core.BlackNode.prototype.apply = function(self__, args13504) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13504.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__13507 = null;
  var G__13507__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__13507__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__13507 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13507__2.call(this, self__, k);
      case 3:
        return G__13507__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13507
}();
cljs.core.RedNode.prototype.apply = function(self__, args13506) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13506.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0:else") {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0:else") {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__13509 = null;
  var G__13509__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13509__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13509 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13509__2.call(this, self__, k);
      case 3:
        return G__13509__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13509
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args13508) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13508.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__13510 = t.left;
          t = G__13510;
          continue
        }else {
          if("\ufdd0:else") {
            var G__13511 = t.right;
            t = G__13511;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__13512 = cljs.core.conj.call(null, stack, t);
              var G__13513 = t.left;
              stack = G__13512;
              t = G__13513;
              continue
            }else {
              var G__13514 = stack;
              var G__13515 = t.right;
              stack = G__13514;
              t = G__13515;
              continue
            }
          }else {
            if("\ufdd0:else") {
              if(c > 0) {
                var G__13516 = cljs.core.conj.call(null, stack, t);
                var G__13517 = t.right;
                stack = G__13516;
                t = G__13517;
                continue
              }else {
                var G__13518 = stack;
                var G__13519 = t.left;
                stack = G__13518;
                t = G__13519;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__13520 = cljs.core.nnext.call(null, in$);
        var G__13521 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__13520;
        out = G__13521;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__13522) {
    var keyvals = cljs.core.seq(arglist__13522);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__13523) {
    var keyvals = cljs.core.seq(arglist__13523);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__13524 = cljs.core.nnext.call(null, kvs);
        kvs = G__13524;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__13525) {
    var keyvals = cljs.core.seq(arglist__13525);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__13526 = cljs.core.nnext.call(null, in$);
        var G__13527 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__13526;
        out = G__13527;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__13528) {
    var keyvals = cljs.core.seq(arglist__13528);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__13529 = cljs.core.nnext.call(null, in$);
        var G__13530 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__13529;
        out = G__13530;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__13531) {
    var comparator = cljs.core.first(arglist__13531);
    var keyvals = cljs.core.rest(arglist__13531);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__13532 = self__.mseq;
    if(G__13532) {
      if(function() {
        var or__3943__auto__ = G__13532.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13532.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__13532.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13532)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13532)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__13533 = self__.mseq;
    if(G__13533) {
      if(function() {
        var or__3943__auto__ = G__13533.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13533.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__13533.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13533)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13533)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__13534 = self__.mseq;
    if(G__13534) {
      if(function() {
        var or__3943__auto__ = G__13534.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13534.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__13534.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13534)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13534)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__13535 = self__.mseq;
    if(G__13535) {
      if(function() {
        var or__3943__auto__ = G__13535.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13535.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__13535.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13535)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__13535)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__13536_SHARP_, p2__13537_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__13536_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__13537_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__13538) {
    var maps = cljs.core.seq(arglist__13538);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__13539) {
    var f = cljs.core.first(arglist__13539);
    var maps = cljs.core.rest(arglist__13539);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, "\ufdd0:cljs.core/not-found");
      var G__13540 = cljs.core.not_EQ_.call(null, entry, "\ufdd0:cljs.core/not-found") ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__13541 = cljs.core.next.call(null, keys);
      ret = G__13540;
      keys = G__13541;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__13544 = null;
  var G__13544__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13544__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13544 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13544__2.call(this, self__, k);
      case 3:
        return G__13544__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13544
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args13543) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13543.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__13542_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__13542_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__13545 = i + 2;
        var G__13546 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__13545;
        out = G__13546;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__13548 = null;
  var G__13548__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__13548__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__13548 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13548__2.call(this, self__, k);
      case 3:
        return G__13548__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13548
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args13547) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13547.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__13551 = null;
  var G__13551__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__13551__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__13551 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13551__2.call(this, self__, k);
      case 3:
        return G__13551__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13551
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args13550) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args13550.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__13549_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__13549_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__13552__delegate = function(keys) {
      if(function() {
        var and__3941__auto__ = keys instanceof cljs.core.IndexedSeq;
        if(and__3941__auto__) {
          return keys.arr.length < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD
        }else {
          return and__3941__auto__
        }
      }()) {
        var karr = keys.arr;
        var klen = karr.length;
        var alen = 2 * klen;
        var arr = new Array(alen);
        var ki = 0;
        while(true) {
          if(ki < klen) {
            var ai = 2 * ki;
            arr[ai] = karr[ki];
            arr[ai + 1] = null;
            var G__13553 = ki + 1;
            ki = G__13553;
            continue
          }else {
            return cljs.core.PersistentHashSet.fromArray.call(null, arr, true)
          }
          break
        }
      }else {
        var in$ = keys;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$ == null)) {
            var G__13554 = cljs.core._next.call(null, in$);
            var G__13555 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$));
            in$ = G__13554;
            out = G__13555;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }
    };
    var G__13552 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13552__delegate.call(this, keys)
    };
    G__13552.cljs$lang$maxFixedArity = 0;
    G__13552.cljs$lang$applyTo = function(arglist__13556) {
      var keys = cljs.core.seq(arglist__13556);
      return G__13552__delegate(keys)
    };
    G__13552.cljs$core$IFn$_invoke$arity$variadic = G__13552__delegate;
    return G__13552
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__13557) {
    var keys = cljs.core.seq(arglist__13557);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__13558) {
    var comparator = cljs.core.first(arglist__13558);
    var keys = cljs.core.rest(arglist__13558);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__13559_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__13559_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__13559_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__13566, seen__$1) {
        while(true) {
          var vec__13567 = p__13566;
          var f = cljs.core.nth.call(null, vec__13567, 0, null);
          var xs__$1 = vec__13567;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__13568 = cljs.core.rest.call(null, s);
              var G__13569 = seen__$1;
              p__13566 = G__13568;
              seen__$1 = G__13569;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__13570 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__13571 = cljs.core.next.call(null, s__$1);
      ret = G__13570;
      s__$1 = G__13571;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__13573 = x;
    if(G__13573) {
      if(function() {
        var or__3943__auto__ = G__13573.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13573.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var i = x.lastIndexOf("/", x.length - 2);
        if(i < 0) {
          return cljs.core.subs.call(null, x, 2)
        }else {
          return cljs.core.subs.call(null, x, i + 1)
        }
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__13575 = x;
    if(G__13575) {
      if(function() {
        var or__3943__auto__ = G__13575.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__13575.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      var i = x.lastIndexOf("/", x.length - 2);
      if(i > -1) {
        return cljs.core.subs.call(null, x, 2, i)
      }else {
        return null
      }
    }else {
      throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__13576 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__13577 = cljs.core.next.call(null, ks);
      var G__13578 = cljs.core.next.call(null, vs);
      map = G__13576;
      ks = G__13577;
      vs = G__13578;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__13581__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13579_SHARP_, p2__13580_SHARP_) {
        return max_key.call(null, k, p1__13579_SHARP_, p2__13580_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__13581 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13581__delegate.call(this, k, x, y, more)
    };
    G__13581.cljs$lang$maxFixedArity = 3;
    G__13581.cljs$lang$applyTo = function(arglist__13582) {
      var k = cljs.core.first(arglist__13582);
      arglist__13582 = cljs.core.next(arglist__13582);
      var x = cljs.core.first(arglist__13582);
      arglist__13582 = cljs.core.next(arglist__13582);
      var y = cljs.core.first(arglist__13582);
      var more = cljs.core.rest(arglist__13582);
      return G__13581__delegate(k, x, y, more)
    };
    G__13581.cljs$core$IFn$_invoke$arity$variadic = G__13581__delegate;
    return G__13581
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__13585__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13583_SHARP_, p2__13584_SHARP_) {
        return min_key.call(null, k, p1__13583_SHARP_, p2__13584_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__13585 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13585__delegate.call(this, k, x, y, more)
    };
    G__13585.cljs$lang$maxFixedArity = 3;
    G__13585.cljs$lang$applyTo = function(arglist__13586) {
      var k = cljs.core.first(arglist__13586);
      arglist__13586 = cljs.core.next(arglist__13586);
      var x = cljs.core.first(arglist__13586);
      arglist__13586 = cljs.core.next(arglist__13586);
      var y = cljs.core.first(arglist__13586);
      var more = cljs.core.rest(arglist__13586);
      return G__13585__delegate(k, x, y, more)
    };
    G__13585.cljs$core$IFn$_invoke$arity$variadic = G__13585__delegate;
    return G__13585
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__13589 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__13589, 0, null);
        var s = vec__13589;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__13590 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__13590, 0, null);
      var s = vec__13590;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__13593 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__13593, 0, null);
        var s = vec__13593;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__13594 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__13594, 0, null);
      var s = vec__13594;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3191__auto__ = self__.__hash;
  if(!(h__3191__auto__ == null)) {
    return h__3191__auto__
  }else {
    var h__3191__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3191__auto____$1;
    return h__3191__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__13595_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__13595_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__13606 = null;
      var G__13606__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__13606__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__13606__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__13606__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__13606__4 = function() {
        var G__13607__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__13607 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13607__delegate.call(this, x, y, z, args)
        };
        G__13607.cljs$lang$maxFixedArity = 3;
        G__13607.cljs$lang$applyTo = function(arglist__13608) {
          var x = cljs.core.first(arglist__13608);
          arglist__13608 = cljs.core.next(arglist__13608);
          var y = cljs.core.first(arglist__13608);
          arglist__13608 = cljs.core.next(arglist__13608);
          var z = cljs.core.first(arglist__13608);
          var args = cljs.core.rest(arglist__13608);
          return G__13607__delegate(x, y, z, args)
        };
        G__13607.cljs$core$IFn$_invoke$arity$variadic = G__13607__delegate;
        return G__13607
      }();
      G__13606 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13606__0.call(this);
          case 1:
            return G__13606__1.call(this, x);
          case 2:
            return G__13606__2.call(this, x, y);
          case 3:
            return G__13606__3.call(this, x, y, z);
          default:
            return G__13606__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13606.cljs$lang$maxFixedArity = 3;
      G__13606.cljs$lang$applyTo = G__13606__4.cljs$lang$applyTo;
      return G__13606
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__13609 = null;
      var G__13609__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__13609__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__13609__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__13609__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__13609__4 = function() {
        var G__13610__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__13610 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13610__delegate.call(this, x, y, z, args)
        };
        G__13610.cljs$lang$maxFixedArity = 3;
        G__13610.cljs$lang$applyTo = function(arglist__13611) {
          var x = cljs.core.first(arglist__13611);
          arglist__13611 = cljs.core.next(arglist__13611);
          var y = cljs.core.first(arglist__13611);
          arglist__13611 = cljs.core.next(arglist__13611);
          var z = cljs.core.first(arglist__13611);
          var args = cljs.core.rest(arglist__13611);
          return G__13610__delegate(x, y, z, args)
        };
        G__13610.cljs$core$IFn$_invoke$arity$variadic = G__13610__delegate;
        return G__13610
      }();
      G__13609 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13609__0.call(this);
          case 1:
            return G__13609__1.call(this, x);
          case 2:
            return G__13609__2.call(this, x, y);
          case 3:
            return G__13609__3.call(this, x, y, z);
          default:
            return G__13609__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13609.cljs$lang$maxFixedArity = 3;
      G__13609.cljs$lang$applyTo = G__13609__4.cljs$lang$applyTo;
      return G__13609
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__13612 = null;
      var G__13612__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__13612__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__13612__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__13612__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__13612__4 = function() {
        var G__13613__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__13613 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__13613__delegate.call(this, x, y, z, args)
        };
        G__13613.cljs$lang$maxFixedArity = 3;
        G__13613.cljs$lang$applyTo = function(arglist__13614) {
          var x = cljs.core.first(arglist__13614);
          arglist__13614 = cljs.core.next(arglist__13614);
          var y = cljs.core.first(arglist__13614);
          arglist__13614 = cljs.core.next(arglist__13614);
          var z = cljs.core.first(arglist__13614);
          var args = cljs.core.rest(arglist__13614);
          return G__13613__delegate(x, y, z, args)
        };
        G__13613.cljs$core$IFn$_invoke$arity$variadic = G__13613__delegate;
        return G__13613
      }();
      G__13612 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13612__0.call(this);
          case 1:
            return G__13612__1.call(this, x);
          case 2:
            return G__13612__2.call(this, x, y);
          case 3:
            return G__13612__3.call(this, x, y, z);
          default:
            return G__13612__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13612.cljs$lang$maxFixedArity = 3;
      G__13612.cljs$lang$applyTo = G__13612__4.cljs$lang$applyTo;
      return G__13612
    }()
  };
  var juxt__4 = function() {
    var G__13615__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__13616 = null;
        var G__13616__0 = function() {
          return cljs.core.reduce.call(null, function(p1__13596_SHARP_, p2__13597_SHARP_) {
            return cljs.core.conj.call(null, p1__13596_SHARP_, p2__13597_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__13616__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__13598_SHARP_, p2__13599_SHARP_) {
            return cljs.core.conj.call(null, p1__13598_SHARP_, p2__13599_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__13616__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__13600_SHARP_, p2__13601_SHARP_) {
            return cljs.core.conj.call(null, p1__13600_SHARP_, p2__13601_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__13616__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__13602_SHARP_, p2__13603_SHARP_) {
            return cljs.core.conj.call(null, p1__13602_SHARP_, p2__13603_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__13616__4 = function() {
          var G__13617__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__13604_SHARP_, p2__13605_SHARP_) {
              return cljs.core.conj.call(null, p1__13604_SHARP_, cljs.core.apply.call(null, p2__13605_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__13617 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__13617__delegate.call(this, x, y, z, args)
          };
          G__13617.cljs$lang$maxFixedArity = 3;
          G__13617.cljs$lang$applyTo = function(arglist__13618) {
            var x = cljs.core.first(arglist__13618);
            arglist__13618 = cljs.core.next(arglist__13618);
            var y = cljs.core.first(arglist__13618);
            arglist__13618 = cljs.core.next(arglist__13618);
            var z = cljs.core.first(arglist__13618);
            var args = cljs.core.rest(arglist__13618);
            return G__13617__delegate(x, y, z, args)
          };
          G__13617.cljs$core$IFn$_invoke$arity$variadic = G__13617__delegate;
          return G__13617
        }();
        G__13616 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__13616__0.call(this);
            case 1:
              return G__13616__1.call(this, x);
            case 2:
              return G__13616__2.call(this, x, y);
            case 3:
              return G__13616__3.call(this, x, y, z);
            default:
              return G__13616__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13616.cljs$lang$maxFixedArity = 3;
        G__13616.cljs$lang$applyTo = G__13616__4.cljs$lang$applyTo;
        return G__13616
      }()
    };
    var G__13615 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13615__delegate.call(this, f, g, h, fs)
    };
    G__13615.cljs$lang$maxFixedArity = 3;
    G__13615.cljs$lang$applyTo = function(arglist__13619) {
      var f = cljs.core.first(arglist__13619);
      arglist__13619 = cljs.core.next(arglist__13619);
      var g = cljs.core.first(arglist__13619);
      arglist__13619 = cljs.core.next(arglist__13619);
      var h = cljs.core.first(arglist__13619);
      var fs = cljs.core.rest(arglist__13619);
      return G__13615__delegate(f, g, h, fs)
    };
    G__13615.cljs$core$IFn$_invoke$arity$variadic = G__13615__delegate;
    return G__13615
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__13620 = cljs.core.next.call(null, coll);
        coll = G__13620;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__13621 = n - 1;
        var G__13622 = cljs.core.next.call(null, coll);
        n = G__13621;
        coll = G__13622;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__13624 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__13624, 0, null);
  var flags = cljs.core.nth.call(null, vec__13624, 1, null);
  var pattern = cljs.core.nth.call(null, vec__13624, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__13629_13633 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__13630_13634 = null;
  var count__13631_13635 = 0;
  var i__13632_13636 = 0;
  while(true) {
    if(i__13632_13636 < count__13631_13635) {
      var o_13637 = cljs.core._nth.call(null, chunk__13630_13634, i__13632_13636);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_13637, writer, opts);
      var G__13638 = seq__13629_13633;
      var G__13639 = chunk__13630_13634;
      var G__13640 = count__13631_13635;
      var G__13641 = i__13632_13636 + 1;
      seq__13629_13633 = G__13638;
      chunk__13630_13634 = G__13639;
      count__13631_13635 = G__13640;
      i__13632_13636 = G__13641;
      continue
    }else {
      var temp__4092__auto___13642 = cljs.core.seq.call(null, seq__13629_13633);
      if(temp__4092__auto___13642) {
        var seq__13629_13643__$1 = temp__4092__auto___13642;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13629_13643__$1)) {
          var c__3501__auto___13644 = cljs.core.chunk_first.call(null, seq__13629_13643__$1);
          var G__13645 = cljs.core.chunk_rest.call(null, seq__13629_13643__$1);
          var G__13646 = c__3501__auto___13644;
          var G__13647 = cljs.core.count.call(null, c__3501__auto___13644);
          var G__13648 = 0;
          seq__13629_13633 = G__13645;
          chunk__13630_13634 = G__13646;
          count__13631_13635 = G__13647;
          i__13632_13636 = G__13648;
          continue
        }else {
          var o_13649 = cljs.core.first.call(null, seq__13629_13643__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_13649, writer, opts);
          var G__13650 = cljs.core.next.call(null, seq__13629_13643__$1);
          var G__13651 = null;
          var G__13652 = 0;
          var G__13653 = 0;
          seq__13629_13633 = G__13650;
          chunk__13630_13634 = G__13651;
          count__13631_13635 = G__13652;
          i__13632_13636 = G__13653;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__13658 = cljs.core.seq.call(null, ss);
    var chunk__13659 = null;
    var count__13660 = 0;
    var i__13661 = 0;
    while(true) {
      if(i__13661 < count__13660) {
        var s = cljs.core._nth.call(null, chunk__13659, i__13661);
        cljs.core._write.call(null, writer, s);
        var G__13662 = seq__13658;
        var G__13663 = chunk__13659;
        var G__13664 = count__13660;
        var G__13665 = i__13661 + 1;
        seq__13658 = G__13662;
        chunk__13659 = G__13663;
        count__13660 = G__13664;
        i__13661 = G__13665;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__13658);
        if(temp__4092__auto__) {
          var seq__13658__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13658__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13658__$1);
            var G__13666 = cljs.core.chunk_rest.call(null, seq__13658__$1);
            var G__13667 = c__3501__auto__;
            var G__13668 = cljs.core.count.call(null, c__3501__auto__);
            var G__13669 = 0;
            seq__13658 = G__13666;
            chunk__13659 = G__13667;
            count__13660 = G__13668;
            i__13661 = G__13669;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__13658__$1);
            cljs.core._write.call(null, writer, s);
            var G__13670 = cljs.core.next.call(null, seq__13658__$1);
            var G__13671 = null;
            var G__13672 = 0;
            var G__13673 = 0;
            seq__13658 = G__13670;
            chunk__13659 = G__13671;
            count__13660 = G__13672;
            i__13661 = G__13673;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__13674) {
    var writer = cljs.core.first(arglist__13674);
    var ss = cljs.core.rest(arglist__13674);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if("\ufdd0:else") {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, "\ufdd0:meta");
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__13678 = obj;
              if(G__13678) {
                if(function() {
                  var or__3943__auto__ = G__13678.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__13678.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__13678.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__13678)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__13678)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__13679 = obj;
              if(G__13679) {
                if(function() {
                  var or__3943__auto__ = G__13679.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__13679.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.keyword_QMARK_.call(null, obj)) {
                      cljs.core._write.call(null, writer, ":");
                      var temp__4092__auto___13681 = cljs.core.namespace.call(null, obj);
                      if(cljs.core.truth_(temp__4092__auto___13681)) {
                        var nspc_13682 = temp__4092__auto___13681;
                        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_13682)].join(""), "/")
                      }else {
                      }
                      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                    }else {
                      if(obj instanceof cljs.core.Symbol) {
                        var temp__4092__auto___13683 = cljs.core.namespace.call(null, obj);
                        if(cljs.core.truth_(temp__4092__auto___13683)) {
                          var nspc_13684 = temp__4092__auto___13683;
                          cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_13684)].join(""), "/")
                        }else {
                        }
                        return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                      }else {
                        if("\ufdd0:else") {
                          if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:readably")).call(null, opts))) {
                            return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                          }else {
                            return cljs.core._write.call(null, writer, obj)
                          }
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__13685 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__13685;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__13680 = obj;
                            if(G__13680) {
                              if(function() {
                                var or__3943__auto__ = G__13680.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__13680.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__13680.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__13680)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__13680)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if("\ufdd0:else") {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__13690 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__13691 = null;
  var count__13692 = 0;
  var i__13693 = 0;
  while(true) {
    if(i__13693 < count__13692) {
      var obj = cljs.core._nth.call(null, chunk__13691, i__13693);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__13694 = seq__13690;
      var G__13695 = chunk__13691;
      var G__13696 = count__13692;
      var G__13697 = i__13693 + 1;
      seq__13690 = G__13694;
      chunk__13691 = G__13695;
      count__13692 = G__13696;
      i__13693 = G__13697;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13690);
      if(temp__4092__auto__) {
        var seq__13690__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13690__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13690__$1);
          var G__13698 = cljs.core.chunk_rest.call(null, seq__13690__$1);
          var G__13699 = c__3501__auto__;
          var G__13700 = cljs.core.count.call(null, c__3501__auto__);
          var G__13701 = 0;
          seq__13690 = G__13698;
          chunk__13691 = G__13699;
          count__13692 = G__13700;
          i__13693 = G__13701;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__13690__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__13702 = cljs.core.next.call(null, seq__13690__$1);
          var G__13703 = null;
          var G__13704 = 0;
          var G__13705 = 0;
          seq__13690 = G__13702;
          chunk__13691 = G__13703;
          count__13692 = G__13704;
          i__13693 = G__13705;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, "\ufdd0:flush-on-newline"))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__13706) {
    var objs = cljs.core.seq(arglist__13706);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__13707) {
    var objs = cljs.core.seq(arglist__13707);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__13708) {
    var objs = cljs.core.seq(arglist__13708);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__13709) {
    var objs = cljs.core.seq(arglist__13709);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__13710) {
    var objs = cljs.core.seq(arglist__13710);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__13711) {
    var objs = cljs.core.seq(arglist__13711);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__13712) {
    var objs = cljs.core.seq(arglist__13712);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__13713) {
    var objs = cljs.core.seq(arglist__13713);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__13714) {
    var fmt = cljs.core.first(arglist__13714);
    var args = cljs.core.rest(arglist__13714);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__13715 = cljs.core.seq.call(null, self__.watches);
  var chunk__13716 = null;
  var count__13717 = 0;
  var i__13718 = 0;
  while(true) {
    if(i__13718 < count__13717) {
      var vec__13719 = cljs.core._nth.call(null, chunk__13716, i__13718);
      var key = cljs.core.nth.call(null, vec__13719, 0, null);
      var f = cljs.core.nth.call(null, vec__13719, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__13721 = seq__13715;
      var G__13722 = chunk__13716;
      var G__13723 = count__13717;
      var G__13724 = i__13718 + 1;
      seq__13715 = G__13721;
      chunk__13716 = G__13722;
      count__13717 = G__13723;
      i__13718 = G__13724;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13715);
      if(temp__4092__auto__) {
        var seq__13715__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13715__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13715__$1);
          var G__13725 = cljs.core.chunk_rest.call(null, seq__13715__$1);
          var G__13726 = c__3501__auto__;
          var G__13727 = cljs.core.count.call(null, c__3501__auto__);
          var G__13728 = 0;
          seq__13715 = G__13725;
          chunk__13716 = G__13726;
          count__13717 = G__13727;
          i__13718 = G__13728;
          continue
        }else {
          var vec__13720 = cljs.core.first.call(null, seq__13715__$1);
          var key = cljs.core.nth.call(null, vec__13720, 0, null);
          var f = cljs.core.nth.call(null, vec__13720, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__13729 = cljs.core.next.call(null, seq__13715__$1);
          var G__13730 = null;
          var G__13731 = 0;
          var G__13732 = 0;
          seq__13715 = G__13729;
          chunk__13716 = G__13730;
          count__13717 = G__13731;
          i__13718 = G__13732;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__13736__delegate = function(x, p__13733) {
      var map__13735 = p__13733;
      var map__13735__$1 = cljs.core.seq_QMARK_.call(null, map__13735) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13735) : map__13735;
      var validator = cljs.core.get.call(null, map__13735__$1, "\ufdd0:validator");
      var meta = cljs.core.get.call(null, map__13735__$1, "\ufdd0:meta");
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__13736 = function(x, var_args) {
      var p__13733 = null;
      if(arguments.length > 1) {
        p__13733 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13736__delegate.call(this, x, p__13733)
    };
    G__13736.cljs$lang$maxFixedArity = 1;
    G__13736.cljs$lang$applyTo = function(arglist__13737) {
      var x = cljs.core.first(arglist__13737);
      var p__13733 = cljs.core.rest(arglist__13737);
      return G__13736__delegate(x, p__13733)
    };
    G__13736.cljs$core$IFn$_invoke$arity$variadic = G__13736__delegate;
    return G__13736
  }();
  atom = function(x, var_args) {
    var p__13733 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___13738 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___13738)) {
    var validate_13739 = temp__4092__auto___13738;
    if(cljs.core.truth_(validate_13739.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_13740 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_13740, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__13741__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__13741 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__13741__delegate.call(this, a, f, x, y, z, more)
    };
    G__13741.cljs$lang$maxFixedArity = 5;
    G__13741.cljs$lang$applyTo = function(arglist__13742) {
      var a = cljs.core.first(arglist__13742);
      arglist__13742 = cljs.core.next(arglist__13742);
      var f = cljs.core.first(arglist__13742);
      arglist__13742 = cljs.core.next(arglist__13742);
      var x = cljs.core.first(arglist__13742);
      arglist__13742 = cljs.core.next(arglist__13742);
      var y = cljs.core.first(arglist__13742);
      arglist__13742 = cljs.core.next(arglist__13742);
      var z = cljs.core.first(arglist__13742);
      var more = cljs.core.rest(arglist__13742);
      return G__13741__delegate(a, f, x, y, z, more)
    };
    G__13741.cljs$core$IFn$_invoke$arity$variadic = G__13741__delegate;
    return G__13741
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__13743) {
    var iref = cljs.core.first(arglist__13743);
    arglist__13743 = cljs.core.next(arglist__13743);
    var f = cljs.core.first(arglist__13743);
    var args = cljs.core.rest(arglist__13743);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:done")).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:value")).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__13744) {
    var map__13745 = p__13744;
    var map__13745__$1 = cljs.core.seq_QMARK_.call(null, map__13745) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13745) : map__13745;
    var curr_state = map__13745__$1;
    var done = cljs.core.get.call(null, map__13745__$1, "\ufdd0:done");
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:done", true, "\ufdd0:value", self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__13747 = k;
    if(G__13747) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__13747.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__13747.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13747)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13747)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = cljs.core.keyword_QMARK_.call(null, k);
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__13755 = x;
      if(G__13755) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__13755.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__13755.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13755)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13755)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__13756_13762 = cljs.core.seq.call(null, x);
            var chunk__13757_13763 = null;
            var count__13758_13764 = 0;
            var i__13759_13765 = 0;
            while(true) {
              if(i__13759_13765 < count__13758_13764) {
                var vec__13760_13766 = cljs.core._nth.call(null, chunk__13757_13763, i__13759_13765);
                var k_13767 = cljs.core.nth.call(null, vec__13760_13766, 0, null);
                var v_13768 = cljs.core.nth.call(null, vec__13760_13766, 1, null);
                m[cljs.core.key__GT_js.call(null, k_13767)] = clj__GT_js.call(null, v_13768);
                var G__13769 = seq__13756_13762;
                var G__13770 = chunk__13757_13763;
                var G__13771 = count__13758_13764;
                var G__13772 = i__13759_13765 + 1;
                seq__13756_13762 = G__13769;
                chunk__13757_13763 = G__13770;
                count__13758_13764 = G__13771;
                i__13759_13765 = G__13772;
                continue
              }else {
                var temp__4092__auto___13773 = cljs.core.seq.call(null, seq__13756_13762);
                if(temp__4092__auto___13773) {
                  var seq__13756_13774__$1 = temp__4092__auto___13773;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__13756_13774__$1)) {
                    var c__3501__auto___13775 = cljs.core.chunk_first.call(null, seq__13756_13774__$1);
                    var G__13776 = cljs.core.chunk_rest.call(null, seq__13756_13774__$1);
                    var G__13777 = c__3501__auto___13775;
                    var G__13778 = cljs.core.count.call(null, c__3501__auto___13775);
                    var G__13779 = 0;
                    seq__13756_13762 = G__13776;
                    chunk__13757_13763 = G__13777;
                    count__13758_13764 = G__13778;
                    i__13759_13765 = G__13779;
                    continue
                  }else {
                    var vec__13761_13780 = cljs.core.first.call(null, seq__13756_13774__$1);
                    var k_13781 = cljs.core.nth.call(null, vec__13761_13780, 0, null);
                    var v_13782 = cljs.core.nth.call(null, vec__13761_13780, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_13781)] = clj__GT_js.call(null, v_13782);
                    var G__13783 = cljs.core.next.call(null, seq__13756_13774__$1);
                    var G__13784 = null;
                    var G__13785 = 0;
                    var G__13786 = 0;
                    seq__13756_13762 = G__13783;
                    chunk__13757_13763 = G__13784;
                    count__13758_13764 = G__13785;
                    i__13759_13765 = G__13786;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if("\ufdd0:else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3370__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:keywordize-keys", false], true))
  };
  var js__GT_clj__2 = function() {
    var G__13807__delegate = function(x, opts) {
      if(function() {
        var G__13797 = cljs.core.IEncodeClojure;
        if(G__13797) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__13797.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__13797.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__13797)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__13797)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__13798 = opts;
          var map__13798__$1 = cljs.core.seq_QMARK_.call(null, map__13798) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13798) : map__13798;
          var keywordize_keys = cljs.core.get.call(null, map__13798__$1, "\ufdd0:keywordize-keys");
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__13798, map__13798__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3470__auto__ = function(map__13798, map__13798__$1, keywordize_keys, keyfn) {
                          return function iter__13803(s__13804) {
                            return new cljs.core.LazySeq(null, false, function(map__13798, map__13798__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__13804__$1 = s__13804;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__13804__$1);
                                  if(temp__4092__auto__) {
                                    var s__13804__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__13804__$2)) {
                                      var c__3468__auto__ = cljs.core.chunk_first.call(null, s__13804__$2);
                                      var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
                                      var b__13806 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
                                      if(function() {
                                        var i__13805 = 0;
                                        while(true) {
                                          if(i__13805 < size__3469__auto__) {
                                            var k = cljs.core._nth.call(null, c__3468__auto__, i__13805);
                                            cljs.core.chunk_append.call(null, b__13806, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__13808 = i__13805 + 1;
                                            i__13805 = G__13808;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13806), iter__13803.call(null, cljs.core.chunk_rest.call(null, s__13804__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13806), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__13804__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__13803.call(null, cljs.core.rest.call(null, s__13804__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__13798, map__13798__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__13798, map__13798__$1, keywordize_keys, keyfn);
                        return iter__3470__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if("\ufdd0:else") {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__13798, map__13798__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__13807 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13807__delegate.call(this, x, opts)
    };
    G__13807.cljs$lang$maxFixedArity = 1;
    G__13807.cljs$lang$applyTo = function(arglist__13809) {
      var x = cljs.core.first(arglist__13809);
      var opts = cljs.core.rest(arglist__13809);
      return G__13807__delegate(x, opts)
    };
    G__13807.cljs$core$IFn$_invoke$arity$variadic = G__13807__delegate;
    return G__13807
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__13810__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__13810 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13810__delegate.call(this, args)
    };
    G__13810.cljs$lang$maxFixedArity = 0;
    G__13810.cljs$lang$applyTo = function(arglist__13811) {
      var args = cljs.core.seq(arglist__13811);
      return G__13810__delegate(args)
    };
    G__13810.cljs$core$IFn$_invoke$arity$variadic = G__13810__delegate;
    return G__13810
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__13812 = ret;
        f = G__13812;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__13813__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__13813 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13813__delegate.call(this, f, args)
    };
    G__13813.cljs$lang$maxFixedArity = 1;
    G__13813.cljs$lang$applyTo = function(arglist__13814) {
      var f = cljs.core.first(arglist__13814);
      var args = cljs.core.rest(arglist__13814);
      return G__13813__delegate(f, args)
    };
    G__13813.cljs$core$IFn$_invoke$arity$variadic = G__13813__delegate;
    return G__13813
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:descendants", cljs.core.PersistentArrayMap.EMPTY, "\ufdd0:ancestors", cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__13815) {
    var f = cljs.core.first(arglist__13815);
    var args = cljs.core.rest(arglist__13815);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__13816 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__13817 = i + 1;
                  ret = G__13816;
                  i = G__13817;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var td = (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h);
    var ta = (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0:ancestors", tf.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag, td, parent, ta), "\ufdd0:descendants", tf.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), parent, ta, tag, td)], 
      true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__13818_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__13818_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__13818_SHARP_), cljs.core.second.call(null, p1__13818_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__13819_SHARP_, p2__13820_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__13819_SHARP_, p2__13820_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__13821 = cljs.core.rest.call(null, ps);
          ps = G__13821;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__13822 = cljs.core.rest.call(null, ps);
            ps = G__13822;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__13825) {
    var vec__13826 = p__13825;
    var k = cljs.core.nth.call(null, vec__13826, 0, null);
    var _ = cljs.core.nth.call(null, vec__13826, 1, null);
    var e = vec__13826;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3370__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__13827__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__13827 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__13827__delegate.call(this, _, args)
  };
  G__13827.cljs$lang$maxFixedArity = 1;
  G__13827.cljs$lang$applyTo = function(arglist__13828) {
    var _ = cljs.core.first(arglist__13828);
    var args = cljs.core.rest(arglist__13828);
    return G__13827__delegate(_, args)
  };
  G__13827.cljs$core$IFn$_invoke$arity$variadic = G__13827__delegate;
  return G__13827
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if("\ufdd0:else") {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, 
  new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, 
  "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("chatter_box.protocol");
goog.require("cljs.core");
chatter_box.protocol.build_user = function build_user(username, first, last, img_url) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:first", first, "\ufdd0:last", last, "\ufdd0:img-url", img_url], true)
};
chatter_box.protocol.create_message = function create_message(area, key, data) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", key, "\ufdd0:data", data], true)
};
chatter_box.protocol.login_message = function login_message(username, password) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:password", password], true))
};
chatter_box.protocol.login_failure_message = function login_failure_message(username, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login-failure", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:err", error], true))
};
chatter_box.protocol.login_success_message = function login_success_message(user, existing_users) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:login-success", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", user, "\ufdd0:existing-users", existing_users], true))
};
chatter_box.protocol.logout_message = function logout_message(username) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:security", "\ufdd0:logout", username)
};
chatter_box.protocol.create_user_message = function create_user_message(username, password, first, last, img_url) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:create", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", chatter_box.protocol.build_user.call(null, username, first, last, img_url), "\ufdd0:password", password], true))
};
chatter_box.protocol.user_created_message = function user_created_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:created", user)
};
chatter_box.protocol.update_user_message = function update_user_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:update", user)
};
chatter_box.protocol.user_updated_message = function user_updated_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:updated", user)
};
chatter_box.protocol.user_error_message = function user_error_message(user, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:user", "\ufdd0:error", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:user", user, "\ufdd0:err", error], true))
};
chatter_box.protocol.user_joined_message = function user_joined_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:join", user)
};
chatter_box.protocol.user_left_message = function user_left_message(user) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:left", user)
};
chatter_box.protocol.send_chat_message = function send_chat_message(local_uname, remote_uname, msg) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:send-chat", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:local", local_uname, "\ufdd0:remote", remote_uname, "\ufdd0:text", msg], true))
};
chatter_box.protocol.receive_chat_message = function receive_chat_message(local_uname, remote_uname, msg) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:receive-chat", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:local", local_uname, "\ufdd0:remote", remote_uname, "\ufdd0:text", msg], true))
};
chatter_box.protocol.chat_error_message = function chat_error_message(username, error) {
  return chatter_box.protocol.create_message.call(null, "\ufdd0:messaging", "\ufdd0:error", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:username", username, "\ufdd0:err", error], true))
};
chatter_box.protocol.create_filter = function create_filter(msg_set) {
  return function(msg) {
    var area = (new cljs.core.Keyword("\ufdd0:area")).call(null, msg);
    var ky = (new cljs.core.Keyword("\ufdd0:key")).call(null, msg);
    var or__3943__auto__ = msg_set.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", ky], true));
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return msg_set.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", area, "\ufdd0:key", "\ufdd0:all"], true))
    }
  }
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if(obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed()
  }
  return false
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if(!doc || !goog.userAgent.IE) {
    return undefined
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5)
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || goog.userAgent.IE && goog.userAgent.isVersion("8") || goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_])
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    map[type] = {count_:0, remaining_:0}
  }
  map = map[type];
  if(!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if(!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++
  }else {
    listenerArray = map[srcUid];
    for(var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if(listenerObj.removed) {
          break
        }
        if(!callOnce) {
          listenerArray[i].callOnce = false
        }
        return listenerArray[i]
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if(!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = []
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if(src.addEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture)
    }
  }else {
    src.attachEvent(goog.events.getOnString_(type), proxy)
  }
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if(!listener) {
    return false
  }
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key]
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if(!noObj) {
    if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && opt_obj && goog.events.Listenable.isImplementedBy(opt_obj)) {
      return opt_obj.removeAllListeners(opt_type)
    }
    var srcUid = goog.getUid((opt_obj));
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if(noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }else {
    return goog.events.getListeners_(obj, type, capture) || []
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler)
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " \x3d " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject)
  }
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e)
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return true
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if(goog.isFunction(listener)) {
    return listener
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget)
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if(this.reallyDisposed_) {
      return true
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if(ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for(;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
  }else {
    return goog.events.dispatchEvent(this, e)
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true
  }else {
    goog.events.removeAll(this)
  }
  this.parentEventTarget_ = null
};
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      listenerObj = listenerArray[index];
      if(!callOnce) {
        listenerObj.callOnce = false
      }
      return listenerObj
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index)
    }
    return false
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if(removed) {
      goog.events.cleanUp(key);
      key.removed = true
    }
    return removed
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for(var type in this.eventTargetListeners_) {
      if(!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for(var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true
        }
        listenerArray.length = 0
      }
    }
    return count
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if(!(type in this.eventTargetListeners_)) {
      return true
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for(var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if(listener && !listener.removed && listener.capture == capture) {
        if(listener.callOnce) {
          this.unlistenByKey(listener)
        }
        rv = listener.handleEvent(eventObject) !== false && rv
      }
    }
    return rv && eventObject.returnValue_ != false
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if(listenerArray) {
      for(var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if(listenerObj.capture == capture) {
          rv.push(listenerObj)
        }
      }
    }
    return rv
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if(listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope)
    }
    return i > -1 ? listenerArray[i] : null
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for(var i = 0;i < listenersArray.length;++i) {
        if((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true
        }
      }
      return false
    })
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if(goog.isString(e)) {
      e = new goog.events.Event(e, target)
    }else {
      if(!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent)
      }else {
        e.target = e.target || target
      }
    }
    var rv = true, currentTarget;
    if(opt_ancestorsTree) {
      for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv
      }
    }
    if(!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if(!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    if(opt_ancestorsTree) {
      for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    return rv
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
        return i
      }
    }
    return-1
  }
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col))
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear((col))
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable))
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll((opt_map))
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat())
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid((val))
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal
  }
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " \x3d ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]))
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_)
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"))
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"))
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray((object), sb);
        break
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return""
  }
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_)
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if(opt_scheme) {
    out += opt_scheme + ":"
  }
  if(opt_domain) {
    out += "//";
    if(opt_userInfo) {
      out += opt_userInfo + "@"
    }
    out += opt_domain;
    if(opt_port) {
      out += ":" + opt_port
    }
  }
  if(opt_path) {
    out += opt_path
  }
  if(opt_queryData) {
    out += "?" + opt_queryData
  }
  if(opt_fragment) {
    out += "#" + opt_fragment
  }
  return out
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_))
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if(!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1)
  }
  return scheme ? scheme.toLowerCase() : ""
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for(var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs)
    }
  }else {
    if(value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value))
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  if(opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if(this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS)
          }else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_()
          }
        }finally {
          this.cleanUpXhr_()
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY)
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_()
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if(this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"]
    }
  }catch(e) {
    this.logger_.fine("Can not get responseBody: " + e.message)
  }
  return null
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.fx.TransitionBase");
goog.provide("goog.fx.TransitionBase.State");
goog.require("goog.events.EventTarget");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.fx.TransitionBase = function() {
  goog.base(this);
  this.state_ = goog.fx.TransitionBase.State.STOPPED;
  this.startTime = null;
  this.endTime = null
};
goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
goog.fx.TransitionBase.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.TransitionBase.prototype.play = goog.abstractMethod;
goog.fx.TransitionBase.prototype.stop = goog.abstractMethod;
goog.fx.TransitionBase.prototype.pause = goog.abstractMethod;
goog.fx.TransitionBase.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.TransitionBase.prototype.setStatePlaying = function() {
  this.state_ = goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.setStatePaused = function() {
  this.state_ = goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.setStateStopped = function() {
  this.state_ = goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.isPlaying = function() {
  return this.state_ == goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.isPaused = function() {
  return this.state_ == goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.isStopped = function() {
  return this.state_ == goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.onBegin = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)
};
goog.fx.TransitionBase.prototype.onEnd = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)
};
goog.fx.TransitionBase.prototype.onFinish = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)
};
goog.fx.TransitionBase.prototype.onPause = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)
};
goog.fx.TransitionBase.prototype.onPlay = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)
};
goog.fx.TransitionBase.prototype.onResume = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)
};
goog.fx.TransitionBase.prototype.onStop = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)
};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(type)
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs))
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.provide("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.functions");
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.base(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = false;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = false;
  var raf = this.getRaf_();
  var cancelRaf = this.getCancelRaf_();
  if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
    this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_);
    this.win_.mozRequestAnimationFrame(null);
    this.usingListeners_ = true
  }else {
    if(raf && cancelRaf) {
      this.id_ = raf.call(this.win_, this.callback_)
    }else {
      this.id_ = this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT)
    }
  }
};
goog.async.AnimationDelay.prototype.stop = function() {
  if(this.isActive()) {
    var raf = this.getRaf_();
    var cancelRaf = this.getCancelRaf_();
    if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
      goog.events.unlistenByKey(this.id_)
    }else {
      if(raf && cancelRaf) {
        cancelRaf.call(this.win_, (this.id_))
      }else {
        this.win_.clearTimeout((this.id_))
      }
    }
  }
  this.id_ = null
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.AnimationDelay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return this.id_ != null
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  if(this.usingListeners_ && this.id_) {
    goog.events.unlistenByKey(this.id_)
  }
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now())
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.base(this, "disposeInternal")
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || null
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || win.webkitCancelRequestAnimationFrame || win.mozCancelRequestAnimationFrame || win.oCancelRequestAnimationFrame || win.msCancelRequestAnimationFrame || null
};
goog.provide("goog.fx.anim");
goog.provide("goog.fx.anim.Animated");
goog.require("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.object");
goog.fx.anim.Animated = function() {
};
goog.fx.anim.Animated.prototype.onAnimationFrame;
goog.fx.anim.TIMEOUT = goog.async.AnimationDelay.TIMEOUT;
goog.fx.anim.activeAnimations_ = {};
goog.fx.anim.animationWindow_ = null;
goog.fx.anim.animationDelay_ = null;
goog.fx.anim.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.activeAnimations_[uid] = animation
  }
  goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.anim.activeAnimations_[uid];
  if(goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.cancelAnimationFrame_()
  }
};
goog.fx.anim.tearDown = function() {
  goog.fx.anim.animationWindow_ = null;
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.activeAnimations_ = {}
};
goog.fx.anim.setAnimationWindow = function(animationWindow) {
  var hasTimer = goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.isActive();
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.animationWindow_ = animationWindow;
  if(hasTimer) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.fx.anim.requestAnimationFrame_ = function() {
  if(!goog.fx.anim.animationDelay_) {
    if(goog.fx.anim.animationWindow_) {
      goog.fx.anim.animationDelay_ = new goog.async.AnimationDelay(function(now) {
        goog.fx.anim.cycleAnimations_(now)
      }, goog.fx.anim.animationWindow_)
    }else {
      goog.fx.anim.animationDelay_ = new goog.async.Delay(function() {
        goog.fx.anim.cycleAnimations_(goog.now())
      }, goog.fx.anim.TIMEOUT)
    }
  }
  var delay = goog.fx.anim.animationDelay_;
  if(!delay.isActive()) {
    delay.start()
  }
};
goog.fx.anim.cancelAnimationFrame_ = function() {
  if(goog.fx.anim.animationDelay_) {
    goog.fx.anim.animationDelay_.stop()
  }
};
goog.fx.anim.cycleAnimations_ = function(now) {
  goog.object.forEach(goog.fx.anim.activeAnimations_, function(anim) {
    anim.onAnimationFrame(now)
  });
  if(!goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.TransitionBase.State");
goog.require("goog.fx.anim");
goog.require("goog.fx.anim.Animated");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.base(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = [];
  this.useRightPositioningForRtl_ = false
};
goog.inherits(goog.fx.Animation, goog.fx.TransitionBase);
goog.fx.Animation.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Animation.prototype.isRightPositioningForRtlEnabled = function() {
  return this.useRightPositioningForRtl_
};
goog.fx.Animation.EventType = {PLAY:goog.fx.Transition.EventType.PLAY, BEGIN:goog.fx.Transition.EventType.BEGIN, RESUME:goog.fx.Transition.EventType.RESUME, END:goog.fx.Transition.EventType.END, STOP:goog.fx.Transition.EventType.STOP, FINISH:goog.fx.Transition.EventType.FINISH, PAUSE:goog.fx.Transition.EventType.PAUSE, ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.TIMEOUT = goog.fx.anim.TIMEOUT;
goog.fx.Animation.State = goog.fx.TransitionBase.State;
goog.fx.Animation.setAnimationWindow = function(animationWindow) {
  goog.fx.anim.setAnimationWindow(animationWindow)
};
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.isStopped()) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.isPlaying()) {
      return false
    }
  }
  goog.fx.anim.unregisterAnimation(this);
  var now = (goog.now());
  this.startTime = now;
  if(this.isPaused()) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.setStatePlaying();
  goog.fx.anim.registerAnimation(this);
  this.cycle(now);
  return true
};
goog.fx.Animation.prototype.stop = function(opt_gotoEnd) {
  goog.fx.anim.unregisterAnimation(this);
  this.setStateStopped();
  if(!!opt_gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.isPlaying()) {
    goog.fx.anim.unregisterAnimation(this);
    this.setStatePaused();
    this.onPause()
  }
};
goog.fx.Animation.prototype.getProgress = function() {
  return this.progress
};
goog.fx.Animation.prototype.setProgress = function(progress) {
  this.progress = progress;
  if(this.isPlaying()) {
    var now = goog.now();
    this.startTime = now - this.duration * this.progress;
    this.endTime = this.startTime + this.duration
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(!this.isStopped()) {
    this.stop(false)
  }
  this.onDestroy();
  goog.base(this, "disposeInternal")
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.onAnimationFrame = function(now) {
  this.cycle(now)
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  this.updateCoords_(this.progress);
  if(this.progress == 1) {
    this.setStateStopped();
    goog.fx.anim.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.isPlaying()) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  if(goog.isFunction(this.accel_)) {
    t = this.accel_(t)
  }
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.base(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.getProgress();
  this.fps = anim.fps_;
  this.state = anim.getStateInternal();
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.easing");
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "))
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0))
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y
  }else {
    this.x += tx;
    if(goog.isNumber(opt_ty)) {
      this.y += opt_ty
    }
  }
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if(attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e")
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild))
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild))
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return(element.removeNode(false))
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return(goog.dom.removeNode(element))
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return(node).firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return(node).lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return(node).nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return(node).previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return(node)
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document)
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true))
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if("\x3e" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return(query)
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.removeInstanceForWindow = function(opt_window) {
  var uid = goog.getUid(opt_window || window);
  goog.dispose(goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]);
  delete goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_str = function sel_to_str(input) {
  var item = cljs.core.first.call(null, input);
  var rest = cljs.core.rest.call(null, input);
  var end = cljs.core.empty_QMARK_.call(null, rest) ? cljs.core.list(cljs.core.List.EMPTY) : sel_to_str.call(null, rest);
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.map.call(null, function(p1__10580_SHARP_) {
      return cljs.core.conj.call(null, p1__10580_SHARP_, cljs.core.name.call(null, item))
    }, end)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return cljs.core.map.call(null, function(p1__10581_SHARP_) {
        return cljs.core.conj.call(null, p1__10581_SHARP_, item)
      }, end)
    }else {
      if(cljs.core.set_QMARK_.call(null, item)) {
        return cljs.core.reduce.call(null, function(r1, it) {
          return cljs.core.concat.call(null, r1, cljs.core.map.call(null, function(p1__10582_SHARP_) {
            return cljs.core.conj.call(null, p1__10582_SHARP_, it)
          }, end))
        }, cljs.core.PersistentVector.EMPTY, cljs.core.flatten.call(null, sel_to_str.call(null, item)))
      }else {
        if(cljs.core.coll_QMARK_.call(null, item)) {
          var x1 = sel_to_str.call(null, item);
          var sub = cljs.core.map.call(null, function(x1) {
            return function(p1__10583_SHARP_) {
              return cljs.core.apply.call(null, cljs.core.str, p1__10583_SHARP_)
            }
          }(x1), sel_to_str.call(null, item));
          var iter__3470__auto__ = function iter__14868(s__14869) {
            return new cljs.core.LazySeq(null, false, function() {
              var s__14869__$1 = s__14869;
              while(true) {
                var temp__4092__auto__ = cljs.core.seq.call(null, s__14869__$1);
                if(temp__4092__auto__) {
                  var xs__4579__auto__ = temp__4092__auto__;
                  var s = cljs.core.first.call(null, xs__4579__auto__);
                  var iterys__3466__auto__ = function(s__14869__$1, s, xs__4579__auto__, temp__4092__auto__) {
                    return function iter__14870(s__14871) {
                      return new cljs.core.LazySeq(null, false, function(s__14869__$1, s, xs__4579__auto__, temp__4092__auto__) {
                        return function() {
                          var s__14871__$1 = s__14871;
                          while(true) {
                            var temp__4092__auto____$1 = cljs.core.seq.call(null, s__14871__$1);
                            if(temp__4092__auto____$1) {
                              var s__14871__$2 = temp__4092__auto____$1;
                              if(cljs.core.chunked_seq_QMARK_.call(null, s__14871__$2)) {
                                var c__3468__auto__ = cljs.core.chunk_first.call(null, s__14871__$2);
                                var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
                                var b__14873 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
                                if(function() {
                                  var i__14872 = 0;
                                  while(true) {
                                    if(i__14872 < size__3469__auto__) {
                                      var e = cljs.core._nth.call(null, c__3468__auto__, i__14872);
                                      cljs.core.chunk_append.call(null, b__14873, function() {
                                        cljs.core.println.call(null, s, e);
                                        return cljs.core.conj.call(null, e, s)
                                      }());
                                      var G__14874 = i__14872 + 1;
                                      i__14872 = G__14874;
                                      continue
                                    }else {
                                      return true
                                    }
                                    break
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14873), iter__14870.call(null, cljs.core.chunk_rest.call(null, s__14871__$2)))
                                }else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14873), null)
                                }
                              }else {
                                var e = cljs.core.first.call(null, s__14871__$2);
                                return cljs.core.cons.call(null, function() {
                                  cljs.core.println.call(null, s, e);
                                  return cljs.core.conj.call(null, e, s)
                                }(), iter__14870.call(null, cljs.core.rest.call(null, s__14871__$2)))
                              }
                            }else {
                              return null
                            }
                            break
                          }
                        }
                      }(s__14869__$1, s, xs__4579__auto__, temp__4092__auto__), null)
                    }
                  }(s__14869__$1, s, xs__4579__auto__, temp__4092__auto__);
                  var fs__3467__auto__ = cljs.core.seq.call(null, iterys__3466__auto__.call(null, end));
                  if(fs__3467__auto__) {
                    return cljs.core.concat.call(null, fs__3467__auto__, iter__14868.call(null, cljs.core.rest.call(null, s__14869__$1)))
                  }else {
                    var G__14875 = cljs.core.rest.call(null, s__14869__$1);
                    s__14869__$1 = G__14875;
                    continue
                  }
                }else {
                  return null
                }
                break
              }
            }, null)
          };
          return iter__3470__auto__.call(null, sub)
        }else {
          return null
        }
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    var ors = enfocus.enlive.syntax.sel_to_str.call(null, sel);
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.apply.call(null, cljs.core.concat, cljs.core.interpose.call(null, ",", ors))))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts = function(p__14878) {
    var vec__14879 = p__14878;
    var x = cljs.core.nth.call(null, vec__14879, 0, null);
    var y = cljs.core.nth.call(null, vec__14879, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str(op), cljs.core.str("\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__15758_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__15758_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__14880) {
    var elms = cljs.core.seq(arglist__14880);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$core$IFn$_invoke$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__14881) {
    var elms = cljs.core.seq(arglist__14881);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(arguments.length > 1) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__14882) {
    var x = cljs.core.first(arglist__14882);
    var vals = cljs.core.rest(arglist__14882);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$core$IFn$_invoke$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__14883) {
    var elms = cljs.core.seq(arglist__14883);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$core$IFn$_invoke$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__14884) {
    var elms = cljs.core.seq(arglist__14884);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$core$IFn$_invoke$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__14885) {
    var elms = cljs.core.seq(arglist__14885);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$core$IFn$_invoke$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(arguments.length > 0) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__14886) {
    var elms = cljs.core.seq(arglist__14886);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_op.cljs$core$IFn$_invoke$arity$2 = nth_op__2;
  nth_op.cljs$core$IFn$_invoke$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_child.cljs$core$IFn$_invoke$arity$1 = nth_child__1;
  nth_child.cljs$core$IFn$_invoke$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_child.cljs$core$IFn$_invoke$arity$1 = nth_last_child__1;
  nth_last_child.cljs$core$IFn$_invoke$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_of_type.cljs$core$IFn$_invoke$arity$1 = nth_of_type__1;
  nth_of_type.cljs$core$IFn$_invoke$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_of_type.cljs$core$IFn$_invoke$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$core$IFn$_invoke$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(arguments.length > 0) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__14887) {
    var sel = cljs.core.seq(arglist__14887);
    return but__delegate(sel)
  };
  but.cljs$core$IFn$_invoke$arity$variadic = but__delegate;
  return but
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0:else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__14847 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__14848 = limit__$1 - 1;
            var G__14849 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__14847;
            limit__$1 = G__14848;
            parts = G__14849;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__14850 = index - 1;
        index = G__14850;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___14851 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___14851)) {
        var replacement_14852 = temp__4090__auto___14851;
        buffer.append([cljs.core.str(replacement_14852)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__14853 = index + 1;
      index = G__14853;
      continue
    }
    break
  }
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"Webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"Moz"
    }else {
      if(goog.userAgent.IE) {
        return"ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"O"
        }
      }
    }
  }
  return null
};
goog.dom.vendor.getVendorPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"-webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"-moz"
    }else {
      if(goog.userAgent.IE) {
        return"-ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"-o"
        }
      }
    }
  }
  return null
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y
  }else {
    this.left += tx;
    this.right += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty
    }
  }
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y
  }else {
    this.left += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty
    }
  }
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if(propertyName) {
    element.style[propertyName] = value
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if(typeof styleValue !== "undefined") {
    return styleValue
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return(rect)
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent)
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h))
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div_14845 = document.createElement("div");
var test_html_14846 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_14845.innerHTML = test_html_14846;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_14845.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_14845.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_14845.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for(var key in attributes) {
    if(attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key])
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_14420 = cljs.core.PersistentVector.fromArray([1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], true);
var table_section_wrapper_14421 = cljs.core.PersistentVector.fromArray([1, "\x3ctable\x3e", "\x3c/table\x3e"], true);
var cell_wrapper_14422 = cljs.core.PersistentVector.fromArray([3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], true);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["col", "\ufdd0:default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], [cljs.core.PersistentVector.fromArray([2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], true), cljs.core.PersistentVector.fromArray([0, "", ""], true), table_section_wrapper_14421, table_section_wrapper_14421, opt_wrapper_14420, cljs.core.PersistentVector.fromArray([1, 
"\x3cfieldset\x3e", "\x3c/fieldset\x3e"], true), cljs.core.PersistentVector.fromArray([1, "\x3cmap\x3e", "\x3c/map\x3e"], true), cell_wrapper_14422, table_section_wrapper_14421, cell_wrapper_14422, opt_wrapper_14420, table_section_wrapper_14421, cljs.core.PersistentVector.fromArray([2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], true), table_section_wrapper_14421]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = function() {
    var and__3941__auto__ = cljs.core._EQ_.call(null, tag_name, "table");
    if(and__3941__auto__) {
      return no_tbody_QMARK_
    }else {
      return and__3941__auto__
    }
  }() ? function() {
    var and__3941__auto__ = div.firstChild;
    if(cljs.core.truth_(and__3941__auto__)) {
      return div.firstChild.childNodes
    }else {
      return and__3941__auto__
    }
  }() : function() {
    var and__3941__auto__ = cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e");
    if(and__3941__auto__) {
      return no_tbody_QMARK_
    }else {
      return and__3941__auto__
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var seq__14427 = cljs.core.seq.call(null, tbody);
  var chunk__14428 = null;
  var count__14429 = 0;
  var i__14430 = 0;
  while(true) {
    if(i__14430 < count__14429) {
      var child = cljs.core._nth.call(null, chunk__14428, i__14430);
      if(function() {
        var and__3941__auto__ = cljs.core._EQ_.call(null, child.nodeName, "tbody");
        if(and__3941__auto__) {
          return cljs.core._EQ_.call(null, child.childNodes.length, 0)
        }else {
          return and__3941__auto__
        }
      }()) {
        child.parentNode.removeChild(child)
      }else {
      }
      var G__14431 = seq__14427;
      var G__14432 = chunk__14428;
      var G__14433 = count__14429;
      var G__14434 = i__14430 + 1;
      seq__14427 = G__14431;
      chunk__14428 = G__14432;
      count__14429 = G__14433;
      i__14430 = G__14434;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__14427);
      if(temp__4092__auto__) {
        var seq__14427__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14427__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14427__$1);
          var G__14435 = cljs.core.chunk_rest.call(null, seq__14427__$1);
          var G__14436 = c__3501__auto__;
          var G__14437 = cljs.core.count.call(null, c__3501__auto__);
          var G__14438 = 0;
          seq__14427 = G__14435;
          chunk__14428 = G__14436;
          count__14429 = G__14437;
          i__14430 = G__14438;
          continue
        }else {
          var child = cljs.core.first.call(null, seq__14427__$1);
          if(function() {
            var and__3941__auto__ = cljs.core._EQ_.call(null, child.nodeName, "tbody");
            if(and__3941__auto__) {
              return cljs.core._EQ_.call(null, child.childNodes.length, 0)
            }else {
              return and__3941__auto__
            }
          }()) {
            child.parentNode.removeChild(child)
          }else {
          }
          var G__14439 = cljs.core.next.call(null, seq__14427__$1);
          var G__14440 = null;
          var G__14441 = 0;
          var G__14442 = 0;
          seq__14427 = G__14439;
          chunk__14428 = G__14440;
          count__14429 = G__14441;
          i__14430 = G__14442;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__14444 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword("\ufdd0:default")).call(null, domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__14444, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__14444, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__14444, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str(start_wrap), cljs.core.str(html__$1), cljs.core.str(end_wrap)].join("");
      return div
    }();
    var level = depth;
    while(true) {
      if(level > 0) {
        var G__14445 = wrapper.lastChild;
        var G__14446 = level - 1;
        wrapper = G__14445;
        level = G__14446;
        continue
      }else {
        return wrapper
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3941__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1)
    }else {
      return and__3941__auto__
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1)
  }else {
  }
  return div.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3941__auto__ = content;
    if(and__3941__auto__) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__3370__auto__ = content == null ? null : content;
    return function() {
      var or__3943__auto__ = domina.nodes[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.nodes["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3941__auto__ = nodeseq;
    if(and__3941__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__3370__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3943__auto__ = domina.single_node[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = domina.single_node["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3941__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3941__auto__
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__14447) {
    var mesg = cljs.core.seq(arglist__14447);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__14448) {
    var mesg = cljs.core.seq(arglist__14448);
    return log__delegate(mesg)
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(typeof domina.domina.t14452 !== "undefined") {
  }else {
    goog.provide("domina.t14452");
    domina.t14452 = function(class_name, by_class, meta14453) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta14453 = meta14453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t14452.cljs$lang$type = true;
    domina.t14452.cljs$lang$ctorStr = "domina/t14452";
    domina.t14452.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "domina/t14452")
    };
    domina.t14452.prototype.domina$DomContent$ = true;
    domina.t14452.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var self__ = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, self__.class_name)))
    };
    domina.t14452.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var self__ = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, self__.class_name)))
    };
    domina.t14452.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14454) {
      var self__ = this;
      return self__.meta14453
    };
    domina.t14452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14454, meta14453__$1) {
      var self__ = this;
      return new domina.t14452(self__.class_name, self__.by_class, meta14453__$1)
    };
    domina.__GT_t14452 = function __GT_t14452(class_name__$1, by_class__$1, meta14453) {
      return new domina.t14452(class_name__$1, by_class__$1, meta14453)
    }
  }
  return new domina.t14452(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents))
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if(arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return common_ancestor__delegate.call(this, contents)
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__14455) {
    var contents = cljs.core.seq(arglist__14455);
    return common_ancestor__delegate(contents)
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__14456_SHARP_) {
    return p1__14456_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__14457_SHARP_, p2__14458_SHARP_) {
    return goog.dom.insertChildAt(p1__14457_SHARP_, p2__14458_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__14460_SHARP_, p2__14459_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__14459_SHARP_, p1__14460_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__14462_SHARP_, p2__14461_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__14461_SHARP_, p1__14462_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__14464_SHARP_, p2__14463_SHARP_) {
    return goog.dom.replaceNode(p2__14463_SHARP_, p1__14464_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null
  }else {
    return s
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__14469_14473 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__14470_14474 = null;
    var count__14471_14475 = 0;
    var i__14472_14476 = 0;
    while(true) {
      if(i__14472_14476 < count__14471_14475) {
        var n_14477 = cljs.core._nth.call(null, chunk__14470_14474, i__14472_14476);
        goog.style.setStyle(n_14477, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__14478 = seq__14469_14473;
        var G__14479 = chunk__14470_14474;
        var G__14480 = count__14471_14475;
        var G__14481 = i__14472_14476 + 1;
        seq__14469_14473 = G__14478;
        chunk__14470_14474 = G__14479;
        count__14471_14475 = G__14480;
        i__14472_14476 = G__14481;
        continue
      }else {
        var temp__4092__auto___14482 = cljs.core.seq.call(null, seq__14469_14473);
        if(temp__4092__auto___14482) {
          var seq__14469_14483__$1 = temp__4092__auto___14482;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14469_14483__$1)) {
            var c__3501__auto___14484 = cljs.core.chunk_first.call(null, seq__14469_14483__$1);
            var G__14485 = cljs.core.chunk_rest.call(null, seq__14469_14483__$1);
            var G__14486 = c__3501__auto___14484;
            var G__14487 = cljs.core.count.call(null, c__3501__auto___14484);
            var G__14488 = 0;
            seq__14469_14473 = G__14485;
            chunk__14470_14474 = G__14486;
            count__14471_14475 = G__14487;
            i__14472_14476 = G__14488;
            continue
          }else {
            var n_14489 = cljs.core.first.call(null, seq__14469_14483__$1);
            goog.style.setStyle(n_14489, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__14490 = cljs.core.next.call(null, seq__14469_14483__$1);
            var G__14491 = null;
            var G__14492 = 0;
            var G__14493 = 0;
            seq__14469_14473 = G__14490;
            chunk__14470_14474 = G__14491;
            count__14471_14475 = G__14492;
            i__14472_14476 = G__14493;
            continue
          }
        }else {
        }
      }
      break
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__14494) {
    var content = cljs.core.first(arglist__14494);
    arglist__14494 = cljs.core.next(arglist__14494);
    var name = cljs.core.first(arglist__14494);
    var value = cljs.core.rest(arglist__14494);
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__14499_14503 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__14500_14504 = null;
    var count__14501_14505 = 0;
    var i__14502_14506 = 0;
    while(true) {
      if(i__14502_14506 < count__14501_14505) {
        var n_14507 = cljs.core._nth.call(null, chunk__14500_14504, i__14502_14506);
        n_14507.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__14508 = seq__14499_14503;
        var G__14509 = chunk__14500_14504;
        var G__14510 = count__14501_14505;
        var G__14511 = i__14502_14506 + 1;
        seq__14499_14503 = G__14508;
        chunk__14500_14504 = G__14509;
        count__14501_14505 = G__14510;
        i__14502_14506 = G__14511;
        continue
      }else {
        var temp__4092__auto___14512 = cljs.core.seq.call(null, seq__14499_14503);
        if(temp__4092__auto___14512) {
          var seq__14499_14513__$1 = temp__4092__auto___14512;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14499_14513__$1)) {
            var c__3501__auto___14514 = cljs.core.chunk_first.call(null, seq__14499_14513__$1);
            var G__14515 = cljs.core.chunk_rest.call(null, seq__14499_14513__$1);
            var G__14516 = c__3501__auto___14514;
            var G__14517 = cljs.core.count.call(null, c__3501__auto___14514);
            var G__14518 = 0;
            seq__14499_14503 = G__14515;
            chunk__14500_14504 = G__14516;
            count__14501_14505 = G__14517;
            i__14502_14506 = G__14518;
            continue
          }else {
            var n_14519 = cljs.core.first.call(null, seq__14499_14513__$1);
            n_14519.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__14520 = cljs.core.next.call(null, seq__14499_14513__$1);
            var G__14521 = null;
            var G__14522 = 0;
            var G__14523 = 0;
            seq__14499_14503 = G__14520;
            chunk__14500_14504 = G__14521;
            count__14501_14505 = G__14522;
            i__14502_14506 = G__14523;
            continue
          }
        }else {
        }
      }
      break
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__14524) {
    var content = cljs.core.first(arglist__14524);
    arglist__14524 = cljs.core.next(arglist__14524);
    var name = cljs.core.first(arglist__14524);
    var value = cljs.core.rest(arglist__14524);
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__14529_14533 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__14530_14534 = null;
  var count__14531_14535 = 0;
  var i__14532_14536 = 0;
  while(true) {
    if(i__14532_14536 < count__14531_14535) {
      var n_14537 = cljs.core._nth.call(null, chunk__14530_14534, i__14532_14536);
      n_14537.removeAttribute(cljs.core.name.call(null, name));
      var G__14538 = seq__14529_14533;
      var G__14539 = chunk__14530_14534;
      var G__14540 = count__14531_14535;
      var G__14541 = i__14532_14536 + 1;
      seq__14529_14533 = G__14538;
      chunk__14530_14534 = G__14539;
      count__14531_14535 = G__14540;
      i__14532_14536 = G__14541;
      continue
    }else {
      var temp__4092__auto___14542 = cljs.core.seq.call(null, seq__14529_14533);
      if(temp__4092__auto___14542) {
        var seq__14529_14543__$1 = temp__4092__auto___14542;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14529_14543__$1)) {
          var c__3501__auto___14544 = cljs.core.chunk_first.call(null, seq__14529_14543__$1);
          var G__14545 = cljs.core.chunk_rest.call(null, seq__14529_14543__$1);
          var G__14546 = c__3501__auto___14544;
          var G__14547 = cljs.core.count.call(null, c__3501__auto___14544);
          var G__14548 = 0;
          seq__14529_14533 = G__14545;
          chunk__14530_14534 = G__14546;
          count__14531_14535 = G__14547;
          i__14532_14536 = G__14548;
          continue
        }else {
          var n_14549 = cljs.core.first.call(null, seq__14529_14543__$1);
          n_14549.removeAttribute(cljs.core.name.call(null, name));
          var G__14550 = cljs.core.next.call(null, seq__14529_14543__$1);
          var G__14551 = null;
          var G__14552 = 0;
          var G__14553 = 0;
          seq__14529_14533 = G__14550;
          chunk__14530_14534 = G__14551;
          count__14531_14535 = G__14552;
          i__14532_14536 = G__14553;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__14555 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__14555, 0, null);
    var v = cljs.core.nth.call(null, vec__14555, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = k;
      if(cljs.core.truth_(and__3941__auto__)) {
        return v
      }else {
        return and__3941__auto__
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v)
    }else {
      return acc
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style)) {
    return domina.parse_style_attributes.call(null, style)
  }else {
    if(cljs.core.truth_(style.cssText)) {
      return domina.parse_style_attributes.call(null, style.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__14556_SHARP_) {
    var attr = attrs__$1.item(p1__14556_SHARP_);
    var value = attr.nodeValue;
    if(function() {
      var and__3941__auto__ = cljs.core.not_EQ_.call(null, null, value);
      if(and__3941__auto__) {
        return cljs.core.not_EQ_.call(null, "", value)
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true)
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__$1.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__14563_14569 = cljs.core.seq.call(null, styles);
  var chunk__14564_14570 = null;
  var count__14565_14571 = 0;
  var i__14566_14572 = 0;
  while(true) {
    if(i__14566_14572 < count__14565_14571) {
      var vec__14567_14573 = cljs.core._nth.call(null, chunk__14564_14570, i__14566_14572);
      var name_14574 = cljs.core.nth.call(null, vec__14567_14573, 0, null);
      var value_14575 = cljs.core.nth.call(null, vec__14567_14573, 1, null);
      domina.set_style_BANG_.call(null, content, name_14574, value_14575);
      var G__14576 = seq__14563_14569;
      var G__14577 = chunk__14564_14570;
      var G__14578 = count__14565_14571;
      var G__14579 = i__14566_14572 + 1;
      seq__14563_14569 = G__14576;
      chunk__14564_14570 = G__14577;
      count__14565_14571 = G__14578;
      i__14566_14572 = G__14579;
      continue
    }else {
      var temp__4092__auto___14580 = cljs.core.seq.call(null, seq__14563_14569);
      if(temp__4092__auto___14580) {
        var seq__14563_14581__$1 = temp__4092__auto___14580;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14563_14581__$1)) {
          var c__3501__auto___14582 = cljs.core.chunk_first.call(null, seq__14563_14581__$1);
          var G__14583 = cljs.core.chunk_rest.call(null, seq__14563_14581__$1);
          var G__14584 = c__3501__auto___14582;
          var G__14585 = cljs.core.count.call(null, c__3501__auto___14582);
          var G__14586 = 0;
          seq__14563_14569 = G__14583;
          chunk__14564_14570 = G__14584;
          count__14565_14571 = G__14585;
          i__14566_14572 = G__14586;
          continue
        }else {
          var vec__14568_14587 = cljs.core.first.call(null, seq__14563_14581__$1);
          var name_14588 = cljs.core.nth.call(null, vec__14568_14587, 0, null);
          var value_14589 = cljs.core.nth.call(null, vec__14568_14587, 1, null);
          domina.set_style_BANG_.call(null, content, name_14588, value_14589);
          var G__14590 = cljs.core.next.call(null, seq__14563_14581__$1);
          var G__14591 = null;
          var G__14592 = 0;
          var G__14593 = 0;
          seq__14563_14569 = G__14590;
          chunk__14564_14570 = G__14591;
          count__14565_14571 = G__14592;
          i__14566_14572 = G__14593;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__14600_14606 = cljs.core.seq.call(null, attrs);
  var chunk__14601_14607 = null;
  var count__14602_14608 = 0;
  var i__14603_14609 = 0;
  while(true) {
    if(i__14603_14609 < count__14602_14608) {
      var vec__14604_14610 = cljs.core._nth.call(null, chunk__14601_14607, i__14603_14609);
      var name_14611 = cljs.core.nth.call(null, vec__14604_14610, 0, null);
      var value_14612 = cljs.core.nth.call(null, vec__14604_14610, 1, null);
      domina.set_attr_BANG_.call(null, content, name_14611, value_14612);
      var G__14613 = seq__14600_14606;
      var G__14614 = chunk__14601_14607;
      var G__14615 = count__14602_14608;
      var G__14616 = i__14603_14609 + 1;
      seq__14600_14606 = G__14613;
      chunk__14601_14607 = G__14614;
      count__14602_14608 = G__14615;
      i__14603_14609 = G__14616;
      continue
    }else {
      var temp__4092__auto___14617 = cljs.core.seq.call(null, seq__14600_14606);
      if(temp__4092__auto___14617) {
        var seq__14600_14618__$1 = temp__4092__auto___14617;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14600_14618__$1)) {
          var c__3501__auto___14619 = cljs.core.chunk_first.call(null, seq__14600_14618__$1);
          var G__14620 = cljs.core.chunk_rest.call(null, seq__14600_14618__$1);
          var G__14621 = c__3501__auto___14619;
          var G__14622 = cljs.core.count.call(null, c__3501__auto___14619);
          var G__14623 = 0;
          seq__14600_14606 = G__14620;
          chunk__14601_14607 = G__14621;
          count__14602_14608 = G__14622;
          i__14603_14609 = G__14623;
          continue
        }else {
          var vec__14605_14624 = cljs.core.first.call(null, seq__14600_14618__$1);
          var name_14625 = cljs.core.nth.call(null, vec__14605_14624, 0, null);
          var value_14626 = cljs.core.nth.call(null, vec__14605_14624, 1, null);
          domina.set_attr_BANG_.call(null, content, name_14625, value_14626);
          var G__14627 = cljs.core.next.call(null, seq__14600_14618__$1);
          var G__14628 = null;
          var G__14629 = 0;
          var G__14630 = 0;
          seq__14600_14606 = G__14627;
          chunk__14601_14607 = G__14628;
          count__14602_14608 = G__14629;
          i__14603_14609 = G__14630;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__14635_14639 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__14636_14640 = null;
  var count__14637_14641 = 0;
  var i__14638_14642 = 0;
  while(true) {
    if(i__14638_14642 < count__14637_14641) {
      var node_14643 = cljs.core._nth.call(null, chunk__14636_14640, i__14638_14642);
      goog.dom.classes.add(node_14643, class$);
      var G__14644 = seq__14635_14639;
      var G__14645 = chunk__14636_14640;
      var G__14646 = count__14637_14641;
      var G__14647 = i__14638_14642 + 1;
      seq__14635_14639 = G__14644;
      chunk__14636_14640 = G__14645;
      count__14637_14641 = G__14646;
      i__14638_14642 = G__14647;
      continue
    }else {
      var temp__4092__auto___14648 = cljs.core.seq.call(null, seq__14635_14639);
      if(temp__4092__auto___14648) {
        var seq__14635_14649__$1 = temp__4092__auto___14648;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14635_14649__$1)) {
          var c__3501__auto___14650 = cljs.core.chunk_first.call(null, seq__14635_14649__$1);
          var G__14651 = cljs.core.chunk_rest.call(null, seq__14635_14649__$1);
          var G__14652 = c__3501__auto___14650;
          var G__14653 = cljs.core.count.call(null, c__3501__auto___14650);
          var G__14654 = 0;
          seq__14635_14639 = G__14651;
          chunk__14636_14640 = G__14652;
          count__14637_14641 = G__14653;
          i__14638_14642 = G__14654;
          continue
        }else {
          var node_14655 = cljs.core.first.call(null, seq__14635_14649__$1);
          goog.dom.classes.add(node_14655, class$);
          var G__14656 = cljs.core.next.call(null, seq__14635_14649__$1);
          var G__14657 = null;
          var G__14658 = 0;
          var G__14659 = 0;
          seq__14635_14639 = G__14656;
          chunk__14636_14640 = G__14657;
          count__14637_14641 = G__14658;
          i__14638_14642 = G__14659;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__14664_14668 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__14665_14669 = null;
  var count__14666_14670 = 0;
  var i__14667_14671 = 0;
  while(true) {
    if(i__14667_14671 < count__14666_14670) {
      var node_14672 = cljs.core._nth.call(null, chunk__14665_14669, i__14667_14671);
      goog.dom.classes.remove(node_14672, class$);
      var G__14673 = seq__14664_14668;
      var G__14674 = chunk__14665_14669;
      var G__14675 = count__14666_14670;
      var G__14676 = i__14667_14671 + 1;
      seq__14664_14668 = G__14673;
      chunk__14665_14669 = G__14674;
      count__14666_14670 = G__14675;
      i__14667_14671 = G__14676;
      continue
    }else {
      var temp__4092__auto___14677 = cljs.core.seq.call(null, seq__14664_14668);
      if(temp__4092__auto___14677) {
        var seq__14664_14678__$1 = temp__4092__auto___14677;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14664_14678__$1)) {
          var c__3501__auto___14679 = cljs.core.chunk_first.call(null, seq__14664_14678__$1);
          var G__14680 = cljs.core.chunk_rest.call(null, seq__14664_14678__$1);
          var G__14681 = c__3501__auto___14679;
          var G__14682 = cljs.core.count.call(null, c__3501__auto___14679);
          var G__14683 = 0;
          seq__14664_14668 = G__14680;
          chunk__14665_14669 = G__14681;
          count__14666_14670 = G__14682;
          i__14667_14671 = G__14683;
          continue
        }else {
          var node_14684 = cljs.core.first.call(null, seq__14664_14678__$1);
          goog.dom.classes.remove(node_14684, class$);
          var G__14685 = cljs.core.next.call(null, seq__14664_14678__$1);
          var G__14686 = null;
          var G__14687 = 0;
          var G__14688 = 0;
          seq__14664_14668 = G__14685;
          chunk__14665_14669 = G__14686;
          count__14666_14670 = G__14687;
          i__14667_14671 = G__14688;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_14697__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__14693_14698 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__14694_14699 = null;
  var count__14695_14700 = 0;
  var i__14696_14701 = 0;
  while(true) {
    if(i__14696_14701 < count__14695_14700) {
      var node_14702 = cljs.core._nth.call(null, chunk__14694_14699, i__14696_14701);
      goog.dom.classes.set(node_14702, classes_14697__$1);
      var G__14703 = seq__14693_14698;
      var G__14704 = chunk__14694_14699;
      var G__14705 = count__14695_14700;
      var G__14706 = i__14696_14701 + 1;
      seq__14693_14698 = G__14703;
      chunk__14694_14699 = G__14704;
      count__14695_14700 = G__14705;
      i__14696_14701 = G__14706;
      continue
    }else {
      var temp__4092__auto___14707 = cljs.core.seq.call(null, seq__14693_14698);
      if(temp__4092__auto___14707) {
        var seq__14693_14708__$1 = temp__4092__auto___14707;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14693_14708__$1)) {
          var c__3501__auto___14709 = cljs.core.chunk_first.call(null, seq__14693_14708__$1);
          var G__14710 = cljs.core.chunk_rest.call(null, seq__14693_14708__$1);
          var G__14711 = c__3501__auto___14709;
          var G__14712 = cljs.core.count.call(null, c__3501__auto___14709);
          var G__14713 = 0;
          seq__14693_14698 = G__14710;
          chunk__14694_14699 = G__14711;
          count__14695_14700 = G__14712;
          i__14696_14701 = G__14713;
          continue
        }else {
          var node_14714 = cljs.core.first.call(null, seq__14693_14708__$1);
          goog.dom.classes.set(node_14714, classes_14697__$1);
          var G__14715 = cljs.core.next.call(null, seq__14693_14708__$1);
          var G__14716 = null;
          var G__14717 = 0;
          var G__14718 = 0;
          seq__14693_14698 = G__14715;
          chunk__14694_14699 = G__14716;
          count__14695_14700 = G__14717;
          i__14696_14701 = G__14718;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__14723_14727 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__14724_14728 = null;
  var count__14725_14729 = 0;
  var i__14726_14730 = 0;
  while(true) {
    if(i__14726_14730 < count__14725_14729) {
      var node_14731 = cljs.core._nth.call(null, chunk__14724_14728, i__14726_14730);
      goog.dom.setTextContent(node_14731, value);
      var G__14732 = seq__14723_14727;
      var G__14733 = chunk__14724_14728;
      var G__14734 = count__14725_14729;
      var G__14735 = i__14726_14730 + 1;
      seq__14723_14727 = G__14732;
      chunk__14724_14728 = G__14733;
      count__14725_14729 = G__14734;
      i__14726_14730 = G__14735;
      continue
    }else {
      var temp__4092__auto___14736 = cljs.core.seq.call(null, seq__14723_14727);
      if(temp__4092__auto___14736) {
        var seq__14723_14737__$1 = temp__4092__auto___14736;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14723_14737__$1)) {
          var c__3501__auto___14738 = cljs.core.chunk_first.call(null, seq__14723_14737__$1);
          var G__14739 = cljs.core.chunk_rest.call(null, seq__14723_14737__$1);
          var G__14740 = c__3501__auto___14738;
          var G__14741 = cljs.core.count.call(null, c__3501__auto___14738);
          var G__14742 = 0;
          seq__14723_14727 = G__14739;
          chunk__14724_14728 = G__14740;
          count__14725_14729 = G__14741;
          i__14726_14730 = G__14742;
          continue
        }else {
          var node_14743 = cljs.core.first.call(null, seq__14723_14737__$1);
          goog.dom.setTextContent(node_14743, value);
          var G__14744 = cljs.core.next.call(null, seq__14723_14737__$1);
          var G__14745 = null;
          var G__14746 = 0;
          var G__14747 = 0;
          seq__14723_14727 = G__14744;
          chunk__14724_14728 = G__14745;
          count__14725_14729 = G__14746;
          i__14726_14730 = G__14747;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__14752_14756 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__14753_14757 = null;
  var count__14754_14758 = 0;
  var i__14755_14759 = 0;
  while(true) {
    if(i__14755_14759 < count__14754_14758) {
      var node_14760 = cljs.core._nth.call(null, chunk__14753_14757, i__14755_14759);
      goog.dom.forms.setValue(node_14760, value);
      var G__14761 = seq__14752_14756;
      var G__14762 = chunk__14753_14757;
      var G__14763 = count__14754_14758;
      var G__14764 = i__14755_14759 + 1;
      seq__14752_14756 = G__14761;
      chunk__14753_14757 = G__14762;
      count__14754_14758 = G__14763;
      i__14755_14759 = G__14764;
      continue
    }else {
      var temp__4092__auto___14765 = cljs.core.seq.call(null, seq__14752_14756);
      if(temp__4092__auto___14765) {
        var seq__14752_14766__$1 = temp__4092__auto___14765;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14752_14766__$1)) {
          var c__3501__auto___14767 = cljs.core.chunk_first.call(null, seq__14752_14766__$1);
          var G__14768 = cljs.core.chunk_rest.call(null, seq__14752_14766__$1);
          var G__14769 = c__3501__auto___14767;
          var G__14770 = cljs.core.count.call(null, c__3501__auto___14767);
          var G__14771 = 0;
          seq__14752_14756 = G__14768;
          chunk__14753_14757 = G__14769;
          count__14754_14758 = G__14770;
          i__14755_14759 = G__14771;
          continue
        }else {
          var node_14772 = cljs.core.first.call(null, seq__14752_14766__$1);
          goog.dom.forms.setValue(node_14772, value);
          var G__14773 = cljs.core.next.call(null, seq__14752_14766__$1);
          var G__14774 = null;
          var G__14775 = 0;
          var G__14776 = 0;
          seq__14752_14756 = G__14773;
          chunk__14753_14757 = G__14774;
          count__14754_14758 = G__14775;
          i__14755_14759 = G__14776;
          continue
        }
      }else {
      }
    }
    break
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = allows_inner_html_QMARK_;
    if(and__3941__auto__) {
      var and__3941__auto____$1 = function() {
        var or__3943__auto__ = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_)
        }
      }();
      if(cljs.core.truth_(and__3941__auto____$1)) {
        return!special_tag_QMARK_
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    var value_14787 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__14783_14788 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__14784_14789 = null;
      var count__14785_14790 = 0;
      var i__14786_14791 = 0;
      while(true) {
        if(i__14786_14791 < count__14785_14790) {
          var node_14792 = cljs.core._nth.call(null, chunk__14784_14789, i__14786_14791);
          goog.events.removeAll(node_14792);
          node_14792.innerHTML = value_14787;
          var G__14793 = seq__14783_14788;
          var G__14794 = chunk__14784_14789;
          var G__14795 = count__14785_14790;
          var G__14796 = i__14786_14791 + 1;
          seq__14783_14788 = G__14793;
          chunk__14784_14789 = G__14794;
          count__14785_14790 = G__14795;
          i__14786_14791 = G__14796;
          continue
        }else {
          var temp__4092__auto___14797 = cljs.core.seq.call(null, seq__14783_14788);
          if(temp__4092__auto___14797) {
            var seq__14783_14798__$1 = temp__4092__auto___14797;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14783_14798__$1)) {
              var c__3501__auto___14799 = cljs.core.chunk_first.call(null, seq__14783_14798__$1);
              var G__14800 = cljs.core.chunk_rest.call(null, seq__14783_14798__$1);
              var G__14801 = c__3501__auto___14799;
              var G__14802 = cljs.core.count.call(null, c__3501__auto___14799);
              var G__14803 = 0;
              seq__14783_14788 = G__14800;
              chunk__14784_14789 = G__14801;
              count__14785_14790 = G__14802;
              i__14786_14791 = G__14803;
              continue
            }else {
              var node_14804 = cljs.core.first.call(null, seq__14783_14798__$1);
              goog.events.removeAll(node_14804);
              node_14804.innerHTML = value_14787;
              var G__14805 = cljs.core.next.call(null, seq__14783_14798__$1);
              var G__14806 = null;
              var G__14807 = 0;
              var G__14808 = 0;
              seq__14783_14788 = G__14805;
              chunk__14784_14789 = G__14806;
              count__14785_14790 = G__14807;
              i__14786_14791 = G__14808;
              continue
            }
          }else {
          }
        }
        break
      }
    }catch(e14782) {
      if(e14782 instanceof Error) {
        var e_14809 = e14782;
        domina.replace_children_BANG_.call(null, content, value_14787)
      }else {
        if("\ufdd0:else") {
          throw e14782;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = bubble;
      if(cljs.core.truth_(and__3941__auto__)) {
        return value == null
      }else {
        return and__3941__auto__
      }
    }())) {
      var temp__4092__auto__ = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__4092__auto__)) {
        var parent = temp__4092__auto__;
        return get_data.call(null, parent, key, true)
      }else {
        return null
      }
    }else {
      return value
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3943__auto__ = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.core.PersistentArrayMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__14816_14820 = cljs.core.seq.call(null, children);
    var chunk__14817_14821 = null;
    var count__14818_14822 = 0;
    var i__14819_14823 = 0;
    while(true) {
      if(i__14819_14823 < count__14818_14822) {
        var child_14824 = cljs.core._nth.call(null, chunk__14817_14821, i__14819_14823);
        frag.appendChild(child_14824);
        var G__14825 = seq__14816_14820;
        var G__14826 = chunk__14817_14821;
        var G__14827 = count__14818_14822;
        var G__14828 = i__14819_14823 + 1;
        seq__14816_14820 = G__14825;
        chunk__14817_14821 = G__14826;
        count__14818_14822 = G__14827;
        i__14819_14823 = G__14828;
        continue
      }else {
        var temp__4092__auto___14829 = cljs.core.seq.call(null, seq__14816_14820);
        if(temp__4092__auto___14829) {
          var seq__14816_14830__$1 = temp__4092__auto___14829;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14816_14830__$1)) {
            var c__3501__auto___14831 = cljs.core.chunk_first.call(null, seq__14816_14830__$1);
            var G__14832 = cljs.core.chunk_rest.call(null, seq__14816_14830__$1);
            var G__14833 = c__3501__auto___14831;
            var G__14834 = cljs.core.count.call(null, c__3501__auto___14831);
            var G__14835 = 0;
            seq__14816_14820 = G__14832;
            chunk__14817_14821 = G__14833;
            count__14818_14822 = G__14834;
            i__14819_14823 = G__14835;
            continue
          }else {
            var child_14836 = cljs.core.first.call(null, seq__14816_14830__$1);
            frag.appendChild(child_14836);
            var G__14837 = cljs.core.next.call(null, seq__14816_14830__$1);
            var G__14838 = null;
            var G__14839 = 0;
            var G__14840 = 0;
            seq__14816_14820 = G__14837;
            chunk__14817_14821 = G__14838;
            count__14818_14822 = G__14839;
            i__14819_14823 = G__14840;
            continue
          }
        }else {
        }
      }
      break
    }
    return frag
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true)
    }
  }(parents, children, first_child)));
  if(cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__14810_SHARP_, p2__14811_SHARP_) {
      return f.call(null, p1__14810_SHARP_, p2__14811_SHARP_)
    }, cljs.core.rest.call(null, parents), other_children))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3941__auto__ = obj;
  if(cljs.core.truth_(and__3941__auto__)) {
    return obj.length
  }else {
    return and__3941__auto__
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__14842 = list_thing;
      if(G__14842) {
        if(function() {
          var or__3943__auto__ = G__14842.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__14842.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__14842.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14842)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14842)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0:default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__14843 = content;
      if(G__14843) {
        if(function() {
          var or__3943__auto__ = G__14843.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__14843.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__14843.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14843)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14843)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0:default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__14844 = content;
      if(G__14844) {
        if(function() {
          var or__3943__auto__ = G__14844.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__14844.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__14844.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14844)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__14844)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0:default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = node.selectSingleNode;
    if(cljs.core.truth_(and__3941__auto__)) {
      return doc.setProperty
    }else {
      return and__3941__auto__
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path)
  }else {
    if(cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path)
    }else {
      if("\ufdd0:else") {
        throw new Error("Could not find XPath support in this browser.");
      }else {
        return null
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1)
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue
  })
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1)
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while(true) {
      if(i < num_results) {
        var G__14854 = i + 1;
        var G__14855 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__14854;
        acc = G__14855;
        continue
      }else {
        return acc
      }
      break
    }
  })
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr)
  };
  var xpath__2 = function(base, expr) {
    if(typeof domina.xpath.t14859 !== "undefined") {
    }else {
      goog.provide("domina.xpath.t14859");
      domina.xpath.t14859 = function(expr, base, xpath, meta14860) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta14860 = meta14860;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.xpath.t14859.cljs$lang$type = true;
      domina.xpath.t14859.cljs$lang$ctorStr = "domina.xpath/t14859";
      domina.xpath.t14859.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "domina.xpath/t14859")
      };
      domina.xpath.t14859.prototype.domina$DomContent$ = true;
      domina.xpath.t14859.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base))
      };
      domina.xpath.t14859.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))))
      };
      domina.xpath.t14859.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14861) {
        var self__ = this;
        return self__.meta14860
      };
      domina.xpath.t14859.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14861, meta14860__$1) {
        var self__ = this;
        return new domina.xpath.t14859(self__.expr, self__.base, self__.xpath, meta14860__$1)
      };
      domina.xpath.__GT_t14859 = function __GT_t14859(expr__$1, base__$1, xpath__$1, meta14860) {
        return new domina.xpath.t14859(expr__$1, base__$1, xpath__$1, meta14860)
      }
    }
    return new domina.xpath.t14859(expr, base, xpath, null)
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath
}();
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(typeof domina.css.t14417 !== "undefined") {
    }else {
      goog.provide("domina.css.t14417");
      domina.css.t14417 = function(expr, base, sel, meta14418) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta14418 = meta14418;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t14417.cljs$lang$type = true;
      domina.css.t14417.cljs$lang$ctorStr = "domina.css/t14417";
      domina.css.t14417.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "domina.css/t14417")
      };
      domina.css.t14417.prototype.domina$DomContent$ = true;
      domina.css.t14417.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.mapcat.call(null, function(p1__14412_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__14412_SHARP_))
        }, domina.nodes.call(null, self__.base))
      };
      domina.css.t14417.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__14413_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__14413_SHARP_))
        }, domina.nodes.call(null, self__.base))))
      };
      domina.css.t14417.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14419) {
        var self__ = this;
        return self__.meta14418
      };
      domina.css.t14417.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14419, meta14418__$1) {
        var self__ = this;
        return new domina.css.t14417(self__.expr, self__.base, self__.sel, meta14418__$1)
      };
      domina.css.__GT_t14417 = function __GT_t14417(expr__$1, base__$1, sel__$1, meta14418) {
        return new domina.css.t14417(expr__$1, base__$1, sel__$1, meta14418)
      }
    }
    return new domina.css.t14417(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel
}();
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.xpath");
goog.require("domina.css");
enfocus.core.ISelector = {};
enfocus.core.select = function() {
  var select = null;
  var select__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$1(this$)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var select__2 = function(this$, root) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$2(this$, root)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$, root)
    }
  };
  var select__3 = function(this$, root, id_mask) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ISelector$select$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$3(this$, root, id_mask)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.select[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.select["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ISelector.select", this$);
          }
        }
      }().call(null, this$, root, id_mask)
    }
  };
  select = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, this$);
      case 2:
        return select__2.call(this, this$, root);
      case 3:
        return select__3.call(this, this$, root, id_mask)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select.cljs$core$IFn$_invoke$arity$1 = select__1;
  select.cljs$core$IFn$_invoke$arity$2 = select__2;
  select.cljs$core$IFn$_invoke$arity$3 = select__3;
  return select
}();
enfocus.core.ITransform = {};
enfocus.core.apply_transform = function() {
  var apply_transform = null;
  var apply_transform__2 = function(this$, nodes) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$2(this$, nodes)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.apply_transform[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.apply_transform["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes)
    }
  };
  var apply_transform__3 = function(this$, nodes, callback) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$3(this$, nodes, callback)
    }else {
      var x__3370__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = enfocus.core.apply_transform[goog.typeOf(x__3370__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = enfocus.core.apply_transform["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes, callback)
    }
  };
  apply_transform = function(this$, nodes, callback) {
    switch(arguments.length) {
      case 2:
        return apply_transform__2.call(this, this$, nodes);
      case 3:
        return apply_transform__3.call(this, this$, nodes, callback)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply_transform.cljs$core$IFn$_invoke$arity$2 = apply_transform__2;
  apply_transform.cljs$core$IFn$_invoke$arity$3 = apply_transform__3;
  return apply_transform
}();
enfocus.core.debug = true;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = enfocus.core.debug;
    if(cljs.core.truth_(and__3941__auto__)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3941__auto__
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return tst instanceof NodeList
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if(cljs.core._EQ_.call(null, nl, window)) {
    return cljs.core.PersistentVector.fromArray([nl], true)
  }else {
    return domina.nodes.call(null, nl)
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__13905_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__13905_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__13905_SHARP_)], true)
    }else {
      if("\ufdd0:else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__13905_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var seq__13912_13918 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  var chunk__13913_13919 = null;
  var count__13914_13920 = 0;
  var i__13915_13921 = 0;
  while(true) {
    if(i__13915_13921 < count__13914_13920) {
      var vec__13916_13922 = cljs.core._nth.call(null, chunk__13913_13919, i__13915_13921);
      var attr_13923 = cljs.core.nth.call(null, vec__13916_13922, 0, null);
      var value_13924 = cljs.core.nth.call(null, vec__13916_13922, 1, null);
      goog.style.setStyle(obj, cljs.core.name.call(null, attr_13923), value_13924);
      var G__13925 = seq__13912_13918;
      var G__13926 = chunk__13913_13919;
      var G__13927 = count__13914_13920;
      var G__13928 = i__13915_13921 + 1;
      seq__13912_13918 = G__13925;
      chunk__13913_13919 = G__13926;
      count__13914_13920 = G__13927;
      i__13915_13921 = G__13928;
      continue
    }else {
      var temp__4092__auto___13929 = cljs.core.seq.call(null, seq__13912_13918);
      if(temp__4092__auto___13929) {
        var seq__13912_13930__$1 = temp__4092__auto___13929;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13912_13930__$1)) {
          var c__3501__auto___13931 = cljs.core.chunk_first.call(null, seq__13912_13930__$1);
          var G__13932 = cljs.core.chunk_rest.call(null, seq__13912_13930__$1);
          var G__13933 = c__3501__auto___13931;
          var G__13934 = cljs.core.count.call(null, c__3501__auto___13931);
          var G__13935 = 0;
          seq__13912_13918 = G__13932;
          chunk__13913_13919 = G__13933;
          count__13914_13920 = G__13934;
          i__13915_13921 = G__13935;
          continue
        }else {
          var vec__13917_13936 = cljs.core.first.call(null, seq__13912_13930__$1);
          var attr_13937 = cljs.core.nth.call(null, vec__13917_13936, 0, null);
          var value_13938 = cljs.core.nth.call(null, vec__13917_13936, 1, null);
          goog.style.setStyle(obj, cljs.core.name.call(null, attr_13937), value_13938);
          var G__13939 = cljs.core.next.call(null, seq__13912_13930__$1);
          var G__13940 = null;
          var G__13941 = 0;
          var G__13942 = 0;
          seq__13912_13918 = G__13939;
          chunk__13913_13919 = G__13940;
          count__13914_13920 = G__13941;
          i__13915_13921 = G__13942;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var seq__13947 = cljs.core.seq.call(null, values);
  var chunk__13948 = null;
  var count__13949 = 0;
  var i__13950 = 0;
  while(true) {
    if(i__13950 < count__13949) {
      var attr = cljs.core._nth.call(null, chunk__13948, i__13950);
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr))
      }
      var G__13951 = seq__13947;
      var G__13952 = chunk__13948;
      var G__13953 = count__13949;
      var G__13954 = i__13950 + 1;
      seq__13947 = G__13951;
      chunk__13948 = G__13952;
      count__13949 = G__13953;
      i__13950 = G__13954;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13947);
      if(temp__4092__auto__) {
        var seq__13947__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13947__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13947__$1);
          var G__13955 = cljs.core.chunk_rest.call(null, seq__13947__$1);
          var G__13956 = c__3501__auto__;
          var G__13957 = cljs.core.count.call(null, c__3501__auto__);
          var G__13958 = 0;
          seq__13947 = G__13955;
          chunk__13948 = G__13956;
          count__13949 = G__13957;
          i__13950 = G__13958;
          continue
        }else {
          var attr = cljs.core.first.call(null, seq__13947__$1);
          if(cljs.core.truth_(goog.userAgent.IE)) {
            goog.style.setStyle(obj, cljs.core.name.call(null, attr), "")
          }else {
            obj.style.removeProperty(cljs.core.name.call(null, attr))
          }
          var G__13959 = cljs.core.next.call(null, seq__13947__$1);
          var G__13960 = null;
          var G__13961 = 0;
          var G__13962 = 0;
          seq__13947 = G__13959;
          chunk__13948 = G__13960;
          count__13949 = G__13961;
          i__13950 = G__13962;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var seq__13969_13975 = cljs.core.seq.call(null, ats);
        var chunk__13970_13976 = null;
        var count__13971_13977 = 0;
        var i__13972_13978 = 0;
        while(true) {
          if(i__13972_13978 < count__13971_13977) {
            var vec__13973_13979 = cljs.core._nth.call(null, chunk__13970_13976, i__13972_13978);
            var k_13980 = cljs.core.nth.call(null, vec__13973_13979, 0, null);
            var v_13981 = cljs.core.nth.call(null, vec__13973_13979, 1, null);
            add_map_attrs.call(null, elem, k_13980, v_13981);
            var G__13982 = seq__13969_13975;
            var G__13983 = chunk__13970_13976;
            var G__13984 = count__13971_13977;
            var G__13985 = i__13972_13978 + 1;
            seq__13969_13975 = G__13982;
            chunk__13970_13976 = G__13983;
            count__13971_13977 = G__13984;
            i__13972_13978 = G__13985;
            continue
          }else {
            var temp__4092__auto___13986 = cljs.core.seq.call(null, seq__13969_13975);
            if(temp__4092__auto___13986) {
              var seq__13969_13987__$1 = temp__4092__auto___13986;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13969_13987__$1)) {
                var c__3501__auto___13988 = cljs.core.chunk_first.call(null, seq__13969_13987__$1);
                var G__13989 = cljs.core.chunk_rest.call(null, seq__13969_13987__$1);
                var G__13990 = c__3501__auto___13988;
                var G__13991 = cljs.core.count.call(null, c__3501__auto___13988);
                var G__13992 = 0;
                seq__13969_13975 = G__13989;
                chunk__13970_13976 = G__13990;
                count__13971_13977 = G__13991;
                i__13972_13978 = G__13992;
                continue
              }else {
                var vec__13974_13993 = cljs.core.first.call(null, seq__13969_13987__$1);
                var k_13994 = cljs.core.nth.call(null, vec__13974_13993, 0, null);
                var v_13995 = cljs.core.nth.call(null, vec__13974_13993, 1, null);
                add_map_attrs.call(null, elem, k_13994, v_13995);
                var G__13996 = cljs.core.next.call(null, seq__13969_13987__$1);
                var G__13997 = null;
                var G__13998 = 0;
                var G__13999 = 0;
                seq__13969_13975 = G__13996;
                chunk__13970_13976 = G__13997;
                count__13971_13977 = G__13998;
                i__13972_13978 = G__13999;
                continue
              }
            }else {
            }
          }
          break
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_map_attrs.cljs$core$IFn$_invoke$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$core$IFn$_invoke$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.hide_style = cljs.core.PersistentArrayMap.fromArray(["style", "display: none; width: 0px; height: 0px"], true).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core._EQ_.call(null, child.nodeType, 11)) {
    goog.dom.appendChild(div, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var seq__14004_14008 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    var chunk__14005_14009 = null;
    var count__14006_14010 = 0;
    var i__14007_14011 = 0;
    while(true) {
      if(i__14007_14011 < count__14006_14010) {
        var node_14012 = cljs.core._nth.call(null, chunk__14005_14009, i__14007_14011);
        goog.dom.appendChild(div, node_14012);
        var G__14013 = seq__14004_14008;
        var G__14014 = chunk__14005_14009;
        var G__14015 = count__14006_14010;
        var G__14016 = i__14007_14011 + 1;
        seq__14004_14008 = G__14013;
        chunk__14005_14009 = G__14014;
        count__14006_14010 = G__14015;
        i__14007_14011 = G__14016;
        continue
      }else {
        var temp__4092__auto___14017 = cljs.core.seq.call(null, seq__14004_14008);
        if(temp__4092__auto___14017) {
          var seq__14004_14018__$1 = temp__4092__auto___14017;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14004_14018__$1)) {
            var c__3501__auto___14019 = cljs.core.chunk_first.call(null, seq__14004_14018__$1);
            var G__14020 = cljs.core.chunk_rest.call(null, seq__14004_14018__$1);
            var G__14021 = c__3501__auto___14019;
            var G__14022 = cljs.core.count.call(null, c__3501__auto___14019);
            var G__14023 = 0;
            seq__14004_14008 = G__14020;
            chunk__14005_14009 = G__14021;
            count__14006_14010 = G__14022;
            i__14007_14011 = G__14023;
            continue
          }else {
            var node_14024 = cljs.core.first.call(null, seq__14004_14018__$1);
            goog.dom.appendChild(div, node_14024);
            var G__14025 = cljs.core.next.call(null, seq__14004_14018__$1);
            var G__14026 = null;
            var G__14027 = 0;
            var G__14028 = 0;
            seq__14004_14008 = G__14025;
            chunk__14005_14009 = G__14026;
            count__14006_14010 = G__14027;
            i__14007_14011 = G__14028;
            continue
          }
        }else {
        }
      }
      break
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().documentElement, div);
  return div
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child = div.childNodes;
  var frag = document.createDocumentFragment();
  goog.dom.append(frag, child);
  goog.dom.removeNode(div);
  return frag
};
enfocus.core.replace_ids = function() {
  var replace_ids = null;
  var replace_ids__1 = function(text) {
    return replace_ids.call(null, [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join(""), text)
  };
  var replace_ids__2 = function(id_mask, text) {
    var re = new RegExp("(\x3c.*?\\sid\x3d['\"])(.*?)(['\"].*?\x3e)", "g");
    return cljs.core.PersistentVector.fromArray([id_mask, text.replace(re, function(a, b, c, d) {
      return[cljs.core.str(b), cljs.core.str(id_mask), cljs.core.str(c), cljs.core.str(d)].join("")
    })], true)
  };
  replace_ids = function(id_mask, text) {
    switch(arguments.length) {
      case 1:
        return replace_ids__1.call(this, id_mask);
      case 2:
        return replace_ids__2.call(this, id_mask, text)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace_ids.cljs$core$IFn$_invoke$arity$1 = replace_ids__1;
  replace_ids.cljs$core$IFn$_invoke$arity$2 = replace_ids__2;
  return replace_ids
}();
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col = enfocus.core.nodes__GT_coll.call(null, id_nodes);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__14029_SHARP_) {
    var id = p1__14029_SHARP_.getAttribute("id");
    var rid = id.replace(sym, "");
    return p1__14029_SHARP_.setAttribute("id", rid)
  }, nod_col))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key, id_mask) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, dom_key) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req = new goog.net.XhrIo;
    var callback = function(req) {
      return function(req__$1) {
        var text = req__$1.getResponseText();
        var vec__14031 = enfocus.core.replace_ids.call(null, id_mask, text);
        var sym = cljs.core.nth.call(null, vec__14031, 0, null);
        var txt = cljs.core.nth.call(null, vec__14031, 1, null);
        return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, cljs.core.PersistentVector.fromArray([sym, txt], true))
      }
    }(req);
    goog.events.listen(req, goog.net.EventType.COMPLETE, function() {
      callback.call(null, req);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.html_to_dom = function html_to_dom(html) {
  var dfa = enfocus.core.nodes__GT_coll.call(null, domina.html_to_dom.call(null, html));
  var frag = document.createDocumentFragment();
  enfocus.core.log_debug.call(null, cljs.core.count.call(null, dfa));
  var seq__14036_14040 = cljs.core.seq.call(null, dfa);
  var chunk__14037_14041 = null;
  var count__14038_14042 = 0;
  var i__14039_14043 = 0;
  while(true) {
    if(i__14039_14043 < count__14038_14042) {
      var df_14044 = cljs.core._nth.call(null, chunk__14037_14041, i__14039_14043);
      goog.dom.append(frag, df_14044);
      var G__14045 = seq__14036_14040;
      var G__14046 = chunk__14037_14041;
      var G__14047 = count__14038_14042;
      var G__14048 = i__14039_14043 + 1;
      seq__14036_14040 = G__14045;
      chunk__14037_14041 = G__14046;
      count__14038_14042 = G__14047;
      i__14039_14043 = G__14048;
      continue
    }else {
      var temp__4092__auto___14049 = cljs.core.seq.call(null, seq__14036_14040);
      if(temp__4092__auto___14049) {
        var seq__14036_14050__$1 = temp__4092__auto___14049;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14036_14050__$1)) {
          var c__3501__auto___14051 = cljs.core.chunk_first.call(null, seq__14036_14050__$1);
          var G__14052 = cljs.core.chunk_rest.call(null, seq__14036_14050__$1);
          var G__14053 = c__3501__auto___14051;
          var G__14054 = cljs.core.count.call(null, c__3501__auto___14051);
          var G__14055 = 0;
          seq__14036_14040 = G__14052;
          chunk__14037_14041 = G__14053;
          count__14038_14042 = G__14054;
          i__14039_14043 = G__14055;
          continue
        }else {
          var df_14056 = cljs.core.first.call(null, seq__14036_14050__$1);
          goog.dom.append(frag, df_14056);
          var G__14057 = cljs.core.next.call(null, seq__14036_14050__$1);
          var G__14058 = null;
          var G__14059 = 0;
          var G__14060 = 0;
          seq__14036_14040 = G__14057;
          chunk__14037_14041 = G__14058;
          count__14038_14042 = G__14059;
          i__14039_14043 = G__14060;
          continue
        }
      }else {
      }
    }
    break
  }
  return frag
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, nod))], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str = enfocus.core.create_sel_str.call(null, sel);
  var cache = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""));
  if(cljs.core.truth_(cache)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, cache))], true)
  }else {
    var vec__14063 = enfocus.core.get_cached_dom.call(null, uri);
    var sym = cljs.core.nth.call(null, vec__14063, 0, null);
    var tdom = cljs.core.nth.call(null, vec__14063, 1, null);
    var dom = enfocus.core.create_hidden_dom.call(null, tdom);
    var tsnip = domina.nodes.call(null, enfocus.core.css_select.call(null, sym, dom, sel));
    var html_snip = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(vec__14063, sym, tdom, dom, tsnip) {
      return function(p1__14061_SHARP_) {
        return p1__14061_SHARP_.outerHTML
      }
    }(vec__14063, sym, tdom, dom, tsnip), tsnip));
    enfocus.core.remove_node_return_child.call(null, dom);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""), cljs.core.PersistentVector.fromArray([sym, html_snip], true));
    return cljs.core.PersistentVector.fromArray([sym, enfocus.core.html_to_dom.call(null, html_snip)], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  var trans = function trans(pnodes) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result = cljs.core.map.call(null, func, pnod_col);
    if(cljs.core.count.call(null, result) <= 1) {
      return cljs.core.first.call(null, result)
    }else {
      return result
    }
  };
  if(typeof enfocus.core.t14067 !== "undefined") {
  }else {
    goog.provide("enfocus.core.t14067");
    enfocus.core.t14067 = function(trans, func, extr_multi_node, meta14068) {
      this.trans = trans;
      this.func = func;
      this.extr_multi_node = extr_multi_node;
      this.meta14068 = meta14068;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    enfocus.core.t14067.cljs$lang$type = true;
    enfocus.core.t14067.cljs$lang$ctorStr = "enfocus.core/t14067";
    enfocus.core.t14067.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t14067")
    };
    enfocus.core.t14067.prototype.enfocus$core$ITransform$ = true;
    enfocus.core.t14067.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
      var self__ = this;
      return self__.trans.call(null, nodes, null)
    };
    enfocus.core.t14067.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
      var self__ = this;
      return self__.trans.call(null, nodes, chain)
    };
    enfocus.core.t14067.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14069) {
      var self__ = this;
      return self__.meta14068
    };
    enfocus.core.t14067.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14069, meta14068__$1) {
      var self__ = this;
      return new enfocus.core.t14067(self__.trans, self__.func, self__.extr_multi_node, meta14068__$1)
    };
    enfocus.core.__GT_t14067 = function __GT_t14067(trans__$1, func__$1, extr_multi_node__$1, meta14068) {
      return new enfocus.core.t14067(trans__$1, func__$1, extr_multi_node__$1, meta14068)
    }
  }
  return new enfocus.core.t14067(trans, func, extr_multi_node, null)
};
enfocus.core.multi_node_chain = function() {
  var multi_node_chain = null;
  var multi_node_chain__1 = function(func) {
    var trans = function(nodes, chain) {
      var val = func.call(null, nodes);
      if(cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.call(null, chain, nodes)
      }else {
        return val
      }
    };
    if(typeof enfocus.core.t14077 !== "undefined") {
    }else {
      goog.provide("enfocus.core.t14077");
      enfocus.core.t14077 = function(trans, func, multi_node_chain, meta14078) {
        this.trans = trans;
        this.func = func;
        this.multi_node_chain = multi_node_chain;
        this.meta14078 = meta14078;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      enfocus.core.t14077.cljs$lang$type = true;
      enfocus.core.t14077.cljs$lang$ctorStr = "enfocus.core/t14077";
      enfocus.core.t14077.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t14077")
      };
      enfocus.core.t14077.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t14077.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
        var self__ = this;
        return self__.trans.call(null, nodes, null)
      };
      enfocus.core.t14077.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
        var self__ = this;
        return self__.trans.call(null, nodes, chain)
      };
      enfocus.core.t14077.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14079) {
        var self__ = this;
        return self__.meta14078
      };
      enfocus.core.t14077.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14079, meta14078__$1) {
        var self__ = this;
        return new enfocus.core.t14077(self__.trans, self__.func, self__.multi_node_chain, meta14078__$1)
      };
      enfocus.core.__GT_t14077 = function __GT_t14077(trans__$1, func__$1, multi_node_chain__$1, meta14078) {
        return new enfocus.core.t14077(trans__$1, func__$1, multi_node_chain__$1, meta14078)
      }
    }
    return new enfocus.core.t14077(trans, func, multi_node_chain, null)
  };
  var multi_node_chain__2 = function(values, func) {
    var trans = function(nodes, chain) {
      var vnodes = cljs.core.mapcat.call(null, function(p1__14070_SHARP_) {
        return domina.nodes.call(null, p1__14070_SHARP_)
      }, values);
      var val = func.call(null, nodes, vnodes);
      if(cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.call(null, chain, nodes)
      }else {
        return val
      }
    };
    if(typeof enfocus.core.t14080 !== "undefined") {
    }else {
      goog.provide("enfocus.core.t14080");
      enfocus.core.t14080 = function(trans, func, values, multi_node_chain, meta14081) {
        this.trans = trans;
        this.func = func;
        this.values = values;
        this.multi_node_chain = multi_node_chain;
        this.meta14081 = meta14081;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      enfocus.core.t14080.cljs$lang$type = true;
      enfocus.core.t14080.cljs$lang$ctorStr = "enfocus.core/t14080";
      enfocus.core.t14080.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "enfocus.core/t14080")
      };
      enfocus.core.t14080.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t14080.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
        var self__ = this;
        return self__.trans.call(null, nodes, null)
      };
      enfocus.core.t14080.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
        var self__ = this;
        return self__.trans.call(null, nodes, chain)
      };
      enfocus.core.t14080.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14082) {
        var self__ = this;
        return self__.meta14081
      };
      enfocus.core.t14080.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14082, meta14081__$1) {
        var self__ = this;
        return new enfocus.core.t14080(self__.trans, self__.func, self__.values, self__.multi_node_chain, meta14081__$1)
      };
      enfocus.core.__GT_t14080 = function __GT_t14080(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta14081) {
        return new enfocus.core.t14080(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta14081)
      }
    }
    return new enfocus.core.t14080(trans, func, values, multi_node_chain, null)
  };
  multi_node_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return multi_node_chain__1.call(this, values);
      case 2:
        return multi_node_chain__2.call(this, values, func)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_node_chain.cljs$core$IFn$_invoke$arity$1 = multi_node_chain__1;
  multi_node_chain.cljs$core$IFn$_invoke$arity$2 = multi_node_chain__2;
  return multi_node_chain
}();
enfocus.core.content = function() {
  var content__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__14083_SHARP_, p2__14084_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__14083_SHARP_);
      return domina.append_BANG_.call(null, p1__14083_SHARP_, p2__14084_SHARP_)
    })
  };
  var content = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return content__delegate.call(this, values)
  };
  content.cljs$lang$maxFixedArity = 0;
  content.cljs$lang$applyTo = function(arglist__14085) {
    var values = cljs.core.seq(arglist__14085);
    return content__delegate(values)
  };
  content.cljs$core$IFn$_invoke$arity$variadic = content__delegate;
  return content
}();
enfocus.core.html_content = function html_content(txt) {
  return enfocus.core.multi_node_chain.call(null, function(p1__14086_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__14086_SHARP_, txt)
  })
};
enfocus.core.set_attr = function() {
  var set_attr__delegate = function(values) {
    var pairs = cljs.core.partition.call(null, 2, values);
    return enfocus.core.multi_node_chain.call(null, function(p1__14087_SHARP_) {
      var seq__14094 = cljs.core.seq.call(null, pairs);
      var chunk__14095 = null;
      var count__14096 = 0;
      var i__14097 = 0;
      while(true) {
        if(i__14097 < count__14096) {
          var vec__14098 = cljs.core._nth.call(null, chunk__14095, i__14097);
          var name = cljs.core.nth.call(null, vec__14098, 0, null);
          var value = cljs.core.nth.call(null, vec__14098, 1, null);
          domina.set_attr_BANG_.call(null, p1__14087_SHARP_, name, value);
          var G__14100 = seq__14094;
          var G__14101 = chunk__14095;
          var G__14102 = count__14096;
          var G__14103 = i__14097 + 1;
          seq__14094 = G__14100;
          chunk__14095 = G__14101;
          count__14096 = G__14102;
          i__14097 = G__14103;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14094);
          if(temp__4092__auto__) {
            var seq__14094__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14094__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14094__$1);
              var G__14104 = cljs.core.chunk_rest.call(null, seq__14094__$1);
              var G__14105 = c__3501__auto__;
              var G__14106 = cljs.core.count.call(null, c__3501__auto__);
              var G__14107 = 0;
              seq__14094 = G__14104;
              chunk__14095 = G__14105;
              count__14096 = G__14106;
              i__14097 = G__14107;
              continue
            }else {
              var vec__14099 = cljs.core.first.call(null, seq__14094__$1);
              var name = cljs.core.nth.call(null, vec__14099, 0, null);
              var value = cljs.core.nth.call(null, vec__14099, 1, null);
              domina.set_attr_BANG_.call(null, p1__14087_SHARP_, name, value);
              var G__14108 = cljs.core.next.call(null, seq__14094__$1);
              var G__14109 = null;
              var G__14110 = 0;
              var G__14111 = 0;
              seq__14094 = G__14108;
              chunk__14095 = G__14109;
              count__14096 = G__14110;
              i__14097 = G__14111;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var set_attr = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_attr__delegate.call(this, values)
  };
  set_attr.cljs$lang$maxFixedArity = 0;
  set_attr.cljs$lang$applyTo = function(arglist__14112) {
    var values = cljs.core.seq(arglist__14112);
    return set_attr__delegate(values)
  };
  set_attr.cljs$core$IFn$_invoke$arity$variadic = set_attr__delegate;
  return set_attr
}();
enfocus.core.remove_attr = function() {
  var remove_attr__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__14113_SHARP_) {
      var seq__14118 = cljs.core.seq.call(null, values);
      var chunk__14119 = null;
      var count__14120 = 0;
      var i__14121 = 0;
      while(true) {
        if(i__14121 < count__14120) {
          var name = cljs.core._nth.call(null, chunk__14119, i__14121);
          domina.remove_attr_BANG_.call(null, p1__14113_SHARP_, name);
          var G__14122 = seq__14118;
          var G__14123 = chunk__14119;
          var G__14124 = count__14120;
          var G__14125 = i__14121 + 1;
          seq__14118 = G__14122;
          chunk__14119 = G__14123;
          count__14120 = G__14124;
          i__14121 = G__14125;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14118);
          if(temp__4092__auto__) {
            var seq__14118__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14118__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14118__$1);
              var G__14126 = cljs.core.chunk_rest.call(null, seq__14118__$1);
              var G__14127 = c__3501__auto__;
              var G__14128 = cljs.core.count.call(null, c__3501__auto__);
              var G__14129 = 0;
              seq__14118 = G__14126;
              chunk__14119 = G__14127;
              count__14120 = G__14128;
              i__14121 = G__14129;
              continue
            }else {
              var name = cljs.core.first.call(null, seq__14118__$1);
              domina.remove_attr_BANG_.call(null, p1__14113_SHARP_, name);
              var G__14130 = cljs.core.next.call(null, seq__14118__$1);
              var G__14131 = null;
              var G__14132 = 0;
              var G__14133 = 0;
              seq__14118 = G__14130;
              chunk__14119 = G__14131;
              count__14120 = G__14132;
              i__14121 = G__14133;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var remove_attr = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_attr__delegate.call(this, values)
  };
  remove_attr.cljs$lang$maxFixedArity = 0;
  remove_attr.cljs$lang$applyTo = function(arglist__14134) {
    var values = cljs.core.seq(arglist__14134);
    return remove_attr__delegate(values)
  };
  remove_attr.cljs$core$IFn$_invoke$arity$variadic = remove_attr__delegate;
  return remove_attr
}();
enfocus.core.set_prop = function() {
  var set_prop__delegate = function(forms) {
    return function(node) {
      var h = cljs.core.mapcat.call(null, function(p__14137) {
        var vec__14138 = p__14137;
        var n = cljs.core.nth.call(null, vec__14138, 0, null);
        var v = cljs.core.nth.call(null, vec__14138, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n), v)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h))
    }
  };
  var set_prop = function(var_args) {
    var forms = null;
    if(arguments.length > 0) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_prop__delegate.call(this, forms)
  };
  set_prop.cljs$lang$maxFixedArity = 0;
  set_prop.cljs$lang$applyTo = function(arglist__14139) {
    var forms = cljs.core.seq(arglist__14139);
    return set_prop__delegate(forms)
  };
  set_prop.cljs$core$IFn$_invoke$arity$variadic = set_prop__delegate;
  return set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.add_class = function() {
  var add_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__14140_SHARP_) {
      var seq__14145 = cljs.core.seq.call(null, values);
      var chunk__14146 = null;
      var count__14147 = 0;
      var i__14148 = 0;
      while(true) {
        if(i__14148 < count__14147) {
          var val = cljs.core._nth.call(null, chunk__14146, i__14148);
          domina.add_class_BANG_.call(null, p1__14140_SHARP_, val);
          var G__14149 = seq__14145;
          var G__14150 = chunk__14146;
          var G__14151 = count__14147;
          var G__14152 = i__14148 + 1;
          seq__14145 = G__14149;
          chunk__14146 = G__14150;
          count__14147 = G__14151;
          i__14148 = G__14152;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14145);
          if(temp__4092__auto__) {
            var seq__14145__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14145__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14145__$1);
              var G__14153 = cljs.core.chunk_rest.call(null, seq__14145__$1);
              var G__14154 = c__3501__auto__;
              var G__14155 = cljs.core.count.call(null, c__3501__auto__);
              var G__14156 = 0;
              seq__14145 = G__14153;
              chunk__14146 = G__14154;
              count__14147 = G__14155;
              i__14148 = G__14156;
              continue
            }else {
              var val = cljs.core.first.call(null, seq__14145__$1);
              domina.add_class_BANG_.call(null, p1__14140_SHARP_, val);
              var G__14157 = cljs.core.next.call(null, seq__14145__$1);
              var G__14158 = null;
              var G__14159 = 0;
              var G__14160 = 0;
              seq__14145 = G__14157;
              chunk__14146 = G__14158;
              count__14147 = G__14159;
              i__14148 = G__14160;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var add_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add_class__delegate.call(this, values)
  };
  add_class.cljs$lang$maxFixedArity = 0;
  add_class.cljs$lang$applyTo = function(arglist__14161) {
    var values = cljs.core.seq(arglist__14161);
    return add_class__delegate(values)
  };
  add_class.cljs$core$IFn$_invoke$arity$variadic = add_class__delegate;
  return add_class
}();
enfocus.core.remove_class = function() {
  var remove_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__14162_SHARP_) {
      var seq__14167 = cljs.core.seq.call(null, values);
      var chunk__14168 = null;
      var count__14169 = 0;
      var i__14170 = 0;
      while(true) {
        if(i__14170 < count__14169) {
          var val = cljs.core._nth.call(null, chunk__14168, i__14170);
          domina.remove_class_BANG_.call(null, p1__14162_SHARP_, val);
          var G__14171 = seq__14167;
          var G__14172 = chunk__14168;
          var G__14173 = count__14169;
          var G__14174 = i__14170 + 1;
          seq__14167 = G__14171;
          chunk__14168 = G__14172;
          count__14169 = G__14173;
          i__14170 = G__14174;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14167);
          if(temp__4092__auto__) {
            var seq__14167__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14167__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14167__$1);
              var G__14175 = cljs.core.chunk_rest.call(null, seq__14167__$1);
              var G__14176 = c__3501__auto__;
              var G__14177 = cljs.core.count.call(null, c__3501__auto__);
              var G__14178 = 0;
              seq__14167 = G__14175;
              chunk__14168 = G__14176;
              count__14169 = G__14177;
              i__14170 = G__14178;
              continue
            }else {
              var val = cljs.core.first.call(null, seq__14167__$1);
              domina.remove_class_BANG_.call(null, p1__14162_SHARP_, val);
              var G__14179 = cljs.core.next.call(null, seq__14167__$1);
              var G__14180 = null;
              var G__14181 = 0;
              var G__14182 = 0;
              seq__14167 = G__14179;
              chunk__14168 = G__14180;
              count__14169 = G__14181;
              i__14170 = G__14182;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var remove_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_class__delegate.call(this, values)
  };
  remove_class.cljs$lang$maxFixedArity = 0;
  remove_class.cljs$lang$applyTo = function(arglist__14183) {
    var values = cljs.core.seq(arglist__14183);
    return remove_class__delegate(values)
  };
  remove_class.cljs$core$IFn$_invoke$arity$variadic = remove_class__delegate;
  return remove_class
}();
enfocus.core.set_class = function() {
  var set_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, function(p1__14184_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__14184_SHARP_, values)
    })
  };
  var set_class = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_class__delegate.call(this, values)
  };
  set_class.cljs$lang$maxFixedArity = 0;
  set_class.cljs$lang$applyTo = function(arglist__14185) {
    var values = cljs.core.seq(arglist__14185);
    return set_class__delegate(values)
  };
  set_class.cljs$core$IFn$_invoke$arity$variadic = set_class__delegate;
  return set_class
}();
enfocus.core.do__GT_ = function() {
  var do__GT___delegate = function(forms) {
    return function(pnod) {
      var seq__14190 = cljs.core.seq.call(null, forms);
      var chunk__14191 = null;
      var count__14192 = 0;
      var i__14193 = 0;
      while(true) {
        if(i__14193 < count__14192) {
          var fun = cljs.core._nth.call(null, chunk__14191, i__14193);
          enfocus.core.apply_transform.call(null, fun, pnod);
          var G__14194 = seq__14190;
          var G__14195 = chunk__14191;
          var G__14196 = count__14192;
          var G__14197 = i__14193 + 1;
          seq__14190 = G__14194;
          chunk__14191 = G__14195;
          count__14192 = G__14196;
          i__14193 = G__14197;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14190);
          if(temp__4092__auto__) {
            var seq__14190__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14190__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14190__$1);
              var G__14198 = cljs.core.chunk_rest.call(null, seq__14190__$1);
              var G__14199 = c__3501__auto__;
              var G__14200 = cljs.core.count.call(null, c__3501__auto__);
              var G__14201 = 0;
              seq__14190 = G__14198;
              chunk__14191 = G__14199;
              count__14192 = G__14200;
              i__14193 = G__14201;
              continue
            }else {
              var fun = cljs.core.first.call(null, seq__14190__$1);
              enfocus.core.apply_transform.call(null, fun, pnod);
              var G__14202 = cljs.core.next.call(null, seq__14190__$1);
              var G__14203 = null;
              var G__14204 = 0;
              var G__14205 = 0;
              seq__14190 = G__14202;
              chunk__14191 = G__14203;
              count__14192 = G__14204;
              i__14193 = G__14205;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var do__GT_ = function(var_args) {
    var forms = null;
    if(arguments.length > 0) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return do__GT___delegate.call(this, forms)
  };
  do__GT_.cljs$lang$maxFixedArity = 0;
  do__GT_.cljs$lang$applyTo = function(arglist__14206) {
    var forms = cljs.core.seq(arglist__14206);
    return do__GT___delegate(forms)
  };
  do__GT_.cljs$core$IFn$_invoke$arity$variadic = do__GT___delegate;
  return do__GT_
}();
enfocus.core.append = function() {
  var append__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__14207_SHARP_, p2__14208_SHARP_) {
      return domina.append_BANG_.call(null, p1__14207_SHARP_, p2__14208_SHARP_)
    })
  };
  var append = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return append__delegate.call(this, values)
  };
  append.cljs$lang$maxFixedArity = 0;
  append.cljs$lang$applyTo = function(arglist__14209) {
    var values = cljs.core.seq(arglist__14209);
    return append__delegate(values)
  };
  append.cljs$core$IFn$_invoke$arity$variadic = append__delegate;
  return append
}();
enfocus.core.prepend = function() {
  var prepend__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__14210_SHARP_, p2__14211_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__14210_SHARP_, p2__14211_SHARP_)
    })
  };
  var prepend = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prepend__delegate.call(this, values)
  };
  prepend.cljs$lang$maxFixedArity = 0;
  prepend.cljs$lang$applyTo = function(arglist__14212) {
    var values = cljs.core.seq(arglist__14212);
    return prepend__delegate(values)
  };
  prepend.cljs$core$IFn$_invoke$arity$variadic = prepend__delegate;
  return prepend
}();
enfocus.core.before = function() {
  var before__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__14213_SHARP_, p2__14214_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__14213_SHARP_, p2__14214_SHARP_)
    })
  };
  var before = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return before__delegate.call(this, values)
  };
  before.cljs$lang$maxFixedArity = 0;
  before.cljs$lang$applyTo = function(arglist__14215) {
    var values = cljs.core.seq(arglist__14215);
    return before__delegate(values)
  };
  before.cljs$core$IFn$_invoke$arity$variadic = before__delegate;
  return before
}();
enfocus.core.after = function() {
  var after__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__14216_SHARP_, p2__14217_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__14216_SHARP_, p2__14217_SHARP_)
    })
  };
  var after = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return after__delegate.call(this, values)
  };
  after.cljs$lang$maxFixedArity = 0;
  after.cljs$lang$applyTo = function(arglist__14218) {
    var values = cljs.core.seq(arglist__14218);
    return after__delegate(values)
  };
  after.cljs$core$IFn$_invoke$arity$variadic = after__delegate;
  return after
}();
enfocus.core.substitute = function() {
  var substitute__delegate = function(values) {
    return enfocus.core.multi_node_chain.call(null, values, function(p1__14219_SHARP_, p2__14220_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__14219_SHARP_, p2__14220_SHARP_)
    })
  };
  var substitute = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return substitute__delegate.call(this, values)
  };
  substitute.cljs$lang$maxFixedArity = 0;
  substitute.cljs$lang$applyTo = function(arglist__14221) {
    var values = cljs.core.seq(arglist__14221);
    return substitute__delegate(values)
  };
  substitute.cljs$core$IFn$_invoke$arity$variadic = substitute__delegate;
  return substitute
}();
enfocus.core.remove_node = function remove_node() {
  return enfocus.core.multi_node_chain.call(null, function(p1__14222_SHARP_) {
    return domina.detach_BANG_.call(null, p1__14222_SHARP_)
  })
};
enfocus.core.wrap = function wrap(elm, mattr) {
  return function(pnod) {
    var elem = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem, mattr);
    enfocus.core.at.call(null, elem, enfocus.core.content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.do__GT_.call(null, enfocus.core.after.call(null, elem), enfocus.core.remove_node.call(null)))
  }
};
enfocus.core.unwrap = function unwrap() {
  return function(pnod) {
    var frag = document.createDocumentFragment();
    goog.dom.append(frag, pnod.childNodes);
    return goog.dom.replaceNode(frag, pnod)
  }
};
enfocus.core.set_style = function() {
  var set_style__delegate = function(values) {
    var pairs = cljs.core.partition.call(null, 2, values);
    return enfocus.core.multi_node_chain.call(null, function(p1__14223_SHARP_) {
      var seq__14230 = cljs.core.seq.call(null, pairs);
      var chunk__14231 = null;
      var count__14232 = 0;
      var i__14233 = 0;
      while(true) {
        if(i__14233 < count__14232) {
          var vec__14234 = cljs.core._nth.call(null, chunk__14231, i__14233);
          var name = cljs.core.nth.call(null, vec__14234, 0, null);
          var value = cljs.core.nth.call(null, vec__14234, 1, null);
          domina.set_style_BANG_.call(null, p1__14223_SHARP_, name, value);
          var G__14236 = seq__14230;
          var G__14237 = chunk__14231;
          var G__14238 = count__14232;
          var G__14239 = i__14233 + 1;
          seq__14230 = G__14236;
          chunk__14231 = G__14237;
          count__14232 = G__14238;
          i__14233 = G__14239;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14230);
          if(temp__4092__auto__) {
            var seq__14230__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14230__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14230__$1);
              var G__14240 = cljs.core.chunk_rest.call(null, seq__14230__$1);
              var G__14241 = c__3501__auto__;
              var G__14242 = cljs.core.count.call(null, c__3501__auto__);
              var G__14243 = 0;
              seq__14230 = G__14240;
              chunk__14231 = G__14241;
              count__14232 = G__14242;
              i__14233 = G__14243;
              continue
            }else {
              var vec__14235 = cljs.core.first.call(null, seq__14230__$1);
              var name = cljs.core.nth.call(null, vec__14235, 0, null);
              var value = cljs.core.nth.call(null, vec__14235, 1, null);
              domina.set_style_BANG_.call(null, p1__14223_SHARP_, name, value);
              var G__14244 = cljs.core.next.call(null, seq__14230__$1);
              var G__14245 = null;
              var G__14246 = 0;
              var G__14247 = 0;
              seq__14230 = G__14244;
              chunk__14231 = G__14245;
              count__14232 = G__14246;
              i__14233 = G__14247;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    })
  };
  var set_style = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_style__delegate.call(this, values)
  };
  set_style.cljs$lang$maxFixedArity = 0;
  set_style.cljs$lang$applyTo = function(arglist__14248) {
    var values = cljs.core.seq(arglist__14248);
    return set_style__delegate(values)
  };
  set_style.cljs$core$IFn$_invoke$arity$variadic = set_style__delegate;
  return set_style
}();
enfocus.core.remove_style = function() {
  var remove_style__delegate = function(values) {
    return function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    }
  };
  var remove_style = function(var_args) {
    var values = null;
    if(arguments.length > 0) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_style__delegate.call(this, values)
  };
  remove_style.cljs$lang$maxFixedArity = 0;
  remove_style.cljs$lang$applyTo = function(arglist__14249) {
    var values = cljs.core.seq(arglist__14249);
    return remove_style__delegate(values)
  };
  remove_style.cljs$core$IFn$_invoke$arity$variadic = remove_style__delegate;
  return remove_style
}();
enfocus.core.focus = function focus() {
  return function(node) {
    return node.focus()
  }
};
enfocus.core.blur = function blur() {
  return function(node) {
    return node.blur()
  }
};
enfocus.core.set_data = function set_data(ky, val) {
  return enfocus.core.multi_node_chain.call(null, function(p1__14250_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__14250_SHARP_, ky, val)
  })
};
enfocus.core.delay = function() {
  var delay__delegate = function(ttime, funcs) {
    return function(pnod) {
      return enfocus.core.setTimeout.call(null, function() {
        return cljs.core.apply.call(null, enfocus.core.at, pnod, funcs)
      }, ttime)
    }
  };
  var delay = function(ttime, var_args) {
    var funcs = null;
    if(arguments.length > 1) {
      funcs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return delay__delegate.call(this, ttime, funcs)
  };
  delay.cljs$lang$maxFixedArity = 1;
  delay.cljs$lang$applyTo = function(arglist__14251) {
    var ttime = cljs.core.first(arglist__14251);
    var funcs = cljs.core.rest(arglist__14251);
    return delay__delegate(ttime, funcs)
  };
  delay.cljs$core$IFn$_invoke$arity$variadic = delay__delegate;
  return delay
}();
enfocus.core.replace_vars = function replace_vars(vars) {
  var rep_str = function rep_str(text) {
    return clojure.string.replace.call(null, text, /\$\{\s*(\S+)\s*}/, function(p1__14253_SHARP_, p2__14252_SHARP_) {
      return vars.call(null, cljs.core.keyword.call(null, p2__14252_SHARP_))
    })
  };
  return function rep_node(pnod) {
    if(cljs.core.truth_(pnod.attributes)) {
      var seq__14278_14286 = cljs.core.seq.call(null, cljs.core.range.call(null, pnod.attributes.length));
      var chunk__14279_14287 = null;
      var count__14280_14288 = 0;
      var i__14281_14289 = 0;
      while(true) {
        if(i__14281_14289 < count__14280_14288) {
          var idx_14290 = cljs.core._nth.call(null, chunk__14279_14287, i__14281_14289);
          var attr_14291 = pnod.attributes.item(idx_14290);
          if(cljs.core.truth_(attr_14291.specified)) {
            attr_14291.value = rep_str.call(null, attr_14291.value)
          }else {
          }
          var G__14292 = seq__14278_14286;
          var G__14293 = chunk__14279_14287;
          var G__14294 = count__14280_14288;
          var G__14295 = i__14281_14289 + 1;
          seq__14278_14286 = G__14292;
          chunk__14279_14287 = G__14293;
          count__14280_14288 = G__14294;
          i__14281_14289 = G__14295;
          continue
        }else {
          var temp__4092__auto___14296 = cljs.core.seq.call(null, seq__14278_14286);
          if(temp__4092__auto___14296) {
            var seq__14278_14297__$1 = temp__4092__auto___14296;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14278_14297__$1)) {
              var c__3501__auto___14298 = cljs.core.chunk_first.call(null, seq__14278_14297__$1);
              var G__14299 = cljs.core.chunk_rest.call(null, seq__14278_14297__$1);
              var G__14300 = c__3501__auto___14298;
              var G__14301 = cljs.core.count.call(null, c__3501__auto___14298);
              var G__14302 = 0;
              seq__14278_14286 = G__14299;
              chunk__14279_14287 = G__14300;
              count__14280_14288 = G__14301;
              i__14281_14289 = G__14302;
              continue
            }else {
              var idx_14303 = cljs.core.first.call(null, seq__14278_14297__$1);
              var attr_14304 = pnod.attributes.item(idx_14303);
              if(cljs.core.truth_(attr_14304.specified)) {
                attr_14304.value = rep_str.call(null, attr_14304.value)
              }else {
              }
              var G__14305 = cljs.core.next.call(null, seq__14278_14297__$1);
              var G__14306 = null;
              var G__14307 = 0;
              var G__14308 = 0;
              seq__14278_14286 = G__14305;
              chunk__14279_14287 = G__14306;
              count__14280_14288 = G__14307;
              i__14281_14289 = G__14308;
              continue
            }
          }else {
          }
        }
        break
      }
    }else {
    }
    if(cljs.core._EQ_.call(null, pnod.nodeType, 3)) {
      return pnod.nodeValue = rep_str.call(null, pnod.nodeValue)
    }else {
      var seq__14282 = cljs.core.seq.call(null, enfocus.core.nodes__GT_coll.call(null, pnod.childNodes));
      var chunk__14283 = null;
      var count__14284 = 0;
      var i__14285 = 0;
      while(true) {
        if(i__14285 < count__14284) {
          var cnode = cljs.core._nth.call(null, chunk__14283, i__14285);
          rep_node.call(null, cnode);
          var G__14309 = seq__14282;
          var G__14310 = chunk__14283;
          var G__14311 = count__14284;
          var G__14312 = i__14285 + 1;
          seq__14282 = G__14309;
          chunk__14283 = G__14310;
          count__14284 = G__14311;
          i__14285 = G__14312;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14282);
          if(temp__4092__auto__) {
            var seq__14282__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14282__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14282__$1);
              var G__14313 = cljs.core.chunk_rest.call(null, seq__14282__$1);
              var G__14314 = c__3501__auto__;
              var G__14315 = cljs.core.count.call(null, c__3501__auto__);
              var G__14316 = 0;
              seq__14282 = G__14313;
              chunk__14283 = G__14314;
              count__14284 = G__14315;
              i__14285 = G__14316;
              continue
            }else {
              var cnode = cljs.core.first.call(null, seq__14282__$1);
              rep_node.call(null, cnode);
              var G__14317 = cljs.core.next.call(null, seq__14282__$1);
              var G__14318 = null;
              var G__14319 = 0;
              var G__14320 = 0;
              seq__14282 = G__14317;
              chunk__14283 = G__14318;
              count__14284 = G__14319;
              i__14285 = G__14320;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  }
};
enfocus.core.html = function html(node_spec) {
  if(cljs.core.string_QMARK_.call(null, node_spec)) {
    return document.createTextNode(node_spec)
  }else {
    if(cljs.core.vector_QMARK_.call(null, node_spec)) {
      var vec__14330 = node_spec;
      var tag = cljs.core.nth.call(null, vec__14330, 0, null);
      var vec__14331 = cljs.core.nthnext.call(null, vec__14330, 1);
      var m = cljs.core.nth.call(null, vec__14331, 0, null);
      var ms = cljs.core.nthnext.call(null, vec__14331, 1);
      var more = vec__14331;
      var _ = enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, tag, m, ms));
      var vec__14332 = cljs.core.name.call(null, tag).split(/(?=[#.])/);
      var tag_name = cljs.core.nth.call(null, vec__14332, 0, null);
      var segments = cljs.core.nthnext.call(null, vec__14332, 1);
      var id = cljs.core.some.call(null, function(vec__14330, tag, vec__14331, m, ms, more, _, vec__14332, tag_name, segments) {
        return function(seg) {
          if(cljs.core._EQ_.call(null, "#", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1)
          }else {
            return null
          }
        }
      }(vec__14330, tag, vec__14331, m, ms, more, _, vec__14332, tag_name, segments), segments);
      var classes = cljs.core.keep.call(null, function(vec__14330, tag, vec__14331, m, ms, more, _, vec__14332, tag_name, segments, id) {
        return function(seg) {
          if(cljs.core._EQ_.call(null, ".", seg.charAt(0))) {
            return cljs.core.subs.call(null, seg, 1)
          }else {
            return null
          }
        }
      }(vec__14330, tag, vec__14331, m, ms, more, _, vec__14332, tag_name, segments, id), segments);
      var attrs = cljs.core.map_QMARK_.call(null, m) ? m : cljs.core.PersistentArrayMap.EMPTY;
      var attrs__$1 = cljs.core.truth_(id) ? cljs.core.assoc.call(null, attrs, "\ufdd0:id", id) : attrs;
      var attrs__$2 = !cljs.core.empty_QMARK_.call(null, classes) ? cljs.core.assoc.call(null, attrs__$1, "\ufdd0:class", cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", classes))) : attrs__$1;
      var content = cljs.core.flatten.call(null, cljs.core.map.call(null, html, cljs.core.map_QMARK_.call(null, m) ? ms : more));
      var node = document.createElement(tag_name);
      var seq__14333_14339 = cljs.core.seq.call(null, attrs__$2);
      var chunk__14334_14340 = null;
      var count__14335_14341 = 0;
      var i__14336_14342 = 0;
      while(true) {
        if(i__14336_14342 < count__14335_14341) {
          var vec__14337_14343 = cljs.core._nth.call(null, chunk__14334_14340, i__14336_14342);
          var key_14344 = cljs.core.nth.call(null, vec__14337_14343, 0, null);
          var val_14345 = cljs.core.nth.call(null, vec__14337_14343, 1, null);
          node.setAttribute(cljs.core.name.call(null, key_14344), val_14345);
          var G__14346 = seq__14333_14339;
          var G__14347 = chunk__14334_14340;
          var G__14348 = count__14335_14341;
          var G__14349 = i__14336_14342 + 1;
          seq__14333_14339 = G__14346;
          chunk__14334_14340 = G__14347;
          count__14335_14341 = G__14348;
          i__14336_14342 = G__14349;
          continue
        }else {
          var temp__4092__auto___14350 = cljs.core.seq.call(null, seq__14333_14339);
          if(temp__4092__auto___14350) {
            var seq__14333_14351__$1 = temp__4092__auto___14350;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14333_14351__$1)) {
              var c__3501__auto___14352 = cljs.core.chunk_first.call(null, seq__14333_14351__$1);
              var G__14353 = cljs.core.chunk_rest.call(null, seq__14333_14351__$1);
              var G__14354 = c__3501__auto___14352;
              var G__14355 = cljs.core.count.call(null, c__3501__auto___14352);
              var G__14356 = 0;
              seq__14333_14339 = G__14353;
              chunk__14334_14340 = G__14354;
              count__14335_14341 = G__14355;
              i__14336_14342 = G__14356;
              continue
            }else {
              var vec__14338_14357 = cljs.core.first.call(null, seq__14333_14351__$1);
              var key_14358 = cljs.core.nth.call(null, vec__14338_14357, 0, null);
              var val_14359 = cljs.core.nth.call(null, vec__14338_14357, 1, null);
              node.setAttribute(cljs.core.name.call(null, key_14358), val_14359);
              var G__14360 = cljs.core.next.call(null, seq__14333_14351__$1);
              var G__14361 = null;
              var G__14362 = 0;
              var G__14363 = 0;
              seq__14333_14339 = G__14360;
              chunk__14334_14340 = G__14361;
              count__14335_14341 = G__14362;
              i__14336_14342 = G__14363;
              continue
            }
          }else {
          }
        }
        break
      }
      if(cljs.core.truth_(content)) {
        return domina.append_BANG_.call(null, node, content)
      }else {
        return null
      }
    }else {
      if(cljs.core.sequential_QMARK_.call(null, node_spec)) {
        return cljs.core.flatten.call(null, cljs.core.map.call(null, html, node_spec))
      }else {
        if("\ufdd0:else") {
          return document.createTextNode([cljs.core.str(node_spec)].join(""))
        }else {
          return null
        }
      }
    }
  }
};
enfocus.core.get_attr = function get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.get_text = function get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.get_data = function() {
  var get_data = null;
  var get_data__1 = function(ky) {
    return get_data.call(null, ky, false)
  };
  var get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, node, ky, bubble)
    })
  };
  get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return get_data__1.call(this, ky);
      case 2:
        return get_data__2.call(this, ky, bubble)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$1 = get_data__1;
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  return get_data
}();
enfocus.core.get_prop = function get_prop(prop) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod[cljs.core.name.call(null, prop)]
  })
};
enfocus.core.merge_form_val = function merge_form_val(form_map, ky, val) {
  var mval = form_map.call(null, ky);
  if(cljs.core.coll_QMARK_.call(null, mval)) {
    return cljs.core.assoc.call(null, form_map, ky, cljs.core.conj.call(null, mval, val))
  }else {
    if(cljs.core.truth_(mval)) {
      return cljs.core.assoc.call(null, form_map, ky, cljs.core.list.call(null, val, mval))
    }else {
      if("\ufdd0:else") {
        return cljs.core.assoc.call(null, form_map, ky, val)
      }else {
        return null
      }
    }
  }
};
enfocus.core.read_simple_input = function read_simple_input(el, col) {
  return enfocus.core.merge_form_val.call(null, col, cljs.core.keyword.call(null, el.name), el.value)
};
enfocus.core.read_checked_input = function read_checked_input(el, col) {
  if(cljs.core.truth_(el.checked)) {
    return enfocus.core.merge_form_val.call(null, col, cljs.core.keyword.call(null, el.name), el.value)
  }else {
    return col
  }
};
enfocus.core.read_select_input = function read_select_input(el, col) {
  var nm = cljs.core.keyword.call(null, el.name);
  var onodes = domina.nodes.call(null, el.options);
  var opts = cljs.core.filter.call(null, function(nm, onodes) {
    return function(p1__14364_SHARP_) {
      return p1__14364_SHARP_.selected
    }
  }(nm, onodes), onodes);
  return enfocus.core.merge_form_val.call(null, col, nm, cljs.core.map.call(null, function(p1__14365_SHARP_) {
    return p1__14365_SHARP_.value
  }, opts))
};
enfocus.core.read_form = function read_form() {
  return enfocus.core.extr_multi_node.call(null, function(node) {
    var inputs = node.elements;
    return cljs.core.reduce.call(null, function(p1__14367_SHARP_, p2__14366_SHARP_) {
      var G__14370 = p2__14366_SHARP_.nodeName;
      if(cljs.core._EQ_.call(null, "BUTTON", G__14370)) {
        return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
      }else {
        if(cljs.core._EQ_.call(null, "SELECT", G__14370)) {
          return enfocus.core.read_select_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
        }else {
          if(cljs.core._EQ_.call(null, "TEXTAREA", G__14370)) {
            return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
          }else {
            if(cljs.core._EQ_.call(null, "INPUT", G__14370)) {
              var G__14371 = p2__14366_SHARP_.type;
              if(cljs.core._EQ_.call(null, "radio", G__14371)) {
                return enfocus.core.read_checked_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
              }else {
                if(cljs.core._EQ_.call(null, "checkbox", G__14371)) {
                  return enfocus.core.read_checked_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                }else {
                  if(cljs.core._EQ_.call(null, "submit", G__14371)) {
                    return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                  }else {
                    if(cljs.core._EQ_.call(null, "reset", G__14371)) {
                      return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                    }else {
                      if(cljs.core._EQ_.call(null, "button", G__14371)) {
                        return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                      }else {
                        if(cljs.core._EQ_.call(null, "password", G__14371)) {
                          return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                        }else {
                          if(cljs.core._EQ_.call(null, "hidden", G__14371)) {
                            return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                          }else {
                            if(cljs.core._EQ_.call(null, "text", G__14371)) {
                              return enfocus.core.read_simple_input.call(null, p2__14366_SHARP_, p1__14367_SHARP_)
                            }else {
                              if("\ufdd0:else") {
                                return p1__14367_SHARP_
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }else {
              if("\ufdd0:else") {
                return p1__14367_SHARP_
              }else {
                return null
              }
            }
          }
        }
      }
    }, cljs.core.PersistentArrayMap.EMPTY, inputs)
  })
};
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
enfocus.core.filter = function filter(tst, trans) {
  return enfocus.core.multi_node_chain.call(null, function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res = cljs.core.filter.call(null, ttest, pnod_col);
      if(chain == null) {
        return enfocus.core.apply_transform.call(null, trans, res)
      }else {
        return enfocus.core.apply_transform.call(null, trans, res, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    filt.cljs$core$IFn$_invoke$arity$1 = filt__1;
    filt.cljs$core$IFn$_invoke$arity$2 = filt__2;
    return filt
  }())
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0:selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0:checked", enfocus.core.checked_radio_checkbox);
enfocus.core.match_QMARK_ = function match_QMARK_(selector) {
  return function(node) {
    if(cljs.core.truth_(node["matches"])) {
      return node.matches(selector)
    }else {
      if(cljs.core.truth_(node["matchesSelector"])) {
        return node.matchesSelector(selector)
      }else {
        if(cljs.core.truth_(node["msMatchesSelector"])) {
          return node.msMatchesSelector(selector)
        }else {
          if(cljs.core.truth_(node["mozMatchesSelector"])) {
            return node.mozMatchesSelector(selector)
          }else {
            if(cljs.core.truth_(node["webkitMatchesSelector"])) {
              return node.webkitMatchesSelector(selector)
            }else {
              if("\ufdd0:else") {
                return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([node, null], true), enfocus.core.nodes__GT_coll.call(null, enfocus.core.select.call(null, node)))
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__14372_SHARP_) {
      if(p1__14372_SHARP_ instanceof cljs.core.Symbol) {
        return enfocus.core.css_syms.call(null, p1__14372_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__14372_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__14372_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__14372_SHARP_)) {
            return create_sel_str.call(null, p1__14372_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__14372_SHARP_)) {
              return p1__14372_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_sel_str.cljs$core$IFn$_invoke$arity$1 = create_sel_str__1;
  create_sel_str.cljs$core$IFn$_invoke$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    var sel = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret = domina.css.sel.call(null, dom_node, sel);
    return ret
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css_select.cljs$core$IFn$_invoke$arity$1 = css_select__1;
  css_select.cljs$core$IFn$_invoke$arity$2 = css_select__2;
  css_select.cljs$core$IFn$_invoke$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3943__auto__ = func;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return enfocus.core.remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    var cnt = cljs.core.count.call(null, trans);
    var sel_QMARK_ = function() {
      var G__14381 = node;
      if(G__14381) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__14381.enfocus$core$ISelector$
          }
        }())) {
          return true
        }else {
          if(!G__14381.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__14381)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__14381)
      }
    }();
    if(function() {
      var and__3941__auto__ = cljs.core.not.call(null, sel_QMARK_);
      if(and__3941__auto__) {
        return cljs.core._EQ_.call(null, 1, cnt)
      }else {
        return and__3941__auto__
      }
    }()) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node)
    }else {
      var vec__14382 = cljs.core.truth_(sel_QMARK_) ? cljs.core.list.call(null, document, cljs.core.conj.call(null, trans, node)) : cljs.core.list.call(null, node, trans);
      var node__$1 = cljs.core.nth.call(null, vec__14382, 0, null);
      var trans__$1 = cljs.core.nth.call(null, vec__14382, 1, null);
      var seq__14383 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans__$1));
      var chunk__14384 = null;
      var count__14385 = 0;
      var i__14386 = 0;
      while(true) {
        if(i__14386 < count__14385) {
          var vec__14387 = cljs.core._nth.call(null, chunk__14384, i__14386);
          var sel = cljs.core.nth.call(null, vec__14387, 0, null);
          var t = cljs.core.nth.call(null, vec__14387, 1, null);
          enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
          var G__14389 = seq__14383;
          var G__14390 = chunk__14384;
          var G__14391 = count__14385;
          var G__14392 = i__14386 + 1;
          seq__14383 = G__14389;
          chunk__14384 = G__14390;
          count__14385 = G__14391;
          i__14386 = G__14392;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__14383);
          if(temp__4092__auto__) {
            var seq__14383__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__14383__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14383__$1);
              var G__14393 = cljs.core.chunk_rest.call(null, seq__14383__$1);
              var G__14394 = c__3501__auto__;
              var G__14395 = cljs.core.count.call(null, c__3501__auto__);
              var G__14396 = 0;
              seq__14383 = G__14393;
              chunk__14384 = G__14394;
              count__14385 = G__14395;
              i__14386 = G__14396;
              continue
            }else {
              var vec__14388 = cljs.core.first.call(null, seq__14383__$1);
              var sel = cljs.core.nth.call(null, vec__14388, 0, null);
              var t = cljs.core.nth.call(null, vec__14388, 1, null);
              enfocus.core.apply_transform.call(null, enfocus.core.nil_t.call(null, t), enfocus.core.select.call(null, sel, node__$1, id_mask));
              var G__14397 = cljs.core.next.call(null, seq__14383__$1);
              var G__14398 = null;
              var G__14399 = 0;
              var G__14400 = 0;
              seq__14383 = G__14397;
              chunk__14384 = G__14398;
              count__14385 = G__14399;
              i__14386 = G__14400;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(arguments.length > 2) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__14401) {
    var id_mask = cljs.core.first(arglist__14401);
    arglist__14401 = cljs.core.next(arglist__14401);
    var node = cljs.core.first(arglist__14401);
    var trans = cljs.core.rest(arglist__14401);
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$core$IFn$_invoke$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(arguments.length > 1) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__14402) {
    var node = cljs.core.first(arglist__14402);
    var trans = cljs.core.rest(arglist__14402);
    return at__delegate(node, trans)
  };
  at.cljs$core$IFn$_invoke$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    var cnt = cljs.core.count.call(null, trans);
    var sel_QMARK_ = function() {
      var G__14407 = node;
      if(G__14407) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__14407.enfocus$core$ISelector$
          }
        }())) {
          return true
        }else {
          if(!G__14407.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__14407)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, enfocus.core.ISelector, G__14407)
      }
    }();
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = sel_QMARK_;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core._EQ_.call(null, 1, cnt)
      }else {
        return and__3941__auto__
      }
    }())) {
      return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), enfocus.core.select.call(null, node))
    }else {
      if(cljs.core._EQ_.call(null, 1, cnt)) {
        return enfocus.core.apply_transform.call(null, cljs.core.first.call(null, trans), node)
      }else {
        if("\ufdd0:else") {
          var vec__14408 = cljs.core.truth_(sel_QMARK_) ? cljs.core.list.call(null, document, cljs.core.conj.call(null, trans, node)) : cljs.core.list.call(null, node, trans);
          var node__$1 = cljs.core.nth.call(null, vec__14408, 0, null);
          var trans__$1 = cljs.core.nth.call(null, vec__14408, 1, null);
          return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__14409) {
            var vec__14410 = p__14409;
            var ky = cljs.core.nth.call(null, vec__14410, 0, null);
            var sel = cljs.core.nth.call(null, vec__14410, 1, null);
            var ext = cljs.core.nth.call(null, vec__14410, 2, null);
            return cljs.core.PersistentVector.fromArray([ky, enfocus.core.apply_transform.call(null, ext, enfocus.core.select.call(null, sel, node__$1, ""))], true)
          }, cljs.core.partition.call(null, 3, trans__$1)))
        }else {
          return null
        }
      }
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(arguments.length > 1) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__14411) {
    var node = cljs.core.first(arglist__14411);
    var trans = cljs.core.rest(arglist__14411);
    return from__delegate(node, trans)
  };
  from.cljs$core$IFn$_invoke$arity$variadic = from__delegate;
  return from
}();
enfocus.core.xpath = function xpath(path) {
  return function(root, id_mask) {
    if(cljs.core.empty_QMARK_.call(null, id_mask)) {
      return domina.xpath.xpath.call(null, root, path)
    }else {
      var tmp = path.replace("@ID\x3d'", [cljs.core.str("@ID\x3d'"), cljs.core.str(id_mask)].join(""));
      var mpath = path.replace("@id\x3d'", [cljs.core.str("@id\x3d'"), cljs.core.str(id_mask)].join(""));
      return domina.xpath.xpath.call(null, root, mpath)
    }
  }
};
enfocus.core.this_node = function this_node(root, id_mask) {
  return root
};
if(cljs.core.truth_(typeof Text != "undefined")) {
  Text.prototype.domina$DomContent$ = true;
  Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
    return cljs.core.PersistentVector.fromArray([content], true)
  };
  Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
    return content
  }
}else {
}
String.prototype.enfocus$core$ISelector$ = true;
String.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
String.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
String.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  return enfocus.core.css_select.call(null, id_mask, root, cljs.core.PersistentVector.fromArray([this$], true))
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$ = true;
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  return enfocus.core.css_select.call(null, id_mask, root, this$)
};
enfocus.core.ISelector["function"] = true;
enfocus.core.select["function"] = function(this$) {
  return enfocus.core.select.call(null, this$, document, "")
};
enfocus.core.select["function"] = function(this$, root) {
  return enfocus.core.select.call(null, this$, root, "")
};
enfocus.core.select["function"] = function(this$, root, id_mask) {
  return this$.call(null, root, id_mask)
};
enfocus.core.ITransform["function"] = true;
enfocus.core.apply_transform["function"] = function(trans, nodes) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, trans, enfocus.core.nodes__GT_coll.call(null, nodes)))
};
enfocus.core.apply_transform["function"] = function(trans, nodes, chain) {
  var pnod_col = enfocus.core.nodes__GT_coll.call(null, nodes);
  var val = cljs.core.doall.call(null, cljs.core.map.call(null, trans, pnod_col));
  if(cljs.core.truth_(chain)) {
    return enfocus.core.apply_transform.call(null, chain, nodes)
  }else {
    return val
  }
};
goog.provide("enfocus.events");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("goog.dom");
goog.require("goog.events");
enfocus.events.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.events.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.events.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.events.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.events.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.events.view_port_monitor)
  }
};
enfocus.events.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj = new Object;
  obj.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback = enfocus.events.mouse_enter_leave.call(null, func);
    callback.listen = func;
    callback.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback)
    }
  };
  obj.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var seq__13833_13837 = cljs.core.seq.call(null, listeners);
    var chunk__13834_13838 = null;
    var count__13835_13839 = 0;
    var i__13836_13840 = 0;
    while(true) {
      if(i__13836_13840 < count__13835_13839) {
        var obj_13841__$1 = cljs.core._nth.call(null, chunk__13834_13838, i__13836_13840);
        var listener_13842 = obj_13841__$1.listener;
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = function() {
            var or__3943__auto__ = cljs.core.not.call(null, func);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return cljs.core._EQ_.call(null, listener_13842.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3941__auto__)) {
            var or__3943__auto__ = cljs.core.not.call(null, opt_scope);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return cljs.core._EQ_.call(null, listener_13842.scope, opt_scope)
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener_13842)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener_13842)
          }
        }else {
        }
        var G__13843 = seq__13833_13837;
        var G__13844 = chunk__13834_13838;
        var G__13845 = count__13835_13839;
        var G__13846 = i__13836_13840 + 1;
        seq__13833_13837 = G__13843;
        chunk__13834_13838 = G__13844;
        count__13835_13839 = G__13845;
        i__13836_13840 = G__13846;
        continue
      }else {
        var temp__4092__auto___13847 = cljs.core.seq.call(null, seq__13833_13837);
        if(temp__4092__auto___13847) {
          var seq__13833_13848__$1 = temp__4092__auto___13847;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13833_13848__$1)) {
            var c__3501__auto___13849 = cljs.core.chunk_first.call(null, seq__13833_13848__$1);
            var G__13850 = cljs.core.chunk_rest.call(null, seq__13833_13848__$1);
            var G__13851 = c__3501__auto___13849;
            var G__13852 = cljs.core.count.call(null, c__3501__auto___13849);
            var G__13853 = 0;
            seq__13833_13837 = G__13850;
            chunk__13834_13838 = G__13851;
            count__13835_13839 = G__13852;
            i__13836_13840 = G__13853;
            continue
          }else {
            var obj_13854__$1 = cljs.core.first.call(null, seq__13833_13848__$1);
            var listener_13855 = obj_13854__$1.listener;
            if(cljs.core.truth_(function() {
              var and__3941__auto__ = function() {
                var or__3943__auto__ = cljs.core.not.call(null, func);
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return cljs.core._EQ_.call(null, listener_13855.listen, func)
                }
              }();
              if(cljs.core.truth_(and__3941__auto__)) {
                var or__3943__auto__ = cljs.core.not.call(null, opt_scope);
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return cljs.core._EQ_.call(null, listener_13855.scope, opt_scope)
                }
              }else {
                return and__3941__auto__
              }
            }())) {
              if(cljs.core.truth_(opt_handler)) {
                opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener_13855)
              }else {
                goog.events.unlisten(elm, cljs.core.name.call(null, event), listener_13855)
              }
            }else {
            }
            var G__13856 = cljs.core.next.call(null, seq__13833_13848__$1);
            var G__13857 = null;
            var G__13858 = 0;
            var G__13859 = 0;
            seq__13833_13837 = G__13856;
            chunk__13834_13838 = G__13857;
            count__13835_13839 = G__13858;
            i__13836_13840 = G__13859;
            continue
          }
        }else {
        }
      }
      break
    }
    return listeners
  };
  return obj
};
enfocus.events.wrapper_register = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:mouseenter", enfocus.events.gen_enter_leave_wrapper.call(null, "\ufdd0:mouseover"), "\ufdd0:mouseleave", enfocus.events.gen_enter_leave_wrapper.call(null, "\ufdd0:mouseout")], true);
enfocus.events.listen = function listen(event, func) {
  var wrapper = enfocus.events.wrapper_register.call(null, event);
  return function(pnod) {
    if(function() {
      var and__3941__auto__ = cljs.core._EQ_.call(null, "\ufdd0:resize", event);
      if(and__3941__auto__) {
        return window === pnod
      }else {
        return and__3941__auto__
      }
    }()) {
      return goog.events.listen(enfocus.events.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper, func)
      }
    }
  }
};
enfocus.events.remove_listeners = function() {
  var remove_listeners__delegate = function(event_list) {
    var get_name = function(p1__13860_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__13860_SHARP_, "\ufdd0:mouseenter") ? "\ufdd0:mouseover" : cljs.core._EQ_.call(null, p1__13860_SHARP_, "\ufdd0:mouseleave") ? "\ufdd0:mouseout" : "\ufdd0:else" ? p1__13860_SHARP_ : null)
    };
    return function(pnod) {
      var seq__13865 = cljs.core.seq.call(null, event_list);
      var chunk__13866 = null;
      var count__13867 = 0;
      var i__13868 = 0;
      while(true) {
        if(i__13868 < count__13867) {
          var ev = cljs.core._nth.call(null, chunk__13866, i__13868);
          goog.events.removeAll(pnod, get_name.call(null, ev));
          var G__13869 = seq__13865;
          var G__13870 = chunk__13866;
          var G__13871 = count__13867;
          var G__13872 = i__13868 + 1;
          seq__13865 = G__13869;
          chunk__13866 = G__13870;
          count__13867 = G__13871;
          i__13868 = G__13872;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13865);
          if(temp__4092__auto__) {
            var seq__13865__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13865__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13865__$1);
              var G__13873 = cljs.core.chunk_rest.call(null, seq__13865__$1);
              var G__13874 = c__3501__auto__;
              var G__13875 = cljs.core.count.call(null, c__3501__auto__);
              var G__13876 = 0;
              seq__13865 = G__13873;
              chunk__13866 = G__13874;
              count__13867 = G__13875;
              i__13868 = G__13876;
              continue
            }else {
              var ev = cljs.core.first.call(null, seq__13865__$1);
              goog.events.removeAll(pnod, get_name.call(null, ev));
              var G__13877 = cljs.core.next.call(null, seq__13865__$1);
              var G__13878 = null;
              var G__13879 = 0;
              var G__13880 = 0;
              seq__13865 = G__13877;
              chunk__13866 = G__13878;
              count__13867 = G__13879;
              i__13868 = G__13880;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }
  };
  var remove_listeners = function(var_args) {
    var event_list = null;
    if(arguments.length > 0) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return remove_listeners__delegate.call(this, event_list)
  };
  remove_listeners.cljs$lang$maxFixedArity = 0;
  remove_listeners.cljs$lang$applyTo = function(arglist__13881) {
    var event_list = cljs.core.seq(arglist__13881);
    return remove_listeners__delegate(event_list)
  };
  remove_listeners.cljs$core$IFn$_invoke$arity$variadic = remove_listeners__delegate;
  return remove_listeners
}();
enfocus.events.unlisten = function() {
  var unlisten = null;
  var unlisten__1 = function(event) {
    return enfocus.events.remove_listeners.call(null, event)
  };
  var unlisten__2 = function(event, func) {
    var wrapper = enfocus.events.wrapper_register.call(null, event);
    return function(pnod) {
      if(wrapper == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper, func)
      }
    }
  };
  unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return unlisten__1.call(this, event);
      case 2:
        return unlisten__2.call(this, event, func)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$1 = unlisten__1;
  unlisten.cljs$core$IFn$_invoke$arity$2 = unlisten__2;
  return unlisten
}();
enfocus.events.get_node_chain = function get_node_chain(top, node) {
  if(function() {
    var or__3943__auto__ = node == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._EQ_.call(null, node, top)
    }
  }()) {
    return cljs.core.List.EMPTY
  }else {
    return cljs.core.conj.call(null, get_node_chain.call(null, top, node.parentNode), node)
  }
};
enfocus.events.create_event = function create_event(type, cur, tar) {
  var event = new goog.events.Event(type);
  event.currentTarget = cur;
  event.target = tar;
  return event
};
enfocus.events.listen_live = function listen_live(event, selector, func) {
  return function(node) {
    return enfocus.core.at.call(null, node, enfocus.events.listen.call(null, event, function(p1__13882_SHARP_) {
      var seq__13887 = cljs.core.seq.call(null, enfocus.events.get_node_chain.call(null, node, p1__13882_SHARP_.target));
      var chunk__13888 = null;
      var count__13889 = 0;
      var i__13890 = 0;
      while(true) {
        if(i__13890 < count__13889) {
          var el = cljs.core._nth.call(null, chunk__13888, i__13890);
          enfocus.core.at.call(null, el, enfocus.core.filter.call(null, enfocus.core.match_QMARK_.call(null, selector), function(seq__13887, chunk__13888, count__13889, i__13890, el) {
            return function(node__$1) {
              return func.call(null, enfocus.events.create_event.call(null, event, el, p1__13882_SHARP_.target))
            }
          }(seq__13887, chunk__13888, count__13889, i__13890, el)));
          var G__13891 = seq__13887;
          var G__13892 = chunk__13888;
          var G__13893 = count__13889;
          var G__13894 = i__13890 + 1;
          seq__13887 = G__13891;
          chunk__13888 = G__13892;
          count__13889 = G__13893;
          i__13890 = G__13894;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13887);
          if(temp__4092__auto__) {
            var seq__13887__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13887__$1)) {
              var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__13887__$1);
              var G__13895 = cljs.core.chunk_rest.call(null, seq__13887__$1);
              var G__13896 = c__3501__auto__;
              var G__13897 = cljs.core.count.call(null, c__3501__auto__);
              var G__13898 = 0;
              seq__13887 = G__13895;
              chunk__13888 = G__13896;
              count__13889 = G__13897;
              i__13890 = G__13898;
              continue
            }else {
              var el = cljs.core.first.call(null, seq__13887__$1);
              enfocus.core.at.call(null, el, enfocus.core.filter.call(null, enfocus.core.match_QMARK_.call(null, selector), function(seq__13887, chunk__13888, count__13889, i__13890, el, seq__13887__$1, temp__4092__auto__) {
                return function(node__$1) {
                  return func.call(null, enfocus.events.create_event.call(null, event, el, p1__13882_SHARP_.target))
                }
              }(seq__13887, chunk__13888, count__13889, i__13890, el, seq__13887__$1, temp__4092__auto__)));
              var G__13899 = cljs.core.next.call(null, seq__13887__$1);
              var G__13900 = null;
              var G__13901 = 0;
              var G__13902 = 0;
              seq__13887 = G__13899;
              chunk__13888 = G__13900;
              count__13889 = G__13901;
              i__13890 = G__13902;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    }))
  }
};
enfocus.events.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0:else") {
            var G__13903 = parent;
            var G__13904 = child.parentNode;
            parent = G__13903;
            child = G__13904;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.events.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re = e.relatedTarget;
    var this$ = e.currentTarget;
    if(function() {
      var and__3941__auto__ = !(re === this$);
      if(and__3941__auto__) {
        return cljs.core.not.call(null, enfocus.events.child_of_QMARK_.call(null, this$, re))
      }else {
        return and__3941__auto__
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370db", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#db7093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.Rgb;
goog.color.Hsv;
goog.color.Hsl;
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }else {
    if(isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if(overflowX == "visible") {
        return element.scrollLeft
      }else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft
      }
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if(!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement
  }
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left
  }else {
    if(goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left
    }
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if(!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart
  }else {
    if(goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart
    }else {
      if(!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth
      }else {
        element.scrollLeft = offsetStart
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if(!goog.isNull(top)) {
    elem.style.top = top + "px"
  }
  if(isRtl) {
    elem.style.right = left + "px";
    elem.style.left = ""
  }else {
    elem.style.left = left + "px";
    elem.style.right = ""
  }
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element;
  this.rightToLeft_
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.rightToLeft_;
goog.fx.dom.PredefinedEffect.prototype.isRightToLeft = function() {
  if(!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.element)
  }
  return this.rightToLeft_
};
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  var pos = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "right" : "left";
  this.element.style[pos] = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft;
  var start = [offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(this.element) : this.element.offsetLeft;
  this.startPoint = [offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  var marginX = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "marginRight" : "marginLeft";
  this.element.style[marginX] = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  if(this.isRightPositioningForRtlEnabled()) {
    goog.style.bidi.setScrollOffset(this.element, Math.round(this.coords[0]))
  }else {
    this.element.scrollLeft = Math.round(this.coords[0])
  }
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor && computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("enfocus.effects");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.events");
goog.require("goog.dom.query");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("enfocus.core");
enfocus.effects.chainable_effect = function chainable_effect(func, callback) {
  var trans = function(pnodes, chain) {
    var pnod_col = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var cnt = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col));
    var partial_cback = function(pnod_col, cnt) {
      return function() {
        cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt))) {
          if(cljs.core.truth_(callback)) {
            enfocus.core.apply_transform.call(null, callback, pnodes)
          }else {
          }
          if(cljs.core.truth_(chain)) {
            return enfocus.core.apply_transform.call(null, chain, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }(pnod_col, cnt);
    var seq__14895 = cljs.core.seq.call(null, pnod_col);
    var chunk__14896 = null;
    var count__14897 = 0;
    var i__14898 = 0;
    while(true) {
      if(i__14898 < count__14897) {
        var pnod = cljs.core._nth.call(null, chunk__14896, i__14898);
        func.call(null, pnod, partial_cback);
        var G__14902 = seq__14895;
        var G__14903 = chunk__14896;
        var G__14904 = count__14897;
        var G__14905 = i__14898 + 1;
        seq__14895 = G__14902;
        chunk__14896 = G__14903;
        count__14897 = G__14904;
        i__14898 = G__14905;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__14895);
        if(temp__4092__auto__) {
          var seq__14895__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14895__$1)) {
            var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__14895__$1);
            var G__14906 = cljs.core.chunk_rest.call(null, seq__14895__$1);
            var G__14907 = c__3501__auto__;
            var G__14908 = cljs.core.count.call(null, c__3501__auto__);
            var G__14909 = 0;
            seq__14895 = G__14906;
            chunk__14896 = G__14907;
            count__14897 = G__14908;
            i__14898 = G__14909;
            continue
          }else {
            var pnod = cljs.core.first.call(null, seq__14895__$1);
            func.call(null, pnod, partial_cback);
            var G__14910 = cljs.core.next.call(null, seq__14895__$1);
            var G__14911 = null;
            var G__14912 = 0;
            var G__14913 = 0;
            seq__14895 = G__14910;
            chunk__14896 = G__14911;
            count__14897 = G__14912;
            i__14898 = G__14913;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  if(typeof enfocus.effects.t14899 !== "undefined") {
  }else {
    goog.provide("enfocus.effects.t14899");
    enfocus.effects.t14899 = function(trans, callback, func, chainable_effect, meta14900) {
      this.trans = trans;
      this.callback = callback;
      this.func = func;
      this.chainable_effect = chainable_effect;
      this.meta14900 = meta14900;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    enfocus.effects.t14899.cljs$lang$type = true;
    enfocus.effects.t14899.cljs$lang$ctorStr = "enfocus.effects/t14899";
    enfocus.effects.t14899.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "enfocus.effects/t14899")
    };
    enfocus.effects.t14899.prototype.enfocus$core$ITransform$ = true;
    enfocus.effects.t14899.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(_, nodes) {
      var self__ = this;
      return self__.trans.call(null, nodes, null)
    };
    enfocus.effects.t14899.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(_, nodes, chain) {
      var self__ = this;
      return self__.trans.call(null, nodes, chain)
    };
    enfocus.effects.t14899.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14901) {
      var self__ = this;
      return self__.meta14900
    };
    enfocus.effects.t14899.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14901, meta14900__$1) {
      var self__ = this;
      return new enfocus.effects.t14899(self__.trans, self__.callback, self__.func, self__.chainable_effect, meta14900__$1)
    };
    enfocus.effects.__GT_t14899 = function __GT_t14899(trans__$1, callback__$1, func__$1, chainable_effect__$1, meta14900) {
      return new enfocus.effects.t14899(trans__$1, callback__$1, func__$1, chainable_effect__$1, meta14900)
    }
  }
  return new enfocus.effects.t14899(trans, callback, func, chainable_effect, null)
};
enfocus.effects.chain = function() {
  var chain__delegate = function(func, chains) {
    if(cljs.core.empty_QMARK_.call(null, chains)) {
      return function(pnod) {
        return enfocus.core.apply_transform.call(null, func, pnod)
      }
    }else {
      return function(pnod) {
        return enfocus.core.apply_transform.call(null, func, pnod, cljs.core.apply.call(null, chain, chains))
      }
    }
  };
  var chain = function(func, var_args) {
    var chains = null;
    if(arguments.length > 1) {
      chains = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return chain__delegate.call(this, func, chains)
  };
  chain.cljs$lang$maxFixedArity = 1;
  chain.cljs$lang$applyTo = function(arglist__14914) {
    var func = cljs.core.first(arglist__14914);
    var chains = cljs.core.rest(arglist__14914);
    return chain__delegate(func, chains)
  };
  chain.cljs$core$IFn$_invoke$arity$variadic = chain__delegate;
  return chain
}();
enfocus.effects.fade_out = function() {
  var fade_out = null;
  var fade_out__1 = function(ttime) {
    return fade_out.call(null, ttime, null, null)
  };
  var fade_out__2 = function(ttime, callback) {
    return fade_out.call(null, ttime, callback, null)
  };
  var fade_out__3 = function(ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var anim = new goog.fx.dom.FadeOut(pnod, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  fade_out = function(ttime, callback, accel) {
    switch(arguments.length) {
      case 1:
        return fade_out__1.call(this, ttime);
      case 2:
        return fade_out__2.call(this, ttime, callback);
      case 3:
        return fade_out__3.call(this, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fade_out.cljs$core$IFn$_invoke$arity$1 = fade_out__1;
  fade_out.cljs$core$IFn$_invoke$arity$2 = fade_out__2;
  fade_out.cljs$core$IFn$_invoke$arity$3 = fade_out__3;
  return fade_out
}();
enfocus.effects.fade_in = function() {
  var fade_in = null;
  var fade_in__1 = function(ttime) {
    return fade_in.call(null, ttime, null, null)
  };
  var fade_in__2 = function(ttime, callback) {
    return fade_in.call(null, ttime, callback, null)
  };
  var fade_in__3 = function(ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var anim = new goog.fx.dom.FadeIn(pnod, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  fade_in = function(ttime, callback, accel) {
    switch(arguments.length) {
      case 1:
        return fade_in__1.call(this, ttime);
      case 2:
        return fade_in__2.call(this, ttime, callback);
      case 3:
        return fade_in__3.call(this, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fade_in.cljs$core$IFn$_invoke$arity$1 = fade_in__1;
  fade_in.cljs$core$IFn$_invoke$arity$2 = fade_in__2;
  fade_in.cljs$core$IFn$_invoke$arity$3 = fade_in__3;
  return fade_in
}();
enfocus.effects.resize = function() {
  var resize = null;
  var resize__2 = function(wth, hgt) {
    return resize.call(null, wth, hgt, 0, null, null)
  };
  var resize__3 = function(wth, hgt, ttime) {
    return resize.call(null, wth, hgt, ttime, null, null)
  };
  var resize__4 = function(wth, hgt, ttime, callback) {
    return resize.call(null, wth, hgt, ttime, callback, null)
  };
  var resize__5 = function(wth, hgt, ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var csize = goog.style.getContentBoxSize(pnod);
      var start = [csize.width, csize.height];
      var wth__$1 = cljs.core._EQ_.call(null, "\ufdd0:curwidth", wth) ? csize.width : wth;
      var hgt__$1 = cljs.core._EQ_.call(null, "\ufdd0:curheight", hgt) ? csize.height : hgt;
      var end = [wth__$1, hgt__$1];
      var anim = new goog.fx.dom.Resize(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  resize = function(wth, hgt, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return resize__2.call(this, wth, hgt);
      case 3:
        return resize__3.call(this, wth, hgt, ttime);
      case 4:
        return resize__4.call(this, wth, hgt, ttime, callback);
      case 5:
        return resize__5.call(this, wth, hgt, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  resize.cljs$core$IFn$_invoke$arity$2 = resize__2;
  resize.cljs$core$IFn$_invoke$arity$3 = resize__3;
  resize.cljs$core$IFn$_invoke$arity$4 = resize__4;
  resize.cljs$core$IFn$_invoke$arity$5 = resize__5;
  return resize
}();
enfocus.effects.move = function() {
  var move = null;
  var move__2 = function(xpos, ypos) {
    return move.call(null, xpos, ypos, 0, null, null)
  };
  var move__3 = function(xpos, ypos, ttime) {
    return move.call(null, xpos, ypos, ttime, null, null)
  };
  var move__4 = function(xpos, ypos, ttime, callback) {
    return move.call(null, xpos, ypos, ttime, callback, null)
  };
  var move__5 = function(xpos, ypos, ttime, callback, accel) {
    return enfocus.effects.chainable_effect.call(null, function(pnod, pcallback) {
      var cpos = goog.style.getPosition(pnod);
      var start = [cpos.x, cpos.y];
      var xpos__$1 = cljs.core._EQ_.call(null, "\ufdd0:curx", xpos) ? cpos.x : xpos;
      var ypos__$1 = cljs.core._EQ_.call(null, "\ufdd0:cury", ypos) ? cpos.y : ypos;
      var end = [xpos__$1, ypos__$1];
      var anim = new goog.fx.dom.Slide(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  move = function(xpos, ypos, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return move__2.call(this, xpos, ypos);
      case 3:
        return move__3.call(this, xpos, ypos, ttime);
      case 4:
        return move__4.call(this, xpos, ypos, ttime, callback);
      case 5:
        return move__5.call(this, xpos, ypos, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  move.cljs$core$IFn$_invoke$arity$2 = move__2;
  move.cljs$core$IFn$_invoke$arity$3 = move__3;
  move.cljs$core$IFn$_invoke$arity$4 = move__4;
  move.cljs$core$IFn$_invoke$arity$5 = move__5;
  return move
}();
enfocus.effects.scroll = function() {
  var scroll = null;
  var scroll__2 = function(xpos, ypos) {
    return scroll.call(null, xpos, ypos, 0, null, null)
  };
  var scroll__3 = function(xpos, ypos, ttime) {
    return scroll.call(null, xpos, ypos, ttime, null, null)
  };
  var scroll__4 = function(xpos, ypos, ttime, callback) {
    return scroll.call(null, xpos, ypos, ttime, callback, null)
  };
  var scroll__5 = function(xpos, ypos, ttime, callback, accel) {
    return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
      var start = [pnod.scrollLeft, pnod.scrollTop];
      var xpos__$1 = cljs.core._EQ_.call(null, "\ufdd0:curx", xpos) ? pnod.scrollLeft : xpos;
      var ypos__$1 = cljs.core._EQ_.call(null, "\ufdd0:cury", ypos) ? pnod.scrollTop : ypos;
      var end = [xpos__$1, ypos__$1];
      var anim = new goog.fx.dom.Scroll(pnod, start, end, ttime, accel);
      if(cljs.core.truth_(pcallback)) {
        goog.events.listen(anim, goog.fx.Animation.EventType.END, pcallback)
      }else {
      }
      return anim.play()
    }, callback)
  };
  scroll = function(xpos, ypos, ttime, callback, accel) {
    switch(arguments.length) {
      case 2:
        return scroll__2.call(this, xpos, ypos);
      case 3:
        return scroll__3.call(this, xpos, ypos, ttime);
      case 4:
        return scroll__4.call(this, xpos, ypos, ttime, callback);
      case 5:
        return scroll__5.call(this, xpos, ypos, ttime, callback, accel)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll.cljs$core$IFn$_invoke$arity$2 = scroll__2;
  scroll.cljs$core$IFn$_invoke$arity$3 = scroll__3;
  scroll.cljs$core$IFn$_invoke$arity$4 = scroll__4;
  scroll.cljs$core$IFn$_invoke$arity$5 = scroll__5;
  return scroll
}();
enfocus.effects.liner = function liner(t) {
  return t
};
enfocus.effects.ease_in_quad = function ease_in_quad(t) {
  return t * t
};
enfocus.effects.ease_out_quad = function ease_out_quad(t) {
  return-1 * t * (t - 2)
};
enfocus.effects.ease_in_out_quad = function ease_in_out_quad(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt
  }else {
    return-0.5 * ((nt - 1) * (nt - 2) - 1)
  }
};
enfocus.effects.ease_in_cubic = function ease_in_cubic(t) {
  return t * t * t
};
enfocus.effects.ease_out_cubic = function ease_out_cubic(t) {
  var nt = t - 1;
  return nt * nt * nt + 1
};
enfocus.effects.ease_in_out_cubic = function ease_in_out_cubic(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt)
  }
};
enfocus.effects.ease_in_quart = function ease_in_quart(t) {
  return t * t * t * t
};
enfocus.effects.ease_out_quart = function ease_out_quart(t) {
  var nt = t - 1;
  return-1 * (nt * nt * nt * nt - 1)
};
enfocus.effects.ease_in_out_quart = function ease_in_out_quart(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt * mt)
  }
};
enfocus.effects.ease_in_quint = function ease_in_quint(t) {
  return t * t * t * t
};
enfocus.effects.ease_out_quint = function ease_out_quint(t) {
  var nt = t - 1;
  return nt * nt * nt * nt + 1
};
enfocus.effects.ease_in_out_quint = function ease_in_out_quint(t) {
  var nt = t * 2;
  if(nt < 1) {
    return 0.5 * nt * nt * nt * nt * nt
  }else {
    var mt = nt - 2;
    return 0.5 * (2 + mt * mt * mt * mt * mt)
  }
};
enfocus.effects.sign_in = function sign_in(t) {
  return-1 * Math.cos(0.5 * Math.PI * t) + 1
};
enfocus.effects.sign_out = function sign_out(t) {
  return Math.sin(t * Math.PI * 0.5)
};
enfocus.effects.sign_in_out = function sign_in_out(t) {
  return-0.5 * (Math.cos(Math.PI * t) - 1)
};
enfocus.effects.expo_in = function expo_in(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 0
  }else {
    return Math.pow(2, 10 * (t - 1))
  }
};
enfocus.effects.expo_out = function expo_out(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 1
  }else {
    return-1 * Math.pow(2, -10 * t) + 1
  }
};
enfocus.effects.expo_in_out = function expo_in_out(t) {
  if(cljs.core._EQ_.call(null, t, 0)) {
    return 0
  }else {
    if(cljs.core._EQ_.call(null, t, 1)) {
      return 1
    }else {
      if(t < 1) {
        return 0.5 * Math.pow(2, 10 * (t - 1))
      }else {
        if("\ufdd0:else") {
          return 0.5 * (-1 * Math.pow(2, -10 * (t - 1)) + 2)
        }else {
          return null
        }
      }
    }
  }
};
enfocus.effects.circular_in = function circular_in(t) {
  return-1 * (Math.sqrt(1 - Math.pow(t, 2)) - 1)
};
enfocus.effects.circular_out = function circular_out(t) {
  var nt = t - 1;
  return Math.sqrt(1 - Math.pow(nt, 2))
};
enfocus.effects.circular_in_out = function circular_in_out(t) {
  var nt = t * 2;
  if(t < 1) {
    return-0.5 * (Math.sqrt(1 - Math.pow(nt, 2)) - 1)
  }else {
    var mt = nt - 2;
    return-0.5 * (Math.sqrt(1 - Math.pow(nt, 2)) + 1)
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3370__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3370__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3370__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3370__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3370__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3370__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX] === "\ufdd0:finished"
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t14985 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.ioc_helpers.t14985");
    cljs.core.async.impl.ioc_helpers.t14985 = function(f, fn_handler, meta14986) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14986 = meta14986;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t14985.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t14985.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t14985";
    cljs.core.async.impl.ioc_helpers.t14985.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.ioc-helpers/t14985")
    };
    cljs.core.async.impl.ioc_helpers.t14985.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t14985.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t14985.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t14985.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14987) {
      var self__ = this;
      return self__.meta14986
    };
    cljs.core.async.impl.ioc_helpers.t14985.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14987, meta14986__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t14985(self__.f, self__.fn_handler, meta14986__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t14985 = function __GT_t14985(f__$1, fn_handler__$1, meta14986) {
      return new cljs.core.async.impl.ioc_helpers.t14985(f__$1, fn_handler__$1, meta14986)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t14985(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e14989) {
    if(e14989 instanceof Object) {
      var ex = e14989;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if("\ufdd0:else") {
        throw e14989;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_14992_14994 = state;
    statearr_14992_14994[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_14992_14994[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_14993_14995 = state;
    statearr_14993_14995[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14993_14995[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_14998_15000 = state;
    statearr_14998_15000[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_14998_15000[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_14999_15001 = state;
    statearr_14999_15001[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14999_15001[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__15002) {
    var map__15007 = p__15002;
    var map__15007__$1 = cljs.core.seq_QMARK_.call(null, map__15007) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15007) : map__15007;
    var opts = map__15007__$1;
    var statearr_15008_15011 = state;
    statearr_15008_15011[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_15009_15012 = state;
      statearr_15009_15012[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_15010_15013 = state;
      statearr_15010_15013[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return"\ufdd0:recur"
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__15002 = null;
    if(arguments.length > 3) {
      p__15002 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__15002)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__15014) {
    var state = cljs.core.first(arglist__15014);
    arglist__15014 = cljs.core.next(arglist__15014);
    var cont_block = cljs.core.first(arglist__15014);
    arglist__15014 = cljs.core.next(arglist__15014);
    var ports = cljs.core.first(arglist__15014);
    var p__15002 = cljs.core.rest(arglist__15014);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__15002)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__14979 = cnt + 1;
      cnt = G__14979;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3548__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3548__auto__) {
      var v_14980 = this$.pop();
      if(keep_QMARK_.call(null, v_14980)) {
        this$.unshift(v_14980)
      }else {
      }
      var G__14981 = x + 1;
      x = G__14981;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_14968 = 0;
  while(true) {
    var m_14969 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_14969 == null) {
    }else {
      m_14969.call(null);
      if(count_14968 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__14970 = count_14968 + 1;
        count_14968 = G__14970;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if("\ufdd0:else") {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t14974 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.channels.t14974");
    cljs.core.async.impl.channels.t14974 = function(val, box, meta14975) {
      this.val = val;
      this.box = box;
      this.meta14975 = meta14975;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t14974.cljs$lang$type = true;
    cljs.core.async.impl.channels.t14974.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t14974";
    cljs.core.async.impl.channels.t14974.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.channels/t14974")
    };
    cljs.core.async.impl.channels.t14974.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t14974.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14976) {
      var self__ = this;
      return self__.meta14975
    };
    cljs.core.async.impl.channels.t14974.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14976, meta14975__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t14974(self__.val, self__.box, meta14975__$1)
    };
    cljs.core.async.impl.channels.__GT_t14974 = function __GT_t14974(val__$1, box__$1, meta14975) {
      return new cljs.core.async.impl.channels.t14974(val__$1, box__$1, meta14975)
    }
  }
  return new cljs.core.async.impl.channels.t14974(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3314__auto__, writer__3315__auto__, opts__3316__auto__) {
  return cljs.core._write.call(null, writer__3315__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_14977 = self__.takes.pop();
      if(taker_14977 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_14977)) {
          var take_cb_14978 = cljs.core.async.impl.protocols.commit.call(null, taker_14977);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_14978, taker_14977) {
            return function() {
              return take_cb_14978.call(null, null)
            }
          }(take_cb_14978, taker_14977))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__14944 = level + 1;
        level = G__14944;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_14945 = 0;
    while(true) {
      if(i_14945 < arr.length) {
        arr[i_14945] = null;
        var G__14946 = i_14945 + 1;
        i_14945 = G__14946;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__14947 = x_SINGLEQUOTE_;
                x__$1 = G__14947;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__14948 = x__$1;
        var G__14949 = k;
        var G__14950 = level - 1;
        var G__14951 = update;
        x = G__14948;
        k = G__14949;
        level = G__14950;
        update = G__14951;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_14952 = self__.level + 1;
      while(true) {
        if(i_14952 <= new_level + 1) {
          update[i_14952] = self__.header;
          var G__14953 = i_14952 + 1;
          i_14952 = G__14953;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_14954 = 0;
    while(true) {
      if(i_14954 <= self__.level) {
        var links_14955 = update[i_14954].forward;
        if(links_14955[i_14954] === x__$1) {
          links_14955[i_14954] = x__$1.forward[i_14954];
          var G__14956 = i_14954 + 1;
          i_14954 = G__14956;
          continue
        }else {
          var G__14957 = i_14954 + 1;
          i_14954 = G__14957;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__14958 = x_SINGLEQUOTE_;
              x__$1 = G__14958;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__14959 = nx;
        var G__14960 = level__$1 - 1;
        x = G__14959;
        level__$1 = G__14960;
        continue
      }else {
        var G__14961 = x;
        var G__14962 = level__$1 - 1;
        x = G__14961;
        level__$1 = G__14962;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__14963 = x_SINGLEQUOTE_;
              x__$1 = G__14963;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__14964 = nx;
        var G__14965 = level__$1 - 1;
        x = G__14964;
        level__$1 = G__14965;
        continue
      }else {
        var G__14966 = x;
        var G__14967 = level__$1 - 1;
        x = G__14966;
        level__$1 = G__14967;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t14918 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14918");
    cljs.core.async.t14918 = function(f, fn_handler, meta14919) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14919 = meta14919;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14918.cljs$lang$type = true;
    cljs.core.async.t14918.cljs$lang$ctorStr = "cljs.core.async/t14918";
    cljs.core.async.t14918.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t14918")
    };
    cljs.core.async.t14918.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14918.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t14918.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t14918.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14920) {
      var self__ = this;
      return self__.meta14919
    };
    cljs.core.async.t14918.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14920, meta14919__$1) {
      var self__ = this;
      return new cljs.core.async.t14918(self__.f, self__.fn_handler, meta14919__$1)
    };
    cljs.core.async.__GT_t14918 = function __GT_t14918(f__$1, fn_handler__$1, meta14919) {
      return new cljs.core.async.t14918(f__$1, fn_handler__$1, meta14919)
    }
  }
  return new cljs.core.async.t14918(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n === "number" ? cljs.core.async.buffer.call(null, buf_or_n) : buf_or_n)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_14921 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_14921)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_14921)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3548__auto___14922 = n;
  var x_14923 = 0;
  while(true) {
    if(x_14923 < n__3548__auto___14922) {
      a[x_14923] = 0;
      var G__14924 = x_14923 + 1;
      x_14923 = G__14924;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14925 = i + 1;
      i = G__14925;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t14929 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14929");
    cljs.core.async.t14929 = function(flag, alt_flag, meta14930) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14930 = meta14930;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14929.cljs$lang$type = true;
    cljs.core.async.t14929.cljs$lang$ctorStr = "cljs.core.async/t14929";
    cljs.core.async.t14929.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t14929")
    };
    cljs.core.async.t14929.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14929.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t14929.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t14929.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14931) {
      var self__ = this;
      return self__.meta14930
    };
    cljs.core.async.t14929.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14931, meta14930__$1) {
      var self__ = this;
      return new cljs.core.async.t14929(self__.flag, self__.alt_flag, meta14930__$1)
    };
    cljs.core.async.__GT_t14929 = function __GT_t14929(flag__$1, alt_flag__$1, meta14930) {
      return new cljs.core.async.t14929(flag__$1, alt_flag__$1, meta14930)
    }
  }
  return new cljs.core.async.t14929(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t14935 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14935");
    cljs.core.async.t14935 = function(cb, flag, alt_handler, meta14936) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14936 = meta14936;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14935.cljs$lang$type = true;
    cljs.core.async.t14935.cljs$lang$ctorStr = "cljs.core.async/t14935";
    cljs.core.async.t14935.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "cljs.core.async/t14935")
    };
    cljs.core.async.t14935.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14935.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t14935.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t14935.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14937) {
      var self__ = this;
      return self__.meta14936
    };
    cljs.core.async.t14935.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14937, meta14936__$1) {
      var self__ = this;
      return new cljs.core.async.t14935(self__.cb, self__.flag, self__.alt_handler, meta14936__$1)
    };
    cljs.core.async.__GT_t14935 = function __GT_t14935(cb__$1, flag__$1, alt_handler__$1, meta14936) {
      return new cljs.core.async.t14935(cb__$1, flag__$1, alt_handler__$1, meta14936)
    }
  }
  return new cljs.core.async.t14935(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword("\ufdd0:priority")).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14938_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__14938_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__14939 = i + 1;
          i = G__14939;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, "\ufdd0:default")) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:default")).call(null, opts), "\ufdd0:default"], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__14940) {
    var map__14942 = p__14940;
    var map__14942__$1 = cljs.core.seq_QMARK_.call(null, map__14942) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14942) : map__14942;
    var opts = map__14942__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__14940 = null;
    if(arguments.length > 1) {
      p__14940 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__14940)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__14943) {
    var ports = cljs.core.first(arglist__14943);
    var p__14940 = cljs.core.rest(arglist__14943);
    return alts_BANG___delegate(ports, p__14940)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
goog.provide("chatter_box.event_bus");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
chatter_box.event_bus.Component = {};
chatter_box.event_bus.init = function init(this$, out_channel) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$init$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$init$arity$2(this$, out_channel)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.init[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.init["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.init", this$);
        }
      }
    }().call(null, this$, out_channel)
  }
};
chatter_box.event_bus.accept_message_QMARK_ = function accept_message_QMARK_(this$, message) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2(this$, message)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.accept_message_QMARK_[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.accept_message_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.accept-message?", this$);
        }
      }
    }().call(null, this$, message)
  }
};
chatter_box.event_bus.get_channel = function get_channel(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.chatter_box$event_bus$Component$get_channel$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.chatter_box$event_bus$Component$get_channel$arity$1(this$)
  }else {
    var x__3370__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = chatter_box.event_bus.get_channel[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = chatter_box.event_bus.get_channel["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Component.get-channel", this$);
        }
      }
    }().call(null, this$)
  }
};
chatter_box.event_bus.create_bus = function() {
  var create_bus__delegate = function(components) {
    var ch = cljs.core.async.chan.call(null);
    var seq__374544_374662 = cljs.core.seq.call(null, components);
    var chunk__374545_374663 = null;
    var count__374546_374664 = 0;
    var i__374547_374665 = 0;
    while(true) {
      if(i__374547_374665 < count__374546_374664) {
        var co_374666 = cljs.core._nth.call(null, chunk__374545_374663, i__374547_374665);
        chatter_box.event_bus.init.call(null, co_374666, ch);
        var G__374667 = seq__374544_374662;
        var G__374668 = chunk__374545_374663;
        var G__374669 = count__374546_374664;
        var G__374670 = i__374547_374665 + 1;
        seq__374544_374662 = G__374667;
        chunk__374545_374663 = G__374668;
        count__374546_374664 = G__374669;
        i__374547_374665 = G__374670;
        continue
      }else {
        var temp__4092__auto___374671 = cljs.core.seq.call(null, seq__374544_374662);
        if(temp__4092__auto___374671) {
          var seq__374544_374672__$1 = temp__4092__auto___374671;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__374544_374672__$1)) {
            var c__3501__auto___374673 = cljs.core.chunk_first.call(null, seq__374544_374672__$1);
            var G__374674 = cljs.core.chunk_rest.call(null, seq__374544_374672__$1);
            var G__374675 = c__3501__auto___374673;
            var G__374676 = cljs.core.count.call(null, c__3501__auto___374673);
            var G__374677 = 0;
            seq__374544_374662 = G__374674;
            chunk__374545_374663 = G__374675;
            count__374546_374664 = G__374676;
            i__374547_374665 = G__374677;
            continue
          }else {
            var co_374678 = cljs.core.first.call(null, seq__374544_374672__$1);
            chatter_box.event_bus.init.call(null, co_374678, ch);
            var G__374679 = cljs.core.next.call(null, seq__374544_374672__$1);
            var G__374680 = null;
            var G__374681 = 0;
            var G__374682 = 0;
            seq__374544_374662 = G__374679;
            chunk__374545_374663 = G__374680;
            count__374546_374664 = G__374681;
            i__374547_374665 = G__374682;
            continue
          }
        }else {
        }
      }
      break
    }
    var c__5653__auto___374683 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5654__auto__ = function() {
        var switch__5581__auto__ = function(state_374616) {
          var state_val_374617 = state_374616[1];
          if(state_val_374617 === 1) {
            var state_374616__$1 = state_374616;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_374616__$1, 2, ch)
          }else {
            if(state_val_374617 === 2) {
              var inst_374549 = state_374616[2];
              var inst_374550 = inst_374549;
              var state_374616__$1 = function() {
                var statearr_374618 = state_374616;
                statearr_374618[5] = inst_374550;
                return statearr_374618
              }();
              var statearr_374619_374684 = state_374616__$1;
              statearr_374619_374684[2] = null;
              statearr_374619_374684[1] = 3;
              return"\ufdd0:recur"
            }else {
              if(state_val_374617 === 3) {
                var inst_374550 = state_374616[5];
                var state_374616__$1 = state_374616;
                if(cljs.core.truth_(inst_374550)) {
                  var statearr_374620_374685 = state_374616__$1;
                  statearr_374620_374685[1] = 5
                }else {
                  var statearr_374621_374686 = state_374616__$1;
                  statearr_374621_374686[1] = 6
                }
                return"\ufdd0:recur"
              }else {
                if(state_val_374617 === 4) {
                  var inst_374614 = state_374616[2];
                  var state_374616__$1 = state_374616;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_374616__$1, inst_374614)
                }else {
                  if(state_val_374617 === 5) {
                    var inst_374557 = cljs.core.seq.call(null, components);
                    var inst_374558 = inst_374557;
                    var inst_374559 = null;
                    var inst_374560 = 0;
                    var inst_374561 = 0;
                    var state_374616__$1 = function() {
                      var statearr_374622 = state_374616;
                      statearr_374622[6] = inst_374561;
                      statearr_374622[7] = inst_374560;
                      statearr_374622[8] = inst_374558;
                      statearr_374622[9] = inst_374559;
                      return statearr_374622
                    }();
                    var statearr_374623_374687 = state_374616__$1;
                    statearr_374623_374687[2] = null;
                    statearr_374623_374687[1] = 8;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_374617 === 6) {
                      var state_374616__$1 = state_374616;
                      var statearr_374624_374688 = state_374616__$1;
                      statearr_374624_374688[2] = null;
                      statearr_374624_374688[1] = 7;
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_374617 === 7) {
                        var inst_374612 = state_374616[2];
                        var state_374616__$1 = state_374616;
                        var statearr_374625_374689 = state_374616__$1;
                        statearr_374625_374689[2] = inst_374612;
                        statearr_374625_374689[1] = 4;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_374617 === 8) {
                          var inst_374561 = state_374616[6];
                          var inst_374560 = state_374616[7];
                          var inst_374563 = inst_374561 < inst_374560;
                          var inst_374564 = inst_374563;
                          var state_374616__$1 = state_374616;
                          if(cljs.core.truth_(inst_374564)) {
                            var statearr_374626_374690 = state_374616__$1;
                            statearr_374626_374690[1] = 10
                          }else {
                            var statearr_374627_374691 = state_374616__$1;
                            statearr_374627_374691[1] = 11
                          }
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_374617 === 9) {
                            var inst_374606 = state_374616[2];
                            var state_374616__$1 = function() {
                              var statearr_374628 = state_374616;
                              statearr_374628[10] = inst_374606;
                              return statearr_374628
                            }();
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_374616__$1, 27, ch)
                          }else {
                            if(state_val_374617 === 10) {
                              var inst_374566 = state_374616[11];
                              var inst_374561 = state_374616[6];
                              var inst_374559 = state_374616[9];
                              var inst_374550 = state_374616[5];
                              var inst_374566__$1 = cljs.core._nth.call(null, inst_374559, inst_374561);
                              var inst_374567 = chatter_box.event_bus.accept_message_QMARK_.call(null, inst_374566__$1, inst_374550);
                              var state_374616__$1 = function() {
                                var statearr_374629 = state_374616;
                                statearr_374629[11] = inst_374566__$1;
                                return statearr_374629
                              }();
                              if(cljs.core.truth_(inst_374567)) {
                                var statearr_374630_374692 = state_374616__$1;
                                statearr_374630_374692[1] = 13
                              }else {
                                var statearr_374631_374693 = state_374616__$1;
                                statearr_374631_374693[1] = 14
                              }
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_374617 === 11) {
                                var inst_374558 = state_374616[8];
                                var inst_374578 = state_374616[12];
                                var inst_374578__$1 = cljs.core.seq.call(null, inst_374558);
                                var state_374616__$1 = function() {
                                  var statearr_374632 = state_374616;
                                  statearr_374632[12] = inst_374578__$1;
                                  return statearr_374632
                                }();
                                if(inst_374578__$1) {
                                  var statearr_374633_374694 = state_374616__$1;
                                  statearr_374633_374694[1] = 17
                                }else {
                                  var statearr_374634_374695 = state_374616__$1;
                                  statearr_374634_374695[1] = 18
                                }
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_374617 === 12) {
                                  var inst_374604 = state_374616[2];
                                  var state_374616__$1 = state_374616;
                                  var statearr_374635_374696 = state_374616__$1;
                                  statearr_374635_374696[2] = inst_374604;
                                  statearr_374635_374696[1] = 9;
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_374617 === 13) {
                                    var inst_374566 = state_374616[11];
                                    var inst_374550 = state_374616[5];
                                    var inst_374569 = chatter_box.event_bus.get_channel.call(null, inst_374566);
                                    var state_374616__$1 = state_374616;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_374616__$1, 16, inst_374569, inst_374550)
                                  }else {
                                    if(state_val_374617 === 14) {
                                      var state_374616__$1 = state_374616;
                                      var statearr_374639_374697 = state_374616__$1;
                                      statearr_374639_374697[2] = null;
                                      statearr_374639_374697[1] = 15;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_374617 === 15) {
                                        var inst_374561 = state_374616[6];
                                        var inst_374560 = state_374616[7];
                                        var inst_374558 = state_374616[8];
                                        var inst_374559 = state_374616[9];
                                        var inst_374574 = state_374616[2];
                                        var inst_374575 = inst_374561 + 1;
                                        var tmp374636 = inst_374560;
                                        var tmp374637 = inst_374558;
                                        var tmp374638 = inst_374559;
                                        var inst_374558__$1 = tmp374637;
                                        var inst_374559__$1 = tmp374638;
                                        var inst_374560__$1 = tmp374636;
                                        var inst_374561__$1 = inst_374575;
                                        var state_374616__$1 = function() {
                                          var statearr_374640 = state_374616;
                                          statearr_374640[13] = inst_374574;
                                          statearr_374640[6] = inst_374561__$1;
                                          statearr_374640[7] = inst_374560__$1;
                                          statearr_374640[8] = inst_374558__$1;
                                          statearr_374640[9] = inst_374559__$1;
                                          return statearr_374640
                                        }();
                                        var statearr_374641_374698 = state_374616__$1;
                                        statearr_374641_374698[2] = null;
                                        statearr_374641_374698[1] = 8;
                                        return"\ufdd0:recur"
                                      }else {
                                        if(state_val_374617 === 16) {
                                          var inst_374571 = state_374616[2];
                                          var state_374616__$1 = state_374616;
                                          var statearr_374642_374699 = state_374616__$1;
                                          statearr_374642_374699[2] = inst_374571;
                                          statearr_374642_374699[1] = 15;
                                          return"\ufdd0:recur"
                                        }else {
                                          if(state_val_374617 === 17) {
                                            var inst_374578 = state_374616[12];
                                            var inst_374580 = cljs.core.chunked_seq_QMARK_.call(null, inst_374578);
                                            var state_374616__$1 = state_374616;
                                            if(inst_374580) {
                                              var statearr_374643_374700 = state_374616__$1;
                                              statearr_374643_374700[1] = 20
                                            }else {
                                              var statearr_374644_374701 = state_374616__$1;
                                              statearr_374644_374701[1] = 21
                                            }
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_374617 === 18) {
                                              var state_374616__$1 = state_374616;
                                              var statearr_374645_374702 = state_374616__$1;
                                              statearr_374645_374702[2] = null;
                                              statearr_374645_374702[1] = 19;
                                              return"\ufdd0:recur"
                                            }else {
                                              if(state_val_374617 === 19) {
                                                var inst_374602 = state_374616[2];
                                                var state_374616__$1 = state_374616;
                                                var statearr_374646_374703 = state_374616__$1;
                                                statearr_374646_374703[2] = inst_374602;
                                                statearr_374646_374703[1] = 12;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_374617 === 20) {
                                                  var inst_374578 = state_374616[12];
                                                  var inst_374582 = cljs.core.chunk_first.call(null, inst_374578);
                                                  var inst_374583 = cljs.core.chunk_rest.call(null, inst_374578);
                                                  var inst_374584 = cljs.core.count.call(null, inst_374582);
                                                  var inst_374558 = inst_374583;
                                                  var inst_374559 = inst_374582;
                                                  var inst_374560 = inst_374584;
                                                  var inst_374561 = 0;
                                                  var state_374616__$1 = function() {
                                                    var statearr_374647 = state_374616;
                                                    statearr_374647[6] = inst_374561;
                                                    statearr_374647[7] = inst_374560;
                                                    statearr_374647[8] = inst_374558;
                                                    statearr_374647[9] = inst_374559;
                                                    return statearr_374647
                                                  }();
                                                  var statearr_374648_374704 = state_374616__$1;
                                                  statearr_374648_374704[2] = null;
                                                  statearr_374648_374704[1] = 8;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_374617 === 21) {
                                                    var inst_374587 = state_374616[14];
                                                    var inst_374550 = state_374616[5];
                                                    var inst_374578 = state_374616[12];
                                                    var inst_374587__$1 = cljs.core.first.call(null, inst_374578);
                                                    var inst_374588 = chatter_box.event_bus.accept_message_QMARK_.call(null, inst_374587__$1, inst_374550);
                                                    var state_374616__$1 = function() {
                                                      var statearr_374649 = state_374616;
                                                      statearr_374649[14] = inst_374587__$1;
                                                      return statearr_374649
                                                    }();
                                                    if(cljs.core.truth_(inst_374588)) {
                                                      var statearr_374650_374705 = state_374616__$1;
                                                      statearr_374650_374705[1] = 23
                                                    }else {
                                                      var statearr_374651_374706 = state_374616__$1;
                                                      statearr_374651_374706[1] = 24
                                                    }
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if(state_val_374617 === 22) {
                                                      var inst_374599 = state_374616[2];
                                                      var state_374616__$1 = state_374616;
                                                      var statearr_374652_374707 = state_374616__$1;
                                                      statearr_374652_374707[2] = inst_374599;
                                                      statearr_374652_374707[1] = 19;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if(state_val_374617 === 23) {
                                                        var inst_374587 = state_374616[14];
                                                        var inst_374550 = state_374616[5];
                                                        var inst_374590 = chatter_box.event_bus.get_channel.call(null, inst_374587);
                                                        var state_374616__$1 = state_374616;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_374616__$1, 26, inst_374590, inst_374550)
                                                      }else {
                                                        if(state_val_374617 === 24) {
                                                          var state_374616__$1 = state_374616;
                                                          var statearr_374653_374708 = state_374616__$1;
                                                          statearr_374653_374708[2] = null;
                                                          statearr_374653_374708[1] = 25;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if(state_val_374617 === 25) {
                                                            var inst_374578 = state_374616[12];
                                                            var inst_374595 = state_374616[2];
                                                            var inst_374596 = cljs.core.next.call(null, inst_374578);
                                                            var inst_374558 = inst_374596;
                                                            var inst_374559 = null;
                                                            var inst_374560 = 0;
                                                            var inst_374561 = 0;
                                                            var state_374616__$1 = function() {
                                                              var statearr_374654 = state_374616;
                                                              statearr_374654[6] = inst_374561;
                                                              statearr_374654[7] = inst_374560;
                                                              statearr_374654[8] = inst_374558;
                                                              statearr_374654[9] = inst_374559;
                                                              statearr_374654[15] = inst_374595;
                                                              return statearr_374654
                                                            }();
                                                            var statearr_374655_374709 = state_374616__$1;
                                                            statearr_374655_374709[2] = null;
                                                            statearr_374655_374709[1] = 8;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if(state_val_374617 === 26) {
                                                              var inst_374592 = state_374616[2];
                                                              var state_374616__$1 = state_374616;
                                                              var statearr_374656_374710 = state_374616__$1;
                                                              statearr_374656_374710[2] = inst_374592;
                                                              statearr_374656_374710[1] = 25;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_374617 === 27) {
                                                                var inst_374608 = state_374616[2];
                                                                var inst_374550 = inst_374608;
                                                                var state_374616__$1 = function() {
                                                                  var statearr_374657 = state_374616;
                                                                  statearr_374657[5] = inst_374550;
                                                                  return statearr_374657
                                                                }();
                                                                var statearr_374658_374711 = state_374616__$1;
                                                                statearr_374658_374711[2] = null;
                                                                statearr_374658_374711[1] = 3;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5581__auto__) {
          return function() {
            var state_machine__5582__auto__ = null;
            var state_machine__5582__auto____0 = function() {
              var statearr_374660 = new Array(16);
              statearr_374660[0] = state_machine__5582__auto__;
              statearr_374660[1] = 1;
              return statearr_374660
            };
            var state_machine__5582__auto____1 = function(state_374616) {
              while(true) {
                var result__5583__auto__ = switch__5581__auto__.call(null, state_374616);
                if(result__5583__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__5583__auto__
                }
                break
              }
            };
            state_machine__5582__auto__ = function(state_374616) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5582__auto____0.call(this);
                case 1:
                  return state_machine__5582__auto____1.call(this, state_374616)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
            state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
            return state_machine__5582__auto__
          }()
        }(switch__5581__auto__)
      }();
      var state__5655__auto__ = function() {
        var statearr_374661 = f__5654__auto__.call(null);
        statearr_374661[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto___374683;
        return statearr_374661
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
    });
    return ch
  };
  var create_bus = function(var_args) {
    var components = null;
    if(arguments.length > 0) {
      components = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return create_bus__delegate.call(this, components)
  };
  create_bus.cljs$lang$maxFixedArity = 0;
  create_bus.cljs$lang$applyTo = function(arglist__374712) {
    var components = cljs.core.seq(arglist__374712);
    return create_bus__delegate(components)
  };
  create_bus.cljs$core$IFn$_invoke$arity$variadic = create_bus__delegate;
  return create_bus
}();
goog.provide("cljs.core.match");
goog.require("cljs.core");
cljs.core.match.backtrack = new Error;
goog.provide("chatter_box.login_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.login_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-success"], true), null], true);
chatter_box.login_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.login_view_component.user = cljs.core.atom.call(null, null);
chatter_box.login_view_component.create_login_view_component = function create_login_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.login_view_component.t333428 !== "undefined") {
  }else {
    goog.provide("chatter_box.login_view_component.t333428");
    chatter_box.login_view_component.t333428 = function(in_ch, create_login_view_component, meta333429) {
      this.in_ch = in_ch;
      this.create_login_view_component = create_login_view_component;
      this.meta333429 = meta333429;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.login_view_component.t333428.cljs$lang$type = true;
    chatter_box.login_view_component.t333428.cljs$lang$ctorStr = "chatter-box.login-view-component/t333428";
    chatter_box.login_view_component.t333428.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.login-view-component/t333428")
    };
    chatter_box.login_view_component.t333428.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.login_view_component.t333428.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.out_chan, out_ch);
      return chatter_box.login_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.login_view_component.t333428.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.login_view_component.valid_types).call(null, msg)
    };
    chatter_box.login_view_component.t333428.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.login_view_component.t333428.prototype.cljs$core$IMeta$_meta$arity$1 = function(_333430) {
      var self__ = this;
      return self__.meta333429
    };
    chatter_box.login_view_component.t333428.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_333430, meta333429__$1) {
      var self__ = this;
      return new chatter_box.login_view_component.t333428(self__.in_ch, self__.create_login_view_component, meta333429__$1)
    };
    chatter_box.login_view_component.__GT_t333428 = function __GT_t333428(in_ch__$1, create_login_view_component__$1, meta333429) {
      return new chatter_box.login_view_component.t333428(in_ch__$1, create_login_view_component__$1, meta333429)
    }
  }
  return new chatter_box.login_view_component.t333428(in_ch, create_login_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/login.html[".container"]') == null) {
  var vec__333432_333437 = enfocus.core.replace_ids.call(null, "en333431_", '\x3cdiv id\x3d"login-container" class\x3d"container"\x3e \n \x3cform id\x3d"login-form" name\x3d"login-form" class\x3d"form-signin"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3ePlease sign in\x3c/h2\x3e \n  \x3cinput id\x3d"login-username" name\x3d"username" type\x3d"text" class\x3d"form-control" placeholder\x3d"Email address" autofocus\x3d"" /\x3e \n  \x3cinput id\x3d"login-password" name\x3d"password" type\x3d"password" class\x3d"form-control" placeholder\x3d"Password" /\x3e \n  \x3ca id\x3d"login-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"chat_window.html" type\x3d"submit"\x3eSign in \x3c/a\x3e\n  \x3ca id\x3d"user-nav-btn" class\x3d"btn btn-block" href\x3d"create_user.html" type\x3d"submit"\x3eNew User  \x3c/a\x3e\n \x3c/form\x3e\n\x3c/div\x3e');
  var sym__4174__auto___333438 = cljs.core.nth.call(null, vec__333432_333437, 0, null);
  var txt__4175__auto___333439 = cljs.core.nth.call(null, vec__333432_333437, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/login.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___333438, txt__4175__auto___333439], true))
}else {
}
chatter_box.login_view_component.login_page = function login_page() {
  var vec__333436 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/login.html[".container"]')
  }.call(null);
  var id_sym333433 = cljs.core.nth.call(null, vec__333436, 0, null);
  var pnod333434 = cljs.core.nth.call(null, vec__333436, 1, null);
  var pnod333434__$1 = enfocus.core.create_hidden_dom.call(null, pnod333434);
  enfocus.core.i_at.call(null, id_sym333433, pnod333434__$1);
  enfocus.core.reset_ids.call(null, id_sym333433, pnod333434__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod333434__$1)
};
chatter_box.login_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, "body", enfocus.core.append.call(null, chatter_box.login_view_component.login_page.call(null)), "#login-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.login_view_component.login)), "#user-nav-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.login_view_component.nav_create_user)))
};
chatter_box.login_view_component.navigate = function navigate(p__333440) {
  var map__333442 = p__333440;
  var map__333442__$1 = cljs.core.seq_QMARK_.call(null, map__333442) ? cljs.core.apply.call(null, cljs.core.hash_map, map__333442) : map__333442;
  var page = cljs.core.get.call(null, map__333442__$1, "\ufdd0:key");
  if(cljs.core._EQ_.call(null, page, "\ufdd0:login")) {
    return enfocus.core.at.call(null, "#login-container", enfocus.core.set_style.call(null, "\ufdd0:display", ""))
  }else {
    return enfocus.core.at.call(null, "#login-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"))
  }
};
chatter_box.login_view_component.login = function login() {
  var form = enfocus.core.from.call(null, "#login-form", enfocus.core.read_form.call(null));
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.login_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form), (new cljs.core.Keyword("\ufdd0:password")).call(null, form)))
};
chatter_box.login_view_component.logout = function logout() {
  return cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.user, null)
};
chatter_box.login_view_component.login_successfull = function login_successfull(usr) {
  cljs.core.reset_BANG_.call(null, chatter_box.login_view_component.user, usr);
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", null))
};
chatter_box.login_view_component.nav_create_user = function nav_create_user() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.login_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:create-user", null))
};
chatter_box.login_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_334001) {
        var state_val_334002 = state_334001[1];
        if(state_val_334002 === 32) {
          try {
            try {
              var state_334001__$1 = state_334001;
              if("\ufdd0:else") {
                var statearr_334007_334261 = state_334001__$1;
                statearr_334007_334261[1] = 34
              }else {
                var statearr_334008_334262 = state_334001__$1;
                statearr_334008_334262[1] = 35
              }
              return"\ufdd0:recur"
            }catch(e334005) {
              if(e334005 instanceof Error) {
                var ex__5575__auto__ = e334005;
                var statearr_334006_334263 = state_334001;
                statearr_334006_334263[1] = 17;
                statearr_334006_334263[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e334005;
                }else {
                  return null
                }
              }
            }
          }catch(e334003) {
            if(e334003 instanceof Error) {
              var ex__5575__auto__ = e334003;
              var statearr_334004_334264 = state_334001;
              statearr_334004_334264[1] = 26;
              statearr_334004_334264[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e334003;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_334002 === 64) {
            try {
              var inst_333962 = function() {
                throw cljs.core.match.backtrack;
              }();
              var state_334001__$1 = state_334001;
              var statearr_334011_334265 = state_334001__$1;
              statearr_334011_334265[2] = inst_333962;
              statearr_334011_334265[1] = 66;
              return"\ufdd0:recur"
            }catch(e334009) {
              if(e334009 instanceof Error) {
                var ex__5575__auto__ = e334009;
                var statearr_334010_334266 = state_334001;
                statearr_334010_334266[1] = 12;
                statearr_334010_334266[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e334009;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_334002 === 1) {
              var state_334001__$1 = state_334001;
              var statearr_334012_334267 = state_334001__$1;
              statearr_334012_334267[2] = null;
              statearr_334012_334267[1] = 2;
              return"\ufdd0:recur"
            }else {
              if(state_val_334002 === 33) {
                try {
                  try {
                    var inst_333906 = state_334001[2];
                    var state_334001__$1 = state_334001;
                    var statearr_334017_334268 = state_334001__$1;
                    statearr_334017_334268[2] = inst_333906;
                    statearr_334017_334268[1] = 25;
                    return"\ufdd0:recur"
                  }catch(e334015) {
                    if(e334015 instanceof Error) {
                      var ex__5575__auto__ = e334015;
                      var statearr_334016_334269 = state_334001;
                      statearr_334016_334269[1] = 17;
                      statearr_334016_334269[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e334015;
                      }else {
                        return null
                      }
                    }
                  }
                }catch(e334013) {
                  if(e334013 instanceof Error) {
                    var ex__5575__auto__ = e334013;
                    var statearr_334014_334270 = state_334001;
                    statearr_334014_334270[1] = 26;
                    statearr_334014_334270[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e334013;
                    }else {
                      return null
                    }
                  }
                }
              }else {
                if(state_val_334002 === 65) {
                  try {
                    var inst_333959 = state_334001[5];
                    var inst_333964 = function() {
                      throw inst_333959;
                    }();
                    var state_334001__$1 = state_334001;
                    var statearr_334020_334271 = state_334001__$1;
                    statearr_334020_334271[2] = inst_333964;
                    statearr_334020_334271[1] = 66;
                    return"\ufdd0:recur"
                  }catch(e334018) {
                    if(e334018 instanceof Error) {
                      var ex__5575__auto__ = e334018;
                      var statearr_334019_334272 = state_334001;
                      statearr_334019_334272[1] = 12;
                      statearr_334019_334272[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e334018;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_334002 === 2) {
                    var state_334001__$1 = state_334001;
                    if(true) {
                      var statearr_334021_334273 = state_334001__$1;
                      statearr_334021_334273[1] = 4
                    }else {
                      var statearr_334022_334274 = state_334001__$1;
                      statearr_334022_334274[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_334002 === 34) {
                      try {
                        try {
                          var inst_333901 = function() {
                            throw cljs.core.match.backtrack;
                          }();
                          var state_334001__$1 = state_334001;
                          var statearr_334027_334275 = state_334001__$1;
                          statearr_334027_334275[2] = inst_333901;
                          statearr_334027_334275[1] = 36;
                          return"\ufdd0:recur"
                        }catch(e334025) {
                          if(e334025 instanceof Error) {
                            var ex__5575__auto__ = e334025;
                            var statearr_334026_334276 = state_334001;
                            statearr_334026_334276[1] = 17;
                            statearr_334026_334276[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e334025;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e334023) {
                        if(e334023 instanceof Error) {
                          var ex__5575__auto__ = e334023;
                          var statearr_334024_334277 = state_334001;
                          statearr_334024_334277[1] = 26;
                          statearr_334024_334277[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e334023;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_334002 === 66) {
                        try {
                          var inst_333966 = state_334001[2];
                          var state_334001__$1 = state_334001;
                          var statearr_334030_334278 = state_334001__$1;
                          statearr_334030_334278[2] = inst_333966;
                          statearr_334030_334278[1] = 62;
                          return"\ufdd0:recur"
                        }catch(e334028) {
                          if(e334028 instanceof Error) {
                            var ex__5575__auto__ = e334028;
                            var statearr_334029_334279 = state_334001;
                            statearr_334029_334279[1] = 12;
                            statearr_334029_334279[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e334028;
                            }else {
                              return null
                            }
                          }
                        }
                      }else {
                        if(state_val_334002 === 3) {
                          var inst_333999 = state_334001[2];
                          var state_334001__$1 = state_334001;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_334001__$1, inst_333999)
                        }else {
                          if(state_val_334002 === 35) {
                            try {
                              try {
                                var state_334001__$1 = state_334001;
                                var statearr_334035_334280 = state_334001__$1;
                                statearr_334035_334280[2] = null;
                                statearr_334035_334280[1] = 36;
                                return"\ufdd0:recur"
                              }catch(e334033) {
                                if(e334033 instanceof Error) {
                                  var ex__5575__auto__ = e334033;
                                  var statearr_334034_334281 = state_334001;
                                  statearr_334034_334281[1] = 17;
                                  statearr_334034_334281[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e334033;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }catch(e334031) {
                              if(e334031 instanceof Error) {
                                var ex__5575__auto__ = e334031;
                                var statearr_334032_334282 = state_334001;
                                statearr_334032_334282[1] = 26;
                                statearr_334032_334282[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e334031;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_334002 === 67) {
                              try {
                                try {
                                  var inst_333864 = state_334001[6];
                                  var inst_333969 = cljs.core._EQ_.call(null, inst_333864, "\ufdd0:init");
                                  var state_334001__$1 = state_334001;
                                  if(inst_333969) {
                                    var statearr_334040_334283 = state_334001__$1;
                                    statearr_334040_334283[1] = 68
                                  }else {
                                    var statearr_334041_334284 = state_334001__$1;
                                    statearr_334041_334284[1] = 69
                                  }
                                  return"\ufdd0:recur"
                                }catch(e334038) {
                                  if(e334038 instanceof Error) {
                                    var ex__5575__auto__ = e334038;
                                    var statearr_334039_334285 = state_334001;
                                    statearr_334039_334285[1] = 12;
                                    statearr_334039_334285[2] = ex__5575__auto__;
                                    return"\ufdd0:recur"
                                  }else {
                                    if("\ufdd0:else") {
                                      throw e334038;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }catch(e334036) {
                                if(e334036 instanceof Error) {
                                  var ex__5575__auto__ = e334036;
                                  var statearr_334037_334286 = state_334001;
                                  statearr_334037_334286[1] = 63;
                                  statearr_334037_334286[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e334036;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_334002 === 4) {
                                var state_334001__$1 = state_334001;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_334001__$1, 7, in_ch)
                              }else {
                                if(state_val_334002 === 36) {
                                  try {
                                    try {
                                      var inst_333904 = state_334001[2];
                                      var state_334001__$1 = state_334001;
                                      var statearr_334046_334287 = state_334001__$1;
                                      statearr_334046_334287[2] = inst_333904;
                                      statearr_334046_334287[1] = 33;
                                      return"\ufdd0:recur"
                                    }catch(e334044) {
                                      if(e334044 instanceof Error) {
                                        var ex__5575__auto__ = e334044;
                                        var statearr_334045_334288 = state_334001;
                                        statearr_334045_334288[1] = 17;
                                        statearr_334045_334288[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e334044;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e334042) {
                                    if(e334042 instanceof Error) {
                                      var ex__5575__auto__ = e334042;
                                      var statearr_334043_334289 = state_334001;
                                      statearr_334043_334289[1] = 26;
                                      statearr_334043_334289[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e334042;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_334002 === 68) {
                                    try {
                                      try {
                                        var inst_333971 = chatter_box.login_view_component.initialize.call(null);
                                        var state_334001__$1 = state_334001;
                                        var statearr_334051_334290 = state_334001__$1;
                                        statearr_334051_334290[2] = inst_333971;
                                        statearr_334051_334290[1] = 70;
                                        return"\ufdd0:recur"
                                      }catch(e334049) {
                                        if(e334049 instanceof Error) {
                                          var ex__5575__auto__ = e334049;
                                          var statearr_334050_334291 = state_334001;
                                          statearr_334050_334291[1] = 12;
                                          statearr_334050_334291[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e334049;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }catch(e334047) {
                                      if(e334047 instanceof Error) {
                                        var ex__5575__auto__ = e334047;
                                        var statearr_334048_334292 = state_334001;
                                        statearr_334048_334292[1] = 63;
                                        statearr_334048_334292[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e334047;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_334002 === 5) {
                                      var state_334001__$1 = state_334001;
                                      var statearr_334052_334293 = state_334001__$1;
                                      statearr_334052_334293[2] = null;
                                      statearr_334052_334293[1] = 6;
                                      return"\ufdd0:recur"
                                    }else {
                                      if(state_val_334002 === 37) {
                                        try {
                                          var inst_333862 = state_334001[7];
                                          var inst_333912 = chatter_box.login_view_component.navigate.call(null, inst_333862);
                                          var state_334001__$1 = state_334001;
                                          var statearr_334055_334294 = state_334001__$1;
                                          statearr_334055_334294[2] = inst_333912;
                                          statearr_334055_334294[1] = 39;
                                          return"\ufdd0:recur"
                                        }catch(e334053) {
                                          if(e334053 instanceof Error) {
                                            var ex__5575__auto__ = e334053;
                                            var statearr_334054_334295 = state_334001;
                                            statearr_334054_334295[1] = 17;
                                            statearr_334054_334295[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e334053;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_334002 === 69) {
                                          try {
                                            try {
                                              var state_334001__$1 = state_334001;
                                              if("\ufdd0:else") {
                                                var statearr_334060_334296 = state_334001__$1;
                                                statearr_334060_334296[1] = 71
                                              }else {
                                                var statearr_334061_334297 = state_334001__$1;
                                                statearr_334061_334297[1] = 72
                                              }
                                              return"\ufdd0:recur"
                                            }catch(e334058) {
                                              if(e334058 instanceof Error) {
                                                var ex__5575__auto__ = e334058;
                                                var statearr_334059_334298 = state_334001;
                                                statearr_334059_334298[1] = 12;
                                                statearr_334059_334298[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e334058;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e334056) {
                                            if(e334056 instanceof Error) {
                                              var ex__5575__auto__ = e334056;
                                              var statearr_334057_334299 = state_334001;
                                              statearr_334057_334299[1] = 63;
                                              statearr_334057_334299[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e334056;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_334002 === 6) {
                                            var inst_333997 = state_334001[2];
                                            var state_334001__$1 = state_334001;
                                            var statearr_334062_334300 = state_334001__$1;
                                            statearr_334062_334300[2] = inst_333997;
                                            statearr_334062_334300[1] = 3;
                                            return"\ufdd0:recur"
                                          }else {
                                            if(state_val_334002 === 38) {
                                              try {
                                                var state_334001__$1 = state_334001;
                                                if("\ufdd0:else") {
                                                  var statearr_334065_334301 = state_334001__$1;
                                                  statearr_334065_334301[1] = 40
                                                }else {
                                                  var statearr_334066_334302 = state_334001__$1;
                                                  statearr_334066_334302[1] = 41
                                                }
                                                return"\ufdd0:recur"
                                              }catch(e334063) {
                                                if(e334063 instanceof Error) {
                                                  var ex__5575__auto__ = e334063;
                                                  var statearr_334064_334303 = state_334001;
                                                  statearr_334064_334303[1] = 17;
                                                  statearr_334064_334303[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e334063;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_334002 === 70) {
                                                try {
                                                  try {
                                                    var inst_333979 = state_334001[2];
                                                    var state_334001__$1 = state_334001;
                                                    var statearr_334071_334304 = state_334001__$1;
                                                    statearr_334071_334304[2] = inst_333979;
                                                    statearr_334071_334304[1] = 62;
                                                    return"\ufdd0:recur"
                                                  }catch(e334069) {
                                                    if(e334069 instanceof Error) {
                                                      var ex__5575__auto__ = e334069;
                                                      var statearr_334070_334305 = state_334001;
                                                      statearr_334070_334305[1] = 12;
                                                      statearr_334070_334305[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e334069;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }catch(e334067) {
                                                  if(e334067 instanceof Error) {
                                                    var ex__5575__auto__ = e334067;
                                                    var statearr_334068_334306 = state_334001;
                                                    statearr_334068_334306[1] = 63;
                                                    statearr_334068_334306[2] = ex__5575__auto__;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if("\ufdd0:else") {
                                                      throw e334067;
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }else {
                                                if(state_val_334002 === 7) {
                                                  var inst_333856 = state_334001[8];
                                                  var inst_333856__$1 = state_334001[2];
                                                  var inst_333857 = cljs.core.seq_QMARK_.call(null, inst_333856__$1);
                                                  var state_334001__$1 = function() {
                                                    var statearr_334072 = state_334001;
                                                    statearr_334072[8] = inst_333856__$1;
                                                    return statearr_334072
                                                  }();
                                                  if(inst_333857) {
                                                    var statearr_334073_334307 = state_334001__$1;
                                                    statearr_334073_334307[1] = 8
                                                  }else {
                                                    var statearr_334074_334308 = state_334001__$1;
                                                    statearr_334074_334308[1] = 9
                                                  }
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if(state_val_334002 === 39) {
                                                    try {
                                                      var inst_333920 = state_334001[2];
                                                      var state_334001__$1 = state_334001;
                                                      var statearr_334077_334309 = state_334001__$1;
                                                      statearr_334077_334309[2] = inst_333920;
                                                      statearr_334077_334309[1] = 24;
                                                      return"\ufdd0:recur"
                                                    }catch(e334075) {
                                                      if(e334075 instanceof Error) {
                                                        var ex__5575__auto__ = e334075;
                                                        var statearr_334076_334310 = state_334001;
                                                        statearr_334076_334310[1] = 17;
                                                        statearr_334076_334310[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e334075;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_334002 === 71) {
                                                      try {
                                                        try {
                                                          var inst_333974 = function() {
                                                            throw cljs.core.match.backtrack;
                                                          }();
                                                          var state_334001__$1 = state_334001;
                                                          var statearr_334082_334311 = state_334001__$1;
                                                          statearr_334082_334311[2] = inst_333974;
                                                          statearr_334082_334311[1] = 73;
                                                          return"\ufdd0:recur"
                                                        }catch(e334080) {
                                                          if(e334080 instanceof Error) {
                                                            var ex__5575__auto__ = e334080;
                                                            var statearr_334081_334312 = state_334001;
                                                            statearr_334081_334312[1] = 12;
                                                            statearr_334081_334312[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e334080;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }catch(e334078) {
                                                        if(e334078 instanceof Error) {
                                                          var ex__5575__auto__ = e334078;
                                                          var statearr_334079_334313 = state_334001;
                                                          statearr_334079_334313[1] = 63;
                                                          statearr_334079_334313[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e334078;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_334002 === 8) {
                                                        var inst_333856 = state_334001[8];
                                                        var inst_333859 = cljs.core.apply.call(null, cljs.core.hash_map, inst_333856);
                                                        var state_334001__$1 = state_334001;
                                                        var statearr_334083_334314 = state_334001__$1;
                                                        statearr_334083_334314[2] = inst_333859;
                                                        statearr_334083_334314[1] = 10;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_334002 === 40) {
                                                          try {
                                                            var inst_333915 = function() {
                                                              throw cljs.core.match.backtrack;
                                                            }();
                                                            var state_334001__$1 = state_334001;
                                                            var statearr_334086_334315 = state_334001__$1;
                                                            statearr_334086_334315[2] = inst_333915;
                                                            statearr_334086_334315[1] = 42;
                                                            return"\ufdd0:recur"
                                                          }catch(e334084) {
                                                            if(e334084 instanceof Error) {
                                                              var ex__5575__auto__ = e334084;
                                                              var statearr_334085_334316 = state_334001;
                                                              statearr_334085_334316[1] = 17;
                                                              statearr_334085_334316[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e334084;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_334002 === 72) {
                                                            try {
                                                              try {
                                                                var state_334001__$1 = state_334001;
                                                                var statearr_334091_334317 = state_334001__$1;
                                                                statearr_334091_334317[2] = null;
                                                                statearr_334091_334317[1] = 73;
                                                                return"\ufdd0:recur"
                                                              }catch(e334089) {
                                                                if(e334089 instanceof Error) {
                                                                  var ex__5575__auto__ = e334089;
                                                                  var statearr_334090_334318 = state_334001;
                                                                  statearr_334090_334318[1] = 12;
                                                                  statearr_334090_334318[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e334089;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }catch(e334087) {
                                                              if(e334087 instanceof Error) {
                                                                var ex__5575__auto__ = e334087;
                                                                var statearr_334088_334319 = state_334001;
                                                                statearr_334088_334319[1] = 63;
                                                                statearr_334088_334319[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e334087;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_334002 === 9) {
                                                              var inst_333856 = state_334001[8];
                                                              var state_334001__$1 = state_334001;
                                                              var statearr_334092_334320 = state_334001__$1;
                                                              statearr_334092_334320[2] = inst_333856;
                                                              statearr_334092_334320[1] = 10;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if(state_val_334002 === 41) {
                                                                try {
                                                                  var state_334001__$1 = state_334001;
                                                                  var statearr_334095_334321 = state_334001__$1;
                                                                  statearr_334095_334321[2] = null;
                                                                  statearr_334095_334321[1] = 42;
                                                                  return"\ufdd0:recur"
                                                                }catch(e334093) {
                                                                  if(e334093 instanceof Error) {
                                                                    var ex__5575__auto__ = e334093;
                                                                    var statearr_334094_334322 = state_334001;
                                                                    statearr_334094_334322[1] = 17;
                                                                    statearr_334094_334322[2] = ex__5575__auto__;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if("\ufdd0:else") {
                                                                      throw e334093;
                                                                    }else {
                                                                      return null
                                                                    }
                                                                  }
                                                                }
                                                              }else {
                                                                if(state_val_334002 === 73) {
                                                                  try {
                                                                    try {
                                                                      var inst_333977 = state_334001[2];
                                                                      var state_334001__$1 = state_334001;
                                                                      var statearr_334100_334323 = state_334001__$1;
                                                                      statearr_334100_334323[2] = inst_333977;
                                                                      statearr_334100_334323[1] = 70;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e334098) {
                                                                      if(e334098 instanceof Error) {
                                                                        var ex__5575__auto__ = e334098;
                                                                        var statearr_334099_334324 = state_334001;
                                                                        statearr_334099_334324[1] = 12;
                                                                        statearr_334099_334324[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e334098;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e334096) {
                                                                    if(e334096 instanceof Error) {
                                                                      var ex__5575__auto__ = e334096;
                                                                      var statearr_334097_334325 = state_334001;
                                                                      statearr_334097_334325[1] = 63;
                                                                      statearr_334097_334325[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e334096;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_334002 === 10) {
                                                                    var inst_333862 = state_334001[7];
                                                                    var inst_333862__$1 = state_334001[2];
                                                                    var inst_333863 = cljs.core.get.call(null, inst_333862__$1, "\ufdd0:area");
                                                                    var inst_333864 = cljs.core.get.call(null, inst_333862__$1, "\ufdd0:key");
                                                                    var inst_333865 = cljs.core.get.call(null, inst_333862__$1, "\ufdd0:data");
                                                                    var state_334001__$1 = function() {
                                                                      var statearr_334101 = state_334001;
                                                                      statearr_334101[6] = inst_333864;
                                                                      statearr_334101[9] = inst_333865;
                                                                      statearr_334101[10] = inst_333863;
                                                                      statearr_334101[7] = inst_333862__$1;
                                                                      return statearr_334101
                                                                    }();
                                                                    var statearr_334102_334326 = state_334001__$1;
                                                                    statearr_334102_334326[2] = null;
                                                                    statearr_334102_334326[1] = 43;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if(state_val_334002 === 42) {
                                                                      try {
                                                                        var inst_333918 = state_334001[2];
                                                                        var state_334001__$1 = state_334001;
                                                                        var statearr_334105_334327 = state_334001__$1;
                                                                        statearr_334105_334327[2] = inst_333918;
                                                                        statearr_334105_334327[1] = 39;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e334103) {
                                                                        if(e334103 instanceof Error) {
                                                                          var ex__5575__auto__ = e334103;
                                                                          var statearr_334104_334328 = state_334001;
                                                                          statearr_334104_334328[1] = 17;
                                                                          statearr_334104_334328[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e334103;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_334002 === 74) {
                                                                        try {
                                                                          var inst_333984 = function() {
                                                                            throw cljs.core.match.backtrack;
                                                                          }();
                                                                          var state_334001__$1 = state_334001;
                                                                          var statearr_334108_334329 = state_334001__$1;
                                                                          statearr_334108_334329[2] = inst_333984;
                                                                          statearr_334108_334329[1] = 76;
                                                                          return"\ufdd0:recur"
                                                                        }catch(e334106) {
                                                                          if(e334106 instanceof Error) {
                                                                            var ex__5575__auto__ = e334106;
                                                                            var statearr_334107_334330 = state_334001;
                                                                            statearr_334107_334330[1] = 12;
                                                                            statearr_334107_334330[2] = ex__5575__auto__;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if("\ufdd0:else") {
                                                                              throw e334106;
                                                                            }else {
                                                                              return null
                                                                            }
                                                                          }
                                                                        }
                                                                      }else {
                                                                        if(state_val_334002 === 11) {
                                                                          var inst_333993 = state_334001[2];
                                                                          var state_334001__$1 = function() {
                                                                            var statearr_334109 = state_334001;
                                                                            statearr_334109[11] = inst_333993;
                                                                            return statearr_334109
                                                                          }();
                                                                          var statearr_334110_334331 = state_334001__$1;
                                                                          statearr_334110_334331[2] = null;
                                                                          statearr_334110_334331[1] = 2;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if(state_val_334002 === 43) {
                                                                            try {
                                                                              var inst_333863 = state_334001[10];
                                                                              var inst_333931 = cljs.core._EQ_.call(null, inst_333863, "\ufdd0:security");
                                                                              var state_334001__$1 = state_334001;
                                                                              if(inst_333931) {
                                                                                var statearr_334113_334332 = state_334001__$1;
                                                                                statearr_334113_334332[1] = 44
                                                                              }else {
                                                                                var statearr_334114_334333 = state_334001__$1;
                                                                                statearr_334114_334333[1] = 45
                                                                              }
                                                                              return"\ufdd0:recur"
                                                                            }catch(e334111) {
                                                                              if(e334111 instanceof Error) {
                                                                                var ex__5575__auto__ = e334111;
                                                                                var statearr_334112_334334 = state_334001;
                                                                                statearr_334112_334334[1] = 12;
                                                                                statearr_334112_334334[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e334111;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_334002 === 75) {
                                                                              try {
                                                                                var state_334001__$1 = state_334001;
                                                                                var statearr_334117_334335 = state_334001__$1;
                                                                                statearr_334117_334335[2] = null;
                                                                                statearr_334117_334335[1] = 76;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e334115) {
                                                                                if(e334115 instanceof Error) {
                                                                                  var ex__5575__auto__ = e334115;
                                                                                  var statearr_334116_334336 = state_334001;
                                                                                  statearr_334116_334336[1] = 12;
                                                                                  statearr_334116_334336[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e334115;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_334002 === 12) {
                                                                                var inst_333869 = state_334001[12];
                                                                                var inst_333869__$1 = state_334001[2];
                                                                                var inst_333870 = inst_333869__$1 === cljs.core.match.backtrack;
                                                                                var state_334001__$1 = function() {
                                                                                  var statearr_334118 = state_334001;
                                                                                  statearr_334118[12] = inst_333869__$1;
                                                                                  return statearr_334118
                                                                                }();
                                                                                if(cljs.core.truth_(inst_333870)) {
                                                                                  var statearr_334119_334337 = state_334001__$1;
                                                                                  statearr_334119_334337[1] = 13
                                                                                }else {
                                                                                  var statearr_334120_334338 = state_334001__$1;
                                                                                  statearr_334120_334338[1] = 14
                                                                                }
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_334002 === 44) {
                                                                                  try {
                                                                                    var state_334001__$1 = state_334001;
                                                                                    var statearr_334123_334339 = state_334001__$1;
                                                                                    statearr_334123_334339[2] = null;
                                                                                    statearr_334123_334339[1] = 52;
                                                                                    return"\ufdd0:recur"
                                                                                  }catch(e334121) {
                                                                                    if(e334121 instanceof Error) {
                                                                                      var ex__5575__auto__ = e334121;
                                                                                      var statearr_334122_334340 = state_334001;
                                                                                      statearr_334122_334340[1] = 12;
                                                                                      statearr_334122_334340[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e334121;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_334002 === 76) {
                                                                                    try {
                                                                                      var inst_333987 = state_334001[2];
                                                                                      var state_334001__$1 = state_334001;
                                                                                      var statearr_334126_334341 = state_334001__$1;
                                                                                      statearr_334126_334341[2] = inst_333987;
                                                                                      statearr_334126_334341[1] = 61;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e334124) {
                                                                                      if(e334124 instanceof Error) {
                                                                                        var ex__5575__auto__ = e334124;
                                                                                        var statearr_334125_334342 = state_334001;
                                                                                        statearr_334125_334342[1] = 12;
                                                                                        statearr_334125_334342[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e334124;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_334002 === 13) {
                                                                                      var state_334001__$1 = state_334001;
                                                                                      var statearr_334127_334343 = state_334001__$1;
                                                                                      statearr_334127_334343[2] = null;
                                                                                      statearr_334127_334343[1] = 21;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if(state_val_334002 === 45) {
                                                                                        try {
                                                                                          var inst_333863 = state_334001[10];
                                                                                          var inst_333957 = cljs.core._EQ_.call(null, inst_333863, "\ufdd0:view");
                                                                                          var state_334001__$1 = state_334001;
                                                                                          if(inst_333957) {
                                                                                            var statearr_334130_334344 = state_334001__$1;
                                                                                            statearr_334130_334344[1] = 59
                                                                                          }else {
                                                                                            var statearr_334131_334345 = state_334001__$1;
                                                                                            statearr_334131_334345[1] = 60
                                                                                          }
                                                                                          return"\ufdd0:recur"
                                                                                        }catch(e334128) {
                                                                                          if(e334128 instanceof Error) {
                                                                                            var ex__5575__auto__ = e334128;
                                                                                            var statearr_334129_334346 = state_334001;
                                                                                            statearr_334129_334346[1] = 12;
                                                                                            statearr_334129_334346[2] = ex__5575__auto__;
                                                                                            return"\ufdd0:recur"
                                                                                          }else {
                                                                                            if("\ufdd0:else") {
                                                                                              throw e334128;
                                                                                            }else {
                                                                                              return null
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }else {
                                                                                        if(state_val_334002 === 14) {
                                                                                          var inst_333869 = state_334001[12];
                                                                                          var inst_333926 = function() {
                                                                                            throw inst_333869;
                                                                                          }();
                                                                                          var state_334001__$1 = state_334001;
                                                                                          var statearr_334132_334347 = state_334001__$1;
                                                                                          statearr_334132_334347[2] = inst_333926;
                                                                                          statearr_334132_334347[1] = 15;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if(state_val_334002 === 46) {
                                                                                            try {
                                                                                              var inst_333991 = state_334001[2];
                                                                                              var state_334001__$1 = state_334001;
                                                                                              var statearr_334135_334348 = state_334001__$1;
                                                                                              statearr_334135_334348[2] = inst_333991;
                                                                                              statearr_334135_334348[1] = 11;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e334133) {
                                                                                              if(e334133 instanceof Error) {
                                                                                                var ex__5575__auto__ = e334133;
                                                                                                var statearr_334134_334349 = state_334001;
                                                                                                statearr_334134_334349[1] = 12;
                                                                                                statearr_334134_334349[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e334133;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_334002 === 15) {
                                                                                              var inst_333928 = state_334001[2];
                                                                                              var state_334001__$1 = state_334001;
                                                                                              var statearr_334136_334350 = state_334001__$1;
                                                                                              statearr_334136_334350[2] = inst_333928;
                                                                                              statearr_334136_334350[1] = 11;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if(state_val_334002 === 47) {
                                                                                                try {
                                                                                                  var inst_333955 = state_334001[2];
                                                                                                  var state_334001__$1 = state_334001;
                                                                                                  var statearr_334139_334351 = state_334001__$1;
                                                                                                  statearr_334139_334351[2] = inst_333955;
                                                                                                  statearr_334139_334351[1] = 46;
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e334137) {
                                                                                                  if(e334137 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e334137;
                                                                                                    var statearr_334138_334352 = state_334001;
                                                                                                    statearr_334138_334352[1] = 12;
                                                                                                    statearr_334138_334352[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e334137;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }else {
                                                                                                if(state_val_334002 === 16) {
                                                                                                  var inst_333924 = state_334001[2];
                                                                                                  var state_334001__$1 = state_334001;
                                                                                                  var statearr_334140_334353 = state_334001__$1;
                                                                                                  statearr_334140_334353[2] = inst_333924;
                                                                                                  statearr_334140_334353[1] = 15;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if(state_val_334002 === 48) {
                                                                                                    try {
                                                                                                      var inst_333933 = state_334001[13];
                                                                                                      var inst_333933__$1 = state_334001[2];
                                                                                                      var inst_333934 = inst_333933__$1 === cljs.core.match.backtrack;
                                                                                                      var state_334001__$1 = function() {
                                                                                                        var statearr_334143 = state_334001;
                                                                                                        statearr_334143[13] = inst_333933__$1;
                                                                                                        return statearr_334143
                                                                                                      }();
                                                                                                      if(cljs.core.truth_(inst_333934)) {
                                                                                                        var statearr_334144_334354 = state_334001__$1;
                                                                                                        statearr_334144_334354[1] = 49
                                                                                                      }else {
                                                                                                        var statearr_334145_334355 = state_334001__$1;
                                                                                                        statearr_334145_334355[1] = 50
                                                                                                      }
                                                                                                      return"\ufdd0:recur"
                                                                                                    }catch(e334141) {
                                                                                                      if(e334141 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e334141;
                                                                                                        var statearr_334142_334356 = state_334001;
                                                                                                        statearr_334142_334356[1] = 12;
                                                                                                        statearr_334142_334356[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e334141;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_334002 === 17) {
                                                                                                      var inst_333872 = state_334001[14];
                                                                                                      var inst_333872__$1 = state_334001[2];
                                                                                                      var inst_333873 = inst_333872__$1 === cljs.core.match.backtrack;
                                                                                                      var state_334001__$1 = function() {
                                                                                                        var statearr_334146 = state_334001;
                                                                                                        statearr_334146[14] = inst_333872__$1;
                                                                                                        return statearr_334146
                                                                                                      }();
                                                                                                      if(cljs.core.truth_(inst_333873)) {
                                                                                                        var statearr_334147_334357 = state_334001__$1;
                                                                                                        statearr_334147_334357[1] = 18
                                                                                                      }else {
                                                                                                        var statearr_334148_334358 = state_334001__$1;
                                                                                                        statearr_334148_334358[1] = 19
                                                                                                      }
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if(state_val_334002 === 49) {
                                                                                                        try {
                                                                                                          var inst_333936 = function() {
                                                                                                            throw cljs.core.match.backtrack;
                                                                                                          }();
                                                                                                          var state_334001__$1 = state_334001;
                                                                                                          var statearr_334151_334359 = state_334001__$1;
                                                                                                          statearr_334151_334359[2] = inst_333936;
                                                                                                          statearr_334151_334359[1] = 51;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e334149) {
                                                                                                          if(e334149 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e334149;
                                                                                                            var statearr_334150_334360 = state_334001;
                                                                                                            statearr_334150_334360[1] = 12;
                                                                                                            statearr_334150_334360[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e334149;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }else {
                                                                                                        if(state_val_334002 === 18) {
                                                                                                          var inst_333864 = state_334001[6];
                                                                                                          var inst_333863 = state_334001[10];
                                                                                                          var inst_333875 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_333863), cljs.core.str(" "), cljs.core.str(inst_333864)].join("");
                                                                                                          var inst_333876 = new Error(inst_333875);
                                                                                                          var inst_333877 = function() {
                                                                                                            throw inst_333876;
                                                                                                          }();
                                                                                                          var state_334001__$1 = state_334001;
                                                                                                          var statearr_334152_334361 = state_334001__$1;
                                                                                                          statearr_334152_334361[2] = inst_333877;
                                                                                                          statearr_334152_334361[1] = 20;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if(state_val_334002 === 50) {
                                                                                                            try {
                                                                                                              var inst_333933 = state_334001[13];
                                                                                                              var inst_333938 = function() {
                                                                                                                throw inst_333933;
                                                                                                              }();
                                                                                                              var state_334001__$1 = state_334001;
                                                                                                              var statearr_334155_334362 = state_334001__$1;
                                                                                                              statearr_334155_334362[2] = inst_333938;
                                                                                                              statearr_334155_334362[1] = 51;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e334153) {
                                                                                                              if(e334153 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e334153;
                                                                                                                var statearr_334154_334363 = state_334001;
                                                                                                                statearr_334154_334363[1] = 12;
                                                                                                                statearr_334154_334363[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e334153;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_334002 === 19) {
                                                                                                              var inst_333872 = state_334001[14];
                                                                                                              var inst_333879 = function() {
                                                                                                                throw inst_333872;
                                                                                                              }();
                                                                                                              var state_334001__$1 = state_334001;
                                                                                                              var statearr_334156_334364 = state_334001__$1;
                                                                                                              statearr_334156_334364[2] = inst_333879;
                                                                                                              statearr_334156_334364[1] = 20;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if(state_val_334002 === 51) {
                                                                                                                try {
                                                                                                                  var inst_333940 = state_334001[2];
                                                                                                                  var state_334001__$1 = state_334001;
                                                                                                                  var statearr_334159_334365 = state_334001__$1;
                                                                                                                  statearr_334159_334365[2] = inst_333940;
                                                                                                                  statearr_334159_334365[1] = 47;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e334157) {
                                                                                                                  if(e334157 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e334157;
                                                                                                                    var statearr_334158_334366 = state_334001;
                                                                                                                    statearr_334158_334366[1] = 12;
                                                                                                                    statearr_334158_334366[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e334157;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }else {
                                                                                                                if(state_val_334002 === 20) {
                                                                                                                  var inst_333881 = state_334001[2];
                                                                                                                  var state_334001__$1 = state_334001;
                                                                                                                  var statearr_334160_334367 = state_334001__$1;
                                                                                                                  statearr_334160_334367[2] = inst_333881;
                                                                                                                  statearr_334160_334367[1] = 16;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if(state_val_334002 === 52) {
                                                                                                                    try {
                                                                                                                      try {
                                                                                                                        var inst_333864 = state_334001[6];
                                                                                                                        var inst_333943 = cljs.core._EQ_.call(null, inst_333864, "\ufdd0:logout");
                                                                                                                        var state_334001__$1 = state_334001;
                                                                                                                        if(inst_333943) {
                                                                                                                          var statearr_334165_334368 = state_334001__$1;
                                                                                                                          statearr_334165_334368[1] = 53
                                                                                                                        }else {
                                                                                                                          var statearr_334166_334369 = state_334001__$1;
                                                                                                                          statearr_334166_334369[1] = 54
                                                                                                                        }
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e334163) {
                                                                                                                        if(e334163 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e334163;
                                                                                                                          var statearr_334164_334370 = state_334001;
                                                                                                                          statearr_334164_334370[1] = 12;
                                                                                                                          statearr_334164_334370[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e334163;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }catch(e334161) {
                                                                                                                      if(e334161 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e334161;
                                                                                                                        var statearr_334162_334371 = state_334001;
                                                                                                                        statearr_334162_334371[1] = 48;
                                                                                                                        statearr_334162_334371[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e334161;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_334002 === 21) {
                                                                                                                      try {
                                                                                                                        var inst_333863 = state_334001[10];
                                                                                                                        var inst_333884 = cljs.core._EQ_.call(null, inst_333863, "\ufdd0:security");
                                                                                                                        var state_334001__$1 = state_334001;
                                                                                                                        if(inst_333884) {
                                                                                                                          var statearr_334169_334372 = state_334001__$1;
                                                                                                                          statearr_334169_334372[1] = 22
                                                                                                                        }else {
                                                                                                                          var statearr_334170_334373 = state_334001__$1;
                                                                                                                          statearr_334170_334373[1] = 23
                                                                                                                        }
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }catch(e334167) {
                                                                                                                        if(e334167 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e334167;
                                                                                                                          var statearr_334168_334374 = state_334001;
                                                                                                                          statearr_334168_334374[1] = 17;
                                                                                                                          statearr_334168_334374[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e334167;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_334002 === 53) {
                                                                                                                        try {
                                                                                                                          try {
                                                                                                                            var inst_333945 = chatter_box.login_view_component.logout.call(null);
                                                                                                                            var state_334001__$1 = state_334001;
                                                                                                                            var statearr_334175_334375 = state_334001__$1;
                                                                                                                            statearr_334175_334375[2] = inst_333945;
                                                                                                                            statearr_334175_334375[1] = 55;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e334173) {
                                                                                                                            if(e334173 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e334173;
                                                                                                                              var statearr_334174_334376 = state_334001;
                                                                                                                              statearr_334174_334376[1] = 12;
                                                                                                                              statearr_334174_334376[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e334173;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }catch(e334171) {
                                                                                                                          if(e334171 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e334171;
                                                                                                                            var statearr_334172_334377 = state_334001;
                                                                                                                            statearr_334172_334377[1] = 48;
                                                                                                                            statearr_334172_334377[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e334171;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }else {
                                                                                                                        if(state_val_334002 === 22) {
                                                                                                                          try {
                                                                                                                            var state_334001__$1 = state_334001;
                                                                                                                            var statearr_334178_334378 = state_334001__$1;
                                                                                                                            statearr_334178_334378[2] = null;
                                                                                                                            statearr_334178_334378[1] = 30;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e334176) {
                                                                                                                            if(e334176 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e334176;
                                                                                                                              var statearr_334177_334379 = state_334001;
                                                                                                                              statearr_334177_334379[1] = 17;
                                                                                                                              statearr_334177_334379[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e334176;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_334002 === 54) {
                                                                                                                            try {
                                                                                                                              try {
                                                                                                                                var state_334001__$1 = state_334001;
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  var statearr_334183_334380 = state_334001__$1;
                                                                                                                                  statearr_334183_334380[1] = 56
                                                                                                                                }else {
                                                                                                                                  var statearr_334184_334381 = state_334001__$1;
                                                                                                                                  statearr_334184_334381[1] = 57
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e334181) {
                                                                                                                                if(e334181 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e334181;
                                                                                                                                  var statearr_334182_334382 = state_334001;
                                                                                                                                  statearr_334182_334382[1] = 12;
                                                                                                                                  statearr_334182_334382[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e334181;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }catch(e334179) {
                                                                                                                              if(e334179 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e334179;
                                                                                                                                var statearr_334180_334383 = state_334001;
                                                                                                                                statearr_334180_334383[1] = 48;
                                                                                                                                statearr_334180_334383[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e334179;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_334002 === 23) {
                                                                                                                              try {
                                                                                                                                var inst_333863 = state_334001[10];
                                                                                                                                var inst_333910 = cljs.core._EQ_.call(null, inst_333863, "\ufdd0:nav");
                                                                                                                                var state_334001__$1 = state_334001;
                                                                                                                                if(inst_333910) {
                                                                                                                                  var statearr_334187_334384 = state_334001__$1;
                                                                                                                                  statearr_334187_334384[1] = 37
                                                                                                                                }else {
                                                                                                                                  var statearr_334188_334385 = state_334001__$1;
                                                                                                                                  statearr_334188_334385[1] = 38
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e334185) {
                                                                                                                                if(e334185 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e334185;
                                                                                                                                  var statearr_334186_334386 = state_334001;
                                                                                                                                  statearr_334186_334386[1] = 17;
                                                                                                                                  statearr_334186_334386[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e334185;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_334002 === 55) {
                                                                                                                                try {
                                                                                                                                  try {
                                                                                                                                    var inst_333953 = state_334001[2];
                                                                                                                                    var state_334001__$1 = state_334001;
                                                                                                                                    var statearr_334193_334387 = state_334001__$1;
                                                                                                                                    statearr_334193_334387[2] = inst_333953;
                                                                                                                                    statearr_334193_334387[1] = 47;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e334191) {
                                                                                                                                    if(e334191 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e334191;
                                                                                                                                      var statearr_334192_334388 = state_334001;
                                                                                                                                      statearr_334192_334388[1] = 12;
                                                                                                                                      statearr_334192_334388[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e334191;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }catch(e334189) {
                                                                                                                                  if(e334189 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e334189;
                                                                                                                                    var statearr_334190_334389 = state_334001;
                                                                                                                                    statearr_334190_334389[1] = 48;
                                                                                                                                    statearr_334190_334389[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e334189;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }else {
                                                                                                                                if(state_val_334002 === 24) {
                                                                                                                                  try {
                                                                                                                                    var inst_333922 = state_334001[2];
                                                                                                                                    var state_334001__$1 = state_334001;
                                                                                                                                    var statearr_334196_334390 = state_334001__$1;
                                                                                                                                    statearr_334196_334390[2] = inst_333922;
                                                                                                                                    statearr_334196_334390[1] = 16;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e334194) {
                                                                                                                                    if(e334194 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e334194;
                                                                                                                                      var statearr_334195_334391 = state_334001;
                                                                                                                                      statearr_334195_334391[1] = 17;
                                                                                                                                      statearr_334195_334391[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e334194;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_334002 === 56) {
                                                                                                                                    try {
                                                                                                                                      try {
                                                                                                                                        var inst_333948 = function() {
                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                        }();
                                                                                                                                        var state_334001__$1 = state_334001;
                                                                                                                                        var statearr_334201_334392 = state_334001__$1;
                                                                                                                                        statearr_334201_334392[2] = inst_333948;
                                                                                                                                        statearr_334201_334392[1] = 58;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e334199) {
                                                                                                                                        if(e334199 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e334199;
                                                                                                                                          var statearr_334200_334393 = state_334001;
                                                                                                                                          statearr_334200_334393[1] = 12;
                                                                                                                                          statearr_334200_334393[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e334199;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }catch(e334197) {
                                                                                                                                      if(e334197 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e334197;
                                                                                                                                        var statearr_334198_334394 = state_334001;
                                                                                                                                        statearr_334198_334394[1] = 48;
                                                                                                                                        statearr_334198_334394[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e334197;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_334002 === 25) {
                                                                                                                                      try {
                                                                                                                                        var inst_333908 = state_334001[2];
                                                                                                                                        var state_334001__$1 = state_334001;
                                                                                                                                        var statearr_334204_334395 = state_334001__$1;
                                                                                                                                        statearr_334204_334395[2] = inst_333908;
                                                                                                                                        statearr_334204_334395[1] = 24;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e334202) {
                                                                                                                                        if(e334202 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e334202;
                                                                                                                                          var statearr_334203_334396 = state_334001;
                                                                                                                                          statearr_334203_334396[1] = 17;
                                                                                                                                          statearr_334203_334396[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e334202;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_334002 === 57) {
                                                                                                                                        try {
                                                                                                                                          try {
                                                                                                                                            var state_334001__$1 = state_334001;
                                                                                                                                            var statearr_334209_334397 = state_334001__$1;
                                                                                                                                            statearr_334209_334397[2] = null;
                                                                                                                                            statearr_334209_334397[1] = 58;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e334207) {
                                                                                                                                            if(e334207 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e334207;
                                                                                                                                              var statearr_334208_334398 = state_334001;
                                                                                                                                              statearr_334208_334398[1] = 12;
                                                                                                                                              statearr_334208_334398[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e334207;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }catch(e334205) {
                                                                                                                                          if(e334205 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e334205;
                                                                                                                                            var statearr_334206_334399 = state_334001;
                                                                                                                                            statearr_334206_334399[1] = 48;
                                                                                                                                            statearr_334206_334399[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e334205;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }else {
                                                                                                                                        if(state_val_334002 === 26) {
                                                                                                                                          try {
                                                                                                                                            var inst_333886 = state_334001[15];
                                                                                                                                            var inst_333886__$1 = state_334001[2];
                                                                                                                                            var inst_333887 = inst_333886__$1 === cljs.core.match.backtrack;
                                                                                                                                            var state_334001__$1 = function() {
                                                                                                                                              var statearr_334212 = state_334001;
                                                                                                                                              statearr_334212[15] = inst_333886__$1;
                                                                                                                                              return statearr_334212
                                                                                                                                            }();
                                                                                                                                            if(cljs.core.truth_(inst_333887)) {
                                                                                                                                              var statearr_334213_334400 = state_334001__$1;
                                                                                                                                              statearr_334213_334400[1] = 27
                                                                                                                                            }else {
                                                                                                                                              var statearr_334214_334401 = state_334001__$1;
                                                                                                                                              statearr_334214_334401[1] = 28
                                                                                                                                            }
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e334210) {
                                                                                                                                            if(e334210 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e334210;
                                                                                                                                              var statearr_334211_334402 = state_334001;
                                                                                                                                              statearr_334211_334402[1] = 17;
                                                                                                                                              statearr_334211_334402[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e334210;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_334002 === 58) {
                                                                                                                                            try {
                                                                                                                                              try {
                                                                                                                                                var inst_333951 = state_334001[2];
                                                                                                                                                var state_334001__$1 = state_334001;
                                                                                                                                                var statearr_334219_334403 = state_334001__$1;
                                                                                                                                                statearr_334219_334403[2] = inst_333951;
                                                                                                                                                statearr_334219_334403[1] = 55;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e334217) {
                                                                                                                                                if(e334217 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e334217;
                                                                                                                                                  var statearr_334218_334404 = state_334001;
                                                                                                                                                  statearr_334218_334404[1] = 12;
                                                                                                                                                  statearr_334218_334404[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e334217;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }catch(e334215) {
                                                                                                                                              if(e334215 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e334215;
                                                                                                                                                var statearr_334216_334405 = state_334001;
                                                                                                                                                statearr_334216_334405[1] = 48;
                                                                                                                                                statearr_334216_334405[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e334215;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_334002 === 27) {
                                                                                                                                              try {
                                                                                                                                                var inst_333889 = function() {
                                                                                                                                                  throw cljs.core.match.backtrack;
                                                                                                                                                }();
                                                                                                                                                var state_334001__$1 = state_334001;
                                                                                                                                                var statearr_334222_334406 = state_334001__$1;
                                                                                                                                                statearr_334222_334406[2] = inst_333889;
                                                                                                                                                statearr_334222_334406[1] = 29;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e334220) {
                                                                                                                                                if(e334220 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e334220;
                                                                                                                                                  var statearr_334221_334407 = state_334001;
                                                                                                                                                  statearr_334221_334407[1] = 17;
                                                                                                                                                  statearr_334221_334407[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e334220;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_334002 === 59) {
                                                                                                                                                try {
                                                                                                                                                  var state_334001__$1 = state_334001;
                                                                                                                                                  var statearr_334225_334408 = state_334001__$1;
                                                                                                                                                  statearr_334225_334408[2] = null;
                                                                                                                                                  statearr_334225_334408[1] = 67;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e334223) {
                                                                                                                                                  if(e334223 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e334223;
                                                                                                                                                    var statearr_334224_334409 = state_334001;
                                                                                                                                                    statearr_334224_334409[1] = 12;
                                                                                                                                                    statearr_334224_334409[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e334223;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }else {
                                                                                                                                                if(state_val_334002 === 28) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_333886 = state_334001[15];
                                                                                                                                                    var inst_333891 = function() {
                                                                                                                                                      throw inst_333886;
                                                                                                                                                    }();
                                                                                                                                                    var state_334001__$1 = state_334001;
                                                                                                                                                    var statearr_334228_334410 = state_334001__$1;
                                                                                                                                                    statearr_334228_334410[2] = inst_333891;
                                                                                                                                                    statearr_334228_334410[1] = 29;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e334226) {
                                                                                                                                                    if(e334226 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e334226;
                                                                                                                                                      var statearr_334227_334411 = state_334001;
                                                                                                                                                      statearr_334227_334411[1] = 17;
                                                                                                                                                      statearr_334227_334411[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e334226;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_334002 === 60) {
                                                                                                                                                    try {
                                                                                                                                                      var state_334001__$1 = state_334001;
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        var statearr_334231_334412 = state_334001__$1;
                                                                                                                                                        statearr_334231_334412[1] = 74
                                                                                                                                                      }else {
                                                                                                                                                        var statearr_334232_334413 = state_334001__$1;
                                                                                                                                                        statearr_334232_334413[1] = 75
                                                                                                                                                      }
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e334229) {
                                                                                                                                                      if(e334229 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e334229;
                                                                                                                                                        var statearr_334230_334414 = state_334001;
                                                                                                                                                        statearr_334230_334414[1] = 12;
                                                                                                                                                        statearr_334230_334414[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e334229;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_334002 === 29) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_333893 = state_334001[2];
                                                                                                                                                        var state_334001__$1 = state_334001;
                                                                                                                                                        var statearr_334235_334415 = state_334001__$1;
                                                                                                                                                        statearr_334235_334415[2] = inst_333893;
                                                                                                                                                        statearr_334235_334415[1] = 25;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e334233) {
                                                                                                                                                        if(e334233 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e334233;
                                                                                                                                                          var statearr_334234_334416 = state_334001;
                                                                                                                                                          statearr_334234_334416[1] = 17;
                                                                                                                                                          statearr_334234_334416[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e334233;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_334002 === 61) {
                                                                                                                                                        try {
                                                                                                                                                          var inst_333989 = state_334001[2];
                                                                                                                                                          var state_334001__$1 = state_334001;
                                                                                                                                                          var statearr_334238_334417 = state_334001__$1;
                                                                                                                                                          statearr_334238_334417[2] = inst_333989;
                                                                                                                                                          statearr_334238_334417[1] = 46;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }catch(e334236) {
                                                                                                                                                          if(e334236 instanceof Error) {
                                                                                                                                                            var ex__5575__auto__ = e334236;
                                                                                                                                                            var statearr_334237_334418 = state_334001;
                                                                                                                                                            statearr_334237_334418[1] = 12;
                                                                                                                                                            statearr_334237_334418[2] = ex__5575__auto__;
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }else {
                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                              throw e334236;
                                                                                                                                                            }else {
                                                                                                                                                              return null
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_334002 === 30) {
                                                                                                                                                          try {
                                                                                                                                                            try {
                                                                                                                                                              var inst_333864 = state_334001[6];
                                                                                                                                                              var inst_333896 = cljs.core._EQ_.call(null, inst_333864, "\ufdd0:login-success");
                                                                                                                                                              var state_334001__$1 = state_334001;
                                                                                                                                                              if(inst_333896) {
                                                                                                                                                                var statearr_334243_334419 = state_334001__$1;
                                                                                                                                                                statearr_334243_334419[1] = 31
                                                                                                                                                              }else {
                                                                                                                                                                var statearr_334244_334420 = state_334001__$1;
                                                                                                                                                                statearr_334244_334420[1] = 32
                                                                                                                                                              }
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e334241) {
                                                                                                                                                              if(e334241 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e334241;
                                                                                                                                                                var statearr_334242_334421 = state_334001;
                                                                                                                                                                statearr_334242_334421[1] = 17;
                                                                                                                                                                statearr_334242_334421[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e334241;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }catch(e334239) {
                                                                                                                                                            if(e334239 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e334239;
                                                                                                                                                              var statearr_334240_334422 = state_334001;
                                                                                                                                                              statearr_334240_334422[1] = 26;
                                                                                                                                                              statearr_334240_334422[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e334239;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_334002 === 62) {
                                                                                                                                                            try {
                                                                                                                                                              var inst_333981 = state_334001[2];
                                                                                                                                                              var state_334001__$1 = state_334001;
                                                                                                                                                              var statearr_334247_334423 = state_334001__$1;
                                                                                                                                                              statearr_334247_334423[2] = inst_333981;
                                                                                                                                                              statearr_334247_334423[1] = 61;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e334245) {
                                                                                                                                                              if(e334245 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e334245;
                                                                                                                                                                var statearr_334246_334424 = state_334001;
                                                                                                                                                                statearr_334246_334424[1] = 12;
                                                                                                                                                                statearr_334246_334424[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e334245;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_334002 === 31) {
                                                                                                                                                              try {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_333865 = state_334001[9];
                                                                                                                                                                  var inst_333898 = chatter_box.login_view_component.login_successfull.call(null, inst_333865);
                                                                                                                                                                  var state_334001__$1 = state_334001;
                                                                                                                                                                  var statearr_334252_334425 = state_334001__$1;
                                                                                                                                                                  statearr_334252_334425[2] = inst_333898;
                                                                                                                                                                  statearr_334252_334425[1] = 33;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e334250) {
                                                                                                                                                                  if(e334250 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e334250;
                                                                                                                                                                    var statearr_334251_334426 = state_334001;
                                                                                                                                                                    statearr_334251_334426[1] = 17;
                                                                                                                                                                    statearr_334251_334426[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e334250;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }catch(e334248) {
                                                                                                                                                                if(e334248 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e334248;
                                                                                                                                                                  var statearr_334249_334427 = state_334001;
                                                                                                                                                                  statearr_334249_334427[1] = 26;
                                                                                                                                                                  statearr_334249_334427[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e334248;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_334002 === 63) {
                                                                                                                                                                try {
                                                                                                                                                                  var inst_333959 = state_334001[5];
                                                                                                                                                                  var inst_333959__$1 = state_334001[2];
                                                                                                                                                                  var inst_333960 = inst_333959__$1 === cljs.core.match.backtrack;
                                                                                                                                                                  var state_334001__$1 = function() {
                                                                                                                                                                    var statearr_334255 = state_334001;
                                                                                                                                                                    statearr_334255[5] = inst_333959__$1;
                                                                                                                                                                    return statearr_334255
                                                                                                                                                                  }();
                                                                                                                                                                  if(cljs.core.truth_(inst_333960)) {
                                                                                                                                                                    var statearr_334256_334428 = state_334001__$1;
                                                                                                                                                                    statearr_334256_334428[1] = 64
                                                                                                                                                                  }else {
                                                                                                                                                                    var statearr_334257_334429 = state_334001__$1;
                                                                                                                                                                    statearr_334257_334429[1] = 65
                                                                                                                                                                  }
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }catch(e334253) {
                                                                                                                                                                  if(e334253 instanceof Error) {
                                                                                                                                                                    var ex__5575__auto__ = e334253;
                                                                                                                                                                    var statearr_334254_334430 = state_334001;
                                                                                                                                                                    statearr_334254_334430[1] = 12;
                                                                                                                                                                    statearr_334254_334430[2] = ex__5575__auto__;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }else {
                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                      throw e334253;
                                                                                                                                                                    }else {
                                                                                                                                                                      return null
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_334259 = new Array(16);
            statearr_334259[0] = state_machine__5582__auto__;
            statearr_334259[1] = 1;
            return statearr_334259
          };
          var state_machine__5582__auto____1 = function(state_334001) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_334001);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_334001) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_334001)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_334260 = f__5654__auto__.call(null);
      statearr_334260[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_334260
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.user_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.user_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:created"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", 
"\ufdd0:key", "\ufdd0:updated"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null], true);
chatter_box.user_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.user_view_component.user = cljs.core.atom.call(null, null);
chatter_box.user_view_component.create_user_view_component = function create_user_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.user_view_component.t339613 !== "undefined") {
  }else {
    goog.provide("chatter_box.user_view_component.t339613");
    chatter_box.user_view_component.t339613 = function(in_ch, create_user_view_component, meta339614) {
      this.in_ch = in_ch;
      this.create_user_view_component = create_user_view_component;
      this.meta339614 = meta339614;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.user_view_component.t339613.cljs$lang$type = true;
    chatter_box.user_view_component.t339613.cljs$lang$ctorStr = "chatter-box.user-view-component/t339613";
    chatter_box.user_view_component.t339613.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.user-view-component/t339613")
    };
    chatter_box.user_view_component.t339613.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.user_view_component.t339613.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.out_chan, out_ch);
      return chatter_box.user_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.user_view_component.t339613.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.user_view_component.valid_types).call(null, msg)
    };
    chatter_box.user_view_component.t339613.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.user_view_component.t339613.prototype.cljs$core$IMeta$_meta$arity$1 = function(_339615) {
      var self__ = this;
      return self__.meta339614
    };
    chatter_box.user_view_component.t339613.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_339615, meta339614__$1) {
      var self__ = this;
      return new chatter_box.user_view_component.t339613(self__.in_ch, self__.create_user_view_component, meta339614__$1)
    };
    chatter_box.user_view_component.__GT_t339613 = function __GT_t339613(in_ch__$1, create_user_view_component__$1, meta339614) {
      return new chatter_box.user_view_component.t339613(in_ch__$1, create_user_view_component__$1, meta339614)
    }
  }
  return new chatter_box.user_view_component.t339613(in_ch, create_user_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/update_user.html[".container"]') == null) {
  var vec__339616_339621 = enfocus.core.replace_ids.call(null, "en264922_", '\x3cdiv id\x3d"update-user-container" class\x3d"container"\x3e \n \x3cform id\x3d"update-user-form" name\x3d"create-user-form" class\x3d"form-create-user"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3eUpdate Profile\x3c/h2\x3e \n  \x3cinput id\x3d"up-first" name\x3d"first" type\x3d"text" class\x3d"form-control" placeholder\x3d"First Name" /\x3e \n  \x3cinput id\x3d"up-last" name\x3d"last" type\x3d"text" class\x3d"form-control" placeholder\x3d"Last Name" /\x3e \n  \x3cinput id\x3d"up-img-url" name\x3d"img-url" type\x3d"text" class\x3d"form-control" placeholder\x3d"Photo Url" /\x3e \n  \x3cbr /\x3e \n  \x3ca id\x3d"update-user-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"login.html" type\x3d"submit"\x3eSave\x3c/a\x3e \n \x3c/form\x3e \n\x3c/div\x3e');
  var sym__4174__auto___339622 = cljs.core.nth.call(null, vec__339616_339621, 0, null);
  var txt__4175__auto___339623 = cljs.core.nth.call(null, vec__339616_339621, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/update_user.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___339622, txt__4175__auto___339623], true))
}else {
}
chatter_box.user_view_component.update_user_page = function update_user_page() {
  var vec__339620 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/update_user.html[".container"]')
  }.call(null);
  var id_sym339617 = cljs.core.nth.call(null, vec__339620, 0, null);
  var pnod339618 = cljs.core.nth.call(null, vec__339620, 1, null);
  var pnod339618__$1 = enfocus.core.create_hidden_dom.call(null, pnod339618);
  enfocus.core.i_at.call(null, id_sym339617, pnod339618__$1, "#update-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym339617, pnod339618__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod339618__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/create_user.html[".container"]') == null) {
  var vec__339624_339629 = enfocus.core.replace_ids.call(null, "en264931_", '\x3cdiv id\x3d"create-user-container" class\x3d"container"\x3e \n \x3cform id\x3d"create-user-form" name\x3d"create-user-form" class\x3d"form-create-user"\x3e \n  \x3ch2 class\x3d"form-signin-heading"\x3eCreate a User\x3c/h2\x3e \n  \x3cinput id\x3d"cr-username" name\x3d"username" type\x3d"text" class\x3d"form-control" placeholder\x3d"Username" autofocus\x3d"" /\x3e \n  \x3cinput id\x3d"cr-password" name\x3d"password" type\x3d"text" class\x3d"form-control" placeholder\x3d"Password" /\x3e \n  \x3cinput id\x3d"cr-password2" name\x3d"password2" type\x3d"text" class\x3d"form-control" placeholder\x3d"Repeat Password" /\x3e \n  \x3cbr /\x3e \n  \x3cinput id\x3d"cr-first" name\x3d"first" type\x3d"text" class\x3d"form-control" placeholder\x3d"First Name" /\x3e \n  \x3cinput id\x3d"cr-last" name\x3d"last" type\x3d"text" class\x3d"form-control" placeholder\x3d"Last Name" /\x3e \n  \x3cinput id\x3d"cr-img-url" name\x3d"img-url" type\x3d"text" class\x3d"form-control" placeholder\x3d"Photo Url" /\x3e \n  \x3cbr /\x3e \n  \x3ca id\x3d"create-user-btn" class\x3d"btn btn-lg btn-primary btn-block" href\x3d"login.html" type\x3d"submit"\x3eCreate User\x3c/a\x3e \n \x3c/form\x3e \n\x3c/div\x3e');
  var sym__4174__auto___339630 = cljs.core.nth.call(null, vec__339624_339629, 0, null);
  var txt__4175__auto___339631 = cljs.core.nth.call(null, vec__339624_339629, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/create_user.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___339630, txt__4175__auto___339631], true))
}else {
}
chatter_box.user_view_component.create_user_page = function create_user_page() {
  var vec__339628 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/create_user.html[".container"]')
  }.call(null);
  var id_sym339625 = cljs.core.nth.call(null, vec__339628, 0, null);
  var pnod339626 = cljs.core.nth.call(null, vec__339628, 1, null);
  var pnod339626__$1 = enfocus.core.create_hidden_dom.call(null, pnod339626);
  enfocus.core.i_at.call(null, id_sym339625, pnod339626__$1, "#create-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym339625, pnod339626__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod339626__$1)
};
chatter_box.user_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, document, "body", enfocus.core.append.call(null, chatter_box.user_view_component.create_user_page.call(null), chatter_box.user_view_component.update_user_page.call(null)), "#create-user-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.user_view_component.create_user)), "#update-user-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), 
  enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.user_view_component.update_user)))
};
chatter_box.user_view_component.navigate = function navigate(p__339632) {
  var map__339635 = p__339632;
  var map__339635__$1 = cljs.core.seq_QMARK_.call(null, map__339635) ? cljs.core.apply.call(null, cljs.core.hash_map, map__339635) : map__339635;
  var page = cljs.core.get.call(null, map__339635__$1, "\ufdd0:key");
  var vec__339636 = cljs.core._EQ_.call(null, page, "\ufdd0:create-user") ? cljs.core.PersistentVector.fromArray(["", "none"], true) : cljs.core._EQ_.call(null, page, "\ufdd0:update-user") ? cljs.core.PersistentVector.fromArray(["none", ""], true) : "\ufdd0:else" ? cljs.core.PersistentVector.fromArray(["none", "none"], true) : null;
  var create_dis = cljs.core.nth.call(null, vec__339636, 0, null);
  var update_dis = cljs.core.nth.call(null, vec__339636, 1, null);
  enfocus.core.at.call(null, "#create-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", create_dis), "#update-user-container", enfocus.core.set_style.call(null, "\ufdd0:display", update_dis));
  if(cljs.core.empty_QMARK_.call(null, update_dis)) {
    return enfocus.core.at.call(null, "#up-first", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:first")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user))), "#up-last", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:last")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user))), "#up-img-url", enfocus.core.set_prop.call(null, "\ufdd0:value", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, 
    cljs.core.deref.call(null, chatter_box.user_view_component.user))))
  }else {
    return null
  }
};
chatter_box.user_view_component.user_error = function user_error(msg) {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.user_error_message.call(null, null, msg))
};
chatter_box.user_view_component.validate_create_user_form = function validate_create_user_form(form) {
  if(cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("\ufdd0:password")).call(null, form), (new cljs.core.Keyword("\ufdd0:password2")).call(null, form))) {
  }else {
    if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form))) {
    }else {
      if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:password")).call(null, form))) {
      }else {
        if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:first")).call(null, form))) {
        }else {
        }
      }
    }
  }
  return"\ufdd0:valid"
};
chatter_box.user_view_component.validate_update_user_form = function validate_update_user_form(form) {
  if(cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:first")).call(null, form))) {
  }else {
  }
  return"\ufdd0:valid"
};
chatter_box.user_view_component.create_user = function create_user() {
  var form = enfocus.core.from.call(null, "#create-user-form", enfocus.core.read_form.call(null));
  var val = chatter_box.user_view_component.validate_create_user_form.call(null, form);
  if(cljs.core._EQ_.call(null, val, "\ufdd0:valid")) {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_user_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, form), (new cljs.core.Keyword("\ufdd0:password")).call(null, form), (new cljs.core.Keyword("\ufdd0:first")).call(null, form), (new cljs.core.Keyword("\ufdd0:last")).call(null, form), (new cljs.core.Keyword("\ufdd0:img-url")).call(null, form)))
  }else {
    return chatter_box.user_view_component.user_error.call(null, val)
  }
};
chatter_box.user_view_component.update_user = function update_user() {
  var form = enfocus.core.from.call(null, "#update-user-form", enfocus.core.read_form.call(null));
  var val = chatter_box.user_view_component.validate_update_user_form.call(null, form);
  if(cljs.core._EQ_.call(null, val, "\ufdd0:valid")) {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.update_user_message.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user), "\ufdd0:first", (new cljs.core.Keyword("\ufdd0:first")).call(null, form), "\ufdd0:last", (new cljs.core.Keyword("\ufdd0:last")).call(null, form), "\ufdd0:img-url", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, form))))
  }else {
    return chatter_box.user_view_component.user_error.call(null, val)
  }
};
chatter_box.user_view_component.user_created = function user_created() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:login", "user created"))
};
chatter_box.user_view_component.user_updated = function user_updated(usr) {
  if(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, usr), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.user_view_component.user)))) {
    return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, usr)
  }else {
    return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.user_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:chat", "user updated"))
  }
};
chatter_box.user_view_component.login_success = function login_success(msg) {
  return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, (new cljs.core.Keyword("\ufdd0:user")).call(null, msg))
};
chatter_box.user_view_component.logout = function logout() {
  return cljs.core.reset_BANG_.call(null, chatter_box.user_view_component.user, null)
};
chatter_box.user_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_340487) {
        var state_val_340488 = state_340487[1];
        if(state_val_340488 === 32) {
          try {
            var inst_340306 = function() {
              throw cljs.core.match.backtrack;
            }();
            var state_340487__$1 = state_340487;
            var statearr_340491_340895 = state_340487__$1;
            statearr_340491_340895[2] = inst_340306;
            statearr_340491_340895[1] = 34;
            return"\ufdd0:recur"
          }catch(e340489) {
            if(e340489 instanceof Error) {
              var ex__5575__auto__ = e340489;
              var statearr_340490_340896 = state_340487;
              statearr_340490_340896[1] = 22;
              statearr_340490_340896[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e340489;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_340488 === 64) {
            try {
              var inst_340392 = state_340487[2];
              var state_340487__$1 = state_340487;
              var statearr_340494_340897 = state_340487__$1;
              statearr_340494_340897[2] = inst_340392;
              statearr_340494_340897[1] = 63;
              return"\ufdd0:recur"
            }catch(e340492) {
              if(e340492 instanceof Error) {
                var ex__5575__auto__ = e340492;
                var statearr_340493_340898 = state_340487;
                statearr_340493_340898[1] = 17;
                statearr_340493_340898[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e340492;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_340488 === 96) {
              try {
                try {
                  var state_340487__$1 = state_340487;
                  var statearr_340499_340899 = state_340487__$1;
                  statearr_340499_340899[2] = null;
                  statearr_340499_340899[1] = 97;
                  return"\ufdd0:recur"
                }catch(e340497) {
                  if(e340497 instanceof Error) {
                    var ex__5575__auto__ = e340497;
                    var statearr_340498_340900 = state_340487;
                    statearr_340498_340900[1] = 12;
                    statearr_340498_340900[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e340497;
                    }else {
                      return null
                    }
                  }
                }
              }catch(e340495) {
                if(e340495 instanceof Error) {
                  var ex__5575__auto__ = e340495;
                  var statearr_340496_340901 = state_340487;
                  statearr_340496_340901[1] = 87;
                  statearr_340496_340901[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e340495;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_340488 === 1) {
                var state_340487__$1 = state_340487;
                var statearr_340500_340902 = state_340487__$1;
                statearr_340500_340902[2] = null;
                statearr_340500_340902[1] = 2;
                return"\ufdd0:recur"
              }else {
                if(state_val_340488 === 33) {
                  try {
                    var inst_340303 = state_340487[5];
                    var inst_340308 = function() {
                      throw inst_340303;
                    }();
                    var state_340487__$1 = state_340487;
                    var statearr_340503_340903 = state_340487__$1;
                    statearr_340503_340903[2] = inst_340308;
                    statearr_340503_340903[1] = 34;
                    return"\ufdd0:recur"
                  }catch(e340501) {
                    if(e340501 instanceof Error) {
                      var ex__5575__auto__ = e340501;
                      var statearr_340502_340904 = state_340487;
                      statearr_340502_340904[1] = 22;
                      statearr_340502_340904[2] = ex__5575__auto__;
                      return"\ufdd0:recur"
                    }else {
                      if("\ufdd0:else") {
                        throw e340501;
                      }else {
                        return null
                      }
                    }
                  }
                }else {
                  if(state_val_340488 === 65) {
                    try {
                      var inst_340370 = state_340487[6];
                      var inst_340370__$1 = state_340487[2];
                      var inst_340371 = inst_340370__$1 === cljs.core.match.backtrack;
                      var state_340487__$1 = function() {
                        var statearr_340506 = state_340487;
                        statearr_340506[6] = inst_340370__$1;
                        return statearr_340506
                      }();
                      if(cljs.core.truth_(inst_340371)) {
                        var statearr_340507_340905 = state_340487__$1;
                        statearr_340507_340905[1] = 66
                      }else {
                        var statearr_340508_340906 = state_340487__$1;
                        statearr_340508_340906[1] = 67
                      }
                      return"\ufdd0:recur"
                    }catch(e340504) {
                      if(e340504 instanceof Error) {
                        var ex__5575__auto__ = e340504;
                        var statearr_340505_340907 = state_340487;
                        statearr_340505_340907[1] = 17;
                        statearr_340505_340907[2] = ex__5575__auto__;
                        return"\ufdd0:recur"
                      }else {
                        if("\ufdd0:else") {
                          throw e340504;
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(state_val_340488 === 97) {
                      try {
                        try {
                          var inst_340435 = state_340487[2];
                          var state_340487__$1 = state_340487;
                          var statearr_340513_340908 = state_340487__$1;
                          statearr_340513_340908[2] = inst_340435;
                          statearr_340513_340908[1] = 94;
                          return"\ufdd0:recur"
                        }catch(e340511) {
                          if(e340511 instanceof Error) {
                            var ex__5575__auto__ = e340511;
                            var statearr_340512_340909 = state_340487;
                            statearr_340512_340909[1] = 12;
                            statearr_340512_340909[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e340511;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e340509) {
                        if(e340509 instanceof Error) {
                          var ex__5575__auto__ = e340509;
                          var statearr_340510_340910 = state_340487;
                          statearr_340510_340910[1] = 87;
                          statearr_340510_340910[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e340509;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_340488 === 2) {
                        var state_340487__$1 = state_340487;
                        if(true) {
                          var statearr_340514_340911 = state_340487__$1;
                          statearr_340514_340911[1] = 4
                        }else {
                          var statearr_340515_340912 = state_340487__$1;
                          statearr_340515_340912[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_340488 === 34) {
                          try {
                            var inst_340310 = state_340487[2];
                            var state_340487__$1 = state_340487;
                            var statearr_340518_340913 = state_340487__$1;
                            statearr_340518_340913[2] = inst_340310;
                            statearr_340518_340913[1] = 30;
                            return"\ufdd0:recur"
                          }catch(e340516) {
                            if(e340516 instanceof Error) {
                              var ex__5575__auto__ = e340516;
                              var statearr_340517_340914 = state_340487;
                              statearr_340517_340914[1] = 22;
                              statearr_340517_340914[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e340516;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_340488 === 66) {
                            try {
                              var inst_340373 = function() {
                                throw cljs.core.match.backtrack;
                              }();
                              var state_340487__$1 = state_340487;
                              var statearr_340521_340915 = state_340487__$1;
                              statearr_340521_340915[2] = inst_340373;
                              statearr_340521_340915[1] = 68;
                              return"\ufdd0:recur"
                            }catch(e340519) {
                              if(e340519 instanceof Error) {
                                var ex__5575__auto__ = e340519;
                                var statearr_340520_340916 = state_340487;
                                statearr_340520_340916[1] = 17;
                                statearr_340520_340916[2] = ex__5575__auto__;
                                return"\ufdd0:recur"
                              }else {
                                if("\ufdd0:else") {
                                  throw e340519;
                                }else {
                                  return null
                                }
                              }
                            }
                          }else {
                            if(state_val_340488 === 98) {
                              try {
                                var state_340487__$1 = state_340487;
                                var statearr_340524_340917 = state_340487__$1;
                                statearr_340524_340917[2] = null;
                                statearr_340524_340917[1] = 106;
                                return"\ufdd0:recur"
                              }catch(e340522) {
                                if(e340522 instanceof Error) {
                                  var ex__5575__auto__ = e340522;
                                  var statearr_340523_340918 = state_340487;
                                  statearr_340523_340918[1] = 12;
                                  statearr_340523_340918[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e340522;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_340488 === 3) {
                                var inst_340485 = state_340487[2];
                                var state_340487__$1 = state_340487;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_340487__$1, inst_340485)
                              }else {
                                if(state_val_340488 === 35) {
                                  try {
                                    try {
                                      var inst_340278 = state_340487[7];
                                      var inst_340313 = cljs.core._EQ_.call(null, inst_340278, "\ufdd0:updated");
                                      var state_340487__$1 = state_340487;
                                      if(inst_340313) {
                                        var statearr_340529_340919 = state_340487__$1;
                                        statearr_340529_340919[1] = 36
                                      }else {
                                        var statearr_340530_340920 = state_340487__$1;
                                        statearr_340530_340920[1] = 37
                                      }
                                      return"\ufdd0:recur"
                                    }catch(e340527) {
                                      if(e340527 instanceof Error) {
                                        var ex__5575__auto__ = e340527;
                                        var statearr_340528_340921 = state_340487;
                                        statearr_340528_340921[1] = 22;
                                        statearr_340528_340921[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e340527;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e340525) {
                                    if(e340525 instanceof Error) {
                                      var ex__5575__auto__ = e340525;
                                      var statearr_340526_340922 = state_340487;
                                      statearr_340526_340922[1] = 31;
                                      statearr_340526_340922[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e340525;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_340488 === 67) {
                                    try {
                                      var inst_340370 = state_340487[6];
                                      var inst_340375 = function() {
                                        throw inst_340370;
                                      }();
                                      var state_340487__$1 = state_340487;
                                      var statearr_340533_340923 = state_340487__$1;
                                      statearr_340533_340923[2] = inst_340375;
                                      statearr_340533_340923[1] = 68;
                                      return"\ufdd0:recur"
                                    }catch(e340531) {
                                      if(e340531 instanceof Error) {
                                        var ex__5575__auto__ = e340531;
                                        var statearr_340532_340924 = state_340487;
                                        statearr_340532_340924[1] = 17;
                                        statearr_340532_340924[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e340531;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_340488 === 99) {
                                      try {
                                        var state_340487__$1 = state_340487;
                                        if("\ufdd0:else") {
                                          var statearr_340536_340925 = state_340487__$1;
                                          statearr_340536_340925[1] = 113
                                        }else {
                                          var statearr_340537_340926 = state_340487__$1;
                                          statearr_340537_340926[1] = 114
                                        }
                                        return"\ufdd0:recur"
                                      }catch(e340534) {
                                        if(e340534 instanceof Error) {
                                          var ex__5575__auto__ = e340534;
                                          var statearr_340535_340927 = state_340487;
                                          statearr_340535_340927[1] = 12;
                                          statearr_340535_340927[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e340534;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }else {
                                      if(state_val_340488 === 4) {
                                        var state_340487__$1 = state_340487;
                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_340487__$1, 7, in_ch)
                                      }else {
                                        if(state_val_340488 === 36) {
                                          try {
                                            try {
                                              var inst_340279 = state_340487[8];
                                              var inst_340315 = chatter_box.user_view_component.user_updated.call(null, inst_340279);
                                              var state_340487__$1 = state_340487;
                                              var statearr_340542_340928 = state_340487__$1;
                                              statearr_340542_340928[2] = inst_340315;
                                              statearr_340542_340928[1] = 38;
                                              return"\ufdd0:recur"
                                            }catch(e340540) {
                                              if(e340540 instanceof Error) {
                                                var ex__5575__auto__ = e340540;
                                                var statearr_340541_340929 = state_340487;
                                                statearr_340541_340929[1] = 22;
                                                statearr_340541_340929[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e340540;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }catch(e340538) {
                                            if(e340538 instanceof Error) {
                                              var ex__5575__auto__ = e340538;
                                              var statearr_340539_340930 = state_340487;
                                              statearr_340539_340930[1] = 31;
                                              statearr_340539_340930[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e340538;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_340488 === 68) {
                                            try {
                                              var inst_340377 = state_340487[2];
                                              var state_340487__$1 = state_340487;
                                              var statearr_340545_340931 = state_340487__$1;
                                              statearr_340545_340931[2] = inst_340377;
                                              statearr_340545_340931[1] = 64;
                                              return"\ufdd0:recur"
                                            }catch(e340543) {
                                              if(e340543 instanceof Error) {
                                                var ex__5575__auto__ = e340543;
                                                var statearr_340544_340932 = state_340487;
                                                statearr_340544_340932[1] = 17;
                                                statearr_340544_340932[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e340543;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_340488 === 100) {
                                              try {
                                                var inst_340473 = state_340487[2];
                                                var state_340487__$1 = state_340487;
                                                var statearr_340548_340933 = state_340487__$1;
                                                statearr_340548_340933[2] = inst_340473;
                                                statearr_340548_340933[1] = 85;
                                                return"\ufdd0:recur"
                                              }catch(e340546) {
                                                if(e340546 instanceof Error) {
                                                  var ex__5575__auto__ = e340546;
                                                  var statearr_340547_340934 = state_340487;
                                                  statearr_340547_340934[1] = 12;
                                                  statearr_340547_340934[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e340546;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_340488 === 5) {
                                                var state_340487__$1 = state_340487;
                                                var statearr_340549_340935 = state_340487__$1;
                                                statearr_340549_340935[2] = null;
                                                statearr_340549_340935[1] = 6;
                                                return"\ufdd0:recur"
                                              }else {
                                                if(state_val_340488 === 37) {
                                                  try {
                                                    try {
                                                      var state_340487__$1 = state_340487;
                                                      if("\ufdd0:else") {
                                                        var statearr_340554_340936 = state_340487__$1;
                                                        statearr_340554_340936[1] = 39
                                                      }else {
                                                        var statearr_340555_340937 = state_340487__$1;
                                                        statearr_340555_340937[1] = 40
                                                      }
                                                      return"\ufdd0:recur"
                                                    }catch(e340552) {
                                                      if(e340552 instanceof Error) {
                                                        var ex__5575__auto__ = e340552;
                                                        var statearr_340553_340938 = state_340487;
                                                        statearr_340553_340938[1] = 22;
                                                        statearr_340553_340938[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e340552;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }catch(e340550) {
                                                    if(e340550 instanceof Error) {
                                                      var ex__5575__auto__ = e340550;
                                                      var statearr_340551_340939 = state_340487;
                                                      statearr_340551_340939[1] = 31;
                                                      statearr_340551_340939[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e340550;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_340488 === 69) {
                                                    try {
                                                      try {
                                                        var inst_340278 = state_340487[7];
                                                        var inst_340380 = cljs.core._EQ_.call(null, inst_340278, "\ufdd0:created");
                                                        var state_340487__$1 = state_340487;
                                                        if(inst_340380) {
                                                          var statearr_340560_340940 = state_340487__$1;
                                                          statearr_340560_340940[1] = 70
                                                        }else {
                                                          var statearr_340561_340941 = state_340487__$1;
                                                          statearr_340561_340941[1] = 71
                                                        }
                                                        return"\ufdd0:recur"
                                                      }catch(e340558) {
                                                        if(e340558 instanceof Error) {
                                                          var ex__5575__auto__ = e340558;
                                                          var statearr_340559_340942 = state_340487;
                                                          statearr_340559_340942[1] = 17;
                                                          statearr_340559_340942[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e340558;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }catch(e340556) {
                                                      if(e340556 instanceof Error) {
                                                        var ex__5575__auto__ = e340556;
                                                        var statearr_340557_340943 = state_340487;
                                                        statearr_340557_340943[1] = 65;
                                                        statearr_340557_340943[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e340556;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_340488 === 101) {
                                                      try {
                                                        var inst_340465 = state_340487[2];
                                                        var state_340487__$1 = state_340487;
                                                        var statearr_340564_340944 = state_340487__$1;
                                                        statearr_340564_340944[2] = inst_340465;
                                                        statearr_340564_340944[1] = 100;
                                                        return"\ufdd0:recur"
                                                      }catch(e340562) {
                                                        if(e340562 instanceof Error) {
                                                          var ex__5575__auto__ = e340562;
                                                          var statearr_340563_340945 = state_340487;
                                                          statearr_340563_340945[1] = 12;
                                                          statearr_340563_340945[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e340562;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_340488 === 6) {
                                                        var inst_340483 = state_340487[2];
                                                        var state_340487__$1 = state_340487;
                                                        var statearr_340565_340946 = state_340487__$1;
                                                        statearr_340565_340946[2] = inst_340483;
                                                        statearr_340565_340946[1] = 3;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if(state_val_340488 === 38) {
                                                          try {
                                                            try {
                                                              var inst_340323 = state_340487[2];
                                                              var state_340487__$1 = state_340487;
                                                              var statearr_340570_340947 = state_340487__$1;
                                                              statearr_340570_340947[2] = inst_340323;
                                                              statearr_340570_340947[1] = 30;
                                                              return"\ufdd0:recur"
                                                            }catch(e340568) {
                                                              if(e340568 instanceof Error) {
                                                                var ex__5575__auto__ = e340568;
                                                                var statearr_340569_340948 = state_340487;
                                                                statearr_340569_340948[1] = 22;
                                                                statearr_340569_340948[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e340568;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }catch(e340566) {
                                                            if(e340566 instanceof Error) {
                                                              var ex__5575__auto__ = e340566;
                                                              var statearr_340567_340949 = state_340487;
                                                              statearr_340567_340949[1] = 31;
                                                              statearr_340567_340949[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e340566;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_340488 === 70) {
                                                            try {
                                                              try {
                                                                var inst_340382 = chatter_box.user_view_component.user_created.call(null);
                                                                var state_340487__$1 = state_340487;
                                                                var statearr_340575_340950 = state_340487__$1;
                                                                statearr_340575_340950[2] = inst_340382;
                                                                statearr_340575_340950[1] = 72;
                                                                return"\ufdd0:recur"
                                                              }catch(e340573) {
                                                                if(e340573 instanceof Error) {
                                                                  var ex__5575__auto__ = e340573;
                                                                  var statearr_340574_340951 = state_340487;
                                                                  statearr_340574_340951[1] = 17;
                                                                  statearr_340574_340951[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e340573;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }catch(e340571) {
                                                              if(e340571 instanceof Error) {
                                                                var ex__5575__auto__ = e340571;
                                                                var statearr_340572_340952 = state_340487;
                                                                statearr_340572_340952[1] = 65;
                                                                statearr_340572_340952[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e340571;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_340488 === 102) {
                                                              try {
                                                                var inst_340443 = state_340487[9];
                                                                var inst_340443__$1 = state_340487[2];
                                                                var inst_340444 = inst_340443__$1 === cljs.core.match.backtrack;
                                                                var state_340487__$1 = function() {
                                                                  var statearr_340578 = state_340487;
                                                                  statearr_340578[9] = inst_340443__$1;
                                                                  return statearr_340578
                                                                }();
                                                                if(cljs.core.truth_(inst_340444)) {
                                                                  var statearr_340579_340953 = state_340487__$1;
                                                                  statearr_340579_340953[1] = 103
                                                                }else {
                                                                  var statearr_340580_340954 = state_340487__$1;
                                                                  statearr_340580_340954[1] = 104
                                                                }
                                                                return"\ufdd0:recur"
                                                              }catch(e340576) {
                                                                if(e340576 instanceof Error) {
                                                                  var ex__5575__auto__ = e340576;
                                                                  var statearr_340577_340955 = state_340487;
                                                                  statearr_340577_340955[1] = 12;
                                                                  statearr_340577_340955[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e340576;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_340488 === 7) {
                                                                var inst_340270 = state_340487[10];
                                                                var inst_340270__$1 = state_340487[2];
                                                                var inst_340271 = cljs.core.seq_QMARK_.call(null, inst_340270__$1);
                                                                var state_340487__$1 = function() {
                                                                  var statearr_340581 = state_340487;
                                                                  statearr_340581[10] = inst_340270__$1;
                                                                  return statearr_340581
                                                                }();
                                                                if(inst_340271) {
                                                                  var statearr_340582_340956 = state_340487__$1;
                                                                  statearr_340582_340956[1] = 8
                                                                }else {
                                                                  var statearr_340583_340957 = state_340487__$1;
                                                                  statearr_340583_340957[1] = 9
                                                                }
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if(state_val_340488 === 39) {
                                                                  try {
                                                                    try {
                                                                      var inst_340318 = function() {
                                                                        throw cljs.core.match.backtrack;
                                                                      }();
                                                                      var state_340487__$1 = state_340487;
                                                                      var statearr_340588_340958 = state_340487__$1;
                                                                      statearr_340588_340958[2] = inst_340318;
                                                                      statearr_340588_340958[1] = 41;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e340586) {
                                                                      if(e340586 instanceof Error) {
                                                                        var ex__5575__auto__ = e340586;
                                                                        var statearr_340587_340959 = state_340487;
                                                                        statearr_340587_340959[1] = 22;
                                                                        statearr_340587_340959[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e340586;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e340584) {
                                                                    if(e340584 instanceof Error) {
                                                                      var ex__5575__auto__ = e340584;
                                                                      var statearr_340585_340960 = state_340487;
                                                                      statearr_340585_340960[1] = 31;
                                                                      statearr_340585_340960[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e340584;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_340488 === 71) {
                                                                    try {
                                                                      try {
                                                                        var state_340487__$1 = state_340487;
                                                                        if("\ufdd0:else") {
                                                                          var statearr_340593_340961 = state_340487__$1;
                                                                          statearr_340593_340961[1] = 73
                                                                        }else {
                                                                          var statearr_340594_340962 = state_340487__$1;
                                                                          statearr_340594_340962[1] = 74
                                                                        }
                                                                        return"\ufdd0:recur"
                                                                      }catch(e340591) {
                                                                        if(e340591 instanceof Error) {
                                                                          var ex__5575__auto__ = e340591;
                                                                          var statearr_340592_340963 = state_340487;
                                                                          statearr_340592_340963[1] = 17;
                                                                          statearr_340592_340963[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e340591;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }catch(e340589) {
                                                                      if(e340589 instanceof Error) {
                                                                        var ex__5575__auto__ = e340589;
                                                                        var statearr_340590_340964 = state_340487;
                                                                        statearr_340590_340964[1] = 65;
                                                                        statearr_340590_340964[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e340589;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }else {
                                                                    if(state_val_340488 === 103) {
                                                                      try {
                                                                        var inst_340446 = function() {
                                                                          throw cljs.core.match.backtrack;
                                                                        }();
                                                                        var state_340487__$1 = state_340487;
                                                                        var statearr_340597_340965 = state_340487__$1;
                                                                        statearr_340597_340965[2] = inst_340446;
                                                                        statearr_340597_340965[1] = 105;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e340595) {
                                                                        if(e340595 instanceof Error) {
                                                                          var ex__5575__auto__ = e340595;
                                                                          var statearr_340596_340966 = state_340487;
                                                                          statearr_340596_340966[1] = 12;
                                                                          statearr_340596_340966[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e340595;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_340488 === 8) {
                                                                        var inst_340270 = state_340487[10];
                                                                        var inst_340273 = cljs.core.apply.call(null, cljs.core.hash_map, inst_340270);
                                                                        var state_340487__$1 = state_340487;
                                                                        var statearr_340598_340967 = state_340487__$1;
                                                                        statearr_340598_340967[2] = inst_340273;
                                                                        statearr_340598_340967[1] = 10;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if(state_val_340488 === 40) {
                                                                          try {
                                                                            try {
                                                                              var state_340487__$1 = state_340487;
                                                                              var statearr_340603_340968 = state_340487__$1;
                                                                              statearr_340603_340968[2] = null;
                                                                              statearr_340603_340968[1] = 41;
                                                                              return"\ufdd0:recur"
                                                                            }catch(e340601) {
                                                                              if(e340601 instanceof Error) {
                                                                                var ex__5575__auto__ = e340601;
                                                                                var statearr_340602_340969 = state_340487;
                                                                                statearr_340602_340969[1] = 22;
                                                                                statearr_340602_340969[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e340601;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }catch(e340599) {
                                                                            if(e340599 instanceof Error) {
                                                                              var ex__5575__auto__ = e340599;
                                                                              var statearr_340600_340970 = state_340487;
                                                                              statearr_340600_340970[1] = 31;
                                                                              statearr_340600_340970[2] = ex__5575__auto__;
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if("\ufdd0:else") {
                                                                                throw e340599;
                                                                              }else {
                                                                                return null
                                                                              }
                                                                            }
                                                                          }
                                                                        }else {
                                                                          if(state_val_340488 === 72) {
                                                                            try {
                                                                              try {
                                                                                var inst_340390 = state_340487[2];
                                                                                var state_340487__$1 = state_340487;
                                                                                var statearr_340608_340971 = state_340487__$1;
                                                                                statearr_340608_340971[2] = inst_340390;
                                                                                statearr_340608_340971[1] = 64;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e340606) {
                                                                                if(e340606 instanceof Error) {
                                                                                  var ex__5575__auto__ = e340606;
                                                                                  var statearr_340607_340972 = state_340487;
                                                                                  statearr_340607_340972[1] = 17;
                                                                                  statearr_340607_340972[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e340606;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }catch(e340604) {
                                                                              if(e340604 instanceof Error) {
                                                                                var ex__5575__auto__ = e340604;
                                                                                var statearr_340605_340973 = state_340487;
                                                                                statearr_340605_340973[1] = 65;
                                                                                statearr_340605_340973[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e340604;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_340488 === 104) {
                                                                              try {
                                                                                var inst_340443 = state_340487[9];
                                                                                var inst_340448 = function() {
                                                                                  throw inst_340443;
                                                                                }();
                                                                                var state_340487__$1 = state_340487;
                                                                                var statearr_340611_340974 = state_340487__$1;
                                                                                statearr_340611_340974[2] = inst_340448;
                                                                                statearr_340611_340974[1] = 105;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e340609) {
                                                                                if(e340609 instanceof Error) {
                                                                                  var ex__5575__auto__ = e340609;
                                                                                  var statearr_340610_340975 = state_340487;
                                                                                  statearr_340610_340975[1] = 12;
                                                                                  statearr_340610_340975[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e340609;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }else {
                                                                              if(state_val_340488 === 9) {
                                                                                var inst_340270 = state_340487[10];
                                                                                var state_340487__$1 = state_340487;
                                                                                var statearr_340612_340976 = state_340487__$1;
                                                                                statearr_340612_340976[2] = inst_340270;
                                                                                statearr_340612_340976[1] = 10;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if(state_val_340488 === 41) {
                                                                                  try {
                                                                                    try {
                                                                                      var inst_340321 = state_340487[2];
                                                                                      var state_340487__$1 = state_340487;
                                                                                      var statearr_340617_340977 = state_340487__$1;
                                                                                      statearr_340617_340977[2] = inst_340321;
                                                                                      statearr_340617_340977[1] = 38;
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e340615) {
                                                                                      if(e340615 instanceof Error) {
                                                                                        var ex__5575__auto__ = e340615;
                                                                                        var statearr_340616_340978 = state_340487;
                                                                                        statearr_340616_340978[1] = 22;
                                                                                        statearr_340616_340978[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e340615;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }catch(e340613) {
                                                                                    if(e340613 instanceof Error) {
                                                                                      var ex__5575__auto__ = e340613;
                                                                                      var statearr_340614_340979 = state_340487;
                                                                                      statearr_340614_340979[1] = 31;
                                                                                      statearr_340614_340979[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e340613;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_340488 === 73) {
                                                                                    try {
                                                                                      try {
                                                                                        var inst_340385 = function() {
                                                                                          throw cljs.core.match.backtrack;
                                                                                        }();
                                                                                        var state_340487__$1 = state_340487;
                                                                                        var statearr_340622_340980 = state_340487__$1;
                                                                                        statearr_340622_340980[2] = inst_340385;
                                                                                        statearr_340622_340980[1] = 75;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e340620) {
                                                                                        if(e340620 instanceof Error) {
                                                                                          var ex__5575__auto__ = e340620;
                                                                                          var statearr_340621_340981 = state_340487;
                                                                                          statearr_340621_340981[1] = 17;
                                                                                          statearr_340621_340981[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e340620;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }catch(e340618) {
                                                                                      if(e340618 instanceof Error) {
                                                                                        var ex__5575__auto__ = e340618;
                                                                                        var statearr_340619_340982 = state_340487;
                                                                                        statearr_340619_340982[1] = 65;
                                                                                        statearr_340619_340982[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e340618;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_340488 === 105) {
                                                                                      try {
                                                                                        var inst_340450 = state_340487[2];
                                                                                        var state_340487__$1 = state_340487;
                                                                                        var statearr_340625_340983 = state_340487__$1;
                                                                                        statearr_340625_340983[2] = inst_340450;
                                                                                        statearr_340625_340983[1] = 101;
                                                                                        return"\ufdd0:recur"
                                                                                      }catch(e340623) {
                                                                                        if(e340623 instanceof Error) {
                                                                                          var ex__5575__auto__ = e340623;
                                                                                          var statearr_340624_340984 = state_340487;
                                                                                          statearr_340624_340984[1] = 12;
                                                                                          statearr_340624_340984[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e340623;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_340488 === 10) {
                                                                                        var inst_340276 = state_340487[11];
                                                                                        var inst_340276__$1 = state_340487[2];
                                                                                        var inst_340277 = cljs.core.get.call(null, inst_340276__$1, "\ufdd0:area");
                                                                                        var inst_340278 = cljs.core.get.call(null, inst_340276__$1, "\ufdd0:key");
                                                                                        var inst_340279 = cljs.core.get.call(null, inst_340276__$1, "\ufdd0:data");
                                                                                        var state_340487__$1 = function() {
                                                                                          var statearr_340626 = state_340487;
                                                                                          statearr_340626[12] = inst_340277;
                                                                                          statearr_340626[7] = inst_340278;
                                                                                          statearr_340626[8] = inst_340279;
                                                                                          statearr_340626[11] = inst_340276__$1;
                                                                                          return statearr_340626
                                                                                        }();
                                                                                        var statearr_340627_340985 = state_340487__$1;
                                                                                        statearr_340627_340985[2] = null;
                                                                                        statearr_340627_340985[1] = 79;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_340488 === 42) {
                                                                                          try {
                                                                                            var inst_340328 = function() {
                                                                                              throw cljs.core.match.backtrack;
                                                                                            }();
                                                                                            var state_340487__$1 = state_340487;
                                                                                            var statearr_340630_340986 = state_340487__$1;
                                                                                            statearr_340630_340986[2] = inst_340328;
                                                                                            statearr_340630_340986[1] = 44;
                                                                                            return"\ufdd0:recur"
                                                                                          }catch(e340628) {
                                                                                            if(e340628 instanceof Error) {
                                                                                              var ex__5575__auto__ = e340628;
                                                                                              var statearr_340629_340987 = state_340487;
                                                                                              statearr_340629_340987[1] = 22;
                                                                                              statearr_340629_340987[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e340628;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_340488 === 74) {
                                                                                            try {
                                                                                              try {
                                                                                                var state_340487__$1 = state_340487;
                                                                                                var statearr_340635_340988 = state_340487__$1;
                                                                                                statearr_340635_340988[2] = null;
                                                                                                statearr_340635_340988[1] = 75;
                                                                                                return"\ufdd0:recur"
                                                                                              }catch(e340633) {
                                                                                                if(e340633 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e340633;
                                                                                                  var statearr_340634_340989 = state_340487;
                                                                                                  statearr_340634_340989[1] = 17;
                                                                                                  statearr_340634_340989[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e340633;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }catch(e340631) {
                                                                                              if(e340631 instanceof Error) {
                                                                                                var ex__5575__auto__ = e340631;
                                                                                                var statearr_340632_340990 = state_340487;
                                                                                                statearr_340632_340990[1] = 65;
                                                                                                statearr_340632_340990[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e340631;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_340488 === 106) {
                                                                                              try {
                                                                                                try {
                                                                                                  var inst_340278 = state_340487[7];
                                                                                                  var inst_340453 = cljs.core._EQ_.call(null, inst_340278, "\ufdd0:logout");
                                                                                                  var state_340487__$1 = state_340487;
                                                                                                  if(inst_340453) {
                                                                                                    var statearr_340640_340991 = state_340487__$1;
                                                                                                    statearr_340640_340991[1] = 107
                                                                                                  }else {
                                                                                                    var statearr_340641_340992 = state_340487__$1;
                                                                                                    statearr_340641_340992[1] = 108
                                                                                                  }
                                                                                                  return"\ufdd0:recur"
                                                                                                }catch(e340638) {
                                                                                                  if(e340638 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e340638;
                                                                                                    var statearr_340639_340993 = state_340487;
                                                                                                    statearr_340639_340993[1] = 12;
                                                                                                    statearr_340639_340993[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e340638;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }catch(e340636) {
                                                                                                if(e340636 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e340636;
                                                                                                  var statearr_340637_340994 = state_340487;
                                                                                                  statearr_340637_340994[1] = 102;
                                                                                                  statearr_340637_340994[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e340636;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_340488 === 11) {
                                                                                                var inst_340479 = state_340487[2];
                                                                                                var state_340487__$1 = function() {
                                                                                                  var statearr_340642 = state_340487;
                                                                                                  statearr_340642[13] = inst_340479;
                                                                                                  return statearr_340642
                                                                                                }();
                                                                                                var statearr_340643_340995 = state_340487__$1;
                                                                                                statearr_340643_340995[2] = null;
                                                                                                statearr_340643_340995[1] = 2;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if(state_val_340488 === 43) {
                                                                                                  try {
                                                                                                    var state_340487__$1 = state_340487;
                                                                                                    var statearr_340646_340996 = state_340487__$1;
                                                                                                    statearr_340646_340996[2] = null;
                                                                                                    statearr_340646_340996[1] = 44;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e340644) {
                                                                                                    if(e340644 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e340644;
                                                                                                      var statearr_340645_340997 = state_340487;
                                                                                                      statearr_340645_340997[1] = 22;
                                                                                                      statearr_340645_340997[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e340644;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }else {
                                                                                                  if(state_val_340488 === 75) {
                                                                                                    try {
                                                                                                      try {
                                                                                                        var inst_340388 = state_340487[2];
                                                                                                        var state_340487__$1 = state_340487;
                                                                                                        var statearr_340651_340998 = state_340487__$1;
                                                                                                        statearr_340651_340998[2] = inst_340388;
                                                                                                        statearr_340651_340998[1] = 72;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }catch(e340649) {
                                                                                                        if(e340649 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e340649;
                                                                                                          var statearr_340650_340999 = state_340487;
                                                                                                          statearr_340650_340999[1] = 17;
                                                                                                          statearr_340650_340999[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e340649;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }catch(e340647) {
                                                                                                      if(e340647 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e340647;
                                                                                                        var statearr_340648_341000 = state_340487;
                                                                                                        statearr_340648_341000[1] = 65;
                                                                                                        statearr_340648_341000[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e340647;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_340488 === 107) {
                                                                                                      try {
                                                                                                        try {
                                                                                                          var inst_340455 = chatter_box.user_view_component.logout.call(null);
                                                                                                          var state_340487__$1 = state_340487;
                                                                                                          var statearr_340656_341001 = state_340487__$1;
                                                                                                          statearr_340656_341001[2] = inst_340455;
                                                                                                          statearr_340656_341001[1] = 109;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e340654) {
                                                                                                          if(e340654 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e340654;
                                                                                                            var statearr_340655_341002 = state_340487;
                                                                                                            statearr_340655_341002[1] = 12;
                                                                                                            statearr_340655_341002[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e340654;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }catch(e340652) {
                                                                                                        if(e340652 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e340652;
                                                                                                          var statearr_340653_341003 = state_340487;
                                                                                                          statearr_340653_341003[1] = 102;
                                                                                                          statearr_340653_341003[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e340652;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }else {
                                                                                                      if(state_val_340488 === 12) {
                                                                                                        var inst_340283 = state_340487[14];
                                                                                                        var inst_340283__$1 = state_340487[2];
                                                                                                        var inst_340284 = inst_340283__$1 === cljs.core.match.backtrack;
                                                                                                        var state_340487__$1 = function() {
                                                                                                          var statearr_340657 = state_340487;
                                                                                                          statearr_340657[14] = inst_340283__$1;
                                                                                                          return statearr_340657
                                                                                                        }();
                                                                                                        if(cljs.core.truth_(inst_340284)) {
                                                                                                          var statearr_340658_341004 = state_340487__$1;
                                                                                                          statearr_340658_341004[1] = 13
                                                                                                        }else {
                                                                                                          var statearr_340659_341005 = state_340487__$1;
                                                                                                          statearr_340659_341005[1] = 14
                                                                                                        }
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if(state_val_340488 === 44) {
                                                                                                          try {
                                                                                                            var inst_340331 = state_340487[2];
                                                                                                            var state_340487__$1 = state_340487;
                                                                                                            var statearr_340662_341006 = state_340487__$1;
                                                                                                            statearr_340662_341006[2] = inst_340331;
                                                                                                            statearr_340662_341006[1] = 29;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e340660) {
                                                                                                            if(e340660 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e340660;
                                                                                                              var statearr_340661_341007 = state_340487;
                                                                                                              statearr_340661_341007[1] = 22;
                                                                                                              statearr_340661_341007[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e340660;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_340488 === 76) {
                                                                                                            try {
                                                                                                              var inst_340395 = function() {
                                                                                                                throw cljs.core.match.backtrack;
                                                                                                              }();
                                                                                                              var state_340487__$1 = state_340487;
                                                                                                              var statearr_340665_341008 = state_340487__$1;
                                                                                                              statearr_340665_341008[2] = inst_340395;
                                                                                                              statearr_340665_341008[1] = 78;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }catch(e340663) {
                                                                                                              if(e340663 instanceof Error) {
                                                                                                                var ex__5575__auto__ = e340663;
                                                                                                                var statearr_340664_341009 = state_340487;
                                                                                                                statearr_340664_341009[1] = 17;
                                                                                                                statearr_340664_341009[2] = ex__5575__auto__;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if("\ufdd0:else") {
                                                                                                                  throw e340663;
                                                                                                                }else {
                                                                                                                  return null
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }else {
                                                                                                            if(state_val_340488 === 108) {
                                                                                                              try {
                                                                                                                try {
                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    var statearr_340670_341010 = state_340487__$1;
                                                                                                                    statearr_340670_341010[1] = 110
                                                                                                                  }else {
                                                                                                                    var statearr_340671_341011 = state_340487__$1;
                                                                                                                    statearr_340671_341011[1] = 111
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e340668) {
                                                                                                                  if(e340668 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e340668;
                                                                                                                    var statearr_340669_341012 = state_340487;
                                                                                                                    statearr_340669_341012[1] = 12;
                                                                                                                    statearr_340669_341012[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e340668;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }catch(e340666) {
                                                                                                                if(e340666 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e340666;
                                                                                                                  var statearr_340667_341013 = state_340487;
                                                                                                                  statearr_340667_341013[1] = 102;
                                                                                                                  statearr_340667_341013[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e340666;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_340488 === 13) {
                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                var statearr_340672_341014 = state_340487__$1;
                                                                                                                statearr_340672_341014[2] = null;
                                                                                                                statearr_340672_341014[1] = 45;
                                                                                                                return"\ufdd0:recur"
                                                                                                              }else {
                                                                                                                if(state_val_340488 === 45) {
                                                                                                                  try {
                                                                                                                    var inst_340277 = state_340487[12];
                                                                                                                    var inst_340342 = cljs.core._EQ_.call(null, inst_340277, "\ufdd0:security");
                                                                                                                    var state_340487__$1 = state_340487;
                                                                                                                    if(inst_340342) {
                                                                                                                      var statearr_340675_341015 = state_340487__$1;
                                                                                                                      statearr_340675_341015[1] = 46
                                                                                                                    }else {
                                                                                                                      var statearr_340676_341016 = state_340487__$1;
                                                                                                                      statearr_340676_341016[1] = 47
                                                                                                                    }
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e340673) {
                                                                                                                    if(e340673 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e340673;
                                                                                                                      var statearr_340674_341017 = state_340487;
                                                                                                                      statearr_340674_341017[1] = 17;
                                                                                                                      statearr_340674_341017[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e340673;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_340488 === 77) {
                                                                                                                    try {
                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                      var statearr_340679_341018 = state_340487__$1;
                                                                                                                      statearr_340679_341018[2] = null;
                                                                                                                      statearr_340679_341018[1] = 78;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }catch(e340677) {
                                                                                                                      if(e340677 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e340677;
                                                                                                                        var statearr_340678_341019 = state_340487;
                                                                                                                        statearr_340678_341019[1] = 17;
                                                                                                                        statearr_340678_341019[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e340677;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_340488 === 109) {
                                                                                                                      try {
                                                                                                                        try {
                                                                                                                          var inst_340463 = state_340487[2];
                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                          var statearr_340684_341020 = state_340487__$1;
                                                                                                                          statearr_340684_341020[2] = inst_340463;
                                                                                                                          statearr_340684_341020[1] = 101;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }catch(e340682) {
                                                                                                                          if(e340682 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e340682;
                                                                                                                            var statearr_340683_341021 = state_340487;
                                                                                                                            statearr_340683_341021[1] = 12;
                                                                                                                            statearr_340683_341021[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e340682;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }catch(e340680) {
                                                                                                                        if(e340680 instanceof Error) {
                                                                                                                          var ex__5575__auto__ = e340680;
                                                                                                                          var statearr_340681_341022 = state_340487;
                                                                                                                          statearr_340681_341022[1] = 102;
                                                                                                                          statearr_340681_341022[2] = ex__5575__auto__;
                                                                                                                          return"\ufdd0:recur"
                                                                                                                        }else {
                                                                                                                          if("\ufdd0:else") {
                                                                                                                            throw e340680;
                                                                                                                          }else {
                                                                                                                            return null
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      if(state_val_340488 === 14) {
                                                                                                                        var inst_340283 = state_340487[14];
                                                                                                                        var inst_340406 = function() {
                                                                                                                          throw inst_340283;
                                                                                                                        }();
                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                        var statearr_340685_341023 = state_340487__$1;
                                                                                                                        statearr_340685_341023[2] = inst_340406;
                                                                                                                        statearr_340685_341023[1] = 15;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if(state_val_340488 === 46) {
                                                                                                                          try {
                                                                                                                            var state_340487__$1 = state_340487;
                                                                                                                            var statearr_340688_341024 = state_340487__$1;
                                                                                                                            statearr_340688_341024[2] = null;
                                                                                                                            statearr_340688_341024[1] = 54;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e340686) {
                                                                                                                            if(e340686 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e340686;
                                                                                                                              var statearr_340687_341025 = state_340487;
                                                                                                                              statearr_340687_341025[1] = 17;
                                                                                                                              statearr_340687_341025[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e340686;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_340488 === 78) {
                                                                                                                            try {
                                                                                                                              var inst_340398 = state_340487[2];
                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                              var statearr_340691_341026 = state_340487__$1;
                                                                                                                              statearr_340691_341026[2] = inst_340398;
                                                                                                                              statearr_340691_341026[1] = 63;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }catch(e340689) {
                                                                                                                              if(e340689 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e340689;
                                                                                                                                var statearr_340690_341027 = state_340487;
                                                                                                                                statearr_340690_341027[1] = 17;
                                                                                                                                statearr_340690_341027[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e340689;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_340488 === 110) {
                                                                                                                              try {
                                                                                                                                try {
                                                                                                                                  var inst_340458 = function() {
                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                  }();
                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                  var statearr_340696_341028 = state_340487__$1;
                                                                                                                                  statearr_340696_341028[2] = inst_340458;
                                                                                                                                  statearr_340696_341028[1] = 112;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }catch(e340694) {
                                                                                                                                  if(e340694 instanceof Error) {
                                                                                                                                    var ex__5575__auto__ = e340694;
                                                                                                                                    var statearr_340695_341029 = state_340487;
                                                                                                                                    statearr_340695_341029[1] = 12;
                                                                                                                                    statearr_340695_341029[2] = ex__5575__auto__;
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }else {
                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                      throw e340694;
                                                                                                                                    }else {
                                                                                                                                      return null
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }catch(e340692) {
                                                                                                                                if(e340692 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e340692;
                                                                                                                                  var statearr_340693_341030 = state_340487;
                                                                                                                                  statearr_340693_341030[1] = 102;
                                                                                                                                  statearr_340693_341030[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e340692;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_340488 === 15) {
                                                                                                                                var inst_340408 = state_340487[2];
                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                var statearr_340697_341031 = state_340487__$1;
                                                                                                                                statearr_340697_341031[2] = inst_340408;
                                                                                                                                statearr_340697_341031[1] = 11;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if(state_val_340488 === 47) {
                                                                                                                                  try {
                                                                                                                                    var inst_340277 = state_340487[12];
                                                                                                                                    var inst_340368 = cljs.core._EQ_.call(null, inst_340277, "\ufdd0:user");
                                                                                                                                    var state_340487__$1 = state_340487;
                                                                                                                                    if(inst_340368) {
                                                                                                                                      var statearr_340700_341032 = state_340487__$1;
                                                                                                                                      statearr_340700_341032[1] = 61
                                                                                                                                    }else {
                                                                                                                                      var statearr_340701_341033 = state_340487__$1;
                                                                                                                                      statearr_340701_341033[1] = 62
                                                                                                                                    }
                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                  }catch(e340698) {
                                                                                                                                    if(e340698 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e340698;
                                                                                                                                      var statearr_340699_341034 = state_340487;
                                                                                                                                      statearr_340699_341034[1] = 17;
                                                                                                                                      statearr_340699_341034[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e340698;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_340488 === 79) {
                                                                                                                                    try {
                                                                                                                                      var inst_340277 = state_340487[12];
                                                                                                                                      var inst_340411 = cljs.core._EQ_.call(null, inst_340277, "\ufdd0:nav");
                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                      if(inst_340411) {
                                                                                                                                        var statearr_340704_341035 = state_340487__$1;
                                                                                                                                        statearr_340704_341035[1] = 80
                                                                                                                                      }else {
                                                                                                                                        var statearr_340705_341036 = state_340487__$1;
                                                                                                                                        statearr_340705_341036[1] = 81
                                                                                                                                      }
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }catch(e340702) {
                                                                                                                                      if(e340702 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e340702;
                                                                                                                                        var statearr_340703_341037 = state_340487;
                                                                                                                                        statearr_340703_341037[1] = 12;
                                                                                                                                        statearr_340703_341037[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e340702;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_340488 === 111) {
                                                                                                                                      try {
                                                                                                                                        try {
                                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                                          var statearr_340710_341038 = state_340487__$1;
                                                                                                                                          statearr_340710_341038[2] = null;
                                                                                                                                          statearr_340710_341038[1] = 112;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }catch(e340708) {
                                                                                                                                          if(e340708 instanceof Error) {
                                                                                                                                            var ex__5575__auto__ = e340708;
                                                                                                                                            var statearr_340709_341039 = state_340487;
                                                                                                                                            statearr_340709_341039[1] = 12;
                                                                                                                                            statearr_340709_341039[2] = ex__5575__auto__;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }else {
                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                              throw e340708;
                                                                                                                                            }else {
                                                                                                                                              return null
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }catch(e340706) {
                                                                                                                                        if(e340706 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e340706;
                                                                                                                                          var statearr_340707_341040 = state_340487;
                                                                                                                                          statearr_340707_341040[1] = 102;
                                                                                                                                          statearr_340707_341040[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e340706;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_340488 === 16) {
                                                                                                                                        var inst_340404 = state_340487[2];
                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                        var statearr_340711_341041 = state_340487__$1;
                                                                                                                                        statearr_340711_341041[2] = inst_340404;
                                                                                                                                        statearr_340711_341041[1] = 15;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if(state_val_340488 === 48) {
                                                                                                                                          try {
                                                                                                                                            var inst_340402 = state_340487[2];
                                                                                                                                            var state_340487__$1 = state_340487;
                                                                                                                                            var statearr_340714_341042 = state_340487__$1;
                                                                                                                                            statearr_340714_341042[2] = inst_340402;
                                                                                                                                            statearr_340714_341042[1] = 16;
                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                          }catch(e340712) {
                                                                                                                                            if(e340712 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e340712;
                                                                                                                                              var statearr_340713_341043 = state_340487;
                                                                                                                                              statearr_340713_341043[1] = 17;
                                                                                                                                              statearr_340713_341043[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e340712;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_340488 === 80) {
                                                                                                                                            try {
                                                                                                                                              var inst_340276 = state_340487[11];
                                                                                                                                              var inst_340413 = chatter_box.user_view_component.navigate.call(null, inst_340276);
                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                              var statearr_340717_341044 = state_340487__$1;
                                                                                                                                              statearr_340717_341044[2] = inst_340413;
                                                                                                                                              statearr_340717_341044[1] = 82;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }catch(e340715) {
                                                                                                                                              if(e340715 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e340715;
                                                                                                                                                var statearr_340716_341045 = state_340487;
                                                                                                                                                statearr_340716_341045[1] = 12;
                                                                                                                                                statearr_340716_341045[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e340715;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_340488 === 112) {
                                                                                                                                              try {
                                                                                                                                                try {
                                                                                                                                                  var inst_340461 = state_340487[2];
                                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                                  var statearr_340722_341046 = state_340487__$1;
                                                                                                                                                  statearr_340722_341046[2] = inst_340461;
                                                                                                                                                  statearr_340722_341046[1] = 109;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }catch(e340720) {
                                                                                                                                                  if(e340720 instanceof Error) {
                                                                                                                                                    var ex__5575__auto__ = e340720;
                                                                                                                                                    var statearr_340721_341047 = state_340487;
                                                                                                                                                    statearr_340721_341047[1] = 12;
                                                                                                                                                    statearr_340721_341047[2] = ex__5575__auto__;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }else {
                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                      throw e340720;
                                                                                                                                                    }else {
                                                                                                                                                      return null
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }catch(e340718) {
                                                                                                                                                if(e340718 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e340718;
                                                                                                                                                  var statearr_340719_341048 = state_340487;
                                                                                                                                                  statearr_340719_341048[1] = 102;
                                                                                                                                                  statearr_340719_341048[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e340718;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_340488 === 17) {
                                                                                                                                                var inst_340286 = state_340487[15];
                                                                                                                                                var inst_340286__$1 = state_340487[2];
                                                                                                                                                var inst_340287 = inst_340286__$1 === cljs.core.match.backtrack;
                                                                                                                                                var state_340487__$1 = function() {
                                                                                                                                                  var statearr_340723 = state_340487;
                                                                                                                                                  statearr_340723[15] = inst_340286__$1;
                                                                                                                                                  return statearr_340723
                                                                                                                                                }();
                                                                                                                                                if(cljs.core.truth_(inst_340287)) {
                                                                                                                                                  var statearr_340724_341049 = state_340487__$1;
                                                                                                                                                  statearr_340724_341049[1] = 18
                                                                                                                                                }else {
                                                                                                                                                  var statearr_340725_341050 = state_340487__$1;
                                                                                                                                                  statearr_340725_341050[1] = 19
                                                                                                                                                }
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if(state_val_340488 === 49) {
                                                                                                                                                  try {
                                                                                                                                                    var inst_340366 = state_340487[2];
                                                                                                                                                    var state_340487__$1 = state_340487;
                                                                                                                                                    var statearr_340728_341051 = state_340487__$1;
                                                                                                                                                    statearr_340728_341051[2] = inst_340366;
                                                                                                                                                    statearr_340728_341051[1] = 48;
                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                  }catch(e340726) {
                                                                                                                                                    if(e340726 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e340726;
                                                                                                                                                      var statearr_340727_341052 = state_340487;
                                                                                                                                                      statearr_340727_341052[1] = 17;
                                                                                                                                                      statearr_340727_341052[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e340726;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_340488 === 81) {
                                                                                                                                                    try {
                                                                                                                                                      var inst_340277 = state_340487[12];
                                                                                                                                                      var inst_340415 = cljs.core._EQ_.call(null, inst_340277, "\ufdd0:view");
                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                      if(inst_340415) {
                                                                                                                                                        var statearr_340731_341053 = state_340487__$1;
                                                                                                                                                        statearr_340731_341053[1] = 83
                                                                                                                                                      }else {
                                                                                                                                                        var statearr_340732_341054 = state_340487__$1;
                                                                                                                                                        statearr_340732_341054[1] = 84
                                                                                                                                                      }
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e340729) {
                                                                                                                                                      if(e340729 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e340729;
                                                                                                                                                        var statearr_340730_341055 = state_340487;
                                                                                                                                                        statearr_340730_341055[1] = 12;
                                                                                                                                                        statearr_340730_341055[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e340729;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_340488 === 113) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_340468 = function() {
                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                        }();
                                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                                        var statearr_340735_341056 = state_340487__$1;
                                                                                                                                                        statearr_340735_341056[2] = inst_340468;
                                                                                                                                                        statearr_340735_341056[1] = 115;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e340733) {
                                                                                                                                                        if(e340733 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e340733;
                                                                                                                                                          var statearr_340734_341057 = state_340487;
                                                                                                                                                          statearr_340734_341057[1] = 12;
                                                                                                                                                          statearr_340734_341057[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e340733;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_340488 === 18) {
                                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                                        var statearr_340736_341058 = state_340487__$1;
                                                                                                                                                        statearr_340736_341058[2] = null;
                                                                                                                                                        statearr_340736_341058[1] = 26;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_340488 === 50) {
                                                                                                                                                          try {
                                                                                                                                                            var inst_340344 = state_340487[16];
                                                                                                                                                            var inst_340344__$1 = state_340487[2];
                                                                                                                                                            var inst_340345 = inst_340344__$1 === cljs.core.match.backtrack;
                                                                                                                                                            var state_340487__$1 = function() {
                                                                                                                                                              var statearr_340739 = state_340487;
                                                                                                                                                              statearr_340739[16] = inst_340344__$1;
                                                                                                                                                              return statearr_340739
                                                                                                                                                            }();
                                                                                                                                                            if(cljs.core.truth_(inst_340345)) {
                                                                                                                                                              var statearr_340740_341059 = state_340487__$1;
                                                                                                                                                              statearr_340740_341059[1] = 51
                                                                                                                                                            }else {
                                                                                                                                                              var statearr_340741_341060 = state_340487__$1;
                                                                                                                                                              statearr_340741_341060[1] = 52
                                                                                                                                                            }
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }catch(e340737) {
                                                                                                                                                            if(e340737 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e340737;
                                                                                                                                                              var statearr_340738_341061 = state_340487;
                                                                                                                                                              statearr_340738_341061[1] = 17;
                                                                                                                                                              statearr_340738_341061[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e340737;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_340488 === 82) {
                                                                                                                                                            try {
                                                                                                                                                              var inst_340477 = state_340487[2];
                                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                                              var statearr_340744_341062 = state_340487__$1;
                                                                                                                                                              statearr_340744_341062[2] = inst_340477;
                                                                                                                                                              statearr_340744_341062[1] = 11;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }catch(e340742) {
                                                                                                                                                              if(e340742 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e340742;
                                                                                                                                                                var statearr_340743_341063 = state_340487;
                                                                                                                                                                statearr_340743_341063[1] = 12;
                                                                                                                                                                statearr_340743_341063[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e340742;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_340488 === 114) {
                                                                                                                                                              try {
                                                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                                                var statearr_340747_341064 = state_340487__$1;
                                                                                                                                                                statearr_340747_341064[2] = null;
                                                                                                                                                                statearr_340747_341064[1] = 115;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e340745) {
                                                                                                                                                                if(e340745 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e340745;
                                                                                                                                                                  var statearr_340746_341065 = state_340487;
                                                                                                                                                                  statearr_340746_341065[1] = 12;
                                                                                                                                                                  statearr_340746_341065[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e340745;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_340488 === 19) {
                                                                                                                                                                var inst_340286 = state_340487[15];
                                                                                                                                                                var inst_340337 = function() {
                                                                                                                                                                  throw inst_340286;
                                                                                                                                                                }();
                                                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                                                var statearr_340748_341066 = state_340487__$1;
                                                                                                                                                                statearr_340748_341066[2] = inst_340337;
                                                                                                                                                                statearr_340748_341066[1] = 20;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_340488 === 51) {
                                                                                                                                                                  try {
                                                                                                                                                                    var inst_340347 = function() {
                                                                                                                                                                      throw cljs.core.match.backtrack;
                                                                                                                                                                    }();
                                                                                                                                                                    var state_340487__$1 = state_340487;
                                                                                                                                                                    var statearr_340751_341067 = state_340487__$1;
                                                                                                                                                                    statearr_340751_341067[2] = inst_340347;
                                                                                                                                                                    statearr_340751_341067[1] = 53;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e340749) {
                                                                                                                                                                    if(e340749 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e340749;
                                                                                                                                                                      var statearr_340750_341068 = state_340487;
                                                                                                                                                                      statearr_340750_341068[1] = 17;
                                                                                                                                                                      statearr_340750_341068[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e340749;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_340488 === 83) {
                                                                                                                                                                    try {
                                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                                      var statearr_340754_341069 = state_340487__$1;
                                                                                                                                                                      statearr_340754_341069[2] = null;
                                                                                                                                                                      statearr_340754_341069[1] = 91;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }catch(e340752) {
                                                                                                                                                                      if(e340752 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e340752;
                                                                                                                                                                        var statearr_340753_341070 = state_340487;
                                                                                                                                                                        statearr_340753_341070[1] = 12;
                                                                                                                                                                        statearr_340753_341070[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e340752;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_340488 === 115) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_340471 = state_340487[2];
                                                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                                                        var statearr_340757_341071 = state_340487__$1;
                                                                                                                                                                        statearr_340757_341071[2] = inst_340471;
                                                                                                                                                                        statearr_340757_341071[1] = 100;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e340755) {
                                                                                                                                                                        if(e340755 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e340755;
                                                                                                                                                                          var statearr_340756_341072 = state_340487;
                                                                                                                                                                          statearr_340756_341072[1] = 12;
                                                                                                                                                                          statearr_340756_341072[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e340755;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_340488 === 20) {
                                                                                                                                                                        var inst_340339 = state_340487[2];
                                                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                                                        var statearr_340758_341073 = state_340487__$1;
                                                                                                                                                                        statearr_340758_341073[2] = inst_340339;
                                                                                                                                                                        statearr_340758_341073[1] = 16;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_340488 === 52) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_340344 = state_340487[16];
                                                                                                                                                                            var inst_340349 = function() {
                                                                                                                                                                              throw inst_340344;
                                                                                                                                                                            }();
                                                                                                                                                                            var state_340487__$1 = state_340487;
                                                                                                                                                                            var statearr_340761_341074 = state_340487__$1;
                                                                                                                                                                            statearr_340761_341074[2] = inst_340349;
                                                                                                                                                                            statearr_340761_341074[1] = 53;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e340759) {
                                                                                                                                                                            if(e340759 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e340759;
                                                                                                                                                                              var statearr_340760_341075 = state_340487;
                                                                                                                                                                              statearr_340760_341075[1] = 17;
                                                                                                                                                                              statearr_340760_341075[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e340759;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_340488 === 84) {
                                                                                                                                                                            try {
                                                                                                                                                                              var inst_340277 = state_340487[12];
                                                                                                                                                                              var inst_340441 = cljs.core._EQ_.call(null, inst_340277, "\ufdd0:security");
                                                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                                                              if(inst_340441) {
                                                                                                                                                                                var statearr_340764_341076 = state_340487__$1;
                                                                                                                                                                                statearr_340764_341076[1] = 98
                                                                                                                                                                              }else {
                                                                                                                                                                                var statearr_340765_341077 = state_340487__$1;
                                                                                                                                                                                statearr_340765_341077[1] = 99
                                                                                                                                                                              }
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }catch(e340762) {
                                                                                                                                                                              if(e340762 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e340762;
                                                                                                                                                                                var statearr_340763_341078 = state_340487;
                                                                                                                                                                                statearr_340763_341078[1] = 12;
                                                                                                                                                                                statearr_340763_341078[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e340762;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_340488 === 21) {
                                                                                                                                                                              var inst_340335 = state_340487[2];
                                                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                                                              var statearr_340766_341079 = state_340487__$1;
                                                                                                                                                                              statearr_340766_341079[2] = inst_340335;
                                                                                                                                                                              statearr_340766_341079[1] = 20;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if(state_val_340488 === 53) {
                                                                                                                                                                                try {
                                                                                                                                                                                  var inst_340351 = state_340487[2];
                                                                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                                                                  var statearr_340769_341080 = state_340487__$1;
                                                                                                                                                                                  statearr_340769_341080[2] = inst_340351;
                                                                                                                                                                                  statearr_340769_341080[1] = 49;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }catch(e340767) {
                                                                                                                                                                                  if(e340767 instanceof Error) {
                                                                                                                                                                                    var ex__5575__auto__ = e340767;
                                                                                                                                                                                    var statearr_340768_341081 = state_340487;
                                                                                                                                                                                    statearr_340768_341081[1] = 17;
                                                                                                                                                                                    statearr_340768_341081[2] = ex__5575__auto__;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                      throw e340767;
                                                                                                                                                                                    }else {
                                                                                                                                                                                      return null
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }else {
                                                                                                                                                                                if(state_val_340488 === 85) {
                                                                                                                                                                                  try {
                                                                                                                                                                                    var inst_340475 = state_340487[2];
                                                                                                                                                                                    var state_340487__$1 = state_340487;
                                                                                                                                                                                    var statearr_340772_341082 = state_340487__$1;
                                                                                                                                                                                    statearr_340772_341082[2] = inst_340475;
                                                                                                                                                                                    statearr_340772_341082[1] = 82;
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }catch(e340770) {
                                                                                                                                                                                    if(e340770 instanceof Error) {
                                                                                                                                                                                      var ex__5575__auto__ = e340770;
                                                                                                                                                                                      var statearr_340771_341083 = state_340487;
                                                                                                                                                                                      statearr_340771_341083[1] = 12;
                                                                                                                                                                                      statearr_340771_341083[2] = ex__5575__auto__;
                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                        throw e340770;
                                                                                                                                                                                      }else {
                                                                                                                                                                                        return null
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }else {
                                                                                                                                                                                  if(state_val_340488 === 22) {
                                                                                                                                                                                    var inst_340289 = state_340487[17];
                                                                                                                                                                                    var inst_340289__$1 = state_340487[2];
                                                                                                                                                                                    var inst_340290 = inst_340289__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                    var state_340487__$1 = function() {
                                                                                                                                                                                      var statearr_340773 = state_340487;
                                                                                                                                                                                      statearr_340773[17] = inst_340289__$1;
                                                                                                                                                                                      return statearr_340773
                                                                                                                                                                                    }();
                                                                                                                                                                                    if(cljs.core.truth_(inst_340290)) {
                                                                                                                                                                                      var statearr_340774_341084 = state_340487__$1;
                                                                                                                                                                                      statearr_340774_341084[1] = 23
                                                                                                                                                                                    }else {
                                                                                                                                                                                      var statearr_340775_341085 = state_340487__$1;
                                                                                                                                                                                      statearr_340775_341085[1] = 24
                                                                                                                                                                                    }
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if(state_val_340488 === 54) {
                                                                                                                                                                                      try {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_340278 = state_340487[7];
                                                                                                                                                                                          var inst_340354 = cljs.core._EQ_.call(null, inst_340278, "\ufdd0:login-success");
                                                                                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                                                                                          if(inst_340354) {
                                                                                                                                                                                            var statearr_340780_341086 = state_340487__$1;
                                                                                                                                                                                            statearr_340780_341086[1] = 55
                                                                                                                                                                                          }else {
                                                                                                                                                                                            var statearr_340781_341087 = state_340487__$1;
                                                                                                                                                                                            statearr_340781_341087[1] = 56
                                                                                                                                                                                          }
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e340778) {
                                                                                                                                                                                          if(e340778 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e340778;
                                                                                                                                                                                            var statearr_340779_341088 = state_340487;
                                                                                                                                                                                            statearr_340779_341088[1] = 17;
                                                                                                                                                                                            statearr_340779_341088[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e340778;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }catch(e340776) {
                                                                                                                                                                                        if(e340776 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e340776;
                                                                                                                                                                                          var statearr_340777_341089 = state_340487;
                                                                                                                                                                                          statearr_340777_341089[1] = 50;
                                                                                                                                                                                          statearr_340777_341089[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e340776;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if(state_val_340488 === 86) {
                                                                                                                                                                                        try {
                                                                                                                                                                                          var inst_340439 = state_340487[2];
                                                                                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                                                                                          var statearr_340784_341090 = state_340487__$1;
                                                                                                                                                                                          statearr_340784_341090[2] = inst_340439;
                                                                                                                                                                                          statearr_340784_341090[1] = 85;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }catch(e340782) {
                                                                                                                                                                                          if(e340782 instanceof Error) {
                                                                                                                                                                                            var ex__5575__auto__ = e340782;
                                                                                                                                                                                            var statearr_340783_341091 = state_340487;
                                                                                                                                                                                            statearr_340783_341091[1] = 12;
                                                                                                                                                                                            statearr_340783_341091[2] = ex__5575__auto__;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                              throw e340782;
                                                                                                                                                                                            }else {
                                                                                                                                                                                              return null
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if(state_val_340488 === 23) {
                                                                                                                                                                                          var inst_340277 = state_340487[12];
                                                                                                                                                                                          var inst_340278 = state_340487[7];
                                                                                                                                                                                          var inst_340292 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_340277), cljs.core.str(" "), cljs.core.str(inst_340278)].join("");
                                                                                                                                                                                          var inst_340293 = new Error(inst_340292);
                                                                                                                                                                                          var inst_340294 = function() {
                                                                                                                                                                                            throw inst_340293;
                                                                                                                                                                                          }();
                                                                                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                                                                                          var statearr_340785_341092 = state_340487__$1;
                                                                                                                                                                                          statearr_340785_341092[2] = inst_340294;
                                                                                                                                                                                          statearr_340785_341092[1] = 25;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if(state_val_340488 === 55) {
                                                                                                                                                                                            try {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_340279 = state_340487[8];
                                                                                                                                                                                                var inst_340356 = chatter_box.user_view_component.login_success.call(null, inst_340279);
                                                                                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                                                                                var statearr_340790_341093 = state_340487__$1;
                                                                                                                                                                                                statearr_340790_341093[2] = inst_340356;
                                                                                                                                                                                                statearr_340790_341093[1] = 57;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e340788) {
                                                                                                                                                                                                if(e340788 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e340788;
                                                                                                                                                                                                  var statearr_340789_341094 = state_340487;
                                                                                                                                                                                                  statearr_340789_341094[1] = 17;
                                                                                                                                                                                                  statearr_340789_341094[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e340788;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }catch(e340786) {
                                                                                                                                                                                              if(e340786 instanceof Error) {
                                                                                                                                                                                                var ex__5575__auto__ = e340786;
                                                                                                                                                                                                var statearr_340787_341095 = state_340487;
                                                                                                                                                                                                statearr_340787_341095[1] = 50;
                                                                                                                                                                                                statearr_340787_341095[2] = ex__5575__auto__;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                  throw e340786;
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  return null
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if(state_val_340488 === 87) {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var inst_340417 = state_340487[18];
                                                                                                                                                                                                var inst_340417__$1 = state_340487[2];
                                                                                                                                                                                                var inst_340418 = inst_340417__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                var state_340487__$1 = function() {
                                                                                                                                                                                                  var statearr_340793 = state_340487;
                                                                                                                                                                                                  statearr_340793[18] = inst_340417__$1;
                                                                                                                                                                                                  return statearr_340793
                                                                                                                                                                                                }();
                                                                                                                                                                                                if(cljs.core.truth_(inst_340418)) {
                                                                                                                                                                                                  var statearr_340794_341096 = state_340487__$1;
                                                                                                                                                                                                  statearr_340794_341096[1] = 88
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  var statearr_340795_341097 = state_340487__$1;
                                                                                                                                                                                                  statearr_340795_341097[1] = 89
                                                                                                                                                                                                }
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e340791) {
                                                                                                                                                                                                if(e340791 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e340791;
                                                                                                                                                                                                  var statearr_340792_341098 = state_340487;
                                                                                                                                                                                                  statearr_340792_341098[1] = 12;
                                                                                                                                                                                                  statearr_340792_341098[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e340791;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if(state_val_340488 === 24) {
                                                                                                                                                                                                var inst_340289 = state_340487[17];
                                                                                                                                                                                                var inst_340296 = function() {
                                                                                                                                                                                                  throw inst_340289;
                                                                                                                                                                                                }();
                                                                                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                                                                                var statearr_340796_341099 = state_340487__$1;
                                                                                                                                                                                                statearr_340796_341099[2] = inst_340296;
                                                                                                                                                                                                statearr_340796_341099[1] = 25;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if(state_val_340488 === 56) {
                                                                                                                                                                                                  try {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        var statearr_340801_341100 = state_340487__$1;
                                                                                                                                                                                                        statearr_340801_341100[1] = 58
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        var statearr_340802_341101 = state_340487__$1;
                                                                                                                                                                                                        statearr_340802_341101[1] = 59
                                                                                                                                                                                                      }
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e340799) {
                                                                                                                                                                                                      if(e340799 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e340799;
                                                                                                                                                                                                        var statearr_340800_341102 = state_340487;
                                                                                                                                                                                                        statearr_340800_341102[1] = 17;
                                                                                                                                                                                                        statearr_340800_341102[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e340799;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }catch(e340797) {
                                                                                                                                                                                                    if(e340797 instanceof Error) {
                                                                                                                                                                                                      var ex__5575__auto__ = e340797;
                                                                                                                                                                                                      var statearr_340798_341103 = state_340487;
                                                                                                                                                                                                      statearr_340798_341103[1] = 50;
                                                                                                                                                                                                      statearr_340798_341103[2] = ex__5575__auto__;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        throw e340797;
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        return null
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if(state_val_340488 === 88) {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      var inst_340420 = function() {
                                                                                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                                                                                      }();
                                                                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                                                                      var statearr_340805_341104 = state_340487__$1;
                                                                                                                                                                                                      statearr_340805_341104[2] = inst_340420;
                                                                                                                                                                                                      statearr_340805_341104[1] = 90;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }catch(e340803) {
                                                                                                                                                                                                      if(e340803 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e340803;
                                                                                                                                                                                                        var statearr_340804_341105 = state_340487;
                                                                                                                                                                                                        statearr_340804_341105[1] = 12;
                                                                                                                                                                                                        statearr_340804_341105[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e340803;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if(state_val_340488 === 25) {
                                                                                                                                                                                                      var inst_340298 = state_340487[2];
                                                                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                                                                      var statearr_340806_341106 = state_340487__$1;
                                                                                                                                                                                                      statearr_340806_341106[2] = inst_340298;
                                                                                                                                                                                                      statearr_340806_341106[1] = 21;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if(state_val_340488 === 57) {
                                                                                                                                                                                                        try {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_340364 = state_340487[2];
                                                                                                                                                                                                            var state_340487__$1 = state_340487;
                                                                                                                                                                                                            var statearr_340811_341107 = state_340487__$1;
                                                                                                                                                                                                            statearr_340811_341107[2] = inst_340364;
                                                                                                                                                                                                            statearr_340811_341107[1] = 49;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e340809) {
                                                                                                                                                                                                            if(e340809 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e340809;
                                                                                                                                                                                                              var statearr_340810_341108 = state_340487;
                                                                                                                                                                                                              statearr_340810_341108[1] = 17;
                                                                                                                                                                                                              statearr_340810_341108[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e340809;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }catch(e340807) {
                                                                                                                                                                                                          if(e340807 instanceof Error) {
                                                                                                                                                                                                            var ex__5575__auto__ = e340807;
                                                                                                                                                                                                            var statearr_340808_341109 = state_340487;
                                                                                                                                                                                                            statearr_340808_341109[1] = 50;
                                                                                                                                                                                                            statearr_340808_341109[2] = ex__5575__auto__;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                              throw e340807;
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              return null
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if(state_val_340488 === 89) {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_340417 = state_340487[18];
                                                                                                                                                                                                            var inst_340422 = function() {
                                                                                                                                                                                                              throw inst_340417;
                                                                                                                                                                                                            }();
                                                                                                                                                                                                            var state_340487__$1 = state_340487;
                                                                                                                                                                                                            var statearr_340814_341110 = state_340487__$1;
                                                                                                                                                                                                            statearr_340814_341110[2] = inst_340422;
                                                                                                                                                                                                            statearr_340814_341110[1] = 90;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e340812) {
                                                                                                                                                                                                            if(e340812 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e340812;
                                                                                                                                                                                                              var statearr_340813_341111 = state_340487;
                                                                                                                                                                                                              statearr_340813_341111[1] = 12;
                                                                                                                                                                                                              statearr_340813_341111[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e340812;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if(state_val_340488 === 26) {
                                                                                                                                                                                                            try {
                                                                                                                                                                                                              var inst_340277 = state_340487[12];
                                                                                                                                                                                                              var inst_340301 = cljs.core._EQ_.call(null, inst_340277, "\ufdd0:user");
                                                                                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                                                                                              if(inst_340301) {
                                                                                                                                                                                                                var statearr_340817_341112 = state_340487__$1;
                                                                                                                                                                                                                statearr_340817_341112[1] = 27
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                var statearr_340818_341113 = state_340487__$1;
                                                                                                                                                                                                                statearr_340818_341113[1] = 28
                                                                                                                                                                                                              }
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }catch(e340815) {
                                                                                                                                                                                                              if(e340815 instanceof Error) {
                                                                                                                                                                                                                var ex__5575__auto__ = e340815;
                                                                                                                                                                                                                var statearr_340816_341114 = state_340487;
                                                                                                                                                                                                                statearr_340816_341114[1] = 22;
                                                                                                                                                                                                                statearr_340816_341114[2] = ex__5575__auto__;
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                  throw e340815;
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if(state_val_340488 === 58) {
                                                                                                                                                                                                              try {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_340359 = function() {
                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                                                                                                  var statearr_340823_341115 = state_340487__$1;
                                                                                                                                                                                                                  statearr_340823_341115[2] = inst_340359;
                                                                                                                                                                                                                  statearr_340823_341115[1] = 60;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e340821) {
                                                                                                                                                                                                                  if(e340821 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e340821;
                                                                                                                                                                                                                    var statearr_340822_341116 = state_340487;
                                                                                                                                                                                                                    statearr_340822_341116[1] = 17;
                                                                                                                                                                                                                    statearr_340822_341116[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e340821;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }catch(e340819) {
                                                                                                                                                                                                                if(e340819 instanceof Error) {
                                                                                                                                                                                                                  var ex__5575__auto__ = e340819;
                                                                                                                                                                                                                  var statearr_340820_341117 = state_340487;
                                                                                                                                                                                                                  statearr_340820_341117[1] = 50;
                                                                                                                                                                                                                  statearr_340820_341117[2] = ex__5575__auto__;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    throw e340819;
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if(state_val_340488 === 90) {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var inst_340424 = state_340487[2];
                                                                                                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                                                                                                  var statearr_340826_341118 = state_340487__$1;
                                                                                                                                                                                                                  statearr_340826_341118[2] = inst_340424;
                                                                                                                                                                                                                  statearr_340826_341118[1] = 86;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e340824) {
                                                                                                                                                                                                                  if(e340824 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e340824;
                                                                                                                                                                                                                    var statearr_340825_341119 = state_340487;
                                                                                                                                                                                                                    statearr_340825_341119[1] = 12;
                                                                                                                                                                                                                    statearr_340825_341119[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e340824;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if(state_val_340488 === 27) {
                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                    var state_340487__$1 = state_340487;
                                                                                                                                                                                                                    var statearr_340829_341120 = state_340487__$1;
                                                                                                                                                                                                                    statearr_340829_341120[2] = null;
                                                                                                                                                                                                                    statearr_340829_341120[1] = 35;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }catch(e340827) {
                                                                                                                                                                                                                    if(e340827 instanceof Error) {
                                                                                                                                                                                                                      var ex__5575__auto__ = e340827;
                                                                                                                                                                                                                      var statearr_340828_341121 = state_340487;
                                                                                                                                                                                                                      statearr_340828_341121[1] = 22;
                                                                                                                                                                                                                      statearr_340828_341121[2] = ex__5575__auto__;
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        throw e340827;
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if(state_val_340488 === 59) {
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                                                                                                        var statearr_340834_341122 = state_340487__$1;
                                                                                                                                                                                                                        statearr_340834_341122[2] = null;
                                                                                                                                                                                                                        statearr_340834_341122[1] = 60;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }catch(e340832) {
                                                                                                                                                                                                                        if(e340832 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e340832;
                                                                                                                                                                                                                          var statearr_340833_341123 = state_340487;
                                                                                                                                                                                                                          statearr_340833_341123[1] = 17;
                                                                                                                                                                                                                          statearr_340833_341123[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e340832;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }catch(e340830) {
                                                                                                                                                                                                                      if(e340830 instanceof Error) {
                                                                                                                                                                                                                        var ex__5575__auto__ = e340830;
                                                                                                                                                                                                                        var statearr_340831_341124 = state_340487;
                                                                                                                                                                                                                        statearr_340831_341124[1] = 50;
                                                                                                                                                                                                                        statearr_340831_341124[2] = ex__5575__auto__;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                          throw e340830;
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if(state_val_340488 === 91) {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var inst_340278 = state_340487[7];
                                                                                                                                                                                                                          var inst_340427 = cljs.core._EQ_.call(null, inst_340278, "\ufdd0:init");
                                                                                                                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                                                                                                                          if(inst_340427) {
                                                                                                                                                                                                                            var statearr_340839_341125 = state_340487__$1;
                                                                                                                                                                                                                            statearr_340839_341125[1] = 92
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_340840_341126 = state_340487__$1;
                                                                                                                                                                                                                            statearr_340840_341126[1] = 93
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e340837) {
                                                                                                                                                                                                                          if(e340837 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e340837;
                                                                                                                                                                                                                            var statearr_340838_341127 = state_340487;
                                                                                                                                                                                                                            statearr_340838_341127[1] = 12;
                                                                                                                                                                                                                            statearr_340838_341127[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e340837;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }catch(e340835) {
                                                                                                                                                                                                                        if(e340835 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e340835;
                                                                                                                                                                                                                          var statearr_340836_341128 = state_340487;
                                                                                                                                                                                                                          statearr_340836_341128[1] = 87;
                                                                                                                                                                                                                          statearr_340836_341128[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e340835;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if(state_val_340488 === 28) {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var state_340487__$1 = state_340487;
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            var statearr_340843_341129 = state_340487__$1;
                                                                                                                                                                                                                            statearr_340843_341129[1] = 42
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            var statearr_340844_341130 = state_340487__$1;
                                                                                                                                                                                                                            statearr_340844_341130[1] = 43
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e340841) {
                                                                                                                                                                                                                          if(e340841 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e340841;
                                                                                                                                                                                                                            var statearr_340842_341131 = state_340487;
                                                                                                                                                                                                                            statearr_340842_341131[1] = 22;
                                                                                                                                                                                                                            statearr_340842_341131[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e340841;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if(state_val_340488 === 60) {
                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              var inst_340362 = state_340487[2];
                                                                                                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                                                                                                              var statearr_340849_341132 = state_340487__$1;
                                                                                                                                                                                                                              statearr_340849_341132[2] = inst_340362;
                                                                                                                                                                                                                              statearr_340849_341132[1] = 57;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }catch(e340847) {
                                                                                                                                                                                                                              if(e340847 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e340847;
                                                                                                                                                                                                                                var statearr_340848_341133 = state_340487;
                                                                                                                                                                                                                                statearr_340848_341133[1] = 17;
                                                                                                                                                                                                                                statearr_340848_341133[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e340847;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }catch(e340845) {
                                                                                                                                                                                                                            if(e340845 instanceof Error) {
                                                                                                                                                                                                                              var ex__5575__auto__ = e340845;
                                                                                                                                                                                                                              var statearr_340846_341134 = state_340487;
                                                                                                                                                                                                                              statearr_340846_341134[1] = 50;
                                                                                                                                                                                                                              statearr_340846_341134[2] = ex__5575__auto__;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                throw e340845;
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if(state_val_340488 === 92) {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_340429 = chatter_box.user_view_component.initialize.call(null);
                                                                                                                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                var statearr_340854_341135 = state_340487__$1;
                                                                                                                                                                                                                                statearr_340854_341135[2] = inst_340429;
                                                                                                                                                                                                                                statearr_340854_341135[1] = 94;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e340852) {
                                                                                                                                                                                                                                if(e340852 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e340852;
                                                                                                                                                                                                                                  var statearr_340853_341136 = state_340487;
                                                                                                                                                                                                                                  statearr_340853_341136[1] = 12;
                                                                                                                                                                                                                                  statearr_340853_341136[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e340852;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }catch(e340850) {
                                                                                                                                                                                                                              if(e340850 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e340850;
                                                                                                                                                                                                                                var statearr_340851_341137 = state_340487;
                                                                                                                                                                                                                                statearr_340851_341137[1] = 87;
                                                                                                                                                                                                                                statearr_340851_341137[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e340850;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if(state_val_340488 === 29) {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                var inst_340333 = state_340487[2];
                                                                                                                                                                                                                                var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                var statearr_340857_341138 = state_340487__$1;
                                                                                                                                                                                                                                statearr_340857_341138[2] = inst_340333;
                                                                                                                                                                                                                                statearr_340857_341138[1] = 21;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }catch(e340855) {
                                                                                                                                                                                                                                if(e340855 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e340855;
                                                                                                                                                                                                                                  var statearr_340856_341139 = state_340487;
                                                                                                                                                                                                                                  statearr_340856_341139[1] = 22;
                                                                                                                                                                                                                                  statearr_340856_341139[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e340855;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if(state_val_340488 === 61) {
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                  var statearr_340860_341140 = state_340487__$1;
                                                                                                                                                                                                                                  statearr_340860_341140[2] = null;
                                                                                                                                                                                                                                  statearr_340860_341140[1] = 69;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }catch(e340858) {
                                                                                                                                                                                                                                  if(e340858 instanceof Error) {
                                                                                                                                                                                                                                    var ex__5575__auto__ = e340858;
                                                                                                                                                                                                                                    var statearr_340859_341141 = state_340487;
                                                                                                                                                                                                                                    statearr_340859_341141[1] = 17;
                                                                                                                                                                                                                                    statearr_340859_341141[2] = ex__5575__auto__;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                      throw e340858;
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if(state_val_340488 === 93) {
                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        var statearr_340865_341142 = state_340487__$1;
                                                                                                                                                                                                                                        statearr_340865_341142[1] = 95
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        var statearr_340866_341143 = state_340487__$1;
                                                                                                                                                                                                                                        statearr_340866_341143[1] = 96
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e340863) {
                                                                                                                                                                                                                                      if(e340863 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e340863;
                                                                                                                                                                                                                                        var statearr_340864_341144 = state_340487;
                                                                                                                                                                                                                                        statearr_340864_341144[1] = 12;
                                                                                                                                                                                                                                        statearr_340864_341144[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e340863;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }catch(e340861) {
                                                                                                                                                                                                                                    if(e340861 instanceof Error) {
                                                                                                                                                                                                                                      var ex__5575__auto__ = e340861;
                                                                                                                                                                                                                                      var statearr_340862_341145 = state_340487;
                                                                                                                                                                                                                                      statearr_340862_341145[1] = 87;
                                                                                                                                                                                                                                      statearr_340862_341145[2] = ex__5575__auto__;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        throw e340861;
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if(state_val_340488 === 30) {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var inst_340325 = state_340487[2];
                                                                                                                                                                                                                                      var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                      var statearr_340869_341146 = state_340487__$1;
                                                                                                                                                                                                                                      statearr_340869_341146[2] = inst_340325;
                                                                                                                                                                                                                                      statearr_340869_341146[1] = 29;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e340867) {
                                                                                                                                                                                                                                      if(e340867 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e340867;
                                                                                                                                                                                                                                        var statearr_340868_341147 = state_340487;
                                                                                                                                                                                                                                        statearr_340868_341147[1] = 22;
                                                                                                                                                                                                                                        statearr_340868_341147[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e340867;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if(state_val_340488 === 62) {
                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                        var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          var statearr_340872_341148 = state_340487__$1;
                                                                                                                                                                                                                                          statearr_340872_341148[1] = 76
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          var statearr_340873_341149 = state_340487__$1;
                                                                                                                                                                                                                                          statearr_340873_341149[1] = 77
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }catch(e340870) {
                                                                                                                                                                                                                                        if(e340870 instanceof Error) {
                                                                                                                                                                                                                                          var ex__5575__auto__ = e340870;
                                                                                                                                                                                                                                          var statearr_340871_341150 = state_340487;
                                                                                                                                                                                                                                          statearr_340871_341150[1] = 17;
                                                                                                                                                                                                                                          statearr_340871_341150[2] = ex__5575__auto__;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                            throw e340870;
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if(state_val_340488 === 94) {
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_340437 = state_340487[2];
                                                                                                                                                                                                                                            var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                            var statearr_340878_341151 = state_340487__$1;
                                                                                                                                                                                                                                            statearr_340878_341151[2] = inst_340437;
                                                                                                                                                                                                                                            statearr_340878_341151[1] = 86;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e340876) {
                                                                                                                                                                                                                                            if(e340876 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e340876;
                                                                                                                                                                                                                                              var statearr_340877_341152 = state_340487;
                                                                                                                                                                                                                                              statearr_340877_341152[1] = 12;
                                                                                                                                                                                                                                              statearr_340877_341152[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e340876;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }catch(e340874) {
                                                                                                                                                                                                                                          if(e340874 instanceof Error) {
                                                                                                                                                                                                                                            var ex__5575__auto__ = e340874;
                                                                                                                                                                                                                                            var statearr_340875_341153 = state_340487;
                                                                                                                                                                                                                                            statearr_340875_341153[1] = 87;
                                                                                                                                                                                                                                            statearr_340875_341153[2] = ex__5575__auto__;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                              throw e340874;
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if(state_val_340488 === 31) {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_340303 = state_340487[5];
                                                                                                                                                                                                                                            var inst_340303__$1 = state_340487[2];
                                                                                                                                                                                                                                            var inst_340304 = inst_340303__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                            var state_340487__$1 = function() {
                                                                                                                                                                                                                                              var statearr_340881 = state_340487;
                                                                                                                                                                                                                                              statearr_340881[5] = inst_340303__$1;
                                                                                                                                                                                                                                              return statearr_340881
                                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                                            if(cljs.core.truth_(inst_340304)) {
                                                                                                                                                                                                                                              var statearr_340882_341154 = state_340487__$1;
                                                                                                                                                                                                                                              statearr_340882_341154[1] = 32
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              var statearr_340883_341155 = state_340487__$1;
                                                                                                                                                                                                                                              statearr_340883_341155[1] = 33
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e340879) {
                                                                                                                                                                                                                                            if(e340879 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e340879;
                                                                                                                                                                                                                                              var statearr_340880_341156 = state_340487;
                                                                                                                                                                                                                                              statearr_340880_341156[1] = 22;
                                                                                                                                                                                                                                              statearr_340880_341156[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e340879;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if(state_val_340488 === 63) {
                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                              var inst_340400 = state_340487[2];
                                                                                                                                                                                                                                              var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                              var statearr_340886_341157 = state_340487__$1;
                                                                                                                                                                                                                                              statearr_340886_341157[2] = inst_340400;
                                                                                                                                                                                                                                              statearr_340886_341157[1] = 48;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }catch(e340884) {
                                                                                                                                                                                                                                              if(e340884 instanceof Error) {
                                                                                                                                                                                                                                                var ex__5575__auto__ = e340884;
                                                                                                                                                                                                                                                var statearr_340885_341158 = state_340487;
                                                                                                                                                                                                                                                statearr_340885_341158[1] = 17;
                                                                                                                                                                                                                                                statearr_340885_341158[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                  throw e340884;
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if(state_val_340488 === 95) {
                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                  var inst_340432 = function() {
                                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                                  var state_340487__$1 = state_340487;
                                                                                                                                                                                                                                                  var statearr_340891_341159 = state_340487__$1;
                                                                                                                                                                                                                                                  statearr_340891_341159[2] = inst_340432;
                                                                                                                                                                                                                                                  statearr_340891_341159[1] = 97;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }catch(e340889) {
                                                                                                                                                                                                                                                  if(e340889 instanceof Error) {
                                                                                                                                                                                                                                                    var ex__5575__auto__ = e340889;
                                                                                                                                                                                                                                                    var statearr_340890_341160 = state_340487;
                                                                                                                                                                                                                                                    statearr_340890_341160[1] = 12;
                                                                                                                                                                                                                                                    statearr_340890_341160[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                                      throw e340889;
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }catch(e340887) {
                                                                                                                                                                                                                                                if(e340887 instanceof Error) {
                                                                                                                                                                                                                                                  var ex__5575__auto__ = e340887;
                                                                                                                                                                                                                                                  var statearr_340888_341161 = state_340487;
                                                                                                                                                                                                                                                  statearr_340888_341161[1] = 87;
                                                                                                                                                                                                                                                  statearr_340888_341161[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                    throw e340887;
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_340893 = new Array(19);
            statearr_340893[0] = state_machine__5582__auto__;
            statearr_340893[1] = 1;
            return statearr_340893
          };
          var state_machine__5582__auto____1 = function(state_340487) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_340487);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_340487) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_340487)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_340894 = f__5654__auto__.call(null);
      statearr_340894[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_340894
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.chat_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.chat_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:nav", "\ufdd0:key", "\ufdd0:all"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:join"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:logout"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", 
"\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:receive-chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:left"], true), null], true);
chatter_box.chat_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.user = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.active_conv = cljs.core.atom.call(null, null);
chatter_box.chat_view_component.create_chat_view_component = function create_chat_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.chat_view_component.t350660 !== "undefined") {
  }else {
    goog.provide("chatter_box.chat_view_component.t350660");
    chatter_box.chat_view_component.t350660 = function(in_ch, create_chat_view_component, meta350661) {
      this.in_ch = in_ch;
      this.create_chat_view_component = create_chat_view_component;
      this.meta350661 = meta350661;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.chat_view_component.t350660.cljs$lang$type = true;
    chatter_box.chat_view_component.t350660.cljs$lang$ctorStr = "chatter-box.chat-view-component/t350660";
    chatter_box.chat_view_component.t350660.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-view-component/t350660")
    };
    chatter_box.chat_view_component.t350660.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.chat_view_component.t350660.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.out_chan, out_ch);
      return chatter_box.chat_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.chat_view_component.t350660.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.chat_view_component.valid_types).call(null, msg)
    };
    chatter_box.chat_view_component.t350660.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.chat_view_component.t350660.prototype.cljs$core$IMeta$_meta$arity$1 = function(_350662) {
      var self__ = this;
      return self__.meta350661
    };
    chatter_box.chat_view_component.t350660.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_350662, meta350661__$1) {
      var self__ = this;
      return new chatter_box.chat_view_component.t350660(self__.in_ch, self__.create_chat_view_component, meta350661__$1)
    };
    chatter_box.chat_view_component.__GT_t350660 = function __GT_t350660(in_ch__$1, create_chat_view_component__$1, meta350661) {
      return new chatter_box.chat_view_component.t350660(in_ch__$1, create_chat_view_component__$1, meta350661)
    }
  }
  return new chatter_box.chat_view_component.t350660(in_ch, create_chat_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html[".container"]') == null) {
  var vec__350663_350668 = enfocus.core.replace_ids.call(null, "en18519_", '\x3cdiv id\x3d"chat-container" class\x3d"container"\x3e \n \x3cdiv class\x3d"header"\x3e \n  \x3cul class\x3d"nav nav-pills pull-right"\x3e \n   \x3cli\x3e\x3ca id\x3d"profile-btn" href\x3d"create_user.html"\x3eProfile\x3c/a\x3e\x3c/li\x3e \n   \x3cli\x3e\x3ca id\x3d"logout-btn" href\x3d"login.html"\x3eLogout\x3c/a\x3e\x3c/li\x3e \n  \x3c/ul\x3e \n  \x3ch3 class\x3d"text-muted"\x3eChatter Box\x3c/h3\x3e \n \x3c/div\x3e \n \x3cdiv class\x3d"row marketing"\x3e \n  \x3cdiv class\x3d"col-lg-6"\x3e \n   \x3ch4\x3eLogin Users\x3c/h4\x3e \n   \x3cdiv id\x3d"user-list" style\x3d"height: 300px; overflow: auto"\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"https://1.gravatar.com/avatar/c29cd3a5f182e6de85cbd172fb9b5ab8?d\x3dhttps%3A%2F%2Fidenticons.github.com%2Fcd0f7919b441e9bb94c2308a8a5cfaea.png\x26amp;s\x3d420" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e \n   \x3c/div\x3e \n  \x3c/div\x3e \n  \x3cdiv class\x3d"col-lg-6"\x3e \n   \x3ch4 id\x3d"conv-name"\x3eCreighton Kirkendall\x3c/h4\x3e \n   \x3cdiv id\x3d"chat-list" style\x3d"height: 300px; overflow: auto"\x3e \n    \x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"remote btn  btn-default btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"right" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n    \x3cbutton type\x3d"button" class\x3d"remote btn btn-default btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"right" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e \n   \x3c/div\x3e \n   \x3cdiv id\x3d"chat-form-div"\x3e \n    \x3cform name\x3d"chat-form" id\x3d"chat-form"\x3e \n     \x3cinput id\x3d"chat-msg" name\x3d"chat-msg" type\x3d"text" class\x3d"form-control" placeholder\x3d"Enter Text" autofocus\x3d"" /\x3e \n     \x3cbutton id\x3d"chat-btn" type\x3d"button" class\x3d"btn"\x3e send \x3c/button\x3e \n    \x3c/form\x3e \n   \x3c/div\x3e \n  \x3c/div\x3e \n \x3c/div\x3e \n \x3cdiv class\x3d"footer"\x3e \n  \x3cp\x3e\x26copy; Creighton Kirkendall 2013\x3c/p\x3e \n \x3c/div\x3e \n\x3c/div\x3e');
  var sym__4174__auto___350669 = cljs.core.nth.call(null, vec__350663_350668, 0, null);
  var txt__4175__auto___350670 = cljs.core.nth.call(null, vec__350663_350668, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html[".container"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___350669, txt__4175__auto___350670], true))
}else {
}
chatter_box.chat_view_component.chat_window_page = function chat_window_page() {
  var vec__350667 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html[".container"]')
  }.call(null);
  var id_sym350664 = cljs.core.nth.call(null, vec__350667, 0, null);
  var pnod350665 = cljs.core.nth.call(null, vec__350667, 1, null);
  var pnod350665__$1 = enfocus.core.create_hidden_dom.call(null, pnod350665);
  enfocus.core.i_at.call(null, id_sym350664, pnod350665__$1, "#chat-container", enfocus.core.set_style.call(null, "\ufdd0:display", "none"), "#user-list *", enfocus.core.remove_node.call(null), "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a Users"), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym350664, pnod350665__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod350665__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]') == null) {
  var vec__350671_350676 = enfocus.core.replace_ids.call(null, "en18528_", '\x3cbutton type\x3d"button" class\x3d"btn btn-primary btn-lg btn-block"\x3e \x3cimg src\x3d"https://1.gravatar.com/avatar/c29cd3a5f182e6de85cbd172fb9b5ab8?d\x3dhttps%3A%2F%2Fidenticons.github.com%2Fcd0f7919b441e9bb94c2308a8a5cfaea.png\x26amp;s\x3d420" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"full_name"\x3e Creighton Kirkendall\x3c/span\x3e \x3c/button\x3e');
  var sym__4174__auto___350677 = cljs.core.nth.call(null, vec__350671_350676, 0, null);
  var txt__4175__auto___350678 = cljs.core.nth.call(null, vec__350671_350676, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___350677, txt__4175__auto___350678], true))
}else {
}
chatter_box.chat_view_component.chat_user_element = function chat_user_element(usr) {
  var vec__350675 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html["#user-list \x3e *:first-child"]')
  }.call(null);
  var id_sym350672 = cljs.core.nth.call(null, vec__350675, 0, null);
  var pnod350673 = cljs.core.nth.call(null, vec__350675, 1, null);
  var pnod350673__$1 = enfocus.core.create_hidden_dom.call(null, pnod350673);
  enfocus.core.i_at.call(null, id_sym350672, pnod350673__$1, "button", enfocus.core.do__GT_.call(null, enfocus.core.set_attr.call(null, "\ufdd0:id", [cljs.core.str("id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, usr))].join("")), enfocus.core.set_data.call(null, "\ufdd0:user", usr), enfocus.events.listen.call(null, "\ufdd0:click", function() {
    return chatter_box.chat_view_component.load_conversation.call(null, usr)
  })), "img", enfocus.core.set_attr.call(null, "\ufdd0:src", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, usr)), ".full_name", enfocus.core.content.call(null, [cljs.core.str((new cljs.core.Keyword("\ufdd0:first")).call(null, usr)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0:last")).call(null, usr))].join("")));
  enfocus.core.reset_ids.call(null, id_sym350672, pnod350673__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod350673__$1)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]') == null) {
  var vec__350679_350684 = enfocus.core.replace_ids.call(null, "en18537_", '\x3cbutton type\x3d"button" class\x3d"local btn btn-block"\x3e \x3cimg src\x3d"" width\x3d"40" height\x3d"40" align\x3d"left" /\x3e \x3cspan class\x3d"message"\x3ehi how are you?\x3c/span\x3e \x3c/button\x3e');
  var sym__4174__auto___350685 = cljs.core.nth.call(null, vec__350679_350684, 0, null);
  var txt__4175__auto___350686 = cljs.core.nth.call(null, vec__350679_350684, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___350685, txt__4175__auto___350686], true))
}else {
}
chatter_box.chat_view_component.chat_message_element = function chat_message_element(usr, text) {
  var vec__350683 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/chat_window.html["#chat-list \x3e *:first-child"]')
  }.call(null);
  var id_sym350680 = cljs.core.nth.call(null, vec__350683, 0, null);
  var pnod350681 = cljs.core.nth.call(null, vec__350683, 1, null);
  var pnod350681__$1 = enfocus.core.create_hidden_dom.call(null, pnod350681);
  enfocus.core.i_at.call(null, id_sym350680, pnod350681__$1, "button", enfocus.core.do__GT_.call(null, enfocus.core.remove_class.call(null, "\ufdd0:remote"), enfocus.core.remove_class.call(null, "\ufdd0:local"), enfocus.core.add_class.call(null, cljs.core._EQ_.call(null, usr, cljs.core.deref.call(null, chatter_box.chat_view_component.user)) ? "\ufdd0:local" : "\ufdd0:remote")), "img", enfocus.core.set_attr.call(null, "\ufdd0:src", (new cljs.core.Keyword("\ufdd0:img-url")).call(null, usr)), ".message", 
  enfocus.core.content.call(null, text));
  enfocus.core.reset_ids.call(null, id_sym350680, pnod350681__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod350681__$1)
};
chatter_box.chat_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, document, "body", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_window_page.call(null)), "#profile-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.nav_update_user)), "#logout-btn", enfocus.core.do__GT_.call(null, enfocus.core.remove_attr.call(null, "\ufdd0:href"), enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.logout)), 
  "#chat-btn", enfocus.events.listen.call(null, "\ufdd0:click", chatter_box.chat_view_component.send_chat))
};
chatter_box.chat_view_component.navigate = function navigate(p__350687) {
  var map__350689 = p__350687;
  var map__350689__$1 = cljs.core.seq_QMARK_.call(null, map__350689) ? cljs.core.apply.call(null, cljs.core.hash_map, map__350689) : map__350689;
  var page = cljs.core.get.call(null, map__350689__$1, "\ufdd0:key");
  var display = cljs.core._EQ_.call(null, page, "\ufdd0:chat") ? "" : "none";
  return enfocus.core.at.call(null, "#chat-container", enfocus.core.set_style.call(null, "\ufdd0:display", display))
};
chatter_box.chat_view_component.load_conversation = function load_conversation(r_usr) {
  enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, "LOAD-CONV-USR:", r_usr));
  var r_id = [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join("");
  var messages = enfocus.core.from.call(null, r_id, enfocus.core.get_data.call(null, "\ufdd0:msgs"));
  enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, "LOAD MESSAGES:", messages));
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, r_usr);
  return enfocus.core.at.call(null, "#conv-name", enfocus.core.content.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr)), "#chat-form-div", enfocus.core.set_style.call(null, "\ufdd0:display", ""), "#chat-list", enfocus.core.content.call(null, function() {
    var iter__3470__auto__ = function iter__350694(s__350695) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__350695__$1 = s__350695;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__350695__$1);
          if(temp__4092__auto__) {
            var s__350695__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__350695__$2)) {
              var c__3468__auto__ = cljs.core.chunk_first.call(null, s__350695__$2);
              var size__3469__auto__ = cljs.core.count.call(null, c__3468__auto__);
              var b__350697 = cljs.core.chunk_buffer.call(null, size__3469__auto__);
              if(function() {
                var i__350696 = 0;
                while(true) {
                  if(i__350696 < size__3469__auto__) {
                    var msg = cljs.core._nth.call(null, c__3468__auto__, i__350696);
                    cljs.core.chunk_append.call(null, b__350697, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:local")).call(null, msg), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? chatter_box.chat_view_component.chat_message_element.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user), (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)) : chatter_box.chat_view_component.chat_message_element.call(null, 
                    r_usr, (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)));
                    var G__350698 = i__350696 + 1;
                    i__350696 = G__350698;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__350697), iter__350694.call(null, cljs.core.chunk_rest.call(null, s__350695__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__350697), null)
              }
            }else {
              var msg = cljs.core.first.call(null, s__350695__$2);
              return cljs.core.cons.call(null, cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0:local")).call(null, msg), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? chatter_box.chat_view_component.chat_message_element.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user), (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)) : chatter_box.chat_view_component.chat_message_element.call(null, 
              r_usr, (new cljs.core.Keyword("\ufdd0:text")).call(null, msg)), iter__350694.call(null, cljs.core.rest.call(null, s__350695__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3470__auto__.call(null, messages)
  }()), r_id, enfocus.core.remove_class.call(null, "btn-success"))
};
chatter_box.chat_view_component.user_join = function user_join(r_usr) {
  var id = [cljs.core.str("#id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join("");
  return enfocus.core.at.call(null, "#user-list", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_user_element.call(null, r_usr)), id, enfocus.core.set_data.call(null, "\ufdd0:msgs", cljs.core.PersistentVector.EMPTY))
};
chatter_box.chat_view_component.user_left = function user_left(r_usr) {
  return enfocus.core.at.call(null, document, [cljs.core.str("id_"), cljs.core.str((new cljs.core.Keyword("\ufdd0:username")).call(null, r_usr))].join(""), enfocus.core.remove_node.call(null))
};
chatter_box.chat_view_component.receive_chat = function receive_chat(p__350699) {
  var map__350701 = p__350699;
  var map__350701__$1 = cljs.core.seq_QMARK_.call(null, map__350701) ? cljs.core.apply.call(null, cljs.core.hash_map, map__350701) : map__350701;
  var msg = map__350701__$1;
  var remote = cljs.core.get.call(null, map__350701__$1, "\ufdd0:remote");
  var local = cljs.core.get.call(null, map__350701__$1, "\ufdd0:local");
  var text = cljs.core.get.call(null, map__350701__$1, "\ufdd0:text");
  var rm_but_id = cljs.core._EQ_.call(null, remote, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? [cljs.core.str("#id_"), cljs.core.str(local)].join("") : [cljs.core.str("#id_"), cljs.core.str(remote)].join("");
  var messages = enfocus.core.from.call(null, rm_but_id, enfocus.core.get_data.call(null, "\ufdd0:msgs"));
  enfocus.core.at.call(null, rm_but_id, enfocus.core.set_data.call(null, "\ufdd0:msgs", cljs.core.conj.call(null, messages, msg)));
  if(function() {
    var or__3943__auto__ = cljs.core._EQ_.call(null, remote, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)));
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._EQ_.call(null, local, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)))
    }
  }()) {
    var usr = cljs.core._EQ_.call(null, local, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))) ? cljs.core.deref.call(null, chatter_box.chat_view_component.user) : cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv);
    return enfocus.core.at.call(null, "#chat-list", enfocus.core.append.call(null, chatter_box.chat_view_component.chat_message_element.call(null, usr, text)))
  }else {
    return enfocus.core.at.call(null, rm_but_id, enfocus.core.do__GT_.call(null, enfocus.core.remove_class.call(null, "btn-success"), enfocus.core.add_class.call(null, "btn-success")))
  }
};
chatter_box.chat_view_component.send_chat = function send_chat() {
  var text = enfocus.core.from.call(null, "#chat-msg", enfocus.core.get_prop.call(null, "\ufdd0:value"));
  var msg = chatter_box.protocol.send_chat_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user)), (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.active_conv)), text);
  enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, "SEND_CHAT:", msg));
  cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), msg);
  return chatter_box.chat_view_component.receive_chat.call(null, (new cljs.core.Keyword("\ufdd0:data")).call(null, msg))
};
chatter_box.chat_view_component.login_success = function login_success(p__350702) {
  var map__350708 = p__350702;
  var map__350708__$1 = cljs.core.seq_QMARK_.call(null, map__350708) ? cljs.core.apply.call(null, cljs.core.hash_map, map__350708) : map__350708;
  var usr = cljs.core.get.call(null, map__350708__$1, "\ufdd0:user");
  var e_users = cljs.core.get.call(null, map__350708__$1, "\ufdd0:existing-users");
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.user, usr);
  var seq__350709 = cljs.core.seq.call(null, e_users);
  var chunk__350710 = null;
  var count__350711 = 0;
  var i__350712 = 0;
  while(true) {
    if(i__350712 < count__350711) {
      var r_usr = cljs.core._nth.call(null, chunk__350710, i__350712);
      chatter_box.chat_view_component.user_join.call(null, r_usr);
      var G__350713 = seq__350709;
      var G__350714 = chunk__350710;
      var G__350715 = count__350711;
      var G__350716 = i__350712 + 1;
      seq__350709 = G__350713;
      chunk__350710 = G__350714;
      count__350711 = G__350715;
      i__350712 = G__350716;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__350709);
      if(temp__4092__auto__) {
        var seq__350709__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__350709__$1)) {
          var c__3501__auto__ = cljs.core.chunk_first.call(null, seq__350709__$1);
          var G__350717 = cljs.core.chunk_rest.call(null, seq__350709__$1);
          var G__350718 = c__3501__auto__;
          var G__350719 = cljs.core.count.call(null, c__3501__auto__);
          var G__350720 = 0;
          seq__350709 = G__350717;
          chunk__350710 = G__350718;
          count__350711 = G__350719;
          i__350712 = G__350720;
          continue
        }else {
          var r_usr = cljs.core.first.call(null, seq__350709__$1);
          chatter_box.chat_view_component.user_join.call(null, r_usr);
          var G__350721 = cljs.core.next.call(null, seq__350709__$1);
          var G__350722 = null;
          var G__350723 = 0;
          var G__350724 = 0;
          seq__350709 = G__350721;
          chunk__350710 = G__350722;
          count__350711 = G__350723;
          i__350712 = G__350724;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
chatter_box.chat_view_component.logout = function logout() {
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.user, null);
  cljs.core.reset_BANG_.call(null, chatter_box.chat_view_component.active_conv, null);
  enfocus.core.at.call(null, "#user-list *", enfocus.core.remove_node.call(null), "#chat-list *", enfocus.core.remove_node.call(null), "#conv-name", enfocus.core.content.call(null, "Select a Users"));
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), chatter_box.protocol.logout_message.call(null, (new cljs.core.Keyword("\ufdd0:username")).call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.user))))
};
chatter_box.chat_view_component.nav_update_user = function nav_update_user() {
  return cljs.core.async.put_BANG_.call(null, cljs.core.deref.call(null, chatter_box.chat_view_component.out_chan), chatter_box.protocol.create_message.call(null, "\ufdd0:nav", "\ufdd0:update-user", null))
};
chatter_box.chat_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_351747) {
        var state_val_351748 = state_351747[1];
        if(state_val_351748 === 32) {
          try {
            var state_351747__$1 = state_351747;
            var statearr_351751_352239 = state_351747__$1;
            statearr_351751_352239[2] = null;
            statearr_351751_352239[1] = 40;
            return"\ufdd0:recur"
          }catch(e351749) {
            if(e351749 instanceof Error) {
              var ex__5575__auto__ = e351749;
              var statearr_351750_352240 = state_351747;
              statearr_351750_352240[1] = 27;
              statearr_351750_352240[2] = ex__5575__auto__;
              return"\ufdd0:recur"
            }else {
              if("\ufdd0:else") {
                throw e351749;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_351748 === 64) {
            try {
              try {
                var state_351747__$1 = state_351747;
                var statearr_351756_352241 = state_351747__$1;
                statearr_351756_352241[2] = null;
                statearr_351756_352241[1] = 65;
                return"\ufdd0:recur"
              }catch(e351754) {
                if(e351754 instanceof Error) {
                  var ex__5575__auto__ = e351754;
                  var statearr_351755_352242 = state_351747;
                  statearr_351755_352242[1] = 22;
                  statearr_351755_352242[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e351754;
                  }else {
                    return null
                  }
                }
              }
            }catch(e351752) {
              if(e351752 instanceof Error) {
                var ex__5575__auto__ = e351752;
                var statearr_351753_352243 = state_351747;
                statearr_351753_352243[1] = 55;
                statearr_351753_352243[2] = ex__5575__auto__;
                return"\ufdd0:recur"
              }else {
                if("\ufdd0:else") {
                  throw e351752;
                }else {
                  return null
                }
              }
            }
          }else {
            if(state_val_351748 === 96) {
              try {
                try {
                  var inst_351650 = state_351747[2];
                  var state_351747__$1 = state_351747;
                  var statearr_351761_352244 = state_351747__$1;
                  statearr_351761_352244[2] = inst_351650;
                  statearr_351761_352244[1] = 88;
                  return"\ufdd0:recur"
                }catch(e351759) {
                  if(e351759 instanceof Error) {
                    var ex__5575__auto__ = e351759;
                    var statearr_351760_352245 = state_351747;
                    statearr_351760_352245[1] = 17;
                    statearr_351760_352245[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e351759;
                    }else {
                      return null
                    }
                  }
                }
              }catch(e351757) {
                if(e351757 instanceof Error) {
                  var ex__5575__auto__ = e351757;
                  var statearr_351758_352246 = state_351747;
                  statearr_351758_352246[1] = 89;
                  statearr_351758_352246[2] = ex__5575__auto__;
                  return"\ufdd0:recur"
                }else {
                  if("\ufdd0:else") {
                    throw e351757;
                  }else {
                    return null
                  }
                }
              }
            }else {
              if(state_val_351748 === 128) {
                try {
                  var inst_351703 = state_351747[5];
                  var inst_351708 = function() {
                    throw inst_351703;
                  }();
                  var state_351747__$1 = state_351747;
                  var statearr_351764_352247 = state_351747__$1;
                  statearr_351764_352247[2] = inst_351708;
                  statearr_351764_352247[1] = 129;
                  return"\ufdd0:recur"
                }catch(e351762) {
                  if(e351762 instanceof Error) {
                    var ex__5575__auto__ = e351762;
                    var statearr_351763_352248 = state_351747;
                    statearr_351763_352248[1] = 12;
                    statearr_351763_352248[2] = ex__5575__auto__;
                    return"\ufdd0:recur"
                  }else {
                    if("\ufdd0:else") {
                      throw e351762;
                    }else {
                      return null
                    }
                  }
                }
              }else {
                if(state_val_351748 === 1) {
                  var state_351747__$1 = state_351747;
                  var statearr_351765_352249 = state_351747__$1;
                  statearr_351765_352249[2] = null;
                  statearr_351765_352249[1] = 2;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_351748 === 33) {
                    try {
                      var state_351747__$1 = state_351747;
                      if("\ufdd0:else") {
                        var statearr_351768_352250 = state_351747__$1;
                        statearr_351768_352250[1] = 47
                      }else {
                        var statearr_351769_352251 = state_351747__$1;
                        statearr_351769_352251[1] = 48
                      }
                      return"\ufdd0:recur"
                    }catch(e351766) {
                      if(e351766 instanceof Error) {
                        var ex__5575__auto__ = e351766;
                        var statearr_351767_352252 = state_351747;
                        statearr_351767_352252[1] = 27;
                        statearr_351767_352252[2] = ex__5575__auto__;
                        return"\ufdd0:recur"
                      }else {
                        if("\ufdd0:else") {
                          throw e351766;
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(state_val_351748 === 65) {
                      try {
                        try {
                          var inst_351581 = state_351747[2];
                          var state_351747__$1 = state_351747;
                          var statearr_351774_352253 = state_351747__$1;
                          statearr_351774_352253[2] = inst_351581;
                          statearr_351774_352253[1] = 62;
                          return"\ufdd0:recur"
                        }catch(e351772) {
                          if(e351772 instanceof Error) {
                            var ex__5575__auto__ = e351772;
                            var statearr_351773_352254 = state_351747;
                            statearr_351773_352254[1] = 22;
                            statearr_351773_352254[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e351772;
                            }else {
                              return null
                            }
                          }
                        }
                      }catch(e351770) {
                        if(e351770 instanceof Error) {
                          var ex__5575__auto__ = e351770;
                          var statearr_351771_352255 = state_351747;
                          statearr_351771_352255[1] = 55;
                          statearr_351771_352255[2] = ex__5575__auto__;
                          return"\ufdd0:recur"
                        }else {
                          if("\ufdd0:else") {
                            throw e351770;
                          }else {
                            return null
                          }
                        }
                      }
                    }else {
                      if(state_val_351748 === 97) {
                        try {
                          try {
                            var inst_351645 = function() {
                              throw cljs.core.match.backtrack;
                            }();
                            var state_351747__$1 = state_351747;
                            var statearr_351779_352256 = state_351747__$1;
                            statearr_351779_352256[2] = inst_351645;
                            statearr_351779_352256[1] = 99;
                            return"\ufdd0:recur"
                          }catch(e351777) {
                            if(e351777 instanceof Error) {
                              var ex__5575__auto__ = e351777;
                              var statearr_351778_352257 = state_351747;
                              statearr_351778_352257[1] = 17;
                              statearr_351778_352257[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e351777;
                              }else {
                                return null
                              }
                            }
                          }
                        }catch(e351775) {
                          if(e351775 instanceof Error) {
                            var ex__5575__auto__ = e351775;
                            var statearr_351776_352258 = state_351747;
                            statearr_351776_352258[1] = 89;
                            statearr_351776_352258[2] = ex__5575__auto__;
                            return"\ufdd0:recur"
                          }else {
                            if("\ufdd0:else") {
                              throw e351775;
                            }else {
                              return null
                            }
                          }
                        }
                      }else {
                        if(state_val_351748 === 129) {
                          try {
                            var inst_351710 = state_351747[2];
                            var state_351747__$1 = state_351747;
                            var statearr_351782_352259 = state_351747__$1;
                            statearr_351782_352259[2] = inst_351710;
                            statearr_351782_352259[1] = 125;
                            return"\ufdd0:recur"
                          }catch(e351780) {
                            if(e351780 instanceof Error) {
                              var ex__5575__auto__ = e351780;
                              var statearr_351781_352260 = state_351747;
                              statearr_351781_352260[1] = 12;
                              statearr_351781_352260[2] = ex__5575__auto__;
                              return"\ufdd0:recur"
                            }else {
                              if("\ufdd0:else") {
                                throw e351780;
                              }else {
                                return null
                              }
                            }
                          }
                        }else {
                          if(state_val_351748 === 2) {
                            var state_351747__$1 = state_351747;
                            if(true) {
                              var statearr_351783_352261 = state_351747__$1;
                              statearr_351783_352261[1] = 4
                            }else {
                              var statearr_351784_352262 = state_351747__$1;
                              statearr_351784_352262[1] = 5
                            }
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_351748 === 34) {
                              try {
                                var inst_351552 = state_351747[2];
                                var state_351747__$1 = state_351747;
                                var statearr_351787_352263 = state_351747__$1;
                                statearr_351787_352263[2] = inst_351552;
                                statearr_351787_352263[1] = 26;
                                return"\ufdd0:recur"
                              }catch(e351785) {
                                if(e351785 instanceof Error) {
                                  var ex__5575__auto__ = e351785;
                                  var statearr_351786_352264 = state_351747;
                                  statearr_351786_352264[1] = 27;
                                  statearr_351786_352264[2] = ex__5575__auto__;
                                  return"\ufdd0:recur"
                                }else {
                                  if("\ufdd0:else") {
                                    throw e351785;
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }else {
                              if(state_val_351748 === 66) {
                                try {
                                  var inst_351588 = function() {
                                    throw cljs.core.match.backtrack;
                                  }();
                                  var state_351747__$1 = state_351747;
                                  var statearr_351790_352265 = state_351747__$1;
                                  statearr_351790_352265[2] = inst_351588;
                                  statearr_351790_352265[1] = 68;
                                  return"\ufdd0:recur"
                                }catch(e351788) {
                                  if(e351788 instanceof Error) {
                                    var ex__5575__auto__ = e351788;
                                    var statearr_351789_352266 = state_351747;
                                    statearr_351789_352266[1] = 22;
                                    statearr_351789_352266[2] = ex__5575__auto__;
                                    return"\ufdd0:recur"
                                  }else {
                                    if("\ufdd0:else") {
                                      throw e351788;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_351748 === 98) {
                                  try {
                                    try {
                                      var state_351747__$1 = state_351747;
                                      var statearr_351795_352267 = state_351747__$1;
                                      statearr_351795_352267[2] = null;
                                      statearr_351795_352267[1] = 99;
                                      return"\ufdd0:recur"
                                    }catch(e351793) {
                                      if(e351793 instanceof Error) {
                                        var ex__5575__auto__ = e351793;
                                        var statearr_351794_352268 = state_351747;
                                        statearr_351794_352268[1] = 17;
                                        statearr_351794_352268[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e351793;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }catch(e351791) {
                                    if(e351791 instanceof Error) {
                                      var ex__5575__auto__ = e351791;
                                      var statearr_351792_352269 = state_351747;
                                      statearr_351792_352269[1] = 89;
                                      statearr_351792_352269[2] = ex__5575__auto__;
                                      return"\ufdd0:recur"
                                    }else {
                                      if("\ufdd0:else") {
                                        throw e351791;
                                      }else {
                                        return null
                                      }
                                    }
                                  }
                                }else {
                                  if(state_val_351748 === 130) {
                                    try {
                                      try {
                                        var inst_351494 = state_351747[6];
                                        var inst_351713 = cljs.core._EQ_.call(null, inst_351494, "\ufdd0:logout");
                                        var state_351747__$1 = state_351747;
                                        if(inst_351713) {
                                          var statearr_351800_352270 = state_351747__$1;
                                          statearr_351800_352270[1] = 131
                                        }else {
                                          var statearr_351801_352271 = state_351747__$1;
                                          statearr_351801_352271[1] = 132
                                        }
                                        return"\ufdd0:recur"
                                      }catch(e351798) {
                                        if(e351798 instanceof Error) {
                                          var ex__5575__auto__ = e351798;
                                          var statearr_351799_352272 = state_351747;
                                          statearr_351799_352272[1] = 12;
                                          statearr_351799_352272[2] = ex__5575__auto__;
                                          return"\ufdd0:recur"
                                        }else {
                                          if("\ufdd0:else") {
                                            throw e351798;
                                          }else {
                                            return null
                                          }
                                        }
                                      }
                                    }catch(e351796) {
                                      if(e351796 instanceof Error) {
                                        var ex__5575__auto__ = e351796;
                                        var statearr_351797_352273 = state_351747;
                                        statearr_351797_352273[1] = 126;
                                        statearr_351797_352273[2] = ex__5575__auto__;
                                        return"\ufdd0:recur"
                                      }else {
                                        if("\ufdd0:else") {
                                          throw e351796;
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }else {
                                    if(state_val_351748 === 3) {
                                      var inst_351745 = state_351747[2];
                                      var state_351747__$1 = state_351747;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_351747__$1, inst_351745)
                                    }else {
                                      if(state_val_351748 === 35) {
                                        try {
                                          var inst_351544 = state_351747[2];
                                          var state_351747__$1 = state_351747;
                                          var statearr_351804_352274 = state_351747__$1;
                                          statearr_351804_352274[2] = inst_351544;
                                          statearr_351804_352274[1] = 34;
                                          return"\ufdd0:recur"
                                        }catch(e351802) {
                                          if(e351802 instanceof Error) {
                                            var ex__5575__auto__ = e351802;
                                            var statearr_351803_352275 = state_351747;
                                            statearr_351803_352275[1] = 27;
                                            statearr_351803_352275[2] = ex__5575__auto__;
                                            return"\ufdd0:recur"
                                          }else {
                                            if("\ufdd0:else") {
                                              throw e351802;
                                            }else {
                                              return null
                                            }
                                          }
                                        }
                                      }else {
                                        if(state_val_351748 === 67) {
                                          try {
                                            var state_351747__$1 = state_351747;
                                            var statearr_351807_352276 = state_351747__$1;
                                            statearr_351807_352276[2] = null;
                                            statearr_351807_352276[1] = 68;
                                            return"\ufdd0:recur"
                                          }catch(e351805) {
                                            if(e351805 instanceof Error) {
                                              var ex__5575__auto__ = e351805;
                                              var statearr_351806_352277 = state_351747;
                                              statearr_351806_352277[1] = 22;
                                              statearr_351806_352277[2] = ex__5575__auto__;
                                              return"\ufdd0:recur"
                                            }else {
                                              if("\ufdd0:else") {
                                                throw e351805;
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }else {
                                          if(state_val_351748 === 99) {
                                            try {
                                              try {
                                                var inst_351648 = state_351747[2];
                                                var state_351747__$1 = state_351747;
                                                var statearr_351812_352278 = state_351747__$1;
                                                statearr_351812_352278[2] = inst_351648;
                                                statearr_351812_352278[1] = 96;
                                                return"\ufdd0:recur"
                                              }catch(e351810) {
                                                if(e351810 instanceof Error) {
                                                  var ex__5575__auto__ = e351810;
                                                  var statearr_351811_352279 = state_351747;
                                                  statearr_351811_352279[1] = 17;
                                                  statearr_351811_352279[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e351810;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }catch(e351808) {
                                              if(e351808 instanceof Error) {
                                                var ex__5575__auto__ = e351808;
                                                var statearr_351809_352280 = state_351747;
                                                statearr_351809_352280[1] = 89;
                                                statearr_351809_352280[2] = ex__5575__auto__;
                                                return"\ufdd0:recur"
                                              }else {
                                                if("\ufdd0:else") {
                                                  throw e351808;
                                                }else {
                                                  return null
                                                }
                                              }
                                            }
                                          }else {
                                            if(state_val_351748 === 131) {
                                              try {
                                                try {
                                                  var inst_351715 = chatter_box.chat_view_component.logout.call(null);
                                                  var state_351747__$1 = state_351747;
                                                  var statearr_351817_352281 = state_351747__$1;
                                                  statearr_351817_352281[2] = inst_351715;
                                                  statearr_351817_352281[1] = 133;
                                                  return"\ufdd0:recur"
                                                }catch(e351815) {
                                                  if(e351815 instanceof Error) {
                                                    var ex__5575__auto__ = e351815;
                                                    var statearr_351816_352282 = state_351747;
                                                    statearr_351816_352282[1] = 12;
                                                    statearr_351816_352282[2] = ex__5575__auto__;
                                                    return"\ufdd0:recur"
                                                  }else {
                                                    if("\ufdd0:else") {
                                                      throw e351815;
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }catch(e351813) {
                                                if(e351813 instanceof Error) {
                                                  var ex__5575__auto__ = e351813;
                                                  var statearr_351814_352283 = state_351747;
                                                  statearr_351814_352283[1] = 126;
                                                  statearr_351814_352283[2] = ex__5575__auto__;
                                                  return"\ufdd0:recur"
                                                }else {
                                                  if("\ufdd0:else") {
                                                    throw e351813;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_351748 === 4) {
                                                var state_351747__$1 = state_351747;
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_351747__$1, 7, in_ch)
                                              }else {
                                                if(state_val_351748 === 36) {
                                                  try {
                                                    var inst_351522 = state_351747[7];
                                                    var inst_351522__$1 = state_351747[2];
                                                    var inst_351523 = inst_351522__$1 === cljs.core.match.backtrack;
                                                    var state_351747__$1 = function() {
                                                      var statearr_351820 = state_351747;
                                                      statearr_351820[7] = inst_351522__$1;
                                                      return statearr_351820
                                                    }();
                                                    if(cljs.core.truth_(inst_351523)) {
                                                      var statearr_351821_352284 = state_351747__$1;
                                                      statearr_351821_352284[1] = 37
                                                    }else {
                                                      var statearr_351822_352285 = state_351747__$1;
                                                      statearr_351822_352285[1] = 38
                                                    }
                                                    return"\ufdd0:recur"
                                                  }catch(e351818) {
                                                    if(e351818 instanceof Error) {
                                                      var ex__5575__auto__ = e351818;
                                                      var statearr_351819_352286 = state_351747;
                                                      statearr_351819_352286[1] = 27;
                                                      statearr_351819_352286[2] = ex__5575__auto__;
                                                      return"\ufdd0:recur"
                                                    }else {
                                                      if("\ufdd0:else") {
                                                        throw e351818;
                                                      }else {
                                                        return null
                                                      }
                                                    }
                                                  }
                                                }else {
                                                  if(state_val_351748 === 68) {
                                                    try {
                                                      var inst_351591 = state_351747[2];
                                                      var state_351747__$1 = state_351747;
                                                      var statearr_351825_352287 = state_351747__$1;
                                                      statearr_351825_352287[2] = inst_351591;
                                                      statearr_351825_352287[1] = 53;
                                                      return"\ufdd0:recur"
                                                    }catch(e351823) {
                                                      if(e351823 instanceof Error) {
                                                        var ex__5575__auto__ = e351823;
                                                        var statearr_351824_352288 = state_351747;
                                                        statearr_351824_352288[1] = 22;
                                                        statearr_351824_352288[2] = ex__5575__auto__;
                                                        return"\ufdd0:recur"
                                                      }else {
                                                        if("\ufdd0:else") {
                                                          throw e351823;
                                                        }else {
                                                          return null
                                                        }
                                                      }
                                                    }
                                                  }else {
                                                    if(state_val_351748 === 100) {
                                                      try {
                                                        var inst_351655 = function() {
                                                          throw cljs.core.match.backtrack;
                                                        }();
                                                        var state_351747__$1 = state_351747;
                                                        var statearr_351828_352289 = state_351747__$1;
                                                        statearr_351828_352289[2] = inst_351655;
                                                        statearr_351828_352289[1] = 102;
                                                        return"\ufdd0:recur"
                                                      }catch(e351826) {
                                                        if(e351826 instanceof Error) {
                                                          var ex__5575__auto__ = e351826;
                                                          var statearr_351827_352290 = state_351747;
                                                          statearr_351827_352290[1] = 17;
                                                          statearr_351827_352290[2] = ex__5575__auto__;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if("\ufdd0:else") {
                                                            throw e351826;
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }else {
                                                      if(state_val_351748 === 132) {
                                                        try {
                                                          try {
                                                            var state_351747__$1 = state_351747;
                                                            if("\ufdd0:else") {
                                                              var statearr_351833_352291 = state_351747__$1;
                                                              statearr_351833_352291[1] = 134
                                                            }else {
                                                              var statearr_351834_352292 = state_351747__$1;
                                                              statearr_351834_352292[1] = 135
                                                            }
                                                            return"\ufdd0:recur"
                                                          }catch(e351831) {
                                                            if(e351831 instanceof Error) {
                                                              var ex__5575__auto__ = e351831;
                                                              var statearr_351832_352293 = state_351747;
                                                              statearr_351832_352293[1] = 12;
                                                              statearr_351832_352293[2] = ex__5575__auto__;
                                                              return"\ufdd0:recur"
                                                            }else {
                                                              if("\ufdd0:else") {
                                                                throw e351831;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }catch(e351829) {
                                                          if(e351829 instanceof Error) {
                                                            var ex__5575__auto__ = e351829;
                                                            var statearr_351830_352294 = state_351747;
                                                            statearr_351830_352294[1] = 126;
                                                            statearr_351830_352294[2] = ex__5575__auto__;
                                                            return"\ufdd0:recur"
                                                          }else {
                                                            if("\ufdd0:else") {
                                                              throw e351829;
                                                            }else {
                                                              return null
                                                            }
                                                          }
                                                        }
                                                      }else {
                                                        if(state_val_351748 === 5) {
                                                          var state_351747__$1 = state_351747;
                                                          var statearr_351835_352295 = state_351747__$1;
                                                          statearr_351835_352295[2] = null;
                                                          statearr_351835_352295[1] = 6;
                                                          return"\ufdd0:recur"
                                                        }else {
                                                          if(state_val_351748 === 37) {
                                                            try {
                                                              var inst_351525 = function() {
                                                                throw cljs.core.match.backtrack;
                                                              }();
                                                              var state_351747__$1 = state_351747;
                                                              var statearr_351838_352296 = state_351747__$1;
                                                              statearr_351838_352296[2] = inst_351525;
                                                              statearr_351838_352296[1] = 39;
                                                              return"\ufdd0:recur"
                                                            }catch(e351836) {
                                                              if(e351836 instanceof Error) {
                                                                var ex__5575__auto__ = e351836;
                                                                var statearr_351837_352297 = state_351747;
                                                                statearr_351837_352297[1] = 27;
                                                                statearr_351837_352297[2] = ex__5575__auto__;
                                                                return"\ufdd0:recur"
                                                              }else {
                                                                if("\ufdd0:else") {
                                                                  throw e351836;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            if(state_val_351748 === 69) {
                                                              try {
                                                                var inst_351493 = state_351747[8];
                                                                var inst_351602 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:security");
                                                                var state_351747__$1 = state_351747;
                                                                if(inst_351602) {
                                                                  var statearr_351841_352298 = state_351747__$1;
                                                                  statearr_351841_352298[1] = 70
                                                                }else {
                                                                  var statearr_351842_352299 = state_351747__$1;
                                                                  statearr_351842_352299[1] = 71
                                                                }
                                                                return"\ufdd0:recur"
                                                              }catch(e351839) {
                                                                if(e351839 instanceof Error) {
                                                                  var ex__5575__auto__ = e351839;
                                                                  var statearr_351840_352300 = state_351747;
                                                                  statearr_351840_352300[1] = 17;
                                                                  statearr_351840_352300[2] = ex__5575__auto__;
                                                                  return"\ufdd0:recur"
                                                                }else {
                                                                  if("\ufdd0:else") {
                                                                    throw e351839;
                                                                  }else {
                                                                    return null
                                                                  }
                                                                }
                                                              }
                                                            }else {
                                                              if(state_val_351748 === 101) {
                                                                try {
                                                                  var state_351747__$1 = state_351747;
                                                                  var statearr_351845_352301 = state_351747__$1;
                                                                  statearr_351845_352301[2] = null;
                                                                  statearr_351845_352301[1] = 102;
                                                                  return"\ufdd0:recur"
                                                                }catch(e351843) {
                                                                  if(e351843 instanceof Error) {
                                                                    var ex__5575__auto__ = e351843;
                                                                    var statearr_351844_352302 = state_351747;
                                                                    statearr_351844_352302[1] = 17;
                                                                    statearr_351844_352302[2] = ex__5575__auto__;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if("\ufdd0:else") {
                                                                      throw e351843;
                                                                    }else {
                                                                      return null
                                                                    }
                                                                  }
                                                                }
                                                              }else {
                                                                if(state_val_351748 === 133) {
                                                                  try {
                                                                    try {
                                                                      var inst_351723 = state_351747[2];
                                                                      var state_351747__$1 = state_351747;
                                                                      var statearr_351850_352303 = state_351747__$1;
                                                                      statearr_351850_352303[2] = inst_351723;
                                                                      statearr_351850_352303[1] = 125;
                                                                      return"\ufdd0:recur"
                                                                    }catch(e351848) {
                                                                      if(e351848 instanceof Error) {
                                                                        var ex__5575__auto__ = e351848;
                                                                        var statearr_351849_352304 = state_351747;
                                                                        statearr_351849_352304[1] = 12;
                                                                        statearr_351849_352304[2] = ex__5575__auto__;
                                                                        return"\ufdd0:recur"
                                                                      }else {
                                                                        if("\ufdd0:else") {
                                                                          throw e351848;
                                                                        }else {
                                                                          return null
                                                                        }
                                                                      }
                                                                    }
                                                                  }catch(e351846) {
                                                                    if(e351846 instanceof Error) {
                                                                      var ex__5575__auto__ = e351846;
                                                                      var statearr_351847_352305 = state_351747;
                                                                      statearr_351847_352305[1] = 126;
                                                                      statearr_351847_352305[2] = ex__5575__auto__;
                                                                      return"\ufdd0:recur"
                                                                    }else {
                                                                      if("\ufdd0:else") {
                                                                        throw e351846;
                                                                      }else {
                                                                        return null
                                                                      }
                                                                    }
                                                                  }
                                                                }else {
                                                                  if(state_val_351748 === 6) {
                                                                    var inst_351743 = state_351747[2];
                                                                    var state_351747__$1 = state_351747;
                                                                    var statearr_351851_352306 = state_351747__$1;
                                                                    statearr_351851_352306[2] = inst_351743;
                                                                    statearr_351851_352306[1] = 3;
                                                                    return"\ufdd0:recur"
                                                                  }else {
                                                                    if(state_val_351748 === 38) {
                                                                      try {
                                                                        var inst_351522 = state_351747[7];
                                                                        var inst_351527 = function() {
                                                                          throw inst_351522;
                                                                        }();
                                                                        var state_351747__$1 = state_351747;
                                                                        var statearr_351854_352307 = state_351747__$1;
                                                                        statearr_351854_352307[2] = inst_351527;
                                                                        statearr_351854_352307[1] = 39;
                                                                        return"\ufdd0:recur"
                                                                      }catch(e351852) {
                                                                        if(e351852 instanceof Error) {
                                                                          var ex__5575__auto__ = e351852;
                                                                          var statearr_351853_352308 = state_351747;
                                                                          statearr_351853_352308[1] = 27;
                                                                          statearr_351853_352308[2] = ex__5575__auto__;
                                                                          return"\ufdd0:recur"
                                                                        }else {
                                                                          if("\ufdd0:else") {
                                                                            throw e351852;
                                                                          }else {
                                                                            return null
                                                                          }
                                                                        }
                                                                      }
                                                                    }else {
                                                                      if(state_val_351748 === 70) {
                                                                        try {
                                                                          var state_351747__$1 = state_351747;
                                                                          var statearr_351857_352309 = state_351747__$1;
                                                                          statearr_351857_352309[2] = null;
                                                                          statearr_351857_352309[1] = 78;
                                                                          return"\ufdd0:recur"
                                                                        }catch(e351855) {
                                                                          if(e351855 instanceof Error) {
                                                                            var ex__5575__auto__ = e351855;
                                                                            var statearr_351856_352310 = state_351747;
                                                                            statearr_351856_352310[1] = 17;
                                                                            statearr_351856_352310[2] = ex__5575__auto__;
                                                                            return"\ufdd0:recur"
                                                                          }else {
                                                                            if("\ufdd0:else") {
                                                                              throw e351855;
                                                                            }else {
                                                                              return null
                                                                            }
                                                                          }
                                                                        }
                                                                      }else {
                                                                        if(state_val_351748 === 102) {
                                                                          try {
                                                                            var inst_351658 = state_351747[2];
                                                                            var state_351747__$1 = state_351747;
                                                                            var statearr_351860_352311 = state_351747__$1;
                                                                            statearr_351860_352311[2] = inst_351658;
                                                                            statearr_351860_352311[1] = 87;
                                                                            return"\ufdd0:recur"
                                                                          }catch(e351858) {
                                                                            if(e351858 instanceof Error) {
                                                                              var ex__5575__auto__ = e351858;
                                                                              var statearr_351859_352312 = state_351747;
                                                                              statearr_351859_352312[1] = 17;
                                                                              statearr_351859_352312[2] = ex__5575__auto__;
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if("\ufdd0:else") {
                                                                                throw e351858;
                                                                              }else {
                                                                                return null
                                                                              }
                                                                            }
                                                                          }
                                                                        }else {
                                                                          if(state_val_351748 === 134) {
                                                                            try {
                                                                              try {
                                                                                var inst_351718 = function() {
                                                                                  throw cljs.core.match.backtrack;
                                                                                }();
                                                                                var state_351747__$1 = state_351747;
                                                                                var statearr_351865_352313 = state_351747__$1;
                                                                                statearr_351865_352313[2] = inst_351718;
                                                                                statearr_351865_352313[1] = 136;
                                                                                return"\ufdd0:recur"
                                                                              }catch(e351863) {
                                                                                if(e351863 instanceof Error) {
                                                                                  var ex__5575__auto__ = e351863;
                                                                                  var statearr_351864_352314 = state_351747;
                                                                                  statearr_351864_352314[1] = 12;
                                                                                  statearr_351864_352314[2] = ex__5575__auto__;
                                                                                  return"\ufdd0:recur"
                                                                                }else {
                                                                                  if("\ufdd0:else") {
                                                                                    throw e351863;
                                                                                  }else {
                                                                                    return null
                                                                                  }
                                                                                }
                                                                              }
                                                                            }catch(e351861) {
                                                                              if(e351861 instanceof Error) {
                                                                                var ex__5575__auto__ = e351861;
                                                                                var statearr_351862_352315 = state_351747;
                                                                                statearr_351862_352315[1] = 126;
                                                                                statearr_351862_352315[2] = ex__5575__auto__;
                                                                                return"\ufdd0:recur"
                                                                              }else {
                                                                                if("\ufdd0:else") {
                                                                                  throw e351861;
                                                                                }else {
                                                                                  return null
                                                                                }
                                                                              }
                                                                            }
                                                                          }else {
                                                                            if(state_val_351748 === 7) {
                                                                              var inst_351486 = state_351747[9];
                                                                              var inst_351486__$1 = state_351747[2];
                                                                              var inst_351487 = cljs.core.seq_QMARK_.call(null, inst_351486__$1);
                                                                              var state_351747__$1 = function() {
                                                                                var statearr_351866 = state_351747;
                                                                                statearr_351866[9] = inst_351486__$1;
                                                                                return statearr_351866
                                                                              }();
                                                                              if(inst_351487) {
                                                                                var statearr_351867_352316 = state_351747__$1;
                                                                                statearr_351867_352316[1] = 8
                                                                              }else {
                                                                                var statearr_351868_352317 = state_351747__$1;
                                                                                statearr_351868_352317[1] = 9
                                                                              }
                                                                              return"\ufdd0:recur"
                                                                            }else {
                                                                              if(state_val_351748 === 39) {
                                                                                try {
                                                                                  var inst_351529 = state_351747[2];
                                                                                  var state_351747__$1 = state_351747;
                                                                                  var statearr_351871_352318 = state_351747__$1;
                                                                                  statearr_351871_352318[2] = inst_351529;
                                                                                  statearr_351871_352318[1] = 35;
                                                                                  return"\ufdd0:recur"
                                                                                }catch(e351869) {
                                                                                  if(e351869 instanceof Error) {
                                                                                    var ex__5575__auto__ = e351869;
                                                                                    var statearr_351870_352319 = state_351747;
                                                                                    statearr_351870_352319[1] = 27;
                                                                                    statearr_351870_352319[2] = ex__5575__auto__;
                                                                                    return"\ufdd0:recur"
                                                                                  }else {
                                                                                    if("\ufdd0:else") {
                                                                                      throw e351869;
                                                                                    }else {
                                                                                      return null
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }else {
                                                                                if(state_val_351748 === 71) {
                                                                                  try {
                                                                                    var inst_351493 = state_351747[8];
                                                                                    var inst_351628 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:messaging");
                                                                                    var state_351747__$1 = state_351747;
                                                                                    if(inst_351628) {
                                                                                      var statearr_351874_352320 = state_351747__$1;
                                                                                      statearr_351874_352320[1] = 85
                                                                                    }else {
                                                                                      var statearr_351875_352321 = state_351747__$1;
                                                                                      statearr_351875_352321[1] = 86
                                                                                    }
                                                                                    return"\ufdd0:recur"
                                                                                  }catch(e351872) {
                                                                                    if(e351872 instanceof Error) {
                                                                                      var ex__5575__auto__ = e351872;
                                                                                      var statearr_351873_352322 = state_351747;
                                                                                      statearr_351873_352322[1] = 17;
                                                                                      statearr_351873_352322[2] = ex__5575__auto__;
                                                                                      return"\ufdd0:recur"
                                                                                    }else {
                                                                                      if("\ufdd0:else") {
                                                                                        throw e351872;
                                                                                      }else {
                                                                                        return null
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }else {
                                                                                  if(state_val_351748 === 103) {
                                                                                    try {
                                                                                      var inst_351493 = state_351747[8];
                                                                                      var inst_351671 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:nav");
                                                                                      var state_351747__$1 = state_351747;
                                                                                      if(inst_351671) {
                                                                                        var statearr_351878_352323 = state_351747__$1;
                                                                                        statearr_351878_352323[1] = 104
                                                                                      }else {
                                                                                        var statearr_351879_352324 = state_351747__$1;
                                                                                        statearr_351879_352324[1] = 105
                                                                                      }
                                                                                      return"\ufdd0:recur"
                                                                                    }catch(e351876) {
                                                                                      if(e351876 instanceof Error) {
                                                                                        var ex__5575__auto__ = e351876;
                                                                                        var statearr_351877_352325 = state_351747;
                                                                                        statearr_351877_352325[1] = 12;
                                                                                        statearr_351877_352325[2] = ex__5575__auto__;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if("\ufdd0:else") {
                                                                                          throw e351876;
                                                                                        }else {
                                                                                          return null
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }else {
                                                                                    if(state_val_351748 === 135) {
                                                                                      try {
                                                                                        try {
                                                                                          var state_351747__$1 = state_351747;
                                                                                          var statearr_351884_352326 = state_351747__$1;
                                                                                          statearr_351884_352326[2] = null;
                                                                                          statearr_351884_352326[1] = 136;
                                                                                          return"\ufdd0:recur"
                                                                                        }catch(e351882) {
                                                                                          if(e351882 instanceof Error) {
                                                                                            var ex__5575__auto__ = e351882;
                                                                                            var statearr_351883_352327 = state_351747;
                                                                                            statearr_351883_352327[1] = 12;
                                                                                            statearr_351883_352327[2] = ex__5575__auto__;
                                                                                            return"\ufdd0:recur"
                                                                                          }else {
                                                                                            if("\ufdd0:else") {
                                                                                              throw e351882;
                                                                                            }else {
                                                                                              return null
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }catch(e351880) {
                                                                                        if(e351880 instanceof Error) {
                                                                                          var ex__5575__auto__ = e351880;
                                                                                          var statearr_351881_352328 = state_351747;
                                                                                          statearr_351881_352328[1] = 126;
                                                                                          statearr_351881_352328[2] = ex__5575__auto__;
                                                                                          return"\ufdd0:recur"
                                                                                        }else {
                                                                                          if("\ufdd0:else") {
                                                                                            throw e351880;
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }else {
                                                                                      if(state_val_351748 === 8) {
                                                                                        var inst_351486 = state_351747[9];
                                                                                        var inst_351489 = cljs.core.apply.call(null, cljs.core.hash_map, inst_351486);
                                                                                        var state_351747__$1 = state_351747;
                                                                                        var statearr_351885_352329 = state_351747__$1;
                                                                                        statearr_351885_352329[2] = inst_351489;
                                                                                        statearr_351885_352329[1] = 10;
                                                                                        return"\ufdd0:recur"
                                                                                      }else {
                                                                                        if(state_val_351748 === 40) {
                                                                                          try {
                                                                                            try {
                                                                                              var inst_351494 = state_351747[6];
                                                                                              var inst_351532 = cljs.core._EQ_.call(null, inst_351494, "\ufdd0:left");
                                                                                              var state_351747__$1 = state_351747;
                                                                                              if(inst_351532) {
                                                                                                var statearr_351890_352330 = state_351747__$1;
                                                                                                statearr_351890_352330[1] = 41
                                                                                              }else {
                                                                                                var statearr_351891_352331 = state_351747__$1;
                                                                                                statearr_351891_352331[1] = 42
                                                                                              }
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e351888) {
                                                                                              if(e351888 instanceof Error) {
                                                                                                var ex__5575__auto__ = e351888;
                                                                                                var statearr_351889_352332 = state_351747;
                                                                                                statearr_351889_352332[1] = 27;
                                                                                                statearr_351889_352332[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e351888;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }catch(e351886) {
                                                                                            if(e351886 instanceof Error) {
                                                                                              var ex__5575__auto__ = e351886;
                                                                                              var statearr_351887_352333 = state_351747;
                                                                                              statearr_351887_352333[1] = 36;
                                                                                              statearr_351887_352333[2] = ex__5575__auto__;
                                                                                              return"\ufdd0:recur"
                                                                                            }else {
                                                                                              if("\ufdd0:else") {
                                                                                                throw e351886;
                                                                                              }else {
                                                                                                return null
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }else {
                                                                                          if(state_val_351748 === 72) {
                                                                                            try {
                                                                                              var inst_351662 = state_351747[2];
                                                                                              var state_351747__$1 = state_351747;
                                                                                              var statearr_351894_352334 = state_351747__$1;
                                                                                              statearr_351894_352334[2] = inst_351662;
                                                                                              statearr_351894_352334[1] = 16;
                                                                                              return"\ufdd0:recur"
                                                                                            }catch(e351892) {
                                                                                              if(e351892 instanceof Error) {
                                                                                                var ex__5575__auto__ = e351892;
                                                                                                var statearr_351893_352335 = state_351747;
                                                                                                statearr_351893_352335[1] = 17;
                                                                                                statearr_351893_352335[2] = ex__5575__auto__;
                                                                                                return"\ufdd0:recur"
                                                                                              }else {
                                                                                                if("\ufdd0:else") {
                                                                                                  throw e351892;
                                                                                                }else {
                                                                                                  return null
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }else {
                                                                                            if(state_val_351748 === 104) {
                                                                                              try {
                                                                                                var inst_351492 = state_351747[10];
                                                                                                var inst_351673 = chatter_box.chat_view_component.navigate.call(null, inst_351492);
                                                                                                var state_351747__$1 = state_351747;
                                                                                                var statearr_351897_352336 = state_351747__$1;
                                                                                                statearr_351897_352336[2] = inst_351673;
                                                                                                statearr_351897_352336[1] = 106;
                                                                                                return"\ufdd0:recur"
                                                                                              }catch(e351895) {
                                                                                                if(e351895 instanceof Error) {
                                                                                                  var ex__5575__auto__ = e351895;
                                                                                                  var statearr_351896_352337 = state_351747;
                                                                                                  statearr_351896_352337[1] = 12;
                                                                                                  statearr_351896_352337[2] = ex__5575__auto__;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if("\ufdd0:else") {
                                                                                                    throw e351895;
                                                                                                  }else {
                                                                                                    return null
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }else {
                                                                                              if(state_val_351748 === 136) {
                                                                                                try {
                                                                                                  try {
                                                                                                    var inst_351721 = state_351747[2];
                                                                                                    var state_351747__$1 = state_351747;
                                                                                                    var statearr_351902_352338 = state_351747__$1;
                                                                                                    statearr_351902_352338[2] = inst_351721;
                                                                                                    statearr_351902_352338[1] = 133;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }catch(e351900) {
                                                                                                    if(e351900 instanceof Error) {
                                                                                                      var ex__5575__auto__ = e351900;
                                                                                                      var statearr_351901_352339 = state_351747;
                                                                                                      statearr_351901_352339[1] = 12;
                                                                                                      statearr_351901_352339[2] = ex__5575__auto__;
                                                                                                      return"\ufdd0:recur"
                                                                                                    }else {
                                                                                                      if("\ufdd0:else") {
                                                                                                        throw e351900;
                                                                                                      }else {
                                                                                                        return null
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }catch(e351898) {
                                                                                                  if(e351898 instanceof Error) {
                                                                                                    var ex__5575__auto__ = e351898;
                                                                                                    var statearr_351899_352340 = state_351747;
                                                                                                    statearr_351899_352340[1] = 126;
                                                                                                    statearr_351899_352340[2] = ex__5575__auto__;
                                                                                                    return"\ufdd0:recur"
                                                                                                  }else {
                                                                                                    if("\ufdd0:else") {
                                                                                                      throw e351898;
                                                                                                    }else {
                                                                                                      return null
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }else {
                                                                                                if(state_val_351748 === 9) {
                                                                                                  var inst_351486 = state_351747[9];
                                                                                                  var state_351747__$1 = state_351747;
                                                                                                  var statearr_351903_352341 = state_351747__$1;
                                                                                                  statearr_351903_352341[2] = inst_351486;
                                                                                                  statearr_351903_352341[1] = 10;
                                                                                                  return"\ufdd0:recur"
                                                                                                }else {
                                                                                                  if(state_val_351748 === 41) {
                                                                                                    try {
                                                                                                      try {
                                                                                                        var inst_351495 = state_351747[11];
                                                                                                        var inst_351534 = chatter_box.chat_view_component.user_left.call(null, inst_351495);
                                                                                                        var state_351747__$1 = state_351747;
                                                                                                        var statearr_351908_352342 = state_351747__$1;
                                                                                                        statearr_351908_352342[2] = inst_351534;
                                                                                                        statearr_351908_352342[1] = 43;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }catch(e351906) {
                                                                                                        if(e351906 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e351906;
                                                                                                          var statearr_351907_352343 = state_351747;
                                                                                                          statearr_351907_352343[1] = 27;
                                                                                                          statearr_351907_352343[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e351906;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }catch(e351904) {
                                                                                                      if(e351904 instanceof Error) {
                                                                                                        var ex__5575__auto__ = e351904;
                                                                                                        var statearr_351905_352344 = state_351747;
                                                                                                        statearr_351905_352344[1] = 36;
                                                                                                        statearr_351905_352344[2] = ex__5575__auto__;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }else {
                                                                                                        if("\ufdd0:else") {
                                                                                                          throw e351904;
                                                                                                        }else {
                                                                                                          return null
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }else {
                                                                                                    if(state_val_351748 === 73) {
                                                                                                      try {
                                                                                                        var inst_351626 = state_351747[2];
                                                                                                        var state_351747__$1 = state_351747;
                                                                                                        var statearr_351911_352345 = state_351747__$1;
                                                                                                        statearr_351911_352345[2] = inst_351626;
                                                                                                        statearr_351911_352345[1] = 72;
                                                                                                        return"\ufdd0:recur"
                                                                                                      }catch(e351909) {
                                                                                                        if(e351909 instanceof Error) {
                                                                                                          var ex__5575__auto__ = e351909;
                                                                                                          var statearr_351910_352346 = state_351747;
                                                                                                          statearr_351910_352346[1] = 17;
                                                                                                          statearr_351910_352346[2] = ex__5575__auto__;
                                                                                                          return"\ufdd0:recur"
                                                                                                        }else {
                                                                                                          if("\ufdd0:else") {
                                                                                                            throw e351909;
                                                                                                          }else {
                                                                                                            return null
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }else {
                                                                                                      if(state_val_351748 === 105) {
                                                                                                        try {
                                                                                                          var inst_351493 = state_351747[8];
                                                                                                          var inst_351675 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:view");
                                                                                                          var state_351747__$1 = state_351747;
                                                                                                          if(inst_351675) {
                                                                                                            var statearr_351914_352347 = state_351747__$1;
                                                                                                            statearr_351914_352347[1] = 107
                                                                                                          }else {
                                                                                                            var statearr_351915_352348 = state_351747__$1;
                                                                                                            statearr_351915_352348[1] = 108
                                                                                                          }
                                                                                                          return"\ufdd0:recur"
                                                                                                        }catch(e351912) {
                                                                                                          if(e351912 instanceof Error) {
                                                                                                            var ex__5575__auto__ = e351912;
                                                                                                            var statearr_351913_352349 = state_351747;
                                                                                                            statearr_351913_352349[1] = 12;
                                                                                                            statearr_351913_352349[2] = ex__5575__auto__;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if("\ufdd0:else") {
                                                                                                              throw e351912;
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }else {
                                                                                                        if(state_val_351748 === 137) {
                                                                                                          try {
                                                                                                            var inst_351728 = function() {
                                                                                                              throw cljs.core.match.backtrack;
                                                                                                            }();
                                                                                                            var state_351747__$1 = state_351747;
                                                                                                            var statearr_351918_352350 = state_351747__$1;
                                                                                                            statearr_351918_352350[2] = inst_351728;
                                                                                                            statearr_351918_352350[1] = 139;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }catch(e351916) {
                                                                                                            if(e351916 instanceof Error) {
                                                                                                              var ex__5575__auto__ = e351916;
                                                                                                              var statearr_351917_352351 = state_351747;
                                                                                                              statearr_351917_352351[1] = 12;
                                                                                                              statearr_351917_352351[2] = ex__5575__auto__;
                                                                                                              return"\ufdd0:recur"
                                                                                                            }else {
                                                                                                              if("\ufdd0:else") {
                                                                                                                throw e351916;
                                                                                                              }else {
                                                                                                                return null
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }else {
                                                                                                          if(state_val_351748 === 10) {
                                                                                                            var inst_351492 = state_351747[10];
                                                                                                            var inst_351492__$1 = state_351747[2];
                                                                                                            var inst_351493 = cljs.core.get.call(null, inst_351492__$1, "\ufdd0:area");
                                                                                                            var inst_351494 = cljs.core.get.call(null, inst_351492__$1, "\ufdd0:key");
                                                                                                            var inst_351495 = cljs.core.get.call(null, inst_351492__$1, "\ufdd0:data");
                                                                                                            var state_351747__$1 = function() {
                                                                                                              var statearr_351919 = state_351747;
                                                                                                              statearr_351919[10] = inst_351492__$1;
                                                                                                              statearr_351919[11] = inst_351495;
                                                                                                              statearr_351919[6] = inst_351494;
                                                                                                              statearr_351919[8] = inst_351493;
                                                                                                              return statearr_351919
                                                                                                            }();
                                                                                                            var statearr_351920_352352 = state_351747__$1;
                                                                                                            statearr_351920_352352[2] = null;
                                                                                                            statearr_351920_352352[1] = 103;
                                                                                                            return"\ufdd0:recur"
                                                                                                          }else {
                                                                                                            if(state_val_351748 === 42) {
                                                                                                              try {
                                                                                                                try {
                                                                                                                  var state_351747__$1 = state_351747;
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    var statearr_351925_352353 = state_351747__$1;
                                                                                                                    statearr_351925_352353[1] = 44
                                                                                                                  }else {
                                                                                                                    var statearr_351926_352354 = state_351747__$1;
                                                                                                                    statearr_351926_352354[1] = 45
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e351923) {
                                                                                                                  if(e351923 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e351923;
                                                                                                                    var statearr_351924_352355 = state_351747;
                                                                                                                    statearr_351924_352355[1] = 27;
                                                                                                                    statearr_351924_352355[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e351923;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }catch(e351921) {
                                                                                                                if(e351921 instanceof Error) {
                                                                                                                  var ex__5575__auto__ = e351921;
                                                                                                                  var statearr_351922_352356 = state_351747;
                                                                                                                  statearr_351922_352356[1] = 36;
                                                                                                                  statearr_351922_352356[2] = ex__5575__auto__;
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }else {
                                                                                                                  if("\ufdd0:else") {
                                                                                                                    throw e351921;
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }else {
                                                                                                              if(state_val_351748 === 74) {
                                                                                                                try {
                                                                                                                  var inst_351604 = state_351747[12];
                                                                                                                  var inst_351604__$1 = state_351747[2];
                                                                                                                  var inst_351605 = inst_351604__$1 === cljs.core.match.backtrack;
                                                                                                                  var state_351747__$1 = function() {
                                                                                                                    var statearr_351929 = state_351747;
                                                                                                                    statearr_351929[12] = inst_351604__$1;
                                                                                                                    return statearr_351929
                                                                                                                  }();
                                                                                                                  if(cljs.core.truth_(inst_351605)) {
                                                                                                                    var statearr_351930_352357 = state_351747__$1;
                                                                                                                    statearr_351930_352357[1] = 75
                                                                                                                  }else {
                                                                                                                    var statearr_351931_352358 = state_351747__$1;
                                                                                                                    statearr_351931_352358[1] = 76
                                                                                                                  }
                                                                                                                  return"\ufdd0:recur"
                                                                                                                }catch(e351927) {
                                                                                                                  if(e351927 instanceof Error) {
                                                                                                                    var ex__5575__auto__ = e351927;
                                                                                                                    var statearr_351928_352359 = state_351747;
                                                                                                                    statearr_351928_352359[1] = 17;
                                                                                                                    statearr_351928_352359[2] = ex__5575__auto__;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }else {
                                                                                                                    if("\ufdd0:else") {
                                                                                                                      throw e351927;
                                                                                                                    }else {
                                                                                                                      return null
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }else {
                                                                                                                if(state_val_351748 === 106) {
                                                                                                                  try {
                                                                                                                    var inst_351737 = state_351747[2];
                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                    var statearr_351934_352360 = state_351747__$1;
                                                                                                                    statearr_351934_352360[2] = inst_351737;
                                                                                                                    statearr_351934_352360[1] = 11;
                                                                                                                    return"\ufdd0:recur"
                                                                                                                  }catch(e351932) {
                                                                                                                    if(e351932 instanceof Error) {
                                                                                                                      var ex__5575__auto__ = e351932;
                                                                                                                      var statearr_351933_352361 = state_351747;
                                                                                                                      statearr_351933_352361[1] = 12;
                                                                                                                      statearr_351933_352361[2] = ex__5575__auto__;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if("\ufdd0:else") {
                                                                                                                        throw e351932;
                                                                                                                      }else {
                                                                                                                        return null
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }else {
                                                                                                                  if(state_val_351748 === 138) {
                                                                                                                    try {
                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                      var statearr_351937_352362 = state_351747__$1;
                                                                                                                      statearr_351937_352362[2] = null;
                                                                                                                      statearr_351937_352362[1] = 139;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }catch(e351935) {
                                                                                                                      if(e351935 instanceof Error) {
                                                                                                                        var ex__5575__auto__ = e351935;
                                                                                                                        var statearr_351936_352363 = state_351747;
                                                                                                                        statearr_351936_352363[1] = 12;
                                                                                                                        statearr_351936_352363[2] = ex__5575__auto__;
                                                                                                                        return"\ufdd0:recur"
                                                                                                                      }else {
                                                                                                                        if("\ufdd0:else") {
                                                                                                                          throw e351935;
                                                                                                                        }else {
                                                                                                                          return null
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    if(state_val_351748 === 11) {
                                                                                                                      var inst_351739 = state_351747[2];
                                                                                                                      var state_351747__$1 = function() {
                                                                                                                        var statearr_351938 = state_351747;
                                                                                                                        statearr_351938[13] = inst_351739;
                                                                                                                        return statearr_351938
                                                                                                                      }();
                                                                                                                      var statearr_351939_352364 = state_351747__$1;
                                                                                                                      statearr_351939_352364[2] = null;
                                                                                                                      statearr_351939_352364[1] = 2;
                                                                                                                      return"\ufdd0:recur"
                                                                                                                    }else {
                                                                                                                      if(state_val_351748 === 43) {
                                                                                                                        try {
                                                                                                                          try {
                                                                                                                            var inst_351542 = state_351747[2];
                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                            var statearr_351944_352365 = state_351747__$1;
                                                                                                                            statearr_351944_352365[2] = inst_351542;
                                                                                                                            statearr_351944_352365[1] = 35;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e351942) {
                                                                                                                            if(e351942 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e351942;
                                                                                                                              var statearr_351943_352366 = state_351747;
                                                                                                                              statearr_351943_352366[1] = 27;
                                                                                                                              statearr_351943_352366[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e351942;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }catch(e351940) {
                                                                                                                          if(e351940 instanceof Error) {
                                                                                                                            var ex__5575__auto__ = e351940;
                                                                                                                            var statearr_351941_352367 = state_351747;
                                                                                                                            statearr_351941_352367[1] = 36;
                                                                                                                            statearr_351941_352367[2] = ex__5575__auto__;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }else {
                                                                                                                            if("\ufdd0:else") {
                                                                                                                              throw e351940;
                                                                                                                            }else {
                                                                                                                              return null
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }else {
                                                                                                                        if(state_val_351748 === 75) {
                                                                                                                          try {
                                                                                                                            var inst_351607 = function() {
                                                                                                                              throw cljs.core.match.backtrack;
                                                                                                                            }();
                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                            var statearr_351947_352368 = state_351747__$1;
                                                                                                                            statearr_351947_352368[2] = inst_351607;
                                                                                                                            statearr_351947_352368[1] = 77;
                                                                                                                            return"\ufdd0:recur"
                                                                                                                          }catch(e351945) {
                                                                                                                            if(e351945 instanceof Error) {
                                                                                                                              var ex__5575__auto__ = e351945;
                                                                                                                              var statearr_351946_352369 = state_351747;
                                                                                                                              statearr_351946_352369[1] = 17;
                                                                                                                              statearr_351946_352369[2] = ex__5575__auto__;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }else {
                                                                                                                              if("\ufdd0:else") {
                                                                                                                                throw e351945;
                                                                                                                              }else {
                                                                                                                                return null
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }else {
                                                                                                                          if(state_val_351748 === 107) {
                                                                                                                            try {
                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                              var statearr_351950_352370 = state_351747__$1;
                                                                                                                              statearr_351950_352370[2] = null;
                                                                                                                              statearr_351950_352370[1] = 115;
                                                                                                                              return"\ufdd0:recur"
                                                                                                                            }catch(e351948) {
                                                                                                                              if(e351948 instanceof Error) {
                                                                                                                                var ex__5575__auto__ = e351948;
                                                                                                                                var statearr_351949_352371 = state_351747;
                                                                                                                                statearr_351949_352371[1] = 12;
                                                                                                                                statearr_351949_352371[2] = ex__5575__auto__;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if("\ufdd0:else") {
                                                                                                                                  throw e351948;
                                                                                                                                }else {
                                                                                                                                  return null
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }else {
                                                                                                                            if(state_val_351748 === 139) {
                                                                                                                              try {
                                                                                                                                var inst_351731 = state_351747[2];
                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                var statearr_351953_352372 = state_351747__$1;
                                                                                                                                statearr_351953_352372[2] = inst_351731;
                                                                                                                                statearr_351953_352372[1] = 124;
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }catch(e351951) {
                                                                                                                                if(e351951 instanceof Error) {
                                                                                                                                  var ex__5575__auto__ = e351951;
                                                                                                                                  var statearr_351952_352373 = state_351747;
                                                                                                                                  statearr_351952_352373[1] = 12;
                                                                                                                                  statearr_351952_352373[2] = ex__5575__auto__;
                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                }else {
                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                    throw e351951;
                                                                                                                                  }else {
                                                                                                                                    return null
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }else {
                                                                                                                              if(state_val_351748 === 12) {
                                                                                                                                var inst_351499 = state_351747[14];
                                                                                                                                var inst_351499__$1 = state_351747[2];
                                                                                                                                var inst_351500 = inst_351499__$1 === cljs.core.match.backtrack;
                                                                                                                                var state_351747__$1 = function() {
                                                                                                                                  var statearr_351954 = state_351747;
                                                                                                                                  statearr_351954[14] = inst_351499__$1;
                                                                                                                                  return statearr_351954
                                                                                                                                }();
                                                                                                                                if(cljs.core.truth_(inst_351500)) {
                                                                                                                                  var statearr_351955_352374 = state_351747__$1;
                                                                                                                                  statearr_351955_352374[1] = 13
                                                                                                                                }else {
                                                                                                                                  var statearr_351956_352375 = state_351747__$1;
                                                                                                                                  statearr_351956_352375[1] = 14
                                                                                                                                }
                                                                                                                                return"\ufdd0:recur"
                                                                                                                              }else {
                                                                                                                                if(state_val_351748 === 44) {
                                                                                                                                  try {
                                                                                                                                    try {
                                                                                                                                      var inst_351537 = function() {
                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                      }();
                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                      var statearr_351961_352376 = state_351747__$1;
                                                                                                                                      statearr_351961_352376[2] = inst_351537;
                                                                                                                                      statearr_351961_352376[1] = 46;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }catch(e351959) {
                                                                                                                                      if(e351959 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e351959;
                                                                                                                                        var statearr_351960_352377 = state_351747;
                                                                                                                                        statearr_351960_352377[1] = 27;
                                                                                                                                        statearr_351960_352377[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e351959;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }catch(e351957) {
                                                                                                                                    if(e351957 instanceof Error) {
                                                                                                                                      var ex__5575__auto__ = e351957;
                                                                                                                                      var statearr_351958_352378 = state_351747;
                                                                                                                                      statearr_351958_352378[1] = 36;
                                                                                                                                      statearr_351958_352378[2] = ex__5575__auto__;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }else {
                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                        throw e351957;
                                                                                                                                      }else {
                                                                                                                                        return null
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }else {
                                                                                                                                  if(state_val_351748 === 76) {
                                                                                                                                    try {
                                                                                                                                      var inst_351604 = state_351747[12];
                                                                                                                                      var inst_351609 = function() {
                                                                                                                                        throw inst_351604;
                                                                                                                                      }();
                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                      var statearr_351964_352379 = state_351747__$1;
                                                                                                                                      statearr_351964_352379[2] = inst_351609;
                                                                                                                                      statearr_351964_352379[1] = 77;
                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                    }catch(e351962) {
                                                                                                                                      if(e351962 instanceof Error) {
                                                                                                                                        var ex__5575__auto__ = e351962;
                                                                                                                                        var statearr_351963_352380 = state_351747;
                                                                                                                                        statearr_351963_352380[1] = 17;
                                                                                                                                        statearr_351963_352380[2] = ex__5575__auto__;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                          throw e351962;
                                                                                                                                        }else {
                                                                                                                                          return null
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }else {
                                                                                                                                    if(state_val_351748 === 108) {
                                                                                                                                      try {
                                                                                                                                        var inst_351493 = state_351747[8];
                                                                                                                                        var inst_351701 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:security");
                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                        if(inst_351701) {
                                                                                                                                          var statearr_351967_352381 = state_351747__$1;
                                                                                                                                          statearr_351967_352381[1] = 122
                                                                                                                                        }else {
                                                                                                                                          var statearr_351968_352382 = state_351747__$1;
                                                                                                                                          statearr_351968_352382[1] = 123
                                                                                                                                        }
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }catch(e351965) {
                                                                                                                                        if(e351965 instanceof Error) {
                                                                                                                                          var ex__5575__auto__ = e351965;
                                                                                                                                          var statearr_351966_352383 = state_351747;
                                                                                                                                          statearr_351966_352383[1] = 12;
                                                                                                                                          statearr_351966_352383[2] = ex__5575__auto__;
                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                        }else {
                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                            throw e351965;
                                                                                                                                          }else {
                                                                                                                                            return null
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }else {
                                                                                                                                      if(state_val_351748 === 13) {
                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                        var statearr_351969_352384 = state_351747__$1;
                                                                                                                                        statearr_351969_352384[2] = null;
                                                                                                                                        statearr_351969_352384[1] = 69;
                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                      }else {
                                                                                                                                        if(state_val_351748 === 45) {
                                                                                                                                          try {
                                                                                                                                            try {
                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                              var statearr_351974_352385 = state_351747__$1;
                                                                                                                                              statearr_351974_352385[2] = null;
                                                                                                                                              statearr_351974_352385[1] = 46;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }catch(e351972) {
                                                                                                                                              if(e351972 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e351972;
                                                                                                                                                var statearr_351973_352386 = state_351747;
                                                                                                                                                statearr_351973_352386[1] = 27;
                                                                                                                                                statearr_351973_352386[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e351972;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }catch(e351970) {
                                                                                                                                            if(e351970 instanceof Error) {
                                                                                                                                              var ex__5575__auto__ = e351970;
                                                                                                                                              var statearr_351971_352387 = state_351747;
                                                                                                                                              statearr_351971_352387[1] = 36;
                                                                                                                                              statearr_351971_352387[2] = ex__5575__auto__;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }else {
                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                throw e351970;
                                                                                                                                              }else {
                                                                                                                                                return null
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }else {
                                                                                                                                          if(state_val_351748 === 77) {
                                                                                                                                            try {
                                                                                                                                              var inst_351611 = state_351747[2];
                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                              var statearr_351977_352388 = state_351747__$1;
                                                                                                                                              statearr_351977_352388[2] = inst_351611;
                                                                                                                                              statearr_351977_352388[1] = 73;
                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                            }catch(e351975) {
                                                                                                                                              if(e351975 instanceof Error) {
                                                                                                                                                var ex__5575__auto__ = e351975;
                                                                                                                                                var statearr_351976_352389 = state_351747;
                                                                                                                                                statearr_351976_352389[1] = 17;
                                                                                                                                                statearr_351976_352389[2] = ex__5575__auto__;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                  throw e351975;
                                                                                                                                                }else {
                                                                                                                                                  return null
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }else {
                                                                                                                                            if(state_val_351748 === 109) {
                                                                                                                                              try {
                                                                                                                                                var inst_351735 = state_351747[2];
                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                var statearr_351980_352390 = state_351747__$1;
                                                                                                                                                statearr_351980_352390[2] = inst_351735;
                                                                                                                                                statearr_351980_352390[1] = 106;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }catch(e351978) {
                                                                                                                                                if(e351978 instanceof Error) {
                                                                                                                                                  var ex__5575__auto__ = e351978;
                                                                                                                                                  var statearr_351979_352391 = state_351747;
                                                                                                                                                  statearr_351979_352391[1] = 12;
                                                                                                                                                  statearr_351979_352391[2] = ex__5575__auto__;
                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                }else {
                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                    throw e351978;
                                                                                                                                                  }else {
                                                                                                                                                    return null
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }else {
                                                                                                                                              if(state_val_351748 === 14) {
                                                                                                                                                var inst_351499 = state_351747[14];
                                                                                                                                                var inst_351666 = function() {
                                                                                                                                                  throw inst_351499;
                                                                                                                                                }();
                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                var statearr_351981_352392 = state_351747__$1;
                                                                                                                                                statearr_351981_352392[2] = inst_351666;
                                                                                                                                                statearr_351981_352392[1] = 15;
                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                              }else {
                                                                                                                                                if(state_val_351748 === 46) {
                                                                                                                                                  try {
                                                                                                                                                    try {
                                                                                                                                                      var inst_351540 = state_351747[2];
                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                      var statearr_351986_352393 = state_351747__$1;
                                                                                                                                                      statearr_351986_352393[2] = inst_351540;
                                                                                                                                                      statearr_351986_352393[1] = 43;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }catch(e351984) {
                                                                                                                                                      if(e351984 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e351984;
                                                                                                                                                        var statearr_351985_352394 = state_351747;
                                                                                                                                                        statearr_351985_352394[1] = 27;
                                                                                                                                                        statearr_351985_352394[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e351984;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }catch(e351982) {
                                                                                                                                                    if(e351982 instanceof Error) {
                                                                                                                                                      var ex__5575__auto__ = e351982;
                                                                                                                                                      var statearr_351983_352395 = state_351747;
                                                                                                                                                      statearr_351983_352395[1] = 36;
                                                                                                                                                      statearr_351983_352395[2] = ex__5575__auto__;
                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                    }else {
                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                        throw e351982;
                                                                                                                                                      }else {
                                                                                                                                                        return null
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }else {
                                                                                                                                                  if(state_val_351748 === 78) {
                                                                                                                                                    try {
                                                                                                                                                      try {
                                                                                                                                                        var inst_351494 = state_351747[6];
                                                                                                                                                        var inst_351614 = cljs.core._EQ_.call(null, inst_351494, "\ufdd0:login-success");
                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                        if(inst_351614) {
                                                                                                                                                          var statearr_351991_352396 = state_351747__$1;
                                                                                                                                                          statearr_351991_352396[1] = 79
                                                                                                                                                        }else {
                                                                                                                                                          var statearr_351992_352397 = state_351747__$1;
                                                                                                                                                          statearr_351992_352397[1] = 80
                                                                                                                                                        }
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e351989) {
                                                                                                                                                        if(e351989 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e351989;
                                                                                                                                                          var statearr_351990_352398 = state_351747;
                                                                                                                                                          statearr_351990_352398[1] = 17;
                                                                                                                                                          statearr_351990_352398[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e351989;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }catch(e351987) {
                                                                                                                                                      if(e351987 instanceof Error) {
                                                                                                                                                        var ex__5575__auto__ = e351987;
                                                                                                                                                        var statearr_351988_352399 = state_351747;
                                                                                                                                                        statearr_351988_352399[1] = 74;
                                                                                                                                                        statearr_351988_352399[2] = ex__5575__auto__;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                          throw e351987;
                                                                                                                                                        }else {
                                                                                                                                                          return null
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }else {
                                                                                                                                                    if(state_val_351748 === 110) {
                                                                                                                                                      try {
                                                                                                                                                        var inst_351699 = state_351747[2];
                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                        var statearr_351995_352400 = state_351747__$1;
                                                                                                                                                        statearr_351995_352400[2] = inst_351699;
                                                                                                                                                        statearr_351995_352400[1] = 109;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }catch(e351993) {
                                                                                                                                                        if(e351993 instanceof Error) {
                                                                                                                                                          var ex__5575__auto__ = e351993;
                                                                                                                                                          var statearr_351994_352401 = state_351747;
                                                                                                                                                          statearr_351994_352401[1] = 12;
                                                                                                                                                          statearr_351994_352401[2] = ex__5575__auto__;
                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                        }else {
                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                            throw e351993;
                                                                                                                                                          }else {
                                                                                                                                                            return null
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }else {
                                                                                                                                                      if(state_val_351748 === 15) {
                                                                                                                                                        var inst_351668 = state_351747[2];
                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                        var statearr_351996_352402 = state_351747__$1;
                                                                                                                                                        statearr_351996_352402[2] = inst_351668;
                                                                                                                                                        statearr_351996_352402[1] = 11;
                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                      }else {
                                                                                                                                                        if(state_val_351748 === 47) {
                                                                                                                                                          try {
                                                                                                                                                            var inst_351547 = function() {
                                                                                                                                                              throw cljs.core.match.backtrack;
                                                                                                                                                            }();
                                                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                                                            var statearr_351999_352403 = state_351747__$1;
                                                                                                                                                            statearr_351999_352403[2] = inst_351547;
                                                                                                                                                            statearr_351999_352403[1] = 49;
                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                          }catch(e351997) {
                                                                                                                                                            if(e351997 instanceof Error) {
                                                                                                                                                              var ex__5575__auto__ = e351997;
                                                                                                                                                              var statearr_351998_352404 = state_351747;
                                                                                                                                                              statearr_351998_352404[1] = 27;
                                                                                                                                                              statearr_351998_352404[2] = ex__5575__auto__;
                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                            }else {
                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                throw e351997;
                                                                                                                                                              }else {
                                                                                                                                                                return null
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }else {
                                                                                                                                                          if(state_val_351748 === 79) {
                                                                                                                                                            try {
                                                                                                                                                              try {
                                                                                                                                                                var inst_351495 = state_351747[11];
                                                                                                                                                                var inst_351616 = chatter_box.chat_view_component.login_success.call(null, inst_351495);
                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                var statearr_352004_352405 = state_351747__$1;
                                                                                                                                                                statearr_352004_352405[2] = inst_351616;
                                                                                                                                                                statearr_352004_352405[1] = 81;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e352002) {
                                                                                                                                                                if(e352002 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e352002;
                                                                                                                                                                  var statearr_352003_352406 = state_351747;
                                                                                                                                                                  statearr_352003_352406[1] = 17;
                                                                                                                                                                  statearr_352003_352406[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e352002;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }catch(e352000) {
                                                                                                                                                              if(e352000 instanceof Error) {
                                                                                                                                                                var ex__5575__auto__ = e352000;
                                                                                                                                                                var statearr_352001_352407 = state_351747;
                                                                                                                                                                statearr_352001_352407[1] = 74;
                                                                                                                                                                statearr_352001_352407[2] = ex__5575__auto__;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                  throw e352000;
                                                                                                                                                                }else {
                                                                                                                                                                  return null
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }else {
                                                                                                                                                            if(state_val_351748 === 111) {
                                                                                                                                                              try {
                                                                                                                                                                var inst_351677 = state_351747[15];
                                                                                                                                                                var inst_351677__$1 = state_351747[2];
                                                                                                                                                                var inst_351678 = inst_351677__$1 === cljs.core.match.backtrack;
                                                                                                                                                                var state_351747__$1 = function() {
                                                                                                                                                                  var statearr_352007 = state_351747;
                                                                                                                                                                  statearr_352007[15] = inst_351677__$1;
                                                                                                                                                                  return statearr_352007
                                                                                                                                                                }();
                                                                                                                                                                if(cljs.core.truth_(inst_351678)) {
                                                                                                                                                                  var statearr_352008_352408 = state_351747__$1;
                                                                                                                                                                  statearr_352008_352408[1] = 112
                                                                                                                                                                }else {
                                                                                                                                                                  var statearr_352009_352409 = state_351747__$1;
                                                                                                                                                                  statearr_352009_352409[1] = 113
                                                                                                                                                                }
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }catch(e352005) {
                                                                                                                                                                if(e352005 instanceof Error) {
                                                                                                                                                                  var ex__5575__auto__ = e352005;
                                                                                                                                                                  var statearr_352006_352410 = state_351747;
                                                                                                                                                                  statearr_352006_352410[1] = 12;
                                                                                                                                                                  statearr_352006_352410[2] = ex__5575__auto__;
                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                }else {
                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                    throw e352005;
                                                                                                                                                                  }else {
                                                                                                                                                                    return null
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }else {
                                                                                                                                                              if(state_val_351748 === 16) {
                                                                                                                                                                var inst_351664 = state_351747[2];
                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                var statearr_352010_352411 = state_351747__$1;
                                                                                                                                                                statearr_352010_352411[2] = inst_351664;
                                                                                                                                                                statearr_352010_352411[1] = 15;
                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                              }else {
                                                                                                                                                                if(state_val_351748 === 48) {
                                                                                                                                                                  try {
                                                                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                                                                    var statearr_352013_352412 = state_351747__$1;
                                                                                                                                                                    statearr_352013_352412[2] = null;
                                                                                                                                                                    statearr_352013_352412[1] = 49;
                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                  }catch(e352011) {
                                                                                                                                                                    if(e352011 instanceof Error) {
                                                                                                                                                                      var ex__5575__auto__ = e352011;
                                                                                                                                                                      var statearr_352012_352413 = state_351747;
                                                                                                                                                                      statearr_352012_352413[1] = 27;
                                                                                                                                                                      statearr_352012_352413[2] = ex__5575__auto__;
                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                    }else {
                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                        throw e352011;
                                                                                                                                                                      }else {
                                                                                                                                                                        return null
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }else {
                                                                                                                                                                  if(state_val_351748 === 80) {
                                                                                                                                                                    try {
                                                                                                                                                                      try {
                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          var statearr_352018_352414 = state_351747__$1;
                                                                                                                                                                          statearr_352018_352414[1] = 82
                                                                                                                                                                        }else {
                                                                                                                                                                          var statearr_352019_352415 = state_351747__$1;
                                                                                                                                                                          statearr_352019_352415[1] = 83
                                                                                                                                                                        }
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e352016) {
                                                                                                                                                                        if(e352016 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e352016;
                                                                                                                                                                          var statearr_352017_352416 = state_351747;
                                                                                                                                                                          statearr_352017_352416[1] = 17;
                                                                                                                                                                          statearr_352017_352416[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e352016;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }catch(e352014) {
                                                                                                                                                                      if(e352014 instanceof Error) {
                                                                                                                                                                        var ex__5575__auto__ = e352014;
                                                                                                                                                                        var statearr_352015_352417 = state_351747;
                                                                                                                                                                        statearr_352015_352417[1] = 74;
                                                                                                                                                                        statearr_352015_352417[2] = ex__5575__auto__;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                          throw e352014;
                                                                                                                                                                        }else {
                                                                                                                                                                          return null
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }else {
                                                                                                                                                                    if(state_val_351748 === 112) {
                                                                                                                                                                      try {
                                                                                                                                                                        var inst_351680 = function() {
                                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                                        }();
                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                        var statearr_352022_352418 = state_351747__$1;
                                                                                                                                                                        statearr_352022_352418[2] = inst_351680;
                                                                                                                                                                        statearr_352022_352418[1] = 114;
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }catch(e352020) {
                                                                                                                                                                        if(e352020 instanceof Error) {
                                                                                                                                                                          var ex__5575__auto__ = e352020;
                                                                                                                                                                          var statearr_352021_352419 = state_351747;
                                                                                                                                                                          statearr_352021_352419[1] = 12;
                                                                                                                                                                          statearr_352021_352419[2] = ex__5575__auto__;
                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                        }else {
                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                            throw e352020;
                                                                                                                                                                          }else {
                                                                                                                                                                            return null
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }else {
                                                                                                                                                                      if(state_val_351748 === 17) {
                                                                                                                                                                        var inst_351502 = state_351747[16];
                                                                                                                                                                        var inst_351502__$1 = state_351747[2];
                                                                                                                                                                        var inst_351503 = inst_351502__$1 === cljs.core.match.backtrack;
                                                                                                                                                                        var state_351747__$1 = function() {
                                                                                                                                                                          var statearr_352023 = state_351747;
                                                                                                                                                                          statearr_352023[16] = inst_351502__$1;
                                                                                                                                                                          return statearr_352023
                                                                                                                                                                        }();
                                                                                                                                                                        if(cljs.core.truth_(inst_351503)) {
                                                                                                                                                                          var statearr_352024_352420 = state_351747__$1;
                                                                                                                                                                          statearr_352024_352420[1] = 18
                                                                                                                                                                        }else {
                                                                                                                                                                          var statearr_352025_352421 = state_351747__$1;
                                                                                                                                                                          statearr_352025_352421[1] = 19
                                                                                                                                                                        }
                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                      }else {
                                                                                                                                                                        if(state_val_351748 === 49) {
                                                                                                                                                                          try {
                                                                                                                                                                            var inst_351550 = state_351747[2];
                                                                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                                                                            var statearr_352028_352422 = state_351747__$1;
                                                                                                                                                                            statearr_352028_352422[2] = inst_351550;
                                                                                                                                                                            statearr_352028_352422[1] = 34;
                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                          }catch(e352026) {
                                                                                                                                                                            if(e352026 instanceof Error) {
                                                                                                                                                                              var ex__5575__auto__ = e352026;
                                                                                                                                                                              var statearr_352027_352423 = state_351747;
                                                                                                                                                                              statearr_352027_352423[1] = 27;
                                                                                                                                                                              statearr_352027_352423[2] = ex__5575__auto__;
                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                            }else {
                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                throw e352026;
                                                                                                                                                                              }else {
                                                                                                                                                                                return null
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }else {
                                                                                                                                                                          if(state_val_351748 === 81) {
                                                                                                                                                                            try {
                                                                                                                                                                              try {
                                                                                                                                                                                var inst_351624 = state_351747[2];
                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                var statearr_352033_352424 = state_351747__$1;
                                                                                                                                                                                statearr_352033_352424[2] = inst_351624;
                                                                                                                                                                                statearr_352033_352424[1] = 73;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }catch(e352031) {
                                                                                                                                                                                if(e352031 instanceof Error) {
                                                                                                                                                                                  var ex__5575__auto__ = e352031;
                                                                                                                                                                                  var statearr_352032_352425 = state_351747;
                                                                                                                                                                                  statearr_352032_352425[1] = 17;
                                                                                                                                                                                  statearr_352032_352425[2] = ex__5575__auto__;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }else {
                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                    throw e352031;
                                                                                                                                                                                  }else {
                                                                                                                                                                                    return null
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }catch(e352029) {
                                                                                                                                                                              if(e352029 instanceof Error) {
                                                                                                                                                                                var ex__5575__auto__ = e352029;
                                                                                                                                                                                var statearr_352030_352426 = state_351747;
                                                                                                                                                                                statearr_352030_352426[1] = 74;
                                                                                                                                                                                statearr_352030_352426[2] = ex__5575__auto__;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                  throw e352029;
                                                                                                                                                                                }else {
                                                                                                                                                                                  return null
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }else {
                                                                                                                                                                            if(state_val_351748 === 113) {
                                                                                                                                                                              try {
                                                                                                                                                                                var inst_351677 = state_351747[15];
                                                                                                                                                                                var inst_351682 = function() {
                                                                                                                                                                                  throw inst_351677;
                                                                                                                                                                                }();
                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                var statearr_352036_352427 = state_351747__$1;
                                                                                                                                                                                statearr_352036_352427[2] = inst_351682;
                                                                                                                                                                                statearr_352036_352427[1] = 114;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }catch(e352034) {
                                                                                                                                                                                if(e352034 instanceof Error) {
                                                                                                                                                                                  var ex__5575__auto__ = e352034;
                                                                                                                                                                                  var statearr_352035_352428 = state_351747;
                                                                                                                                                                                  statearr_352035_352428[1] = 12;
                                                                                                                                                                                  statearr_352035_352428[2] = ex__5575__auto__;
                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                }else {
                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                    throw e352034;
                                                                                                                                                                                  }else {
                                                                                                                                                                                    return null
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }else {
                                                                                                                                                                              if(state_val_351748 === 18) {
                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                var statearr_352037_352429 = state_351747__$1;
                                                                                                                                                                                statearr_352037_352429[2] = null;
                                                                                                                                                                                statearr_352037_352429[1] = 50;
                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                              }else {
                                                                                                                                                                                if(state_val_351748 === 50) {
                                                                                                                                                                                  try {
                                                                                                                                                                                    var inst_351493 = state_351747[8];
                                                                                                                                                                                    var inst_351561 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:messaging");
                                                                                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                                                                                    if(inst_351561) {
                                                                                                                                                                                      var statearr_352040_352430 = state_351747__$1;
                                                                                                                                                                                      statearr_352040_352430[1] = 51
                                                                                                                                                                                    }else {
                                                                                                                                                                                      var statearr_352041_352431 = state_351747__$1;
                                                                                                                                                                                      statearr_352041_352431[1] = 52
                                                                                                                                                                                    }
                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                  }catch(e352038) {
                                                                                                                                                                                    if(e352038 instanceof Error) {
                                                                                                                                                                                      var ex__5575__auto__ = e352038;
                                                                                                                                                                                      var statearr_352039_352432 = state_351747;
                                                                                                                                                                                      statearr_352039_352432[1] = 22;
                                                                                                                                                                                      statearr_352039_352432[2] = ex__5575__auto__;
                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                        throw e352038;
                                                                                                                                                                                      }else {
                                                                                                                                                                                        return null
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }else {
                                                                                                                                                                                  if(state_val_351748 === 82) {
                                                                                                                                                                                    try {
                                                                                                                                                                                      try {
                                                                                                                                                                                        var inst_351619 = function() {
                                                                                                                                                                                          throw cljs.core.match.backtrack;
                                                                                                                                                                                        }();
                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                        var statearr_352046_352433 = state_351747__$1;
                                                                                                                                                                                        statearr_352046_352433[2] = inst_351619;
                                                                                                                                                                                        statearr_352046_352433[1] = 84;
                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                      }catch(e352044) {
                                                                                                                                                                                        if(e352044 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e352044;
                                                                                                                                                                                          var statearr_352045_352434 = state_351747;
                                                                                                                                                                                          statearr_352045_352434[1] = 17;
                                                                                                                                                                                          statearr_352045_352434[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e352044;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }catch(e352042) {
                                                                                                                                                                                      if(e352042 instanceof Error) {
                                                                                                                                                                                        var ex__5575__auto__ = e352042;
                                                                                                                                                                                        var statearr_352043_352435 = state_351747;
                                                                                                                                                                                        statearr_352043_352435[1] = 74;
                                                                                                                                                                                        statearr_352043_352435[2] = ex__5575__auto__;
                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                          throw e352042;
                                                                                                                                                                                        }else {
                                                                                                                                                                                          return null
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }else {
                                                                                                                                                                                    if(state_val_351748 === 114) {
                                                                                                                                                                                      try {
                                                                                                                                                                                        var inst_351684 = state_351747[2];
                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                        var statearr_352049_352436 = state_351747__$1;
                                                                                                                                                                                        statearr_352049_352436[2] = inst_351684;
                                                                                                                                                                                        statearr_352049_352436[1] = 110;
                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                      }catch(e352047) {
                                                                                                                                                                                        if(e352047 instanceof Error) {
                                                                                                                                                                                          var ex__5575__auto__ = e352047;
                                                                                                                                                                                          var statearr_352048_352437 = state_351747;
                                                                                                                                                                                          statearr_352048_352437[1] = 12;
                                                                                                                                                                                          statearr_352048_352437[2] = ex__5575__auto__;
                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                            throw e352047;
                                                                                                                                                                                          }else {
                                                                                                                                                                                            return null
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }else {
                                                                                                                                                                                      if(state_val_351748 === 19) {
                                                                                                                                                                                        var inst_351502 = state_351747[16];
                                                                                                                                                                                        var inst_351597 = function() {
                                                                                                                                                                                          throw inst_351502;
                                                                                                                                                                                        }();
                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                        var statearr_352050_352438 = state_351747__$1;
                                                                                                                                                                                        statearr_352050_352438[2] = inst_351597;
                                                                                                                                                                                        statearr_352050_352438[1] = 20;
                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                      }else {
                                                                                                                                                                                        if(state_val_351748 === 51) {
                                                                                                                                                                                          try {
                                                                                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                                                                                            var statearr_352053_352439 = state_351747__$1;
                                                                                                                                                                                            statearr_352053_352439[2] = null;
                                                                                                                                                                                            statearr_352053_352439[1] = 59;
                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                          }catch(e352051) {
                                                                                                                                                                                            if(e352051 instanceof Error) {
                                                                                                                                                                                              var ex__5575__auto__ = e352051;
                                                                                                                                                                                              var statearr_352052_352440 = state_351747;
                                                                                                                                                                                              statearr_352052_352440[1] = 22;
                                                                                                                                                                                              statearr_352052_352440[2] = ex__5575__auto__;
                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                throw e352051;
                                                                                                                                                                                              }else {
                                                                                                                                                                                                return null
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }else {
                                                                                                                                                                                          if(state_val_351748 === 83) {
                                                                                                                                                                                            try {
                                                                                                                                                                                              try {
                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                var statearr_352058_352441 = state_351747__$1;
                                                                                                                                                                                                statearr_352058_352441[2] = null;
                                                                                                                                                                                                statearr_352058_352441[1] = 84;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }catch(e352056) {
                                                                                                                                                                                                if(e352056 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e352056;
                                                                                                                                                                                                  var statearr_352057_352442 = state_351747;
                                                                                                                                                                                                  statearr_352057_352442[1] = 17;
                                                                                                                                                                                                  statearr_352057_352442[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e352056;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }catch(e352054) {
                                                                                                                                                                                              if(e352054 instanceof Error) {
                                                                                                                                                                                                var ex__5575__auto__ = e352054;
                                                                                                                                                                                                var statearr_352055_352443 = state_351747;
                                                                                                                                                                                                statearr_352055_352443[1] = 74;
                                                                                                                                                                                                statearr_352055_352443[2] = ex__5575__auto__;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                  throw e352054;
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  return null
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }else {
                                                                                                                                                                                            if(state_val_351748 === 115) {
                                                                                                                                                                                              try {
                                                                                                                                                                                                try {
                                                                                                                                                                                                  var inst_351494 = state_351747[6];
                                                                                                                                                                                                  var inst_351687 = cljs.core._EQ_.call(null, inst_351494, "\ufdd0:init");
                                                                                                                                                                                                  var state_351747__$1 = state_351747;
                                                                                                                                                                                                  if(inst_351687) {
                                                                                                                                                                                                    var statearr_352063_352444 = state_351747__$1;
                                                                                                                                                                                                    statearr_352063_352444[1] = 116
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    var statearr_352064_352445 = state_351747__$1;
                                                                                                                                                                                                    statearr_352064_352445[1] = 117
                                                                                                                                                                                                  }
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }catch(e352061) {
                                                                                                                                                                                                  if(e352061 instanceof Error) {
                                                                                                                                                                                                    var ex__5575__auto__ = e352061;
                                                                                                                                                                                                    var statearr_352062_352446 = state_351747;
                                                                                                                                                                                                    statearr_352062_352446[1] = 12;
                                                                                                                                                                                                    statearr_352062_352446[2] = ex__5575__auto__;
                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                      throw e352061;
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      return null
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }catch(e352059) {
                                                                                                                                                                                                if(e352059 instanceof Error) {
                                                                                                                                                                                                  var ex__5575__auto__ = e352059;
                                                                                                                                                                                                  var statearr_352060_352447 = state_351747;
                                                                                                                                                                                                  statearr_352060_352447[1] = 111;
                                                                                                                                                                                                  statearr_352060_352447[2] = ex__5575__auto__;
                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                    throw e352059;
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    return null
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }else {
                                                                                                                                                                                              if(state_val_351748 === 20) {
                                                                                                                                                                                                var inst_351599 = state_351747[2];
                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                var statearr_352065_352448 = state_351747__$1;
                                                                                                                                                                                                statearr_352065_352448[2] = inst_351599;
                                                                                                                                                                                                statearr_352065_352448[1] = 16;
                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                              }else {
                                                                                                                                                                                                if(state_val_351748 === 52) {
                                                                                                                                                                                                  try {
                                                                                                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                      var statearr_352068_352449 = state_351747__$1;
                                                                                                                                                                                                      statearr_352068_352449[1] = 66
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      var statearr_352069_352450 = state_351747__$1;
                                                                                                                                                                                                      statearr_352069_352450[1] = 67
                                                                                                                                                                                                    }
                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                  }catch(e352066) {
                                                                                                                                                                                                    if(e352066 instanceof Error) {
                                                                                                                                                                                                      var ex__5575__auto__ = e352066;
                                                                                                                                                                                                      var statearr_352067_352451 = state_351747;
                                                                                                                                                                                                      statearr_352067_352451[1] = 22;
                                                                                                                                                                                                      statearr_352067_352451[2] = ex__5575__auto__;
                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                        throw e352066;
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        return null
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }else {
                                                                                                                                                                                                  if(state_val_351748 === 84) {
                                                                                                                                                                                                    try {
                                                                                                                                                                                                      try {
                                                                                                                                                                                                        var inst_351622 = state_351747[2];
                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                        var statearr_352074_352452 = state_351747__$1;
                                                                                                                                                                                                        statearr_352074_352452[2] = inst_351622;
                                                                                                                                                                                                        statearr_352074_352452[1] = 81;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }catch(e352072) {
                                                                                                                                                                                                        if(e352072 instanceof Error) {
                                                                                                                                                                                                          var ex__5575__auto__ = e352072;
                                                                                                                                                                                                          var statearr_352073_352453 = state_351747;
                                                                                                                                                                                                          statearr_352073_352453[1] = 17;
                                                                                                                                                                                                          statearr_352073_352453[2] = ex__5575__auto__;
                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                            throw e352072;
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            return null
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }catch(e352070) {
                                                                                                                                                                                                      if(e352070 instanceof Error) {
                                                                                                                                                                                                        var ex__5575__auto__ = e352070;
                                                                                                                                                                                                        var statearr_352071_352454 = state_351747;
                                                                                                                                                                                                        statearr_352071_352454[1] = 74;
                                                                                                                                                                                                        statearr_352071_352454[2] = ex__5575__auto__;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                          throw e352070;
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          return null
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }else {
                                                                                                                                                                                                    if(state_val_351748 === 116) {
                                                                                                                                                                                                      try {
                                                                                                                                                                                                        try {
                                                                                                                                                                                                          var inst_351689 = chatter_box.chat_view_component.initialize.call(null);
                                                                                                                                                                                                          var state_351747__$1 = state_351747;
                                                                                                                                                                                                          var statearr_352079_352455 = state_351747__$1;
                                                                                                                                                                                                          statearr_352079_352455[2] = inst_351689;
                                                                                                                                                                                                          statearr_352079_352455[1] = 118;
                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                        }catch(e352077) {
                                                                                                                                                                                                          if(e352077 instanceof Error) {
                                                                                                                                                                                                            var ex__5575__auto__ = e352077;
                                                                                                                                                                                                            var statearr_352078_352456 = state_351747;
                                                                                                                                                                                                            statearr_352078_352456[1] = 12;
                                                                                                                                                                                                            statearr_352078_352456[2] = ex__5575__auto__;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                              throw e352077;
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              return null
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }catch(e352075) {
                                                                                                                                                                                                        if(e352075 instanceof Error) {
                                                                                                                                                                                                          var ex__5575__auto__ = e352075;
                                                                                                                                                                                                          var statearr_352076_352457 = state_351747;
                                                                                                                                                                                                          statearr_352076_352457[1] = 111;
                                                                                                                                                                                                          statearr_352076_352457[2] = ex__5575__auto__;
                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                            throw e352075;
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            return null
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }else {
                                                                                                                                                                                                      if(state_val_351748 === 21) {
                                                                                                                                                                                                        var inst_351595 = state_351747[2];
                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                        var statearr_352080_352458 = state_351747__$1;
                                                                                                                                                                                                        statearr_352080_352458[2] = inst_351595;
                                                                                                                                                                                                        statearr_352080_352458[1] = 20;
                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                      }else {
                                                                                                                                                                                                        if(state_val_351748 === 53) {
                                                                                                                                                                                                          try {
                                                                                                                                                                                                            var inst_351593 = state_351747[2];
                                                                                                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                                                                                                            var statearr_352083_352459 = state_351747__$1;
                                                                                                                                                                                                            statearr_352083_352459[2] = inst_351593;
                                                                                                                                                                                                            statearr_352083_352459[1] = 21;
                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                          }catch(e352081) {
                                                                                                                                                                                                            if(e352081 instanceof Error) {
                                                                                                                                                                                                              var ex__5575__auto__ = e352081;
                                                                                                                                                                                                              var statearr_352082_352460 = state_351747;
                                                                                                                                                                                                              statearr_352082_352460[1] = 22;
                                                                                                                                                                                                              statearr_352082_352460[2] = ex__5575__auto__;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                throw e352081;
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                return null
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }else {
                                                                                                                                                                                                          if(state_val_351748 === 85) {
                                                                                                                                                                                                            try {
                                                                                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                                                                                              var statearr_352086_352461 = state_351747__$1;
                                                                                                                                                                                                              statearr_352086_352461[2] = null;
                                                                                                                                                                                                              statearr_352086_352461[1] = 93;
                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                            }catch(e352084) {
                                                                                                                                                                                                              if(e352084 instanceof Error) {
                                                                                                                                                                                                                var ex__5575__auto__ = e352084;
                                                                                                                                                                                                                var statearr_352085_352462 = state_351747;
                                                                                                                                                                                                                statearr_352085_352462[1] = 17;
                                                                                                                                                                                                                statearr_352085_352462[2] = ex__5575__auto__;
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                  throw e352084;
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }else {
                                                                                                                                                                                                            if(state_val_351748 === 117) {
                                                                                                                                                                                                              try {
                                                                                                                                                                                                                try {
                                                                                                                                                                                                                  var state_351747__$1 = state_351747;
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    var statearr_352091_352463 = state_351747__$1;
                                                                                                                                                                                                                    statearr_352091_352463[1] = 119
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    var statearr_352092_352464 = state_351747__$1;
                                                                                                                                                                                                                    statearr_352092_352464[1] = 120
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }catch(e352089) {
                                                                                                                                                                                                                  if(e352089 instanceof Error) {
                                                                                                                                                                                                                    var ex__5575__auto__ = e352089;
                                                                                                                                                                                                                    var statearr_352090_352465 = state_351747;
                                                                                                                                                                                                                    statearr_352090_352465[1] = 12;
                                                                                                                                                                                                                    statearr_352090_352465[2] = ex__5575__auto__;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                      throw e352089;
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }catch(e352087) {
                                                                                                                                                                                                                if(e352087 instanceof Error) {
                                                                                                                                                                                                                  var ex__5575__auto__ = e352087;
                                                                                                                                                                                                                  var statearr_352088_352466 = state_351747;
                                                                                                                                                                                                                  statearr_352088_352466[1] = 111;
                                                                                                                                                                                                                  statearr_352088_352466[2] = ex__5575__auto__;
                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                    throw e352087;
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }else {
                                                                                                                                                                                                              if(state_val_351748 === 22) {
                                                                                                                                                                                                                var inst_351505 = state_351747[17];
                                                                                                                                                                                                                var inst_351505__$1 = state_351747[2];
                                                                                                                                                                                                                var inst_351506 = inst_351505__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                var state_351747__$1 = function() {
                                                                                                                                                                                                                  var statearr_352093 = state_351747;
                                                                                                                                                                                                                  statearr_352093[17] = inst_351505__$1;
                                                                                                                                                                                                                  return statearr_352093
                                                                                                                                                                                                                }();
                                                                                                                                                                                                                if(cljs.core.truth_(inst_351506)) {
                                                                                                                                                                                                                  var statearr_352094_352467 = state_351747__$1;
                                                                                                                                                                                                                  statearr_352094_352467[1] = 23
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  var statearr_352095_352468 = state_351747__$1;
                                                                                                                                                                                                                  statearr_352095_352468[1] = 24
                                                                                                                                                                                                                }
                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                if(state_val_351748 === 54) {
                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                    var inst_351585 = state_351747[2];
                                                                                                                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                                                                                                                    var statearr_352098_352469 = state_351747__$1;
                                                                                                                                                                                                                    statearr_352098_352469[2] = inst_351585;
                                                                                                                                                                                                                    statearr_352098_352469[1] = 53;
                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                  }catch(e352096) {
                                                                                                                                                                                                                    if(e352096 instanceof Error) {
                                                                                                                                                                                                                      var ex__5575__auto__ = e352096;
                                                                                                                                                                                                                      var statearr_352097_352470 = state_351747;
                                                                                                                                                                                                                      statearr_352097_352470[1] = 22;
                                                                                                                                                                                                                      statearr_352097_352470[2] = ex__5575__auto__;
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        throw e352096;
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                  if(state_val_351748 === 86) {
                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                        var statearr_352101_352471 = state_351747__$1;
                                                                                                                                                                                                                        statearr_352101_352471[1] = 100
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        var statearr_352102_352472 = state_351747__$1;
                                                                                                                                                                                                                        statearr_352102_352472[1] = 101
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                    }catch(e352099) {
                                                                                                                                                                                                                      if(e352099 instanceof Error) {
                                                                                                                                                                                                                        var ex__5575__auto__ = e352099;
                                                                                                                                                                                                                        var statearr_352100_352473 = state_351747;
                                                                                                                                                                                                                        statearr_352100_352473[1] = 17;
                                                                                                                                                                                                                        statearr_352100_352473[2] = ex__5575__auto__;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                          throw e352099;
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                    if(state_val_351748 === 118) {
                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                          var inst_351697 = state_351747[2];
                                                                                                                                                                                                                          var state_351747__$1 = state_351747;
                                                                                                                                                                                                                          var statearr_352107_352474 = state_351747__$1;
                                                                                                                                                                                                                          statearr_352107_352474[2] = inst_351697;
                                                                                                                                                                                                                          statearr_352107_352474[1] = 110;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }catch(e352105) {
                                                                                                                                                                                                                          if(e352105 instanceof Error) {
                                                                                                                                                                                                                            var ex__5575__auto__ = e352105;
                                                                                                                                                                                                                            var statearr_352106_352475 = state_351747;
                                                                                                                                                                                                                            statearr_352106_352475[1] = 12;
                                                                                                                                                                                                                            statearr_352106_352475[2] = ex__5575__auto__;
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                              throw e352105;
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }catch(e352103) {
                                                                                                                                                                                                                        if(e352103 instanceof Error) {
                                                                                                                                                                                                                          var ex__5575__auto__ = e352103;
                                                                                                                                                                                                                          var statearr_352104_352476 = state_351747;
                                                                                                                                                                                                                          statearr_352104_352476[1] = 111;
                                                                                                                                                                                                                          statearr_352104_352476[2] = ex__5575__auto__;
                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                            throw e352103;
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                      if(state_val_351748 === 23) {
                                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                                        var statearr_352108_352477 = state_351747__$1;
                                                                                                                                                                                                                        statearr_352108_352477[2] = null;
                                                                                                                                                                                                                        statearr_352108_352477[1] = 31;
                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                        if(state_val_351748 === 55) {
                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                            var inst_351563 = state_351747[18];
                                                                                                                                                                                                                            var inst_351563__$1 = state_351747[2];
                                                                                                                                                                                                                            var inst_351564 = inst_351563__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                            var state_351747__$1 = function() {
                                                                                                                                                                                                                              var statearr_352111 = state_351747;
                                                                                                                                                                                                                              statearr_352111[18] = inst_351563__$1;
                                                                                                                                                                                                                              return statearr_352111
                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                            if(cljs.core.truth_(inst_351564)) {
                                                                                                                                                                                                                              var statearr_352112_352478 = state_351747__$1;
                                                                                                                                                                                                                              statearr_352112_352478[1] = 56
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              var statearr_352113_352479 = state_351747__$1;
                                                                                                                                                                                                                              statearr_352113_352479[1] = 57
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                          }catch(e352109) {
                                                                                                                                                                                                                            if(e352109 instanceof Error) {
                                                                                                                                                                                                                              var ex__5575__auto__ = e352109;
                                                                                                                                                                                                                              var statearr_352110_352480 = state_351747;
                                                                                                                                                                                                                              statearr_352110_352480[1] = 22;
                                                                                                                                                                                                                              statearr_352110_352480[2] = ex__5575__auto__;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                throw e352109;
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                          if(state_val_351748 === 87) {
                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                              var inst_351660 = state_351747[2];
                                                                                                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                                                                                                              var statearr_352116_352481 = state_351747__$1;
                                                                                                                                                                                                                              statearr_352116_352481[2] = inst_351660;
                                                                                                                                                                                                                              statearr_352116_352481[1] = 72;
                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                            }catch(e352114) {
                                                                                                                                                                                                                              if(e352114 instanceof Error) {
                                                                                                                                                                                                                                var ex__5575__auto__ = e352114;
                                                                                                                                                                                                                                var statearr_352115_352482 = state_351747;
                                                                                                                                                                                                                                statearr_352115_352482[1] = 17;
                                                                                                                                                                                                                                statearr_352115_352482[2] = ex__5575__auto__;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                  throw e352114;
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                            if(state_val_351748 === 119) {
                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                  var inst_351692 = function() {
                                                                                                                                                                                                                                    throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                  }();
                                                                                                                                                                                                                                  var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                  var statearr_352121_352483 = state_351747__$1;
                                                                                                                                                                                                                                  statearr_352121_352483[2] = inst_351692;
                                                                                                                                                                                                                                  statearr_352121_352483[1] = 121;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }catch(e352119) {
                                                                                                                                                                                                                                  if(e352119 instanceof Error) {
                                                                                                                                                                                                                                    var ex__5575__auto__ = e352119;
                                                                                                                                                                                                                                    var statearr_352120_352484 = state_351747;
                                                                                                                                                                                                                                    statearr_352120_352484[1] = 12;
                                                                                                                                                                                                                                    statearr_352120_352484[2] = ex__5575__auto__;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                      throw e352119;
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }catch(e352117) {
                                                                                                                                                                                                                                if(e352117 instanceof Error) {
                                                                                                                                                                                                                                  var ex__5575__auto__ = e352117;
                                                                                                                                                                                                                                  var statearr_352118_352485 = state_351747;
                                                                                                                                                                                                                                  statearr_352118_352485[1] = 111;
                                                                                                                                                                                                                                  statearr_352118_352485[2] = ex__5575__auto__;
                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                    throw e352117;
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                              if(state_val_351748 === 24) {
                                                                                                                                                                                                                                var inst_351505 = state_351747[17];
                                                                                                                                                                                                                                var inst_351556 = function() {
                                                                                                                                                                                                                                  throw inst_351505;
                                                                                                                                                                                                                                }();
                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                var statearr_352122_352486 = state_351747__$1;
                                                                                                                                                                                                                                statearr_352122_352486[2] = inst_351556;
                                                                                                                                                                                                                                statearr_352122_352486[1] = 25;
                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                if(state_val_351748 === 56) {
                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                    var inst_351566 = function() {
                                                                                                                                                                                                                                      throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                    }();
                                                                                                                                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                    var statearr_352125_352487 = state_351747__$1;
                                                                                                                                                                                                                                    statearr_352125_352487[2] = inst_351566;
                                                                                                                                                                                                                                    statearr_352125_352487[1] = 58;
                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                  }catch(e352123) {
                                                                                                                                                                                                                                    if(e352123 instanceof Error) {
                                                                                                                                                                                                                                      var ex__5575__auto__ = e352123;
                                                                                                                                                                                                                                      var statearr_352124_352488 = state_351747;
                                                                                                                                                                                                                                      statearr_352124_352488[1] = 22;
                                                                                                                                                                                                                                      statearr_352124_352488[2] = ex__5575__auto__;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                        throw e352123;
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                  if(state_val_351748 === 88) {
                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                      var inst_351652 = state_351747[2];
                                                                                                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                      var statearr_352128_352489 = state_351747__$1;
                                                                                                                                                                                                                                      statearr_352128_352489[2] = inst_351652;
                                                                                                                                                                                                                                      statearr_352128_352489[1] = 87;
                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                    }catch(e352126) {
                                                                                                                                                                                                                                      if(e352126 instanceof Error) {
                                                                                                                                                                                                                                        var ex__5575__auto__ = e352126;
                                                                                                                                                                                                                                        var statearr_352127_352490 = state_351747;
                                                                                                                                                                                                                                        statearr_352127_352490[1] = 17;
                                                                                                                                                                                                                                        statearr_352127_352490[2] = ex__5575__auto__;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                          throw e352126;
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                    if(state_val_351748 === 120) {
                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                          var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                          var statearr_352133_352491 = state_351747__$1;
                                                                                                                                                                                                                                          statearr_352133_352491[2] = null;
                                                                                                                                                                                                                                          statearr_352133_352491[1] = 121;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }catch(e352131) {
                                                                                                                                                                                                                                          if(e352131 instanceof Error) {
                                                                                                                                                                                                                                            var ex__5575__auto__ = e352131;
                                                                                                                                                                                                                                            var statearr_352132_352492 = state_351747;
                                                                                                                                                                                                                                            statearr_352132_352492[1] = 12;
                                                                                                                                                                                                                                            statearr_352132_352492[2] = ex__5575__auto__;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                              throw e352131;
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }catch(e352129) {
                                                                                                                                                                                                                                        if(e352129 instanceof Error) {
                                                                                                                                                                                                                                          var ex__5575__auto__ = e352129;
                                                                                                                                                                                                                                          var statearr_352130_352493 = state_351747;
                                                                                                                                                                                                                                          statearr_352130_352493[1] = 111;
                                                                                                                                                                                                                                          statearr_352130_352493[2] = ex__5575__auto__;
                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                            throw e352129;
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                      if(state_val_351748 === 25) {
                                                                                                                                                                                                                                        var inst_351558 = state_351747[2];
                                                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                        var statearr_352134_352494 = state_351747__$1;
                                                                                                                                                                                                                                        statearr_352134_352494[2] = inst_351558;
                                                                                                                                                                                                                                        statearr_352134_352494[1] = 21;
                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                        if(state_val_351748 === 57) {
                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                            var inst_351563 = state_351747[18];
                                                                                                                                                                                                                                            var inst_351568 = function() {
                                                                                                                                                                                                                                              throw inst_351563;
                                                                                                                                                                                                                                            }();
                                                                                                                                                                                                                                            var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                            var statearr_352137_352495 = state_351747__$1;
                                                                                                                                                                                                                                            statearr_352137_352495[2] = inst_351568;
                                                                                                                                                                                                                                            statearr_352137_352495[1] = 58;
                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                          }catch(e352135) {
                                                                                                                                                                                                                                            if(e352135 instanceof Error) {
                                                                                                                                                                                                                                              var ex__5575__auto__ = e352135;
                                                                                                                                                                                                                                              var statearr_352136_352496 = state_351747;
                                                                                                                                                                                                                                              statearr_352136_352496[1] = 22;
                                                                                                                                                                                                                                              statearr_352136_352496[2] = ex__5575__auto__;
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                throw e352135;
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                          if(state_val_351748 === 89) {
                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                              var inst_351630 = state_351747[19];
                                                                                                                                                                                                                                              var inst_351630__$1 = state_351747[2];
                                                                                                                                                                                                                                              var inst_351631 = inst_351630__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                              var state_351747__$1 = function() {
                                                                                                                                                                                                                                                var statearr_352140 = state_351747;
                                                                                                                                                                                                                                                statearr_352140[19] = inst_351630__$1;
                                                                                                                                                                                                                                                return statearr_352140
                                                                                                                                                                                                                                              }();
                                                                                                                                                                                                                                              if(cljs.core.truth_(inst_351631)) {
                                                                                                                                                                                                                                                var statearr_352141_352497 = state_351747__$1;
                                                                                                                                                                                                                                                statearr_352141_352497[1] = 90
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                var statearr_352142_352498 = state_351747__$1;
                                                                                                                                                                                                                                                statearr_352142_352498[1] = 91
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                            }catch(e352138) {
                                                                                                                                                                                                                                              if(e352138 instanceof Error) {
                                                                                                                                                                                                                                                var ex__5575__auto__ = e352138;
                                                                                                                                                                                                                                                var statearr_352139_352499 = state_351747;
                                                                                                                                                                                                                                                statearr_352139_352499[1] = 17;
                                                                                                                                                                                                                                                statearr_352139_352499[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                  throw e352138;
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                            if(state_val_351748 === 121) {
                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                try {
                                                                                                                                                                                                                                                  var inst_351695 = state_351747[2];
                                                                                                                                                                                                                                                  var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                  var statearr_352147_352500 = state_351747__$1;
                                                                                                                                                                                                                                                  statearr_352147_352500[2] = inst_351695;
                                                                                                                                                                                                                                                  statearr_352147_352500[1] = 118;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }catch(e352145) {
                                                                                                                                                                                                                                                  if(e352145 instanceof Error) {
                                                                                                                                                                                                                                                    var ex__5575__auto__ = e352145;
                                                                                                                                                                                                                                                    var statearr_352146_352501 = state_351747;
                                                                                                                                                                                                                                                    statearr_352146_352501[1] = 12;
                                                                                                                                                                                                                                                    statearr_352146_352501[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if("\ufdd0:else") {
                                                                                                                                                                                                                                                      throw e352145;
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      return null
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }catch(e352143) {
                                                                                                                                                                                                                                                if(e352143 instanceof Error) {
                                                                                                                                                                                                                                                  var ex__5575__auto__ = e352143;
                                                                                                                                                                                                                                                  var statearr_352144_352502 = state_351747;
                                                                                                                                                                                                                                                  statearr_352144_352502[1] = 111;
                                                                                                                                                                                                                                                  statearr_352144_352502[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                    throw e352143;
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                              if(state_val_351748 === 26) {
                                                                                                                                                                                                                                                var inst_351554 = state_351747[2];
                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                var statearr_352148_352503 = state_351747__$1;
                                                                                                                                                                                                                                                statearr_352148_352503[2] = inst_351554;
                                                                                                                                                                                                                                                statearr_352148_352503[1] = 25;
                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                if(state_val_351748 === 58) {
                                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                                    var inst_351570 = state_351747[2];
                                                                                                                                                                                                                                                    var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                    var statearr_352151_352504 = state_351747__$1;
                                                                                                                                                                                                                                                    statearr_352151_352504[2] = inst_351570;
                                                                                                                                                                                                                                                    statearr_352151_352504[1] = 54;
                                                                                                                                                                                                                                                    return"\ufdd0:recur"
                                                                                                                                                                                                                                                  }catch(e352149) {
                                                                                                                                                                                                                                                    if(e352149 instanceof Error) {
                                                                                                                                                                                                                                                      var ex__5575__auto__ = e352149;
                                                                                                                                                                                                                                                      var statearr_352150_352505 = state_351747;
                                                                                                                                                                                                                                                      statearr_352150_352505[1] = 22;
                                                                                                                                                                                                                                                      statearr_352150_352505[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                                        throw e352149;
                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                  if(state_val_351748 === 90) {
                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                      var inst_351633 = function() {
                                                                                                                                                                                                                                                        throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                      }();
                                                                                                                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                      var statearr_352154_352506 = state_351747__$1;
                                                                                                                                                                                                                                                      statearr_352154_352506[2] = inst_351633;
                                                                                                                                                                                                                                                      statearr_352154_352506[1] = 92;
                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                    }catch(e352152) {
                                                                                                                                                                                                                                                      if(e352152 instanceof Error) {
                                                                                                                                                                                                                                                        var ex__5575__auto__ = e352152;
                                                                                                                                                                                                                                                        var statearr_352153_352507 = state_351747;
                                                                                                                                                                                                                                                        statearr_352153_352507[1] = 17;
                                                                                                                                                                                                                                                        statearr_352153_352507[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                                          throw e352152;
                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                    if(state_val_351748 === 122) {
                                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                        var statearr_352157_352508 = state_351747__$1;
                                                                                                                                                                                                                                                        statearr_352157_352508[2] = null;
                                                                                                                                                                                                                                                        statearr_352157_352508[1] = 130;
                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                      }catch(e352155) {
                                                                                                                                                                                                                                                        if(e352155 instanceof Error) {
                                                                                                                                                                                                                                                          var ex__5575__auto__ = e352155;
                                                                                                                                                                                                                                                          var statearr_352156_352509 = state_351747;
                                                                                                                                                                                                                                                          statearr_352156_352509[1] = 12;
                                                                                                                                                                                                                                                          statearr_352156_352509[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                                            throw e352155;
                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                      if(state_val_351748 === 27) {
                                                                                                                                                                                                                                                        var inst_351508 = state_351747[20];
                                                                                                                                                                                                                                                        var inst_351508__$1 = state_351747[2];
                                                                                                                                                                                                                                                        var inst_351509 = inst_351508__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                                        var state_351747__$1 = function() {
                                                                                                                                                                                                                                                          var statearr_352158 = state_351747;
                                                                                                                                                                                                                                                          statearr_352158[20] = inst_351508__$1;
                                                                                                                                                                                                                                                          return statearr_352158
                                                                                                                                                                                                                                                        }();
                                                                                                                                                                                                                                                        if(cljs.core.truth_(inst_351509)) {
                                                                                                                                                                                                                                                          var statearr_352159_352510 = state_351747__$1;
                                                                                                                                                                                                                                                          statearr_352159_352510[1] = 28
                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                          var statearr_352160_352511 = state_351747__$1;
                                                                                                                                                                                                                                                          statearr_352160_352511[1] = 29
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                        if(state_val_351748 === 59) {
                                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                              var inst_351494 = state_351747[6];
                                                                                                                                                                                                                                                              var inst_351573 = cljs.core._EQ_.call(null, inst_351494, "\ufdd0:join");
                                                                                                                                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                              if(inst_351573) {
                                                                                                                                                                                                                                                                var statearr_352165_352512 = state_351747__$1;
                                                                                                                                                                                                                                                                statearr_352165_352512[1] = 60
                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                var statearr_352166_352513 = state_351747__$1;
                                                                                                                                                                                                                                                                statearr_352166_352513[1] = 61
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                            }catch(e352163) {
                                                                                                                                                                                                                                                              if(e352163 instanceof Error) {
                                                                                                                                                                                                                                                                var ex__5575__auto__ = e352163;
                                                                                                                                                                                                                                                                var statearr_352164_352514 = state_351747;
                                                                                                                                                                                                                                                                statearr_352164_352514[1] = 22;
                                                                                                                                                                                                                                                                statearr_352164_352514[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                  throw e352163;
                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }catch(e352161) {
                                                                                                                                                                                                                                                            if(e352161 instanceof Error) {
                                                                                                                                                                                                                                                              var ex__5575__auto__ = e352161;
                                                                                                                                                                                                                                                              var statearr_352162_352515 = state_351747;
                                                                                                                                                                                                                                                              statearr_352162_352515[1] = 55;
                                                                                                                                                                                                                                                              statearr_352162_352515[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                                throw e352161;
                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                          if(state_val_351748 === 91) {
                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                              var inst_351630 = state_351747[19];
                                                                                                                                                                                                                                                              var inst_351635 = function() {
                                                                                                                                                                                                                                                                throw inst_351630;
                                                                                                                                                                                                                                                              }();
                                                                                                                                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                              var statearr_352169_352516 = state_351747__$1;
                                                                                                                                                                                                                                                              statearr_352169_352516[2] = inst_351635;
                                                                                                                                                                                                                                                              statearr_352169_352516[1] = 92;
                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                            }catch(e352167) {
                                                                                                                                                                                                                                                              if(e352167 instanceof Error) {
                                                                                                                                                                                                                                                                var ex__5575__auto__ = e352167;
                                                                                                                                                                                                                                                                var statearr_352168_352517 = state_351747;
                                                                                                                                                                                                                                                                statearr_352168_352517[1] = 17;
                                                                                                                                                                                                                                                                statearr_352168_352517[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                  throw e352167;
                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                            if(state_val_351748 === 123) {
                                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                  var statearr_352172_352518 = state_351747__$1;
                                                                                                                                                                                                                                                                  statearr_352172_352518[1] = 137
                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                  var statearr_352173_352519 = state_351747__$1;
                                                                                                                                                                                                                                                                  statearr_352173_352519[1] = 138
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                              }catch(e352170) {
                                                                                                                                                                                                                                                                if(e352170 instanceof Error) {
                                                                                                                                                                                                                                                                  var ex__5575__auto__ = e352170;
                                                                                                                                                                                                                                                                  var statearr_352171_352520 = state_351747;
                                                                                                                                                                                                                                                                  statearr_352171_352520[1] = 12;
                                                                                                                                                                                                                                                                  statearr_352171_352520[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                                    throw e352170;
                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                              if(state_val_351748 === 28) {
                                                                                                                                                                                                                                                                var inst_351494 = state_351747[6];
                                                                                                                                                                                                                                                                var inst_351493 = state_351747[8];
                                                                                                                                                                                                                                                                var inst_351511 = [cljs.core.str("No matching clause: "), cljs.core.str(inst_351493), cljs.core.str(" "), cljs.core.str(inst_351494)].join("");
                                                                                                                                                                                                                                                                var inst_351512 = new Error(inst_351511);
                                                                                                                                                                                                                                                                var inst_351513 = function() {
                                                                                                                                                                                                                                                                  throw inst_351512;
                                                                                                                                                                                                                                                                }();
                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                var statearr_352174_352521 = state_351747__$1;
                                                                                                                                                                                                                                                                statearr_352174_352521[2] = inst_351513;
                                                                                                                                                                                                                                                                statearr_352174_352521[1] = 30;
                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                if(state_val_351748 === 60) {
                                                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                      var inst_351495 = state_351747[11];
                                                                                                                                                                                                                                                                      var inst_351575 = chatter_box.chat_view_component.user_join.call(null, inst_351495);
                                                                                                                                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                      var statearr_352179_352522 = state_351747__$1;
                                                                                                                                                                                                                                                                      statearr_352179_352522[2] = inst_351575;
                                                                                                                                                                                                                                                                      statearr_352179_352522[1] = 62;
                                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                                    }catch(e352177) {
                                                                                                                                                                                                                                                                      if(e352177 instanceof Error) {
                                                                                                                                                                                                                                                                        var ex__5575__auto__ = e352177;
                                                                                                                                                                                                                                                                        var statearr_352178_352523 = state_351747;
                                                                                                                                                                                                                                                                        statearr_352178_352523[1] = 22;
                                                                                                                                                                                                                                                                        statearr_352178_352523[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                                                          throw e352177;
                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }catch(e352175) {
                                                                                                                                                                                                                                                                    if(e352175 instanceof Error) {
                                                                                                                                                                                                                                                                      var ex__5575__auto__ = e352175;
                                                                                                                                                                                                                                                                      var statearr_352176_352524 = state_351747;
                                                                                                                                                                                                                                                                      statearr_352176_352524[1] = 55;
                                                                                                                                                                                                                                                                      statearr_352176_352524[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                                                        throw e352175;
                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                  if(state_val_351748 === 92) {
                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                      var inst_351637 = state_351747[2];
                                                                                                                                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                      var statearr_352182_352525 = state_351747__$1;
                                                                                                                                                                                                                                                                      statearr_352182_352525[2] = inst_351637;
                                                                                                                                                                                                                                                                      statearr_352182_352525[1] = 88;
                                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                                    }catch(e352180) {
                                                                                                                                                                                                                                                                      if(e352180 instanceof Error) {
                                                                                                                                                                                                                                                                        var ex__5575__auto__ = e352180;
                                                                                                                                                                                                                                                                        var statearr_352181_352526 = state_351747;
                                                                                                                                                                                                                                                                        statearr_352181_352526[1] = 17;
                                                                                                                                                                                                                                                                        statearr_352181_352526[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                                                          throw e352180;
                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                    if(state_val_351748 === 124) {
                                                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                                                        var inst_351733 = state_351747[2];
                                                                                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                        var statearr_352185_352527 = state_351747__$1;
                                                                                                                                                                                                                                                                        statearr_352185_352527[2] = inst_351733;
                                                                                                                                                                                                                                                                        statearr_352185_352527[1] = 109;
                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                      }catch(e352183) {
                                                                                                                                                                                                                                                                        if(e352183 instanceof Error) {
                                                                                                                                                                                                                                                                          var ex__5575__auto__ = e352183;
                                                                                                                                                                                                                                                                          var statearr_352184_352528 = state_351747;
                                                                                                                                                                                                                                                                          statearr_352184_352528[1] = 12;
                                                                                                                                                                                                                                                                          statearr_352184_352528[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                                                            throw e352183;
                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                                      if(state_val_351748 === 29) {
                                                                                                                                                                                                                                                                        var inst_351508 = state_351747[20];
                                                                                                                                                                                                                                                                        var inst_351515 = function() {
                                                                                                                                                                                                                                                                          throw inst_351508;
                                                                                                                                                                                                                                                                        }();
                                                                                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                        var statearr_352186_352529 = state_351747__$1;
                                                                                                                                                                                                                                                                        statearr_352186_352529[2] = inst_351515;
                                                                                                                                                                                                                                                                        statearr_352186_352529[1] = 30;
                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                        if(state_val_351748 === 61) {
                                                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                var statearr_352191_352530 = state_351747__$1;
                                                                                                                                                                                                                                                                                statearr_352191_352530[1] = 63
                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                var statearr_352192_352531 = state_351747__$1;
                                                                                                                                                                                                                                                                                statearr_352192_352531[1] = 64
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                                            }catch(e352189) {
                                                                                                                                                                                                                                                                              if(e352189 instanceof Error) {
                                                                                                                                                                                                                                                                                var ex__5575__auto__ = e352189;
                                                                                                                                                                                                                                                                                var statearr_352190_352532 = state_351747;
                                                                                                                                                                                                                                                                                statearr_352190_352532[1] = 22;
                                                                                                                                                                                                                                                                                statearr_352190_352532[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                  throw e352189;
                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }catch(e352187) {
                                                                                                                                                                                                                                                                            if(e352187 instanceof Error) {
                                                                                                                                                                                                                                                                              var ex__5575__auto__ = e352187;
                                                                                                                                                                                                                                                                              var statearr_352188_352533 = state_351747;
                                                                                                                                                                                                                                                                              statearr_352188_352533[1] = 55;
                                                                                                                                                                                                                                                                              statearr_352188_352533[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                throw e352187;
                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                          if(state_val_351748 === 93) {
                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                                                var inst_351494 = state_351747[6];
                                                                                                                                                                                                                                                                                var inst_351640 = cljs.core._EQ_.call(null, inst_351494, "\ufdd0:receive-chat");
                                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                if(inst_351640) {
                                                                                                                                                                                                                                                                                  var statearr_352197_352534 = state_351747__$1;
                                                                                                                                                                                                                                                                                  statearr_352197_352534[1] = 94
                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                  var statearr_352198_352535 = state_351747__$1;
                                                                                                                                                                                                                                                                                  statearr_352198_352535[1] = 95
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                              }catch(e352195) {
                                                                                                                                                                                                                                                                                if(e352195 instanceof Error) {
                                                                                                                                                                                                                                                                                  var ex__5575__auto__ = e352195;
                                                                                                                                                                                                                                                                                  var statearr_352196_352536 = state_351747;
                                                                                                                                                                                                                                                                                  statearr_352196_352536[1] = 17;
                                                                                                                                                                                                                                                                                  statearr_352196_352536[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                    throw e352195;
                                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }catch(e352193) {
                                                                                                                                                                                                                                                                              if(e352193 instanceof Error) {
                                                                                                                                                                                                                                                                                var ex__5575__auto__ = e352193;
                                                                                                                                                                                                                                                                                var statearr_352194_352537 = state_351747;
                                                                                                                                                                                                                                                                                statearr_352194_352537[1] = 89;
                                                                                                                                                                                                                                                                                statearr_352194_352537[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                  throw e352193;
                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                            if(state_val_351748 === 125) {
                                                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                                                var inst_351725 = state_351747[2];
                                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                var statearr_352201_352538 = state_351747__$1;
                                                                                                                                                                                                                                                                                statearr_352201_352538[2] = inst_351725;
                                                                                                                                                                                                                                                                                statearr_352201_352538[1] = 124;
                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                              }catch(e352199) {
                                                                                                                                                                                                                                                                                if(e352199 instanceof Error) {
                                                                                                                                                                                                                                                                                  var ex__5575__auto__ = e352199;
                                                                                                                                                                                                                                                                                  var statearr_352200_352539 = state_351747;
                                                                                                                                                                                                                                                                                  statearr_352200_352539[1] = 12;
                                                                                                                                                                                                                                                                                  statearr_352200_352539[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                    throw e352199;
                                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                                              if(state_val_351748 === 30) {
                                                                                                                                                                                                                                                                                var inst_351517 = state_351747[2];
                                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                var statearr_352202_352540 = state_351747__$1;
                                                                                                                                                                                                                                                                                statearr_352202_352540[2] = inst_351517;
                                                                                                                                                                                                                                                                                statearr_352202_352540[1] = 26;
                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                if(state_val_351748 === 62) {
                                                                                                                                                                                                                                                                                  try {
                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                      var inst_351583 = state_351747[2];
                                                                                                                                                                                                                                                                                      var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                      var statearr_352207_352541 = state_351747__$1;
                                                                                                                                                                                                                                                                                      statearr_352207_352541[2] = inst_351583;
                                                                                                                                                                                                                                                                                      statearr_352207_352541[1] = 54;
                                                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                    }catch(e352205) {
                                                                                                                                                                                                                                                                                      if(e352205 instanceof Error) {
                                                                                                                                                                                                                                                                                        var ex__5575__auto__ = e352205;
                                                                                                                                                                                                                                                                                        var statearr_352206_352542 = state_351747;
                                                                                                                                                                                                                                                                                        statearr_352206_352542[1] = 22;
                                                                                                                                                                                                                                                                                        statearr_352206_352542[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                          throw e352205;
                                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }catch(e352203) {
                                                                                                                                                                                                                                                                                    if(e352203 instanceof Error) {
                                                                                                                                                                                                                                                                                      var ex__5575__auto__ = e352203;
                                                                                                                                                                                                                                                                                      var statearr_352204_352543 = state_351747;
                                                                                                                                                                                                                                                                                      statearr_352204_352543[1] = 55;
                                                                                                                                                                                                                                                                                      statearr_352204_352543[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                      return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                                                      if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                        throw e352203;
                                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                                        return null
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                  if(state_val_351748 === 94) {
                                                                                                                                                                                                                                                                                    try {
                                                                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                                                                        var inst_351495 = state_351747[11];
                                                                                                                                                                                                                                                                                        var inst_351642 = chatter_box.chat_view_component.receive_chat.call(null, inst_351495);
                                                                                                                                                                                                                                                                                        var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                        var statearr_352212_352544 = state_351747__$1;
                                                                                                                                                                                                                                                                                        statearr_352212_352544[2] = inst_351642;
                                                                                                                                                                                                                                                                                        statearr_352212_352544[1] = 96;
                                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                      }catch(e352210) {
                                                                                                                                                                                                                                                                                        if(e352210 instanceof Error) {
                                                                                                                                                                                                                                                                                          var ex__5575__auto__ = e352210;
                                                                                                                                                                                                                                                                                          var statearr_352211_352545 = state_351747;
                                                                                                                                                                                                                                                                                          statearr_352211_352545[1] = 17;
                                                                                                                                                                                                                                                                                          statearr_352211_352545[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                            throw e352210;
                                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }catch(e352208) {
                                                                                                                                                                                                                                                                                      if(e352208 instanceof Error) {
                                                                                                                                                                                                                                                                                        var ex__5575__auto__ = e352208;
                                                                                                                                                                                                                                                                                        var statearr_352209_352546 = state_351747;
                                                                                                                                                                                                                                                                                        statearr_352209_352546[1] = 89;
                                                                                                                                                                                                                                                                                        statearr_352209_352546[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                                        if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                          throw e352208;
                                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                                          return null
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                                    if(state_val_351748 === 126) {
                                                                                                                                                                                                                                                                                      try {
                                                                                                                                                                                                                                                                                        var inst_351703 = state_351747[5];
                                                                                                                                                                                                                                                                                        var inst_351703__$1 = state_351747[2];
                                                                                                                                                                                                                                                                                        var inst_351704 = inst_351703__$1 === cljs.core.match.backtrack;
                                                                                                                                                                                                                                                                                        var state_351747__$1 = function() {
                                                                                                                                                                                                                                                                                          var statearr_352215 = state_351747;
                                                                                                                                                                                                                                                                                          statearr_352215[5] = inst_351703__$1;
                                                                                                                                                                                                                                                                                          return statearr_352215
                                                                                                                                                                                                                                                                                        }();
                                                                                                                                                                                                                                                                                        if(cljs.core.truth_(inst_351704)) {
                                                                                                                                                                                                                                                                                          var statearr_352216_352547 = state_351747__$1;
                                                                                                                                                                                                                                                                                          statearr_352216_352547[1] = 127
                                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                                          var statearr_352217_352548 = state_351747__$1;
                                                                                                                                                                                                                                                                                          statearr_352217_352548[1] = 128
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                      }catch(e352213) {
                                                                                                                                                                                                                                                                                        if(e352213 instanceof Error) {
                                                                                                                                                                                                                                                                                          var ex__5575__auto__ = e352213;
                                                                                                                                                                                                                                                                                          var statearr_352214_352549 = state_351747;
                                                                                                                                                                                                                                                                                          statearr_352214_352549[1] = 12;
                                                                                                                                                                                                                                                                                          statearr_352214_352549[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                                          if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                            throw e352213;
                                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                                            return null
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }else {
                                                                                                                                                                                                                                                                                      if(state_val_351748 === 31) {
                                                                                                                                                                                                                                                                                        try {
                                                                                                                                                                                                                                                                                          var inst_351493 = state_351747[8];
                                                                                                                                                                                                                                                                                          var inst_351520 = cljs.core._EQ_.call(null, inst_351493, "\ufdd0:messaging");
                                                                                                                                                                                                                                                                                          var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                          if(inst_351520) {
                                                                                                                                                                                                                                                                                            var statearr_352220_352550 = state_351747__$1;
                                                                                                                                                                                                                                                                                            statearr_352220_352550[1] = 32
                                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                                            var statearr_352221_352551 = state_351747__$1;
                                                                                                                                                                                                                                                                                            statearr_352221_352551[1] = 33
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                        }catch(e352218) {
                                                                                                                                                                                                                                                                                          if(e352218 instanceof Error) {
                                                                                                                                                                                                                                                                                            var ex__5575__auto__ = e352218;
                                                                                                                                                                                                                                                                                            var statearr_352219_352552 = state_351747;
                                                                                                                                                                                                                                                                                            statearr_352219_352552[1] = 27;
                                                                                                                                                                                                                                                                                            statearr_352219_352552[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                            return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                                            if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                              throw e352218;
                                                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }else {
                                                                                                                                                                                                                                                                                        if(state_val_351748 === 63) {
                                                                                                                                                                                                                                                                                          try {
                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                              var inst_351578 = function() {
                                                                                                                                                                                                                                                                                                throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                                                              }();
                                                                                                                                                                                                                                                                                              var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                              var statearr_352226_352553 = state_351747__$1;
                                                                                                                                                                                                                                                                                              statearr_352226_352553[2] = inst_351578;
                                                                                                                                                                                                                                                                                              statearr_352226_352553[1] = 65;
                                                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                            }catch(e352224) {
                                                                                                                                                                                                                                                                                              if(e352224 instanceof Error) {
                                                                                                                                                                                                                                                                                                var ex__5575__auto__ = e352224;
                                                                                                                                                                                                                                                                                                var statearr_352225_352554 = state_351747;
                                                                                                                                                                                                                                                                                                statearr_352225_352554[1] = 22;
                                                                                                                                                                                                                                                                                                statearr_352225_352554[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                                  throw e352224;
                                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }catch(e352222) {
                                                                                                                                                                                                                                                                                            if(e352222 instanceof Error) {
                                                                                                                                                                                                                                                                                              var ex__5575__auto__ = e352222;
                                                                                                                                                                                                                                                                                              var statearr_352223_352555 = state_351747;
                                                                                                                                                                                                                                                                                              statearr_352223_352555[1] = 55;
                                                                                                                                                                                                                                                                                              statearr_352223_352555[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                              return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                                                              if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                                throw e352222;
                                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                                return null
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }else {
                                                                                                                                                                                                                                                                                          if(state_val_351748 === 95) {
                                                                                                                                                                                                                                                                                            try {
                                                                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                                  var statearr_352231_352556 = state_351747__$1;
                                                                                                                                                                                                                                                                                                  statearr_352231_352556[1] = 97
                                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                                  var statearr_352232_352557 = state_351747__$1;
                                                                                                                                                                                                                                                                                                  statearr_352232_352557[1] = 98
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                              }catch(e352229) {
                                                                                                                                                                                                                                                                                                if(e352229 instanceof Error) {
                                                                                                                                                                                                                                                                                                  var ex__5575__auto__ = e352229;
                                                                                                                                                                                                                                                                                                  var statearr_352230_352558 = state_351747;
                                                                                                                                                                                                                                                                                                  statearr_352230_352558[1] = 17;
                                                                                                                                                                                                                                                                                                  statearr_352230_352558[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                                    throw e352229;
                                                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }catch(e352227) {
                                                                                                                                                                                                                                                                                              if(e352227 instanceof Error) {
                                                                                                                                                                                                                                                                                                var ex__5575__auto__ = e352227;
                                                                                                                                                                                                                                                                                                var statearr_352228_352559 = state_351747;
                                                                                                                                                                                                                                                                                                statearr_352228_352559[1] = 89;
                                                                                                                                                                                                                                                                                                statearr_352228_352559[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                              }else {
                                                                                                                                                                                                                                                                                                if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                                  throw e352227;
                                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                                  return null
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }else {
                                                                                                                                                                                                                                                                                            if(state_val_351748 === 127) {
                                                                                                                                                                                                                                                                                              try {
                                                                                                                                                                                                                                                                                                var inst_351706 = function() {
                                                                                                                                                                                                                                                                                                  throw cljs.core.match.backtrack;
                                                                                                                                                                                                                                                                                                }();
                                                                                                                                                                                                                                                                                                var state_351747__$1 = state_351747;
                                                                                                                                                                                                                                                                                                var statearr_352235_352560 = state_351747__$1;
                                                                                                                                                                                                                                                                                                statearr_352235_352560[2] = inst_351706;
                                                                                                                                                                                                                                                                                                statearr_352235_352560[1] = 129;
                                                                                                                                                                                                                                                                                                return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                              }catch(e352233) {
                                                                                                                                                                                                                                                                                                if(e352233 instanceof Error) {
                                                                                                                                                                                                                                                                                                  var ex__5575__auto__ = e352233;
                                                                                                                                                                                                                                                                                                  var statearr_352234_352561 = state_351747;
                                                                                                                                                                                                                                                                                                  statearr_352234_352561[1] = 12;
                                                                                                                                                                                                                                                                                                  statearr_352234_352561[2] = ex__5575__auto__;
                                                                                                                                                                                                                                                                                                  return"\ufdd0:recur"
                                                                                                                                                                                                                                                                                                }else {
                                                                                                                                                                                                                                                                                                  if("\ufdd0:else") {
                                                                                                                                                                                                                                                                                                    throw e352233;
                                                                                                                                                                                                                                                                                                  }else {
                                                                                                                                                                                                                                                                                                    return null
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }else {
                                                                                                                                                                                                                                                                                              return null
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_352237 = new Array(21);
            statearr_352237[0] = state_machine__5582__auto__;
            statearr_352237[1] = 1;
            return statearr_352237
          };
          var state_machine__5582__auto____1 = function(state_351747) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_351747);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_351747) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_351747)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_352238 = f__5654__auto__.call(null);
      statearr_352238[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_352238
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.consol_log_component");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.core");
chatter_box.consol_log_component.create_consol_log_component = function create_consol_log_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.consol_log_component.t119203 !== "undefined") {
  }else {
    goog.provide("chatter_box.consol_log_component.t119203");
    chatter_box.consol_log_component.t119203 = function(in_ch, create_consol_log_component, meta119204) {
      this.in_ch = in_ch;
      this.create_consol_log_component = create_consol_log_component;
      this.meta119204 = meta119204;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.consol_log_component.t119203.cljs$lang$type = true;
    chatter_box.consol_log_component.t119203.cljs$lang$ctorStr = "chatter-box.consol-log-component/t119203";
    chatter_box.consol_log_component.t119203.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.consol-log-component/t119203")
    };
    chatter_box.consol_log_component.t119203.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.consol_log_component.t119203.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      var c__5659__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__5660__auto__ = function() {
          var switch__5587__auto__ = function(state_119219) {
            var state_val_119220 = state_119219[1];
            if(state_val_119220 === 7) {
              var inst_119209 = state_119219[2];
              var inst_119210 = cljs.core.pr_str.call(null, inst_119209);
              var inst_119211 = enfocus.core.log_debug.call(null, inst_119210);
              var state_119219__$1 = function() {
                var statearr_119221 = state_119219;
                statearr_119221[5] = inst_119211;
                return statearr_119221
              }();
              var statearr_119222_119231 = state_119219__$1;
              statearr_119222_119231[2] = null;
              statearr_119222_119231[1] = 2;
              return"\ufdd0:recur"
            }else {
              if(state_val_119220 === 6) {
                var inst_119215 = state_119219[2];
                var state_119219__$1 = state_119219;
                var statearr_119223_119232 = state_119219__$1;
                statearr_119223_119232[2] = inst_119215;
                statearr_119223_119232[1] = 3;
                return"\ufdd0:recur"
              }else {
                if(state_val_119220 === 5) {
                  var state_119219__$1 = state_119219;
                  var statearr_119224_119233 = state_119219__$1;
                  statearr_119224_119233[2] = null;
                  statearr_119224_119233[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_119220 === 4) {
                    var state_119219__$1 = state_119219;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_119219__$1, 7, self__.in_ch)
                  }else {
                    if(state_val_119220 === 3) {
                      var inst_119217 = state_119219[2];
                      var state_119219__$1 = state_119219;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_119219__$1, inst_119217)
                    }else {
                      if(state_val_119220 === 2) {
                        var state_119219__$1 = state_119219;
                        if(true) {
                          var statearr_119225_119234 = state_119219__$1;
                          statearr_119225_119234[1] = 4
                        }else {
                          var statearr_119226_119235 = state_119219__$1;
                          statearr_119226_119235[1] = 5
                        }
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_119220 === 1) {
                          var state_119219__$1 = state_119219;
                          var statearr_119227_119236 = state_119219__$1;
                          statearr_119227_119236[2] = null;
                          statearr_119227_119236[1] = 2;
                          return"\ufdd0:recur"
                        }else {
                          return null
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__5587__auto__) {
            return function() {
              var state_machine__5588__auto__ = null;
              var state_machine__5588__auto____0 = function() {
                var statearr_119229 = new Array(6);
                statearr_119229[0] = state_machine__5588__auto__;
                statearr_119229[1] = 1;
                return statearr_119229
              };
              var state_machine__5588__auto____1 = function(state_119219) {
                while(true) {
                  var result__5589__auto__ = switch__5587__auto__.call(null, state_119219);
                  if(result__5589__auto__ === "\ufdd0:recur") {
                    continue
                  }else {
                    return result__5589__auto__
                  }
                  break
                }
              };
              state_machine__5588__auto__ = function(state_119219) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5588__auto____0.call(this);
                  case 1:
                    return state_machine__5588__auto____1.call(this, state_119219)
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5588__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5588__auto____0;
              state_machine__5588__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5588__auto____1;
              return state_machine__5588__auto__
            }()
          }(switch__5587__auto__)
        }();
        var state__5661__auto__ = function() {
          var statearr_119230 = f__5660__auto__.call(null);
          statearr_119230[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5659__auto__;
          return statearr_119230
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5661__auto__)
      });
      return c__5659__auto__
    };
    chatter_box.consol_log_component.t119203.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return true
    };
    chatter_box.consol_log_component.t119203.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.consol_log_component.t119203.prototype.cljs$core$IMeta$_meta$arity$1 = function(_119205) {
      var self__ = this;
      return self__.meta119204
    };
    chatter_box.consol_log_component.t119203.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_119205, meta119204__$1) {
      var self__ = this;
      return new chatter_box.consol_log_component.t119203(self__.in_ch, self__.create_consol_log_component, meta119204__$1)
    };
    chatter_box.consol_log_component.__GT_t119203 = function __GT_t119203(in_ch__$1, create_consol_log_component__$1, meta119204) {
      return new chatter_box.consol_log_component.t119203(in_ch__$1, create_consol_log_component__$1, meta119204)
    }
  }
  return new chatter_box.consol_log_component.t119203(in_ch, create_consol_log_component, null)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3370__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.read_char[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.read_char["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3370__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.unread[goog.typeOf(x__3370__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.unread["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
  return cljs.core._write.call(null, writer__3312__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  if(self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx]
  }else {
    return self__.buffer.pop()
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  return self__.buffer.push(ch)
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx)
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1)
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto__ = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var and__3941__auto__ = function() {
      var or__3943__auto____$1 = "+" === initch;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch);
        return next_ch
      }())
    }else {
      return and__3941__auto__
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__15015) {
    var rdr = cljs.core.first(arglist__15015);
    var msg = cljs.core.rest(arglist__15015);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto__ = !(ch === "#");
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !(ch === "'");
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(ch === ":");
      if(and__3941__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__15016 = function() {
        sb.append(ch);
        return sb
      }();
      var G__15017 = cljs.reader.read_char.call(null, rdr);
      sb = G__15016;
      ch = G__15017;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto__ = ch === "n";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = ch === "r";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return ch == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!function() {
    var or__3943__auto__ = group3 == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return group3.length < 1
    }
  }()) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : "\ufdd0:default" ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(function() {
    var and__3941__auto__ = !(matches == null);
    if(and__3941__auto__) {
      return matches[0] === s
    }else {
      return and__3941__auto__
    }
  }()) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\b"
            }else {
              if(c === "f") {
                return"\f"
              }else {
                if("\ufdd0:else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if("\ufdd0:else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__15018 = cljs.reader.read_char.call(null, rdr);
      ch = G__15018;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__15019 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__15019;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__15020 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__15020;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3943__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__15021 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__15022 = cljs.reader.read_char.call(null, reader);
      buffer = G__15021;
      ch = G__15022;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__15023 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__15024 = cljs.reader.read_char.call(null, reader);
        buffer = G__15023;
        ch = G__15024;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if("\ufdd0:default") {
            var G__15025 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__15026 = cljs.reader.read_char.call(null, reader);
            buffer = G__15025;
            ch = G__15026;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = function() {
      var and__3941__auto__ = !(void 0 === ns);
      if(and__3941__auto__) {
        return ns.substring(ns.length - 2, ns.length) === ":/"
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = name[name.length - 1] === ":";
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return!(token__$1.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(function() {
      var and__3941__auto__ = !(ns == null);
      if(and__3941__auto__) {
        return ns.length > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true)
      }else {
        if("\ufdd0:else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__15028 = o;
    if(G__15028) {
      if(function() {
        var or__3943__auto__ = G__15028.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__15028.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__15028.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__15028)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__15028)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0:else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0:else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__15029 = reader;
        var G__15030 = eof_is_error;
        var G__15031 = sentinel;
        var G__15032 = is_recursive;
        reader = G__15029;
        eof_is_error = G__15030;
        sentinel = G__15031;
        is_recursive = G__15032;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__15033 = cljs.reader.read_comment.call(null, reader, ch);
          var G__15034 = eof_is_error;
          var G__15035 = sentinel;
          var G__15036 = is_recursive;
          reader = G__15033;
          eof_is_error = G__15034;
          sentinel = G__15035;
          is_recursive = G__15036;
          continue
        }else {
          if("\ufdd0:else") {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : "\ufdd0:else" ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__15037 = reader;
              var G__15038 = eof_is_error;
              var G__15039 = sentinel;
              var G__15040 = is_recursive;
              reader = G__15037;
              eof_is_error = G__15038;
              sentinel = G__15039;
              is_recursive = G__15040;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width)
    }else {
      if("\ufdd0:else") {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__15041 = b.append("0");
            b = G__15041;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto__)) {
    var or__3943__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if(cljs.core.not.call(null, isNaN(n))) {
    return n
  }else {
    return null
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if(function() {
    var and__3941__auto__ = low <= n;
    if(and__3941__auto__) {
      return n <= high
    }else {
      return and__3941__auto__
    }
  }()) {
  }else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""))
  }
  return n
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__15043 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__15043, 0, null);
  var years = cljs.core.nth.call(null, vec__15043, 1, null);
  var months = cljs.core.nth.call(null, vec__15043, 2, null);
  var days = cljs.core.nth.call(null, vec__15043, 3, null);
  var hours = cljs.core.nth.call(null, vec__15043, 4, null);
  var minutes = cljs.core.nth.call(null, vec__15043, 5, null);
  var seconds = cljs.core.nth.call(null, vec__15043, 6, null);
  var fraction = cljs.core.nth.call(null, vec__15043, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__15043, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__15043, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__15043, 10, null);
  var v = vec__15043;
  if(cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""))
  }else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, months);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 1
      }
    }();
    var days__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, days);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 1
      }
    }();
    var hours__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, hours);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var minutes__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, minutes);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var seconds__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, seconds);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var fraction__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3943__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return 0
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return cljs.core.PersistentVector.fromArray([years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check.call(null, 0, minutes__$1, 
    59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], true)
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__15045 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__15045, 0, null);
    var months = cljs.core.nth.call(null, vec__15045, 1, null);
    var days = cljs.core.nth.call(null, vec__15045, 2, null);
    var hours = cljs.core.nth.call(null, vec__15045, 3, null);
    var minutes = cljs.core.nth.call(null, vec__15045, 4, null);
    var seconds = cljs.core.nth.call(null, vec__15045, 5, null);
    var ms = cljs.core.nth.call(null, vec__15045, 6, null);
    var offset = cljs.core.nth.call(null, vec__15045, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.fromArray(["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], true));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if("\ufdd0:else") {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("chatter_box.error_view_component");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("chatter_box.event_bus");
goog.require("enfocus.effects");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.protocol");
goog.require("cljs.core.async");
goog.require("enfocus.events");
goog.require("enfocus.effects");
goog.require("enfocus.core");
chatter_box.error_view_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:view", "\ufdd0:key", "\ufdd0:init"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:login-failure"], true), null], true);
chatter_box.error_view_component.out_chan = cljs.core.atom.call(null, null);
chatter_box.error_view_component.create_error_view_component = function create_error_view_component() {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.error_view_component.t397400 !== "undefined") {
  }else {
    goog.provide("chatter_box.error_view_component.t397400");
    chatter_box.error_view_component.t397400 = function(in_ch, create_error_view_component, meta397401) {
      this.in_ch = in_ch;
      this.create_error_view_component = create_error_view_component;
      this.meta397401 = meta397401;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.error_view_component.t397400.cljs$lang$type = true;
    chatter_box.error_view_component.t397400.cljs$lang$ctorStr = "chatter-box.error-view-component/t397400";
    chatter_box.error_view_component.t397400.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.error-view-component/t397400")
    };
    chatter_box.error_view_component.t397400.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.error_view_component.t397400.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, chatter_box.error_view_component.out_chan, out_ch);
      return chatter_box.error_view_component.setup.call(null, self__.in_ch)
    };
    chatter_box.error_view_component.t397400.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.error_view_component.valid_types).call(null, msg)
    };
    chatter_box.error_view_component.t397400.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.error_view_component.t397400.prototype.cljs$core$IMeta$_meta$arity$1 = function(_397402) {
      var self__ = this;
      return self__.meta397401
    };
    chatter_box.error_view_component.t397400.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_397402, meta397401__$1) {
      var self__ = this;
      return new chatter_box.error_view_component.t397400(self__.in_ch, self__.create_error_view_component, meta397401__$1)
    };
    chatter_box.error_view_component.__GT_t397400 = function __GT_t397400(in_ch__$1, create_error_view_component__$1, meta397401) {
      return new chatter_box.error_view_component.t397400(in_ch__$1, create_error_view_component__$1, meta397401)
    }
  }
  return new chatter_box.error_view_component.t397400(in_ch, create_error_view_component, null)
};
if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, 'compiledresources/public/error.html["#error-div"]') == null) {
  var vec__397403_397408 = enfocus.core.replace_ids.call(null, "en293349_", '\x3cdiv id\x3d"error-div" class\x3d"alert alert-danger"\x3e \n \x3ccenter\x3e \n  \x3cdiv id\x3d"error-txt"\x3e\n   This is an error\n  \x3c/div\x3e \n  \x3cbr /\x3e \n  \x3cbutton id\x3d"error-btn" class\x3d"btn btn-danger"\x3eClose\x3c/button\x3e \n  \x3ccenter\x3e \n  \x3c/center\x3e\n \x3c/center\x3e\n\x3c/div\x3e');
  var sym__4174__auto___397409 = cljs.core.nth.call(null, vec__397403_397408, 0, null);
  var txt__4175__auto___397410 = cljs.core.nth.call(null, vec__397403_397408, 1, null);
  cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, 'compiledresources/public/error.html["#error-div"]', cljs.core.PersistentVector.fromArray([sym__4174__auto___397409, txt__4175__auto___397410], true))
}else {
}
chatter_box.error_view_component.error_div = function error_div() {
  var vec__397407 = function() {
    return enfocus.core.get_cached_dom.call(null, 'compiledresources/public/error.html["#error-div"]')
  }.call(null);
  var id_sym397404 = cljs.core.nth.call(null, vec__397407, 0, null);
  var pnod397405 = cljs.core.nth.call(null, vec__397407, 1, null);
  var pnod397405__$1 = enfocus.core.create_hidden_dom.call(null, pnod397405);
  enfocus.core.i_at.call(null, id_sym397404, pnod397405__$1, "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"));
  enfocus.core.reset_ids.call(null, id_sym397404, pnod397405__$1);
  return enfocus.core.remove_node_return_child.call(null, pnod397405__$1)
};
chatter_box.error_view_component.initialize = function initialize() {
  return enfocus.core.at.call(null, "body", enfocus.core.append.call(null, chatter_box.error_view_component.error_div.call(null)), "#error-btn", enfocus.core.do__GT_.call(null, enfocus.events.listen.call(null, "\ufdd0:click", function() {
    return enfocus.core.at.call(null, "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", "none"))
  })))
};
chatter_box.error_view_component.show_error = function show_error(msg) {
  return enfocus.core.at.call(null, "#error-txt", enfocus.core.content.call(null, msg), "#error-div", enfocus.core.set_style.call(null, "\ufdd0:display", ""))
};
chatter_box.error_view_component.setup = function setup(in_ch) {
  var c__5653__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_397491) {
        var state_val_397492 = state_397491[1];
        if(state_val_397492 === 1) {
          var state_397491__$1 = state_397491;
          var statearr_397493_397513 = state_397491__$1;
          statearr_397493_397513[2] = null;
          statearr_397493_397513[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_397492 === 2) {
            var state_397491__$1 = state_397491;
            if(true) {
              var statearr_397494_397514 = state_397491__$1;
              statearr_397494_397514[1] = 4
            }else {
              var statearr_397495_397515 = state_397491__$1;
              statearr_397495_397515[1] = 5
            }
            return"\ufdd0:recur"
          }else {
            if(state_val_397492 === 3) {
              var inst_397489 = state_397491[2];
              var state_397491__$1 = state_397491;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_397491__$1, inst_397489)
            }else {
              if(state_val_397492 === 4) {
                var state_397491__$1 = state_397491;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_397491__$1, 7, in_ch)
              }else {
                if(state_val_397492 === 5) {
                  var state_397491__$1 = state_397491;
                  var statearr_397496_397516 = state_397491__$1;
                  statearr_397496_397516[2] = null;
                  statearr_397496_397516[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_397492 === 6) {
                    var inst_397487 = state_397491[2];
                    var state_397491__$1 = state_397491;
                    var statearr_397497_397517 = state_397491__$1;
                    statearr_397497_397517[2] = inst_397487;
                    statearr_397497_397517[1] = 3;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_397492 === 7) {
                      var inst_397467 = state_397491[5];
                      var inst_397465 = state_397491[6];
                      var inst_397465__$1 = state_397491[2];
                      var inst_397466 = (new cljs.core.Keyword("\ufdd0:area")).call(null, inst_397465__$1);
                      var inst_397467__$1 = cljs.core._EQ_.call(null, inst_397466, "\ufdd0:view");
                      var state_397491__$1 = function() {
                        var statearr_397498 = state_397491;
                        statearr_397498[5] = inst_397467__$1;
                        statearr_397498[6] = inst_397465__$1;
                        return statearr_397498
                      }();
                      if(inst_397467__$1) {
                        var statearr_397499_397518 = state_397491__$1;
                        statearr_397499_397518[1] = 8
                      }else {
                        var statearr_397500_397519 = state_397491__$1;
                        statearr_397500_397519[1] = 9
                      }
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_397492 === 8) {
                        var inst_397465 = state_397491[6];
                        var inst_397469 = (new cljs.core.Keyword("\ufdd0:key")).call(null, inst_397465);
                        var inst_397470 = cljs.core._EQ_.call(null, inst_397469, "\ufdd0:init");
                        var state_397491__$1 = state_397491;
                        var statearr_397501_397520 = state_397491__$1;
                        statearr_397501_397520[2] = inst_397470;
                        statearr_397501_397520[1] = 10;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_397492 === 9) {
                          var inst_397467 = state_397491[5];
                          var state_397491__$1 = state_397491;
                          var statearr_397502_397521 = state_397491__$1;
                          statearr_397502_397521[2] = inst_397467;
                          statearr_397502_397521[1] = 10;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_397492 === 10) {
                            var inst_397473 = state_397491[2];
                            var state_397491__$1 = state_397491;
                            if(cljs.core.truth_(inst_397473)) {
                              var statearr_397503_397522 = state_397491__$1;
                              statearr_397503_397522[1] = 11
                            }else {
                              var statearr_397504_397523 = state_397491__$1;
                              statearr_397504_397523[1] = 12
                            }
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_397492 === 11) {
                              var inst_397475 = chatter_box.error_view_component.initialize.call(null);
                              var state_397491__$1 = state_397491;
                              var statearr_397505_397524 = state_397491__$1;
                              statearr_397505_397524[2] = inst_397475;
                              statearr_397505_397524[1] = 13;
                              return"\ufdd0:recur"
                            }else {
                              if(state_val_397492 === 12) {
                                var inst_397465 = state_397491[6];
                                var inst_397477 = cljs.core.pr_str.call(null, "ERROR:", inst_397465);
                                var inst_397478 = enfocus.core.log_debug.call(null, inst_397477);
                                var inst_397479 = (new cljs.core.Keyword("\ufdd0:data")).call(null, inst_397465);
                                var inst_397480 = (new cljs.core.Keyword("\ufdd0:err")).call(null, inst_397479);
                                var inst_397481 = chatter_box.error_view_component.show_error.call(null, inst_397480);
                                var state_397491__$1 = function() {
                                  var statearr_397506 = state_397491;
                                  statearr_397506[7] = inst_397478;
                                  return statearr_397506
                                }();
                                var statearr_397507_397525 = state_397491__$1;
                                statearr_397507_397525[2] = inst_397481;
                                statearr_397507_397525[1] = 13;
                                return"\ufdd0:recur"
                              }else {
                                if(state_val_397492 === 13) {
                                  var inst_397483 = state_397491[2];
                                  var state_397491__$1 = function() {
                                    var statearr_397508 = state_397491;
                                    statearr_397508[8] = inst_397483;
                                    return statearr_397508
                                  }();
                                  var statearr_397509_397526 = state_397491__$1;
                                  statearr_397509_397526[2] = null;
                                  statearr_397509_397526[1] = 2;
                                  return"\ufdd0:recur"
                                }else {
                                  return null
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_397511 = new Array(9);
            statearr_397511[0] = state_machine__5582__auto__;
            statearr_397511[1] = 1;
            return statearr_397511
          };
          var state_machine__5582__auto____1 = function(state_397491) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_397491);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_397491) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_397491)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_397512 = f__5654__auto__.call(null);
      statearr_397512[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto__;
      return statearr_397512
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return c__5653__auto__
};
goog.provide("chatter_box.chat_client");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("cljs.core.match");
goog.require("chatter_box.event_bus");
goog.require("cljs.core.async");
goog.require("cljs.core.match");
goog.require("cljs.core.async");
goog.require("chatter_box.protocol");
goog.require("chatter_box.event_bus");
goog.require("enfocus.core");
chatter_box.chat_client.external_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:join"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:created"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", 
"\ufdd0:key", "\ufdd0:updated"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:error"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-success"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:receive-chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", 
"\ufdd0:left"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login-failure"], true), null], true);
chatter_box.chat_client.create_chat_client = function() {
  var create_chat_client__delegate = function(sub_components) {
    var in_ch = cljs.core.async.chan.call(null);
    if(typeof chatter_box.chat_client.t191852 !== "undefined") {
    }else {
      goog.provide("chatter_box.chat_client.t191852");
      chatter_box.chat_client.t191852 = function(in_ch, sub_components, create_chat_client, meta191853) {
        this.in_ch = in_ch;
        this.sub_components = sub_components;
        this.create_chat_client = create_chat_client;
        this.meta191853 = meta191853;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      chatter_box.chat_client.t191852.cljs$lang$type = true;
      chatter_box.chat_client.t191852.cljs$lang$ctorStr = "chatter-box.chat-client/t191852";
      chatter_box.chat_client.t191852.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
        return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-client/t191852")
      };
      chatter_box.chat_client.t191852.prototype.chatter_box$event_bus$Component$ = true;
      chatter_box.chat_client.t191852.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
        var self__ = this;
        return chatter_box.chat_client.setup.call(null, out_ch, self__.in_ch, self__.sub_components)
      };
      chatter_box.chat_client.t191852.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
        var self__ = this;
        return chatter_box.protocol.create_filter.call(null, chatter_box.chat_client.external_types).call(null, msg)
      };
      chatter_box.chat_client.t191852.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
        var self__ = this;
        return self__.in_ch
      };
      chatter_box.chat_client.t191852.prototype.cljs$core$IMeta$_meta$arity$1 = function(_191854) {
        var self__ = this;
        return self__.meta191853
      };
      chatter_box.chat_client.t191852.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_191854, meta191853__$1) {
        var self__ = this;
        return new chatter_box.chat_client.t191852(self__.in_ch, self__.sub_components, self__.create_chat_client, meta191853__$1)
      };
      chatter_box.chat_client.__GT_t191852 = function __GT_t191852(in_ch__$1, sub_components__$1, create_chat_client__$1, meta191853) {
        return new chatter_box.chat_client.t191852(in_ch__$1, sub_components__$1, create_chat_client__$1, meta191853)
      }
    }
    return new chatter_box.chat_client.t191852(in_ch, sub_components, create_chat_client, null)
  };
  var create_chat_client = function(var_args) {
    var sub_components = null;
    if(arguments.length > 0) {
      sub_components = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return create_chat_client__delegate.call(this, sub_components)
  };
  create_chat_client.cljs$lang$maxFixedArity = 0;
  create_chat_client.cljs$lang$applyTo = function(arglist__191855) {
    var sub_components = cljs.core.seq(arglist__191855);
    return create_chat_client__delegate(sub_components)
  };
  create_chat_client.cljs$core$IFn$_invoke$arity$variadic = create_chat_client__delegate;
  return create_chat_client
}();
chatter_box.chat_client.pipe_ch = function pipe_ch(in_ch, out_ch) {
  var c__5659__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5660__auto__ = function() {
      var switch__5587__auto__ = function(state_191896) {
        var state_val_191897 = state_191896[1];
        if(state_val_191897 === 7) {
          var inst_191885 = state_191896[2];
          var inst_191886 = cljs.core.pr_str.call(null, "MSG:", inst_191885);
          var inst_191887 = enfocus.core.log_debug.call(null, inst_191886);
          var inst_191888 = cljs.core.async.put_BANG_.call(null, out_ch, inst_191885);
          var state_191896__$1 = function() {
            var statearr_191898 = state_191896;
            statearr_191898[5] = inst_191887;
            statearr_191898[6] = inst_191888;
            return statearr_191898
          }();
          var statearr_191899_191908 = state_191896__$1;
          statearr_191899_191908[2] = null;
          statearr_191899_191908[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_191897 === 6) {
            var inst_191892 = state_191896[2];
            var state_191896__$1 = state_191896;
            var statearr_191900_191909 = state_191896__$1;
            statearr_191900_191909[2] = inst_191892;
            statearr_191900_191909[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_191897 === 5) {
              var state_191896__$1 = state_191896;
              var statearr_191901_191910 = state_191896__$1;
              statearr_191901_191910[2] = null;
              statearr_191901_191910[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_191897 === 4) {
                var state_191896__$1 = state_191896;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_191896__$1, 7, in_ch)
              }else {
                if(state_val_191897 === 3) {
                  var inst_191894 = state_191896[2];
                  var state_191896__$1 = state_191896;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_191896__$1, inst_191894)
                }else {
                  if(state_val_191897 === 2) {
                    var state_191896__$1 = state_191896;
                    if(true) {
                      var statearr_191902_191911 = state_191896__$1;
                      statearr_191902_191911[1] = 4
                    }else {
                      var statearr_191903_191912 = state_191896__$1;
                      statearr_191903_191912[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_191897 === 1) {
                      var state_191896__$1 = state_191896;
                      var statearr_191904_191913 = state_191896__$1;
                      statearr_191904_191913[2] = null;
                      statearr_191904_191913[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5587__auto__) {
        return function() {
          var state_machine__5588__auto__ = null;
          var state_machine__5588__auto____0 = function() {
            var statearr_191906 = new Array(7);
            statearr_191906[0] = state_machine__5588__auto__;
            statearr_191906[1] = 1;
            return statearr_191906
          };
          var state_machine__5588__auto____1 = function(state_191896) {
            while(true) {
              var result__5589__auto__ = switch__5587__auto__.call(null, state_191896);
              if(result__5589__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5589__auto__
              }
              break
            }
          };
          state_machine__5588__auto__ = function(state_191896) {
            switch(arguments.length) {
              case 0:
                return state_machine__5588__auto____0.call(this);
              case 1:
                return state_machine__5588__auto____1.call(this, state_191896)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5588__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5588__auto____0;
          state_machine__5588__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5588__auto____1;
          return state_machine__5588__auto__
        }()
      }(switch__5587__auto__)
    }();
    var state__5661__auto__ = function() {
      var statearr_191907 = f__5660__auto__.call(null);
      statearr_191907[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5659__auto__;
      return statearr_191907
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5661__auto__)
  });
  return c__5659__auto__
};
chatter_box.chat_client.internal_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", "\ufdd0:key", "\ufdd0:login"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:update"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:create"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", 
"\ufdd0:key", "\ufdd0:send-chat"], true), null], true);
chatter_box.chat_client.create_internal_component = function create_internal_component(ext_out, ext_in) {
  var in_ch = cljs.core.async.chan.call(null);
  if(typeof chatter_box.chat_client.t191917 !== "undefined") {
  }else {
    goog.provide("chatter_box.chat_client.t191917");
    chatter_box.chat_client.t191917 = function(in_ch, ext_in, ext_out, create_internal_component, meta191918) {
      this.in_ch = in_ch;
      this.ext_in = ext_in;
      this.ext_out = ext_out;
      this.create_internal_component = create_internal_component;
      this.meta191918 = meta191918;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.chat_client.t191917.cljs$lang$type = true;
    chatter_box.chat_client.t191917.cljs$lang$ctorStr = "chatter-box.chat-client/t191917";
    chatter_box.chat_client.t191917.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.chat-client/t191917")
    };
    chatter_box.chat_client.t191917.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.chat_client.t191917.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      chatter_box.chat_client.pipe_ch.call(null, self__.ext_in, out_ch);
      return chatter_box.chat_client.pipe_ch.call(null, self__.in_ch, self__.ext_out)
    };
    chatter_box.chat_client.t191917.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.chat_client.internal_types).call(null, msg)
    };
    chatter_box.chat_client.t191917.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.chat_client.t191917.prototype.cljs$core$IMeta$_meta$arity$1 = function(_191919) {
      var self__ = this;
      return self__.meta191918
    };
    chatter_box.chat_client.t191917.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_191919, meta191918__$1) {
      var self__ = this;
      return new chatter_box.chat_client.t191917(self__.in_ch, self__.ext_in, self__.ext_out, self__.create_internal_component, meta191918__$1)
    };
    chatter_box.chat_client.__GT_t191917 = function __GT_t191917(in_ch__$1, ext_in__$1, ext_out__$1, create_internal_component__$1, meta191918) {
      return new chatter_box.chat_client.t191917(in_ch__$1, ext_in__$1, ext_out__$1, create_internal_component__$1, meta191918)
    }
  }
  return new chatter_box.chat_client.t191917(in_ch, ext_in, ext_out, create_internal_component, null)
};
chatter_box.chat_client.setup = function setup(out_ch, in_ch, sub_components) {
  return cljs.core.apply.call(null, chatter_box.event_bus.create_bus, cljs.core.conj.call(null, sub_components, chatter_box.chat_client.create_internal_component.call(null, out_ch, in_ch)))
};
goog.provide("chatter_box.main");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("enfocus.core");
goog.require("chatter_box.user_view_component");
goog.require("cljs.core.async");
goog.require("chatter_box.protocol");
goog.require("chatter_box.chat_view_component");
goog.require("cljs.reader");
goog.require("chatter_box.consol_log_component");
goog.require("chatter_box.chat_client");
goog.require("chatter_box.login_view_component");
goog.require("chatter_box.event_bus");
goog.require("chatter_box.error_view_component");
chatter_box.main.testing = false;
chatter_box.main.ws_url = "ws://localhost:3000/async";
chatter_box.main.init = function init() {
  var c_client = chatter_box.chat_client.create_chat_client.call(null, chatter_box.user_view_component.create_user_view_component.call(null), chatter_box.chat_view_component.create_chat_view_component.call(null), chatter_box.login_view_component.create_login_view_component.call(null), chatter_box.consol_log_component.create_consol_log_component.call(null), chatter_box.error_view_component.create_error_view_component.call(null));
  var out_ch = cljs.core.async.chan.call(null);
  var in_ch = chatter_box.event_bus.get_channel.call(null, c_client);
  var ws = cljs.core.atom.call(null, new WebSocket(chatter_box.main.ws_url));
  chatter_box.event_bus.init.call(null, c_client, out_ch);
  cljs.core.deref.call(null, ws).onmessage = function(msg) {
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, "RECEIVE:", msg.data));
    return cljs.core.async.put_BANG_.call(null, in_ch, cljs.reader.read_string.call(null, msg.data))
  };
  var c__5653__auto___371100 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5654__auto__ = function() {
      var switch__5581__auto__ = function(state_371088) {
        var state_val_371089 = state_371088[1];
        if(state_val_371089 === 7) {
          var inst_371075 = state_371088[2];
          var inst_371076 = cljs.core.pr_str.call(null, "SEND:", inst_371075);
          var inst_371077 = enfocus.core.log_debug.call(null, inst_371076);
          var inst_371078 = cljs.core.deref.call(null, ws);
          var inst_371079 = cljs.core.pr_str.call(null, inst_371075);
          var inst_371080 = inst_371078.send(inst_371079);
          var state_371088__$1 = function() {
            var statearr_371090 = state_371088;
            statearr_371090[5] = inst_371077;
            statearr_371090[6] = inst_371080;
            return statearr_371090
          }();
          var statearr_371091_371101 = state_371088__$1;
          statearr_371091_371101[2] = null;
          statearr_371091_371101[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_371089 === 6) {
            var inst_371084 = state_371088[2];
            var state_371088__$1 = state_371088;
            var statearr_371092_371102 = state_371088__$1;
            statearr_371092_371102[2] = inst_371084;
            statearr_371092_371102[1] = 3;
            return"\ufdd0:recur"
          }else {
            if(state_val_371089 === 5) {
              var state_371088__$1 = state_371088;
              var statearr_371093_371103 = state_371088__$1;
              statearr_371093_371103[2] = null;
              statearr_371093_371103[1] = 6;
              return"\ufdd0:recur"
            }else {
              if(state_val_371089 === 4) {
                var state_371088__$1 = state_371088;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_371088__$1, 7, out_ch)
              }else {
                if(state_val_371089 === 3) {
                  var inst_371086 = state_371088[2];
                  var state_371088__$1 = state_371088;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_371088__$1, inst_371086)
                }else {
                  if(state_val_371089 === 2) {
                    var state_371088__$1 = state_371088;
                    if(true) {
                      var statearr_371094_371104 = state_371088__$1;
                      statearr_371094_371104[1] = 4
                    }else {
                      var statearr_371095_371105 = state_371088__$1;
                      statearr_371095_371105[1] = 5
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_371089 === 1) {
                      var state_371088__$1 = state_371088;
                      var statearr_371096_371106 = state_371088__$1;
                      statearr_371096_371106[2] = null;
                      statearr_371096_371106[1] = 2;
                      return"\ufdd0:recur"
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5581__auto__) {
        return function() {
          var state_machine__5582__auto__ = null;
          var state_machine__5582__auto____0 = function() {
            var statearr_371098 = new Array(7);
            statearr_371098[0] = state_machine__5582__auto__;
            statearr_371098[1] = 1;
            return statearr_371098
          };
          var state_machine__5582__auto____1 = function(state_371088) {
            while(true) {
              var result__5583__auto__ = switch__5581__auto__.call(null, state_371088);
              if(result__5583__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__5583__auto__
              }
              break
            }
          };
          state_machine__5582__auto__ = function(state_371088) {
            switch(arguments.length) {
              case 0:
                return state_machine__5582__auto____0.call(this);
              case 1:
                return state_machine__5582__auto____1.call(this, state_371088)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5582__auto____0;
          state_machine__5582__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5582__auto____1;
          return state_machine__5582__auto__
        }()
      }(switch__5581__auto__)
    }();
    var state__5655__auto__ = function() {
      var statearr_371099 = f__5654__auto__.call(null);
      statearr_371099[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5653__auto___371100;
      return statearr_371099
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5655__auto__)
  });
  return cljs.core.async.put_BANG_.call(null, in_ch, chatter_box.protocol.create_message.call(null, "\ufdd0:view", "\ufdd0:init", null))
};
window.onload = chatter_box.main.init;
goog.provide("chatter_box.comm_component");
goog.require("cljs.core");
goog.require("chatter_box.event_bus");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("chatter_box.protocol");
goog.require("chatter_box.event_bus");
chatter_box.comm_component.valid_types = cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:update"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:user", "\ufdd0:key", "\ufdd0:create"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:messaging", "\ufdd0:key", "\ufdd0:chat"], true), null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:area", "\ufdd0:security", 
"\ufdd0:key", "\ufdd0:all"], true), null], true);
chatter_box.comm_component.create_comm_component = function create_comm_component(ws_url) {
  var in_ch = cljs.core.async.chan.call(null);
  var ws = cljs.core.atom.call(null, new WebSocket(ws_url));
  if(typeof chatter_box.comm_component.t9000 !== "undefined") {
  }else {
    goog.provide("chatter_box.comm_component.t9000");
    chatter_box.comm_component.t9000 = function(ws, in_ch, ws_url, create_comm_component, meta9001) {
      this.ws = ws;
      this.in_ch = in_ch;
      this.ws_url = ws_url;
      this.create_comm_component = create_comm_component;
      this.meta9001 = meta9001;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    chatter_box.comm_component.t9000.cljs$lang$type = true;
    chatter_box.comm_component.t9000.cljs$lang$ctorStr = "chatter-box.comm-component/t9000";
    chatter_box.comm_component.t9000.cljs$lang$ctorPrWriter = function(this__3311__auto__, writer__3312__auto__, opt__3313__auto__) {
      return cljs.core._write.call(null, writer__3312__auto__, "chatter-box.comm-component/t9000")
    };
    chatter_box.comm_component.t9000.prototype.chatter_box$event_bus$Component$ = true;
    chatter_box.comm_component.t9000.prototype.chatter_box$event_bus$Component$init$arity$2 = function(_, out_ch) {
      var self__ = this;
      cljs.core.async.go.call(null, function() {
        while(true) {
          if(true) {
            var msg_9003 = cljs.core.async._LT__BANG_.call(null, self__.in_ch);
            cljs.core.deref.call(null, self__.ws).send(msg_9003);
            continue
          }else {
            return null
          }
          break
        }
      }());
      return cljs.core.deref.call(null, self__.ws).onmessage = function(msg) {
        return cljs.core.async.put_BANG_.call(null, out_ch, cljs.reader.read_string.call(null, msg))
      }
    };
    chatter_box.comm_component.t9000.prototype.chatter_box$event_bus$Component$accept_message_QMARK_$arity$2 = function(_, msg) {
      var self__ = this;
      return chatter_box.protocol.create_filter.call(null, chatter_box.comm_component.valid_types).call(null, msg)
    };
    chatter_box.comm_component.t9000.prototype.chatter_box$event_bus$Component$get_channel$arity$1 = function(_) {
      var self__ = this;
      return self__.in_ch
    };
    chatter_box.comm_component.t9000.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9002) {
      var self__ = this;
      return self__.meta9001
    };
    chatter_box.comm_component.t9000.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9002, meta9001__$1) {
      var self__ = this;
      return new chatter_box.comm_component.t9000(self__.ws, self__.in_ch, self__.ws_url, self__.create_comm_component, meta9001__$1)
    };
    chatter_box.comm_component.__GT_t9000 = function __GT_t9000(ws__$1, in_ch__$1, ws_url__$1, create_comm_component__$1, meta9001) {
      return new chatter_box.comm_component.t9000(ws__$1, in_ch__$1, ws_url__$1, create_comm_component__$1, meta9001)
    }
  }
  return new chatter_box.comm_component.t9000(ws, in_ch, ws_url, create_comm_component, null)
};
